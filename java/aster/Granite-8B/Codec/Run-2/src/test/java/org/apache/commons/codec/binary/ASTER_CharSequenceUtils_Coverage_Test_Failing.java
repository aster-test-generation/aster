/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CharSequenceUtils_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatches4_FkAm3() {
        CharSequence cs = "abc";
        boolean ignoreCase = true;
        int thisStart = 0;
        CharSequence substring = "b";
        int start = 0;
        int length = 1;
        boolean expected = true;
        boolean actual = CharSequenceUtils.regionMatches(cs, ignoreCase, thisStart, substring, start, length);
        assert actual == expected;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatches5_Adzs4() {
        CharSequence cs = "abc";
        boolean ignoreCase = true;
        int thisStart = 0;
        CharSequence substring = "c";
        int start = 0;
        int length = 1;
        boolean expected = true;
        boolean actual = CharSequenceUtils.regionMatches(cs, ignoreCase, thisStart, substring, start, length);
        assert actual == expected;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatches7_qCyK6() {
        CharSequence cs = "abc";
        boolean ignoreCase = true;
        int thisStart = 0;
        CharSequence substring = "A";
        int start = 0;
        int length = 1;
        boolean expected = false;
        boolean actual = CharSequenceUtils.regionMatches(cs, ignoreCase, thisStart, substring, start, length);
        assert actual == expected;
    }
}