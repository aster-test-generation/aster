/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XXHash32_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate1_kYOT0() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 10);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate2_qkiF1() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate3_BPNH2() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate4_APtl3() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate5_rJCd4() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate6_AIjn5() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate7_BrgW6() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 5);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate8_PQFU7() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 6);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate9_mveG8() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 7);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate10_wGAb9() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 8);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate11_FVlU10() {
        XXHash32 xxHash32 = new XXHash32();
        byte[] b = new byte[10];
        xxHash32.update(b, 0, 9);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithMultipleFullAndPartialBuffersInRandomOrder3_VHaW11() {
        XXHash32 hash = new XXHash32();
        byte[] buffer = new byte[10];
    }
}