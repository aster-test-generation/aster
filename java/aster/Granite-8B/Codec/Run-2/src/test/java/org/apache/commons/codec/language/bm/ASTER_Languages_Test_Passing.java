/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Languages_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_NameType_Aqyn0_1() {
        Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_NameType_Aqyn0_2() {
        Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        assertEquals(languages.getLanguages().size(), 11);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_InvalidNameType_qZFM3_1() {
        Languages languages = Languages.getInstance(NameType.values()[2]);
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_InvalidNameType_qZFM3_2() {
        Languages languages = Languages.getInstance(NameType.values()[2]);
        assertEquals(languages.getLanguages().size(), 6);
    }
}