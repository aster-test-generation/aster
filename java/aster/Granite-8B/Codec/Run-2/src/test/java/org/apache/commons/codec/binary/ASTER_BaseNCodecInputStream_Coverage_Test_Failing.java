/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BaseNCodecInputStream_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSkipWithLargeLength_Ksxj2() throws java.io.IOException {
        BaseNCodecInputStream baseNCodecInputStream = new BaseNCodecInputStream(null, null, false);
        assertEquals(Long.MAX_VALUE, baseNCodecInputStream.skip(Long.MAX_VALUE));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSkipWithSmallLength_dQHK3() throws java.io.IOException {
        BaseNCodecInputStream baseNCodecInputStream = new BaseNCodecInputStream(null, null, false);
        assertEquals(10, baseNCodecInputStream.skip(10));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSkipWithEOF_YciQ6() throws java.io.IOException {
        BaseNCodecInputStream baseNCodecInputStream = new BaseNCodecInputStream(null, null, false);
        assertEquals(0, baseNCodecInputStream.skip(10));
    }
}