/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Hex_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeHex_OutputArrayTooSmall_WCzx0() throws org.apache.commons.codec.DecoderException {
        byte[] out = new byte[1];
        char[] data = new char[2];
        try {
            Hex.decodeHex(data, out, 0);
            fail("DecoderException expected");
        } catch (DecoderException e) {
            assertEquals("Output array is not large enough to accommodate decoded data.", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeHex_OutputArrayLargeEnough_eZeJ1() throws org.apache.commons.codec.DecoderException {
        byte[] out = new byte[2];
        char[] data = new char[2];
        try {
            Hex.decodeHex(data, out, 0);
            assertArrayEquals(new byte[]{0, 0}, out);
        } catch (DecoderException e) {
            fail("DecoderException not expected");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_VlgJ0() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        hex.decode("string");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeChar_uBdb1() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        hex.decode('c');
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeObject_RRxA4() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        hex.decode(new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeObjectArr_YNMD6() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        hex.decode(new Object[0]);
    }
}