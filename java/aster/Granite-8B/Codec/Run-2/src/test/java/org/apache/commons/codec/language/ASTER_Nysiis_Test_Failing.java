/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Nysiis_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_VYLn0() {
        Nysiis nysiis = new Nysiis();
        boolean strict = nysiis.isStrict();
        assertFalse(strict);
        Nysiis strictNysiis = new Nysiis(true);
        boolean strictValue = strictNysiis.isStrict();
        assertTrue(strictValue);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_wFAq0_fid1() {
        Nysiis nysiis = new Nysiis();
        String input = "Hello";
        String expectedOutput = "HLL";
        String actualOutput = nysiis.encode(input);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStrictMode_qTIb1_fid1() {
        Nysiis nysiis = new Nysiis(true);
        String input = "Hello";
        String expectedOutput = "HLL";
        String actualOutput = nysiis.encode(input);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_VYLn0_1_fid2() {
        Nysiis nysiis = new Nysiis();
        boolean strict = nysiis.isStrict();
        Nysiis strictNysiis = new Nysiis(true);
        boolean strictValue = strictNysiis.isStrict();
        assertFalse(strict);
    }
}