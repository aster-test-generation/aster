/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuotedPrintableCodec_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableBytesEscapeCr_qHbf3() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = {1, 2, 3, 13, 4, 5};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        byte[] expected = {1, 2, 3, 13, 4, 5};
        assertArrayEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableBytesEscapeCrLf_pfdd4() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = {1, 2, 3, 13, 10, 4, 5};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        byte[] expected = {1, 2, 3, 13, 10, 4, 5};
        assertArrayEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableBytesEscapeCrInvalid_WuFH5() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = {1, 2, 3, 13, 6, 5};
        try {
            QuotedPrintableCodec.decodeQuotedPrintable(bytes);
            fail("DecoderException expected");
        } catch (DecoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableBytesEscapeCrInvalid2_ZnSO6() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = {1, 2, 3, 13, 10, 6, 5};
        try {
            QuotedPrintableCodec.decodeQuotedPrintable(bytes);
            fail("DecoderException expected");
        } catch (DecoderException e) {
        }
    }
}