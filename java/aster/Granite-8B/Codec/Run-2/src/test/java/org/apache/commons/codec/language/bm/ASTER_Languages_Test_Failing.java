/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Languages_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_String_qdYg1_1() {
        Languages languages = Languages.getInstance("languages.properties");
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_String_qdYg1_2() {
        Languages languages = Languages.getInstance("languages.properties");
        assertEquals(languages.getLanguages().size(), 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_InvalidString_koFn4_1() {
        Languages languages = Languages.getInstance("invalid.properties");
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_InvalidString_koFn4_2() {
        Languages languages = Languages.getInstance("invalid.properties");
        assertEquals(languages.getLanguages().size(), 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLanguages_oRRr6() {
        Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        Set<String> expectedLanguages = new HashSet<>();
        expectedLanguages.add("English");
        expectedLanguages.add("Spanish");
        assertEquals(languages.getLanguages(), expectedLanguages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_NameType_Aqyn0_2_fid1() {
        Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        assertEquals(languages.getLanguages().size(), 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_InvalidNameType_qZFM3_2_fid1() {
        Languages languages = Languages.getInstance(NameType.values()[2]);
        assertEquals(languages.getLanguages().size(), 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_NameType_Aqyn0() {
        Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        assertNotNull(languages);
        assertEquals(languages.getLanguages().size(), 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_String_qdYg1() {
        Languages languages = Languages.getInstance("languages.properties");
        assertNotNull(languages);
        assertEquals(languages.getLanguages().size(), 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_InvalidNameType_qZFM3() {
        Languages languages = Languages.getInstance(NameType.values()[2]);
        assertNotNull(languages);
        assertEquals(languages.getLanguages().size(), 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_InvalidString_koFn4() {
        Languages languages = Languages.getInstance("invalid.properties");
        assertNotNull(languages);
        assertEquals(languages.getLanguages().size(), 3);
    }
}