/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Nysiis_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_LdZi0_1() throws Exception {
        Nysiis nysiis = new Nysiis();
        Nysiis nysiisStrict = new Nysiis(true);
        assertEquals(false, nysiis.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_LdZi0_2() throws Exception {
        Nysiis nysiis = new Nysiis();
        Nysiis nysiisStrict = new Nysiis(true);
        assertEquals(true, nysiisStrict.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithString_yvaU0() throws EncoderException {
        Nysiis nysiis = new Nysiis();
        String input = "example";
        String expected = "EXAMPL";
        String actual = nysiis.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringAndBoolean_VCbK1() throws EncoderException {
        Nysiis nysiis = new Nysiis(true);
        String input = "example";
        String expected = "EXAMPL";
        String actual = nysiis.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_LAvO0() throws Exception {
        Nysiis nysiis = new Nysiis();
        String input = "Hello";
        String expected = "Hll";
        String actual = nysiis.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_sKWD1() throws Exception {
        String result = new Nysiis().nysiis("Test");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test1");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test123");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test1234");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test12345");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test123456");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test1234567");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test12345678");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test123456789");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test1234567890");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test12345678901");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test123456789012");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test1234567890123");
        assert result.equals("T532");
        result = new Nysiis().nysiis("Test12345678901234");
        assert result.equals("T532");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MurL2() throws Exception {
        Nysiis nysiis = new Nysiis();
        assert nysiis.nysiis("test").equals("T553");
        assert nysiis.nysiis("Test").equals("T553");
        assert nysiis.nysiis("tests").equals("T55S");
        assert nysiis.nysiis("Tests").equals("T55S");
        assert nysiis.nysiis("testing").equals("T55G");
        assert nysiis.nysiis("Testing").equals("T55G");
        assert nysiis.nysiis("tests").equals("T55S");
        assert nysiis.nysiis("Tests").equals("T55S");
        assert nysiis.nysiis("test").equals("T553");
        assert nysiis.nysiis("Test").equals("T553");
        assert nysiis.nysiis("tests").equals("T55S");
        assert nysiis.nysiis("Tests").equals("T55S");
        assert nysiis.nysiis("testing").equals("T55G");
        assert nysiis.nysiis("Testing").equals("T55G");
        assert nysiis.nysiis("tests").equals("T55S");
        assert nysiis.nysiis("Tests").equals("T55S");
    }
}