/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PureJavaCrc32C_Test_Passing {
    PureJavaCrc32C crc32c = new PureJavaCrc32C();

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_DfRy0() throws Exception {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.getValue();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate_YcXD0() throws Exception {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.update(0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate_OuGF0() throws Exception {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.update(new byte[]{0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08}, 0, 8);
        assertEquals(0x8a9136aa, crc32c.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate2_OIQl1() throws Exception {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.update(new byte[]{0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10}, 0, 8);
        assertEquals(0x62a8ab43, crc32c.getValue());
    }
}