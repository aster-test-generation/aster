/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QCodec_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithUnsupportedEncodingException_ATnK1() throws org.apache.commons.codec.DecoderException {
        QCodec qCodec = new QCodec();
        String str = "example";
        try {
            qCodec.decode(str);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
            assertFalse(e.getMessage().contains("Unsupported encoding"));
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoEncoding_UucP0() {
        QCodec qCodec = new QCodec();
        byte[] bytes = new byte[10];
        bytes[0] = 32;
        byte[] data = qCodec.doEncoding(bytes);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeNull_UBSd0() throws org.apache.commons.codec.DecoderException {
        QCodec codec = new QCodec();
        Object result = codec.decode(null);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeNonString_bzej2() throws org.apache.commons.codec.DecoderException {
        QCodec codec = new QCodec();
        Object input = new Object();
        try {
            codec.decode(input);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
            assertEquals("Objects of type " + input.getClass().getName() + " cannot be decoded using Q codec", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNull_SUen0() throws org.apache.commons.codec.EncoderException {
        QCodec codec = new QCodec();
        Object result = codec.encode(null);
        assertEquals(null, result);
    }
}