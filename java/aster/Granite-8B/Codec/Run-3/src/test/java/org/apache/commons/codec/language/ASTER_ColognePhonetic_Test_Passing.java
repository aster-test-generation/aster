/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ColognePhonetic_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_qgsa0() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text1 = "Hello";
        String text2 = "Hillo";
        boolean expected = true;
        boolean actual = colognePhonetic.isEncodeEqual(text1, text2);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_tiTr0() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Hello";
        String expected = "H2L2";
        String actual = colognePhonetic.encode(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_JxvF0() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String input = "Hello";
        String expectedOutput = "H3llo";
        String actualOutput = colognePhonetic.encode(input);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithSpecialCharacters_RRsH1() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String input = "Hello, World!";
        String expectedOutput = "H3llo, W3rld!";
        String actualOutput = colognePhonetic.encode(input);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_1() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("A"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_2() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("E"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_3() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("I"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_4() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("O"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_5() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("U"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_6() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("Y"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_7() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("1", colognePhonetic.colognePhonetic("B"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_8() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("1", colognePhonetic.colognePhonetic("P"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_9() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("2", colognePhonetic.colognePhonetic("D"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_10() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("2", colognePhonetic.colognePhonetic("T"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_11() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("3", colognePhonetic.colognePhonetic("F"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_12() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("3", colognePhonetic.colognePhonetic("P"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_13() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("3", colognePhonetic.colognePhonetic("V"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_14() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("3", colognePhonetic.colognePhonetic("W"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_15() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4", colognePhonetic.colognePhonetic("G"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_16() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4", colognePhonetic.colognePhonetic("K"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_17() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4", colognePhonetic.colognePhonetic("Q"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_18() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4", colognePhonetic.colognePhonetic("X"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_19() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("8", colognePhonetic.colognePhonetic("S"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_20() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("8", colognePhonetic.colognePhonetic("Z"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_21() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("8", colognePhonetic.colognePhonetic("C"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_24() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("7", colognePhonetic.colognePhonetic("R"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_25() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("5", colognePhonetic.colognePhonetic("L"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_26() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("6", colognePhonetic.colognePhonetic("M"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_27() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("6", colognePhonetic.colognePhonetic("N"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_lyHS0_28() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("", colognePhonetic.colognePhonetic("H"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_QIkP0() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Hello";
        String expected = "H3ll0";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic2_olre1() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "World";
        String expected = "W0rld";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic3_PreN2() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Programming";
        String expected = "P5r6gr4mm1ng";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic4_SqdK3() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Java";
        String expected = "J6v4";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic5_cEJc4() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Python";
        String expected = "P6yth0n";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic6_MqfA5() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "JavaScript";
        String expected = "J4v4scr1pt";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic7_nIFo6() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "C++";
        String expected = "C2p4";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic8_refc7() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Ruby";
        String expected = "R2by";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic9_DLVU8() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Swift";
        String expected = "S4wift";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic10_zdNM9() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Kotlin";
        String expected = "K4t4l1n";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic11_DfRG10() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text = "Go";
        String expected = "G0";
        String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }
}