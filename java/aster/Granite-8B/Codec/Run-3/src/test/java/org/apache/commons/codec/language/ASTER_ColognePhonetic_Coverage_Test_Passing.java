/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ColognePhonetic_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_UhIQ0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("A"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic2_vXlO1() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("E"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic3_UxpA2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("I"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic4_HEkY3() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("O"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic5_uVPY4() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("U"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic6_VmUO5() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("Y"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic7_mvVk6() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("a"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonStringObject_NQoD0() throws org.apache.commons.codec.EncoderException {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Object object = new Object();
        try {
            colognePhonetic.encode(object);
        } catch (EncoderException e) {
            assertEquals("This method's parameter was expected to be of the type " + String.class.getName() + ". But actually it was of the type " + object.getClass().getName() + ".", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringObject_JEMU1() throws org.apache.commons.codec.EncoderException {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String object = "Hello";
        assertEquals("05", colognePhonetic.encode(object));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithEmptyStringObject_SowP3() throws org.apache.commons.codec.EncoderException {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String object = "";
        assertEquals("", colognePhonetic.encode(object));
    }
}