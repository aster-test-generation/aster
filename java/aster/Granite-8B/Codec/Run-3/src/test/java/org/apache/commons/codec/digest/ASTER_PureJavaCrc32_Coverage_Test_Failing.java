/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PureJavaCrc32_Coverage_Test_Failing {
    PureJavaCrc32 crc32 = new PureJavaCrc32();

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate2_tnrP1_EQFk0() {
        crc32.update(255);
        assertEquals(4294967295L, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate1_Fghp0_hGVJ0() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1}, 0, 1);
        assertEquals(1, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate1_HNNV0_JuUE0() {
        crc32.update(0);
        assertEquals(0, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate2_hxWF1_Tlce0() {
        crc32.update(new byte[]{1, 2}, 0, 2);
        assertEquals(33819, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate5_bSJd4_rFnY0() {
        crc32.update(new byte[]{1, 2, 3, 4, 5}, 0, 5);
        assertEquals(2896146241L, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate6_qKfu5_ioxb0() {
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6}, 0, 6);
        assertEquals(4278190081L, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate7_GDLi6_xwuu0() {
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7}, 0, 7);
        assertEquals(3405774873L, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate8_ZFsS7_jVef0() {
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8}, 0, 8);
        assertEquals(2147483649L, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate9_LNIl8_Adot0() {
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 9);
        assertEquals(2147516417L, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate4_gIpY3_knOI0() {
        crc32.update(new byte[]{1, 2, 3, 4}, 0, 4);
        assertEquals(326344577, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate10_Ssei9_rwJU0() {
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 0, 10);
        assertEquals(1811939329L, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate11_tSbo10_sSdW0() {
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, 0, 11);
        assertEquals(4294967295L, crc32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate12_viWK11_cjwx0() {
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, 0, 12);
        assertEquals(4294967295L, crc32.getValue());
    }
}