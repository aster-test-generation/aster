/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Rule_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getInstanceMap_withInvalidParameters_throwsIllegalArgumentException_lzfZ1_1() {
        NameType nameType = NameType.ASHKENAZI;
        RuleType rt = RuleType.APPROX;
        String lang = "invalid";
        IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> Rule.getInstanceMap(nameType, rt, lang));
    }
}