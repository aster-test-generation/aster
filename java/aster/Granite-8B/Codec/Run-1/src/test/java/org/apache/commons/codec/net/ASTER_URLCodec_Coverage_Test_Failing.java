/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.io.UnsupportedEncodingException;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_URLCodec_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeNullCharset_wCRS4() throws org.apache.commons.codec.DecoderException {
        URLCodec urlCodec = new URLCodec(null);
        Object obj = "";
        Object result = urlCodec.decode(obj);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeEmptyCharset_dliN5() throws org.apache.commons.codec.DecoderException {
        URLCodec urlCodec = new URLCodec("");
        Object obj = "";
        Object result = urlCodec.decode(obj);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringThatCanBeEncoded_KGHz3_nYmv0_fid2() throws UnsupportedEncodingException {
        URLCodec urlCodec = new URLCodec();
        String str = "\u00ff";
        try {
            String encodedString = urlCodec.encode(str, "UTF-8");
            Assertions.assertEquals("%FF", encodedString);
        } catch (UnsupportedEncodingException e) {
            Assertions.fail("Unexpected exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeStringString_YJrz0_fid2() throws UnsupportedEncodingException {
        URLCodec urlCodec = new URLCodec();
        String str = "Hello World";
        String charsetName = "UTF-8";
        String encodedStr = urlCodec.encode(str, charsetName);
        assertEquals("Hello%20World", encodedStr);
    }
}