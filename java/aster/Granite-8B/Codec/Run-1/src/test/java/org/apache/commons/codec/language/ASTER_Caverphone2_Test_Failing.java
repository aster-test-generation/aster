/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Caverphone2_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_FslV0() {
        Caverphone2 caverphone2 = new Caverphone2();
        String source = "Hello";
        String expected = "2K2S2";
        String actual = caverphone2.encode(source);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode2_nlOR1() {
        Caverphone2 caverphone2 = new Caverphone2();
        String source = "World";
        String expected = "2F2R2";
        String actual = caverphone2.encode(source);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonNullString_yRdQ1() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String input = "Hello";
        String expectedOutput = "KHH1";
        assertEquals(expectedOutput, caverphone2.encode(input));
    }
}