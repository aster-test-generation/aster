/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_BinaryCodec_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithInvalidInput_Akef4() throws org.apache.commons.codec.DecoderException {
        BinaryCodec codec = new BinaryCodec();
        Object result = codec.decode(new Object());
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithInvalidInput2_bmPe5() throws org.apache.commons.codec.DecoderException {
        BinaryCodec codec = new BinaryCodec();
        Object result = codec.decode(new int[]{1, 2, 3});
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithInvalidInput3_WUGr6() throws org.apache.commons.codec.DecoderException {
        BinaryCodec codec = new BinaryCodec();
        Object result = codec.decode(new float[]{1.0f, 2.0f, 3.0f});
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithInvalidInput4_OWCn7() throws org.apache.commons.codec.DecoderException {
        BinaryCodec codec = new BinaryCodec();
        Object result = codec.decode(new double[]{1.0, 2.0, 3.0});
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithInvalidInput5_jLme8() throws org.apache.commons.codec.DecoderException {
        BinaryCodec codec = new BinaryCodec();
        Object result = codec.decode(new boolean[]{true, false, true});
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithInvalidInput6_QDYw9() throws org.apache.commons.codec.DecoderException {
        BinaryCodec codec = new BinaryCodec();
        Object result = codec.decode(new long[]{1L, 2L, 3L});
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithInvalidInput7_Hixq10() throws org.apache.commons.codec.DecoderException {
        BinaryCodec codec = new BinaryCodec();
        Object result = codec.decode(new short[]{1, 2, 3});
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithInvalidInput8_BqrN11() throws org.apache.commons.codec.DecoderException {
        BinaryCodec codec = new BinaryCodec();
        Object result = codec.decode(new Object[]{1, 2, 3});
        assertEquals(null, result);
    }
}