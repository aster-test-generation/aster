/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.Arrays;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_PercentCodec_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithByteArray_TSGB0() throws org.apache.commons.codec.DecoderException {
        PercentCodec percentCodec = new PercentCodec();
        byte[] input = new byte[]{};
        byte[] expectedOutput = new byte[]{};
        byte[] actualOutput = percentCodec.decode(input);
        assertArrayEquals(expectedOutput, actualOutput);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithObject_dnvJ1() throws org.apache.commons.codec.DecoderException {
        PercentCodec percentCodec = new PercentCodec();
        Object input = new Object();
        try {
            percentCodec.decode(input);
        } catch (DecoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithWillEncodeAndCanEncode_QPOO0() throws org.apache.commons.codec.EncoderException {
        PercentCodec percentCodec = new PercentCodec();
        byte[] bytes = new byte[1];
        bytes[0] = -1;
        byte[] expected = new byte[3];
        expected[0] = '%';
        expected[1] = 'F';
        expected[2] = 'F';
        byte[] actual = percentCodec.encode(bytes);
        assert(Arrays.equals(expected, actual));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNull_rKiH0() throws org.apache.commons.codec.EncoderException {
        PercentCodec codec = new PercentCodec();
        Object encoded = codec.encode(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeByteArray_flem1() throws org.apache.commons.codec.EncoderException {
        PercentCodec codec = new PercentCodec();
        byte[] input = new byte[10];
        Object encoded = codec.encode(input);
    }
}