/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_RefinedSoundex_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCodeWithInvalidIndex_Nmbo1() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = 'A';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assert mappingCode == 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCodeWithInvalidIndex_jcvy2_lsbz1() {
        RefinedSoundex refinedSoundex = new RefinedSoundex("0123456789");
        char mappingCode = refinedSoundex.getMappingCode('A');
        assert mappingCode == 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringObject_YVlU1() throws org.apache.commons.codec.EncoderException {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        String input = "Hello";
        String expectedOutput = "H412";
        String actualOutput = refinedSoundex.encode(input);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode_Xqbn0() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = 'A';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode2_WLrw1() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = 'a';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode3_jNJr2() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = 'B';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode4_HJbo3() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = 'b';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode5_fZdF4() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = 'Z';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode6_Wxxw5() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = 'z';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }
}