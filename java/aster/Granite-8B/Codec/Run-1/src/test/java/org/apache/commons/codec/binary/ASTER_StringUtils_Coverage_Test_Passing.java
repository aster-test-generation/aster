/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_StringUtils_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullString_sphH0() {
        ByteBuffer actual = StringUtils.getByteBufferUtf8(null);
        ByteBuffer expected = null;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEmptyString_eWBp1() {
        ByteBuffer actual = StringUtils.getByteBufferUtf8("");
        ByteBuffer expected = ByteBuffer.wrap("".getBytes(StandardCharsets.UTF_8));
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_WithNonNullInputs_ReturnsTrue_dOyy1() {
        CharSequence cs1 = "hello";
        CharSequence cs2 = "hello";
        boolean result = StringUtils.equals(cs1, cs2);
        assert result;
    }
}