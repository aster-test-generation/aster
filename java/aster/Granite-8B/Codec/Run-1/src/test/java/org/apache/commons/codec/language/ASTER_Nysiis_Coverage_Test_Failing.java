/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Nysiis_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis3_IDjn8() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("MAC");
        assert result.equals("MCC");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis4_EKcT9() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("KN");
        assert result.equals("NN");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis6_nBKD11() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("PH");
        assert result.equals("FF");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_IDLq12() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("SCH");
        assert result.equals("SSS");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringObject_mzpT1_fid2() throws org.apache.commons.codec.EncoderException {
        Nysiis nysiis = new Nysiis();
        String input = "Hello";
        String expectedOutput = "HLL";
        String actualOutput = nysiis.encode(input);
        assertEquals(expectedOutput, actualOutput);
    }
}