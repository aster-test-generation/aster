/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_RefinedSoundex_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonStringObject_jusP0() throws org.apache.commons.codec.EncoderException {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        try {
            refinedSoundex.encode(new Object());
        } catch (EncoderException e) {
            assertEquals("Parameter supplied to RefinedSoundex encode is not of type java.lang.String", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCodeWithNonLetterCharacter_pGMm0() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = '1';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assert mappingCode == 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCodeWithNonLetterCharacter_jcvy2_RVDF2() {
        RefinedSoundex refinedSoundex = new RefinedSoundex("0123456789");
        char mappingCode = refinedSoundex.getMappingCode('!');
        assert mappingCode == 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCodeWithNullCharacter_jcvy2_MOSA3() {
        RefinedSoundex refinedSoundex = new RefinedSoundex("0123456789");
        char mappingCode = refinedSoundex.getMappingCode('\u0000');
        assert mappingCode == 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonStringObject_fQQs0() throws org.apache.commons.codec.EncoderException {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        Object obj = new Object();
        try {
            refinedSoundex.encode(obj);
            fail("EncoderException expected");
        } catch (EncoderException e) {
            assertEquals("Parameter supplied to RefinedSoundex encode is not of type java.lang.String", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode7_SPVo6() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = '0';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode8_YQDh7() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = '9';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode9_DqZL8() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = ' ';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode10_OHyt9() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = '!';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode11_fADS10() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = '#';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode12_hMDT11() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = '$';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode13_wfFd12() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = '%';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMappingCode14_HzTf13() {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        char c = '^';
        char mappingCode = refinedSoundex.getMappingCode(c);
        assertEquals(0, mappingCode);
    }
}