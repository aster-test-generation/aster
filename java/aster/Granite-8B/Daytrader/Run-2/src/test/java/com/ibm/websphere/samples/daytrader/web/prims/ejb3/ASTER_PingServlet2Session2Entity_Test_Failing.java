/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.naming.InitialContext;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.MockedConstruction;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2Entity_Test_Failing {
    private static int hitCount;
    private static String initTime;
    private TradeServices tradeSLSBLocal;
    PingServlet2Session2Entity pingServlet2Session2Entity;
    HttpServlet httpServlet;
    InitialContext initialContext;
    MockedConstruction<InitialContext> mockedInitialContext;
    HttpServletResponse httpServletResponse;
    PingServlet2Session2Entity pingservlet2session2entity;
    HttpServlet httpservlet;
    InitialContext initialcontext;
    HttpServletResponse httpservletresponse;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_1() throws Exception {
        mockedInitialContext = mockConstruction(InitialContext.class);
        httpServlet = mock(HttpServlet.class);
        initialContext = mock(InitialContext.class);
        pingServlet2Session2Entity = new PingServlet2Session2Entity();
        // Mock the lookup method of InitialContext
        when(initialContext.lookup("java:comp/env/ejb/TradeSLSBBean")).thenReturn(tradeSLSBLocal);
        // Call the init method of PingServlet2Session2Entity
        pingServlet2Session2Entity.init(httpServlet);
        // Verify that the lookup method was called once
        verify(initialContext, times(1)).lookup("java:comp/env/ejb/TradeSLSBBean");
        // Verify that the hitCount and initTime variables were initialized correctly
        assertEquals(0, hitCount);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_2() throws Exception {
        mockedInitialContext = mockConstruction(InitialContext.class);
        httpServlet = mock(HttpServlet.class);
        initialContext = mock(InitialContext.class);
        pingServlet2Session2Entity = new PingServlet2Session2Entity();
        // Mock the lookup method of InitialContext
        when(initialContext.lookup("java:comp/env/ejb/TradeSLSBBean")).thenReturn(tradeSLSBLocal);
        // Call the init method of PingServlet2Session2Entity
        pingServlet2Session2Entity.init(httpServlet);
        // Verify that the lookup method was called once
        verify(initialContext, times(1)).lookup("java:comp/env/ejb/TradeSLSBBean");
        // Verify that the hitCount and initTime variables were initialized correctly
        assertNotNull(initTime);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitServletConfig_gAtn0() throws ServletException {
        PingServlet2Session2Entity pingServlet2Session2Entity = new PingServlet2Session2Entity();
        ServletConfig servletConfig = mock(ServletConfig.class);
        pingServlet2Session2Entity.init(servletConfig);
        verify(servletConfig).getServletContext();
        verify(servletConfig).getServletName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitServletConfig1_pvPK1() throws ServletException {
        PingServlet2Session2Entity pingServlet2Session2Entity = new PingServlet2Session2Entity();
        ServletConfig servletConfig = mock(ServletConfig.class);
        pingServlet2Session2Entity.init(servletConfig);
        verify(servletConfig).getInitParameter("runTimeMode");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetServletInfo_SqxT0() {
        PingServlet2Session2Entity pingServlet2Session2Entity = new PingServlet2Session2Entity();
        String servletInfo = pingServlet2Session2Entity.getServletInfo();
        assertEquals("web primitive, tests Servlet to Session to Entity EJB path", servletInfo);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_rewz0() throws Exception {
        PingServlet2Session2Entity servlet = new PingServlet2Session2Entity();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        servlet.doGet(req, res);
        verify(res, times(1)).setContentType("text/html");
        verify(res, times(1)).getWriter();
        verify(req, atLeast(1)).getParameter("symbol");
        verify(tradeSLSBLocal, times(1)).getQuote(anyString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetWithException_NEmY1() throws Exception {
        PingServlet2Session2Entity servlet = new PingServlet2Session2Entity();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        when(req.getParameter("symbol")).thenThrow(new Exception("Exception occurred"));
        servlet.doGet(req, res);
        verify(res, times(1)).sendError(500, "General Exception caught, Exception occurred");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit() throws Exception {
        mockedInitialContext = mockConstruction(InitialContext.class);
        httpServlet = mock(HttpServlet.class);
        initialContext = mock(InitialContext.class);
        pingServlet2Session2Entity = new PingServlet2Session2Entity();
        // Mock the lookup method of InitialContext
        when(initialContext.lookup("java:comp/env/ejb/TradeSLSBBean")).thenReturn(tradeSLSBLocal);
        // Call the init method of PingServlet2Session2Entity
        pingServlet2Session2Entity.init(httpServlet);
        // Verify that the lookup method was called once
        verify(initialContext, times(1)).lookup("java:comp/env/ejb/TradeSLSBBean");
        // Verify that the hitCount and initTime variables were initialized correctly
        assertEquals(0, hitCount);
        assertNotNull(initTime);
    }
}