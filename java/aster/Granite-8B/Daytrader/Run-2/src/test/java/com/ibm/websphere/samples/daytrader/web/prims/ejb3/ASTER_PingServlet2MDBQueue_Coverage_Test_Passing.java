/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.jms.Connection;
import javax.jms.TextMessage;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
public class Aster_PingServlet2MDBQueue_Coverage_Test_Passing {
private java.io.PrintWriter out;
	PingServlet2MDBQueue servlet = new PingServlet2MDBQueue();
	HttpServletRequest mockRequest = null;
	HttpServletResponse mockResponse = null;
    private Connection conn;
    private TextMessage message;
    private int iter;
    private int hitCount;
    private long publishTime;
    private String command;
    private String messageText;
    private StringBuffer output;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void test_doPost_0_mjlg0() throws ServletException, IOException {
		mockRequest = new MockHttpServletRequest("GET", "/PingServlet2MDBQueue");
		mockResponse = new MockHttpServletResponse();
		servlet.doPost(mockRequest, mockResponse);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void test_init_0_Abqm0() throws ServletException {
		PingServlet2MDBQueue instance = new PingServlet2MDBQueue();
		instance.init(null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_oqMa0_1()
	{
		PingServlet2MDBQueue obj = new PingServlet2MDBQueue();
		String result = obj.getServletInfo();
		assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_oqMa0_2()
	{
		PingServlet2MDBQueue obj = new PingServlet2MDBQueue();
		String result = obj.getServletInfo();
		assertEquals("web primitive, configured with trade runtime configs, tests Servlet to Session EJB path", result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_oqMa0()
	{
		PingServlet2MDBQueue obj = new PingServlet2MDBQueue();
		String result = obj.getServletInfo();
		assertNotNull(result);
		assertEquals("web primitive, configured with trade runtime configs, tests Servlet to Session EJB path", result);
	}
}