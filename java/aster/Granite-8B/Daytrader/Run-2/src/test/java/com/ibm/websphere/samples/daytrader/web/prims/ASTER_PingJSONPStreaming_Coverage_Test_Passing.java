/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingJSONPStreaming_Coverage_Test_Passing {
	{
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_XTAC0() {
		PingJSONPStreaming pingJSONPStreaming = new PingJSONPStreaming();
		String result = pingJSONPStreaming.getServletInfo();
		assertEquals("Basic JSON generation and parsing in a servlet", result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test1_LDLD0() throws Exception {
    PingJSONPStreaming pingJSONPStreaming = new PingJSONPStreaming();
    pingJSONPStreaming.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_YnTk0() throws ServletException, IOException {
	{
	    PingJSONPStreaming pingJSONPStreaming = new PingJSONPStreaming();
	    HttpServletRequest req = mock(HttpServletRequest.class);
	    HttpServletResponse res = mock(HttpServletResponse.class);
	    pingJSONPStreaming.doGet(req, res);
	    verify(res, times(1)).setContentType(eq("text/html"));
	    verify(res, times(1)).getOutputStream();
	    verify(res, times(1)).sendError(anyInt(), anyString());
	}
}
}