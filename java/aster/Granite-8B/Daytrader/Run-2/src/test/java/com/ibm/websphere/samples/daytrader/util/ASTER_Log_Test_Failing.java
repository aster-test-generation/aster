/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.verify;

public class Aster_Log_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStat_EjHs0() {
        Log log = new Log();
        log.stat("Test message");
        verify(log).log("Test message");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testErrorWithNullThrowable_rksY2() {
        String message = "Error message";
        Log.error(null, message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTraceExit_Rdfi0() {
        Log log = new Log();
        log.traceExit("testTraceExit");
        assertEquals("com.ibm.websphere.samples.daytrader.util.Log@457f10cf", log.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testError_Gosl0_fid1() {
        Throwable e = new Throwable();
        String message = "Error message";
        Log.error(e, message);
        assertEquals("Error message\n\t", e.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testErrorWithNullMessage_IQfW1_fid1() {
        Throwable e = new Throwable();
        Log.error(e, null);
        assertEquals("", e.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTraceExit_Rdfi0_fid1() {
        Log log = new Log();
        log.traceExit("testTraceExit");
        assertEquals("Method exit  --testTraceExit", log.toString());
    }
}