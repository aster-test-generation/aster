/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingSession2_Coverage_Test_Passing {
private PingSession2 fixturePingSession2;
    PingSession2 pingSession2;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost1_JBrU0() throws ServletException, IOException {
        PingSession2 pingSession2 = new PingSession2();
        HttpServletRequest request = null;
        HttpServletResponse response = null;
        pingSession2.doPost(request, response);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_oBay0() {
		PingSession2 pingSession2 = new PingSession2();
		String result = pingSession2.getServletInfo();
		assertEquals("HTTP Session Key: Tests management of a read/write unique id", result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_FCrb0() throws javax.servlet.ServletException, java.io.IOException {
        fixturePingSession2 = new PingSession2();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetPrintWriter_psAJ1() throws ServletException, IOException {
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        PrintWriter out = mock(PrintWriter.class);
        when(response.getWriter()).thenReturn(out);
        fixturePingSession2.doGet(request, response);
        verify(response).getWriter();
        verifyNoMoreInteractions(response);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetInteger2_dJUb9() throws ServletException, IOException {
        HttpServletRequest request = mock(HttpServletRequest.class);
}
}