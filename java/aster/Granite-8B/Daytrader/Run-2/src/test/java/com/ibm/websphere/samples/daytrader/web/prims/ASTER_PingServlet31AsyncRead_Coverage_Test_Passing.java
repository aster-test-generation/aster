/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet31AsyncRead_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_swLj0() {
		PingServlet31AsyncRead servlet = new PingServlet31AsyncRead();
		String result = servlet.getServletInfo();
		assertEquals("Basic dynamic HTML generation through a servlet", result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void test_init_0_uAdQ0() throws ServletException {
		PingServlet31AsyncRead instance = new PingServlet31AsyncRead();
		instance.init(null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_fIwW0_xleL0() throws ServletException, IOException {
    PingServlet31AsyncRead servlet = new PingServlet31AsyncRead();
    HttpServletRequest mockHttpServletRequest = mock(HttpServletRequest.class);
    HttpServletResponse mockHttpServletResponse = mock(HttpServletResponse.class);
    when(mockHttpServletResponse.getContentType()).thenReturn("text/html");
    servlet.doGet(mockHttpServletRequest, mockHttpServletResponse);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentType_WxpS0_akXD0() throws ServletException, IOException {
        PingServlet31AsyncRead servlet = new PingServlet31AsyncRead();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        when(response.getContentType()).thenReturn("text/html");
        servlet.doGet(request, response);
        verify(response, times(1)).setContentType("text/html");
}
}