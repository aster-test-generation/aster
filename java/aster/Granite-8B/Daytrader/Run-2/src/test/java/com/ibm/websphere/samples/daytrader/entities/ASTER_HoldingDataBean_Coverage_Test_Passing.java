/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;
import java.math.BigDecimal;
import java.util.Date;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Date;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_HoldingDataBean_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals1_oQuS0() {
    HoldingDataBean bean1 = new HoldingDataBean();
    HoldingDataBean bean2 = new HoldingDataBean();
    boolean result = bean1.equals(bean2);
    assertEquals(false, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString1_BShf0() {
    HoldingDataBean bean = new HoldingDataBean();
    bean.setHoldingID(1);
    bean.setQuantity(1.0);
    bean.setPurchasePrice(new BigDecimal(1.0));
    bean.setPurchaseDate(new Date());
    bean.setQuoteID("1");
    assertEquals("\n\tHolding Data for holding: 1\n\t\t      quantity:1.0\n\t\t purchasePrice:1.0\n\t\t  purchaseDate:Mon Jan 01 01:00:00 EST 1970\n\t\t       quoteID:1", bean.toString());
}
}