/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetEmail_JWWF0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setEmail("test@example.com");
        assertEquals("test@example.com", accountProfileDataBean.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetEmailWithNull_GClT2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setEmail(null);
        assertNull(accountProfileDataBean.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetEmailWithEmpty_fRSq3() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setEmail("");
        assertEquals("", accountProfileDataBean.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_zhXG3() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        int hashCode = accountProfileDataBean.hashCode();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomInstance_pIWO8() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        assertNotNull(accountProfileDataBean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetUserID_Btwb0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("12345");
        assertEquals("12345", accountProfileDataBean.getUserID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetUserIDWithNull_JJvE1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID(null);
        assertNull(accountProfileDataBean.getUserID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetUserIDWithEmpty_CxbU2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("");
        assertEquals("", accountProfileDataBean.getUserID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmail_Kfyv0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String email = accountProfileDataBean.getEmail();
        assertEquals("email", "email", email);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserID_SIyr0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "johndoe@example.com", "1234567890123456");
        String userID = accountProfileDataBean.getUserID();
        assertEquals("12345", userID);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetFullName_Epmh0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setFullName("John Doe");
        assertEquals("John Doe", accountProfileDataBean.getFullName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddress_RASt0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String address = accountProfileDataBean.getAddress();
        assertEquals("address", address);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrint_ddOm0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        accountProfileDataBean.print();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPassword_Edxs0() {
        AccountProfileDataBean bean = new AccountProfileDataBean("1", "password", "John Doe", "123 Main St", "john@example.com", "1234567890123456");
        String password = bean.getPassword();
        assertEquals("password", password);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCreditCard_aZcB0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setCreditCard("1234567890123456");
        assertEquals("1234567890123456", accountProfileDataBean.getCreditCard());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_faWx0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "john@example.com", "1234567890123456");
        String expected = "<BR>Account Profile Data for userID: <B>12345</B>" + "<LI>   passwd:password</LI>" + "<LI>   fullName:John Doe</LI>" + "<LI>    address:123 Main St</LI>" + "<LI>      email:john@example.com</LI>" + "<LI> creditCard:1234567890123456</LI>";
        String actual = accountProfileDataBean.toHTML();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFullName_kpXj0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String expectedFullName = "fullName";
        String actualFullName = accountProfileDataBean.getFullName();
        assertEquals(expectedFullName, actualFullName);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCreditCard_vemz0_JFSB0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String actualCreditCard = accountProfileDataBean.getCreditCard();
        assertEquals("creditCard", actualCreditCard);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPassword_Edxs0_cbON0() {
        AccountProfileDataBean bean = new AccountProfileDataBean("1", "password", "John Doe", "123 Main St", "john@example.com", "1234567890123456");
        AccountProfileDataBean bean2 = new AccountProfileDataBean("1", "password", "John Doe", "123 Main St", "john@example.com", "1234567890123456");
        String password = bean.getPassword();
        assertEquals("password", password);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_xnZl0_fid1() {
        AccountProfileDataBean instance = new AccountProfileDataBean("1234567890", "password", "John Doe", "123 Main St", "john.doe@example.com", "1234567890123456");
        int expResult = -2054162789;
        int result = instance.hashCode();
        assertEquals(expResult, result);
    }
}