/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JsonDecoder_Coverage_Test_Passing {
    JsonDecoder decoder = new JsonDecoder();
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_eCzG1() {
    JsonDecoder decoder = new JsonDecoder();
    decoder.init(null);
    assertNotNull(decoder);
  }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecode_VJAO0_fid1() {
        assertFalse(decoder.willDecode("{}"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecode2_pVaG1_fid1() {
        assertFalse(decoder.willDecode("[]"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWillDecode_rmjT0() {
	JsonDecoder decoder = new JsonDecoder();
	boolean result = decoder.willDecode("json");
	Assertions.assertFalse(result);
}
}