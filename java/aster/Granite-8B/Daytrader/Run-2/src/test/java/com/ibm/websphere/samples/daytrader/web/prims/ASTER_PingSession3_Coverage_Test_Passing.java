/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingSession3_Coverage_Test_Passing {
    PingSession3 pingSession3;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_NJMN0() {
		PingSession3 pingSession3 = new PingSession3();
		assertEquals("HTTP Session Object: Tests management of a large custom session class", pingSession3.getServletInfo());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetWithNumObjectsParameter_KzNl0() throws javax.servlet.ServletException, java.io.IOException {
        PingSession3 pingSession3 = new PingSession3();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        PrintWriter out = mock(PrintWriter.class);
        StringBuffer outputBuffer = new StringBuffer();
        HttpSession session = mock(HttpSession.class);
        when(request.getSession(true)).thenReturn(session);
        when(request.getParameter("num_objects")).thenReturn("10");
        pingSession3.doGet(request, response);
        verify(out).println(outputBuffer.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetWithInvalidNumObjectsParameter_NIVV1() throws javax.servlet.ServletException, java.io.IOException {
        PingSession3 pingSession3 = new PingSession3();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        PrintWriter out = mock(PrintWriter.class);
        StringBuffer outputBuffer = new StringBuffer();
        HttpSession session = mock(HttpSession.class);
        when(request.getSession(true)).thenReturn(session);
        when(request.getParameter("num_objects")).thenReturn("invalid");
        pingSession3.doGet(request, response);
        verify(out).println(outputBuffer.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetWithZeroNumObjectsParameter_LxKU2() throws javax.servlet.ServletException, java.io.IOException {
        PingSession3 pingSession3 = new PingSession3();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        PrintWriter out = mock(PrintWriter.class);
        StringBuffer outputBuffer = new StringBuffer();
        HttpSession session = mock(HttpSession.class);
        when(request.getSession(true)).thenReturn(session);
        when(request.getParameter("num_objects")).thenReturn("0");
        pingSession3.doGet(request, response);
        verify(out).println(outputBuffer.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetWithNumObjectsParameterAndSessionObjectSizeSet_bvLy3() throws javax.servlet.ServletException, java.io.IOException {
        PingSession3 pingSession3 = new PingSession3();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        PrintWriter out = mock(PrintWriter.class);
        StringBuffer outputBuffer = new StringBuffer();
        HttpSession session = mock(HttpSession.class);
        PingSession3Object[] sessionData = new PingSession3Object[10];
        when(request.getSession(true)).thenReturn(session);
        when(request.getParameter("num_objects")).thenReturn("10");
        when(session.getAttribute("sessiontest.sessionData")).thenReturn(sessionData);
        pingSession3.doGet(request, response);
        verify(out).println(outputBuffer.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetWithNumObjectsParameterAndSessionObjectSizeSetToZero_qVxK5() throws javax.servlet.ServletException, java.io.IOException {
        PingSession3 pingSession3 = new PingSession3();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        PrintWriter out = mock(PrintWriter.class);
        StringBuffer outputBuffer = new StringBuffer();
        HttpSession session = mock(HttpSession.class);
        PingSession3Object[] sessionData = new PingSession3Object[0];
        when(request.getSession(true)).thenReturn(session);
        when(request.getParameter("num_objects")).thenReturn("0");
        when(session.getAttribute("sessiontest.sessionData")).thenReturn(sessionData);
        pingSession3.doGet(request, response);
        verify(out).println(outputBuffer.toString());
    }
}