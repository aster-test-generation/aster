/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
public class Aster_PingServlet2Session_Coverage_Test_Passing {
private HttpServletResponse mockHttpServletResponse;
PingServlet2Session servlet;
    private PingServlet2Session pingServlet2Session;
    private HttpServletRequest mockHttpServletRequest;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_epJh0() {
		PingServlet2Session pingServlet2Session = new PingServlet2Session();
		String result = pingServlet2Session.getServletInfo();
		assertEquals("web primitive, configured with trade runtime configs, tests Servlet to Session EJB path", result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost1_Utgu1() throws ServletException, IOException {
    }
@Test
	public void testgetServletInfo_epJh0_mMVt1() {
		String result = pingServlet2Session.getServletInfo();
		assertEquals("web primitive, configured with trade runtime configs, tests Servlet to Session EJB path", result);
	}
@Test
	public void testdoGet_epJh0_jNYZ2() throws Exception {
		MockHttpServletRequest mockRequest = new MockHttpServletRequest();
		mockRequest.setMethod("GET");
		mockRequest.setRequestURI("/PingServlet2Session");
		mockRequest.setContentType("text/html");
		MockHttpServletResponse mockResponse = new MockHttpServletResponse();
		pingServlet2Session.doGet(mockRequest, mockResponse);
		assertEquals(200, mockResponse.getStatus());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_RNxF0() throws javax.servlet.ServletException, java.io.IOException {
        pingServlet2Session = new PingServlet2Session();
        mockHttpServletRequest = mock(HttpServletRequest.class);
        mockHttpServletResponse = mock(HttpServletResponse.class);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void before_hllv0() throws javax.servlet.ServletException {
        servlet = new PingServlet2Session();
    }
}