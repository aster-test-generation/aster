/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
public class Aster_PingServlet2Session2Entity2JSP_Coverage_Test_Passing {
	PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
	HttpServletRequest mockRequest = null;
	HttpServletResponse mockResponse = null;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit1_dpIC0() throws javax.servlet.ServletException {
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    servlet.init(null);
  }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void test1_xWXJ0() throws java.io.IOException, javax.servlet.ServletException {
		PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
		HttpServletRequest req = new MockHttpServletRequest();
		HttpServletResponse res = new MockHttpServletResponse();
		servlet.doGet(req, res);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void test14_dEBB13() throws java.io.IOException, javax.servlet.ServletException {
		PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
		HttpServletRequest req = new MockHttpServletRequest();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testDoPost1_AumQ0_pcAz0() throws ServletException, IOException {
		mockRequest = mock(HttpServletRequest.class);
		when(mockRequest.getPathInfo()).thenReturn("/");
		mockResponse = mock(HttpServletResponse.class);
		servlet.doPost(mockRequest, mockResponse);
	}
}