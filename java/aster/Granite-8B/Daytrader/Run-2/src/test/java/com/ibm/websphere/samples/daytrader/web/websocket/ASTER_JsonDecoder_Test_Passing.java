/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JsonDecoder_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void destroy_cakP0()
    {
        JsonDecoder jsonDecoder = new JsonDecoder();
        jsonDecoder.destroy();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecodeInvalidJson_TSmH1() {
        JsonDecoder jsonDecoder = new JsonDecoder();
        String json = "invalid json";
        boolean result = jsonDecoder.willDecode(json);
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecodeNullJson_yfCi2() {
        JsonDecoder jsonDecoder = new JsonDecoder();
        String json = null;
        boolean result = jsonDecoder.willDecode(json);
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecodeEmptyJson_xCIz3() {
        JsonDecoder jsonDecoder = new JsonDecoder();
        String json = "";
        boolean result = jsonDecoder.willDecode(json);
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecode_FToI0_fid1() {
        JsonDecoder jsonDecoder = new JsonDecoder();
        String json = "{\"key\":\"value\"}";
        boolean result = jsonDecoder.willDecode(json);
        assertFalse(result);
    }
}