/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.beanval;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
public class Aster_PingServletBeanValSimple1_Coverage_Test_Passing {
PingServletBeanValSimple1 pingServletBeanValSimple1;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_yEqF0() {
		PingServletBeanValSimple1 pingServletBeanValSimple1 = new PingServletBeanValSimple1();
		assertEquals("Basic dynamic HTML generation through a servlet", pingServletBeanValSimple1.getServletInfo());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void tearDown_orzo1() throws Exception {
	}
@Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost1_gKjs0_OhjJ2() throws ServletException, IOException {
        PingServletBeanValSimple1 pingServletBeanValSimple1 = new PingServletBeanValSimple1();
        MockHttpServletRequest request = new MockHttpServletRequest();
        MockHttpServletResponse response = new MockHttpServletResponse();
        pingServletBeanValSimple1.doPost(request, response);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentType_MmMZ0() throws ServletException, IOException {
        pingServletBeanValSimple1 = new PingServletBeanValSimple1();
        HttpServletRequest request = null;
        HttpServletResponse response = null;
        pingServletBeanValSimple1.doGet(request, response);
        assertEquals("text/html", response.getContentType());
}

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOutputStream_roHL3() throws ServletException, IOException {
        pingServletBeanValSimple1 = new PingServletBeanValSimple1();
        HttpServletRequest request = null;
        HttpServletResponse response = null;
        pingServletBeanValSimple1.doGet(request, response);
        ServletOutputStream out = response.getOutputStream();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCatchException_AfTo6() throws ServletException, IOException {
        pingServletBeanValSimple1 = new PingServletBeanValSimple1();
        HttpServletRequest request = null;
        HttpServletResponse response = null;
        pingServletBeanValSimple1.doGet(request, response);
}
}