/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.ServletInputStream;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet30Async_Coverage_Test_Passing {
private ServletOutputStream mockOutputStream;
	PingServlet30Async servlet;
	private HttpServletResponse mockResponse;
	private ServletInputStream mockInputStream;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testInit1_OERj0() throws javax.servlet.ServletException {
		servlet = new PingServlet30Async();
		servlet.init(null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_JDmV0() {
		PingServlet30Async pingServlet30Async = new PingServlet30Async();
		assertEquals("Basic dynamic HTML generation through a servlet", pingServlet30Async.getServletInfo());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet1_MOFv0_KaxR0() throws ServletException, IOException {
	PingServlet30Async pingServlet30Async = new PingServlet30Async();
	HttpServletRequest request = mock(HttpServletRequest.class);
	HttpServletResponse response = mock(HttpServletResponse.class);
	pingServlet30Async.doGet(request, response);
}
}