/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.beans;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_MarketSummaryDataBean_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString1_krce0() {
        MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean();
        marketSummaryDataBean.setTSIA(new BigDecimal(0));
        marketSummaryDataBean.setOpenTSIA(new BigDecimal(0));
        marketSummaryDataBean.setVolume(0);
        marketSummaryDataBean.setTopGainers(null);
        marketSummaryDataBean.setTopLosers(null);
        String actual = marketSummaryDataBean.toString();
        String expected = "\n\tMarket Summary at: null\n\t\t        TSIA:0\n\t\t    openTSIA:0\n\t\t        gain:0.0\n\t\t      volume:0";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMarketSummaryDataBeanToJSON_NeaJ0() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean();
    marketSummaryDataBean.setTSIA(new BigDecimal(0));
    marketSummaryDataBean.setOpenTSIA(new BigDecimal(0));
    marketSummaryDataBean.setVolume(0);
    marketSummaryDataBean.setTopGainers(new ArrayList<QuoteDataBean>());
    marketSummaryDataBean.setTopLosers(new ArrayList<QuoteDataBean>());
    marketSummaryDataBean.setSummaryDate(new java.util.Date());
    marketSummaryDataBean.toJSON();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToHTML1_kUre0() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean();
    marketSummaryDataBean.setTopGainers(null);
    marketSummaryDataBean.setTopLosers(null);
    String ret = marketSummaryDataBean.toHTML();
    assertEquals("", ret);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToHTML2_MFoA1() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean();
    marketSummaryDataBean.setTopGainers(new HashSet<>());
    marketSummaryDataBean.setTopLosers(new HashSet<>());
    String ret = marketSummaryDataBean.toHTML();
    assertEquals("", ret);
}
}