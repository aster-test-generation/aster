/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;
import java.math.BigDecimal;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TradeConfig_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testgetScenarioAction2_ApzY1() {
    boolean newUser = false;
    char result = TradeConfig.getScenarioAction(newUser);
    assertEquals('a', result);
  }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam1_okDO0() {
        TradeConfig.setConfigParam(null, null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam2_AbQh1() {
        TradeConfig.setConfigParam("", "");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam3_qAch2() {
        TradeConfig.setConfigParam("orderProcessingMode", "0");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam4_xOIl3() {
        TradeConfig.setConfigParam("accessMode", "0");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam5_WGeQ4() {
        TradeConfig.setConfigParam("WebInterface", "0");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam6_tgpy5() {
        TradeConfig.setConfigParam("maxUsers", "0");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam7_UGLZ6() {
        TradeConfig.setConfigParam("maxQuotes", "0");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam8_xltk7() {
        TradeConfig.setConfigParam("primIterations", "0");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam9_WOFz8() {
        TradeConfig.setConfigParam("orderProcessingMode", "full");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam10_rJlW9() {
        TradeConfig.setConfigParam("accessMode", "vm");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam11_nTbE10() {
        TradeConfig.setConfigParam("WebInterface", "direct");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam12_IxHu11() {
        TradeConfig.setConfigParam("maxUsers", "100");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam13_dFkP12() {
        TradeConfig.setConfigParam("maxQuotes", "1000");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetConfigParam14_MgpE13() {
        TradeConfig.setConfigParam("primIterations", "10");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void getRandomPriceChangeFactor_percentGainBD_is_less_than_or_equal_to_0_0_UsDp0() {
    BigDecimal percentGainBD = TradeConfig.getRandomPriceChangeFactor();
    assertTrue(percentGainBD.compareTo(BigDecimal.ZERO) >= 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRndNewUserID_sKjz1_Erec0() {
    TradeConfig tradeConfig = new TradeConfig();
    try {
        tradeConfig.getRunTimeMode();
    } catch (Exception e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNextUser_kqHQ1_OKlg0() {
    when(TradeConfig.RND_USER).thenReturn(false);
    String userID = TradeConfig.getUserID();
    assertEquals("user2", userID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testgetScenarioAction2_ApzY1_fid2() {
    boolean newUser = false;
    char result = TradeConfig.getScenarioAction(newUser);
  }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testgetScenarioAction3_AhsJ2_fid2() {
    boolean newUser = true;
    char result = TradeConfig.getScenarioAction(newUser);
  }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void getRandomPriceChangeFactor_percentGainBD_is_1_0_auCX1_fid2() {
    BigDecimal percentGainBD = TradeConfig.getRandomPriceChangeFactor();
    assertFalse(percentGainBD.compareTo(BigDecimal.ONE) == 0);
}
}