/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
public class Aster_PingServlet2Servlet_Coverage_Test_Failing {
	PingServlet2Servlet servlet;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testDoPost1_OIuY0() throws ServletException, IOException {
		HttpServletRequest request = new MockHttpServletRequest();
		HttpServletResponse response = new MockHttpServletResponse();
		servlet = new PingServlet2Servlet();
		servlet.doPost(request, response);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet1_Xqei0() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 1);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet2_IIpM1() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 2);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet3_mteu2() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 3);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet4_gays3() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 4);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet5_YSJk4() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 5);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet6_DMWC5() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 6);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet7_ACUs6() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 7);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet8_QcLx7() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 8);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet9_PYFI8() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 9);
    fixture.doGet(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPingServlet2ServletDoGet10_odHH9() throws Exception {
    PingServlet2Servlet fixture = new PingServlet2Servlet();
    PingBean ab = new PingBean();
    ab.setMsg("Hit Count: " + 10);
    fixture.doGet(null, null);
}
}