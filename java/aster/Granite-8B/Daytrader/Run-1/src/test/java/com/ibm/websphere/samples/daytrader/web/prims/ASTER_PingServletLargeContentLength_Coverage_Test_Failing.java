/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletLargeContentLength_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit1_JqyC0() throws javax.servlet.ServletException {
        PingServletLargeContentLength pingServletLargeContentLength = new PingServletLargeContentLength();
        pingServletLargeContentLength.init(null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_JTtu0() {
		PingServletLargeContentLength obj = new PingServletLargeContentLength();
		assertEquals("Basic dynamic HTML generation through a servlet, with " + "contentLength set by contentLength parameter.", obj.getServletInfo());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void test_doGet_0_tVFo0() throws ServletException, IOException {
		PingServletLargeContentLength pingServletLargeContentLength = new PingServletLargeContentLength();
		pingServletLargeContentLength.doGet(null, null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost1_zcSP0() throws ServletException, IOException {
        PingServletLargeContentLength servlet = new PingServletLargeContentLength();
        HttpServletRequest request = mock(HttpServletRequest.class);
        when(request.getContentLengthLong()).thenReturn(100L);
        HttpServletResponse response = mock(HttpServletResponse.class);
        servlet.doPost(request, response);
        verify(response).setContentType("text/plain");
        verify(response).setCharacterEncoding("UTF-8");
        verify(response).getWriter();
        verify(response).getWriter().println("Length: 100");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost2_XbfC1() throws ServletException, IOException {
        PingServletLargeContentLength servlet = new PingServletLargeContentLength();
        HttpServletRequest request = mock(HttpServletRequest.class);
        when(request.getContentLengthLong()).thenReturn(200L);
        HttpServletResponse response = mock(HttpServletResponse.class);
        servlet.doPost(request, response);
        verify(response).setContentType("text/plain");
        verify(response).setCharacterEncoding("UTF-8");
        verify(response).getWriter();
        verify(response).getWriter().println("Length: 200");
    }
}