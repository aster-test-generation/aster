/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetEmail_YUcb0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setEmail("test@example.com");
        assertEquals("test@example.com", accountProfileDataBean.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_qlEj0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "johndoe@example.com", "1234567890123456");
        String expected = "\n\tAccount Profile Data for userID:12345\n\t\t   passwd:password\n\t\t   fullName:John Doe\n\t\t    address:123 Main St\n\t\t      email:johndoe@example.com\n\t\t creditCard:1234567890123456";
        assertEquals(expected, accountProfileDataBean.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAccount_IUzi0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        AccountDataBean accountDataBean = new AccountDataBean();
        accountProfileDataBean.setAccount(accountDataBean);
        assertNotNull(accountProfileDataBean.getAccount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCreditCard_PiUi0() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        String creditCard = accountProfileDataBean.getCreditCard();
        assertNotNull(creditCard);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmail_Sypm1() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        String email = accountProfileDataBean.getEmail();
        assertNotNull(email);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserID_XwPs2() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        String userID = accountProfileDataBean.getUserID();
        assertNotNull(userID);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddress_TwkN4() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        String address = accountProfileDataBean.getAddress();
        assertNotNull(address);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPassword_ozPk5() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        String password = accountProfileDataBean.getPassword();
        assertNotNull(password);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFullName_YHtF6() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        String fullName = accountProfileDataBean.getFullName();
        assertNotNull(fullName);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetUserID_TYEy0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("testUserID");
        assertEquals("testUserID", accountProfileDataBean.getUserID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmail_JVfb0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String actualEmail = accountProfileDataBean.getEmail();
        assertEquals("email", actualEmail);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserID_kcsT0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "johndoe@example.com", "1234567890123456");
        String userID = accountProfileDataBean.getUserID();
        assertEquals("12345", userID);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetFullName_LDOR0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setFullName("John Doe");
        assertEquals("John Doe", accountProfileDataBean.getFullName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetFullNameWithEmpty_CIhf2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setFullName("");
        assertEquals("", accountProfileDataBean.getFullName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetFullNameWithOneCharacter_NYvW4() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setFullName("J");
        assertEquals("J", accountProfileDataBean.getFullName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddress_hAmC0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String address = accountProfileDataBean.getAddress();
        assertEquals("address", address);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrint_OLpE0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        accountProfileDataBean.print();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPassword_tcZp0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String password = accountProfileDataBean.getPassword();
        assertEquals("password", password);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetCreditCard_evnC0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        accountProfileDataBean.setCreditCard("newCreditCard");
        assertEquals("newCreditCard", accountProfileDataBean.getCreditCard());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testToHTML_Ehea0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "johndoe@example.com", "1234567890123456");
        String expectedOutput = "<BR>Account Profile Data for userID: <B>12345</B>" + "<LI>   passwd:password</LI>" + "<LI>   fullName:John Doe</LI>" + "<LI>    address:123 Main St</LI>" + "<LI>      email:johndoe@example.com</LI>" + "<LI> creditCard:1234567890123456</LI>";
        assertEquals(expectedOutput, accountProfileDataBean.toHTML());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFullName_GcRR0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String expectedFullName = "fullName";
        String actualFullName = accountProfileDataBean.getFullName();
        assertEquals(expectedFullName, actualFullName);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAddress_QuBc0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setAddress("123 Main Street");
        assertEquals("123 Main Street", accountProfileDataBean.getAddress());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCreditCard_ucJi0_VPnC0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String creditCard = accountProfileDataBean.getCreditCard();
        assertEquals("creditCard", creditCard);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAccount_IUzi0_NBAx0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
        accountProfileDataBean.setAccount(accountDataBean);
        assertNotNull(accountProfileDataBean.getAccount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_mqXN3_fid1() {
        AccountProfileDataBean accountProfileDataBean1 = AccountProfileDataBean.getRandomInstance();
        AccountProfileDataBean accountProfileDataBean2 = AccountProfileDataBean.getRandomInstance();
        int hashCode1 = accountProfileDataBean1.hashCode();
        int hashCode2 = accountProfileDataBean2.hashCode();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_KcqO7_fid1() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        AccountDataBean account = accountProfileDataBean.getAccount();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_Xzwe0_fid1() {
        AccountProfileDataBean instance = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "johndoe@example.com", "1234567890123456");
        int expResult = 46792755;
        int result = instance.hashCode();
        assertEquals(expResult, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode2_QjCz1_fid1() {
        AccountProfileDataBean instance = new AccountProfileDataBean("67890", "password", "Jane Smith", "456 Elm St", "janesmith@example.com", "0987654321098765");
        int expResult = 51564270;
        int result = instance.hashCode();
        assertEquals(expResult, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetFullNameWithNull_OmDA1_fid1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setFullName(null);
        assertNull(accountProfileDataBean.getFullName());
    }
}