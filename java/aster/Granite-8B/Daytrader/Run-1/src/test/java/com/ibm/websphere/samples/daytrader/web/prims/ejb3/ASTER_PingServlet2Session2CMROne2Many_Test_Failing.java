/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2CMROne2Many_Test_Failing {
    private static int hitCount;
    private static String initTime;
    PingServlet2Session2CMROne2Many pingServlet2Session2CMROne2Many;
    HttpServlet httpServlet;
    HttpServletResponse httpServletResponse;
    private TradeServices tradeSLSBLocal;
    PingServlet2Session2CMROne2Many pingservlet2session2cmrone2many;
    HttpServletResponse httpservletresponse;
    HttpServlet httpservlet;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit() throws Exception {
        httpServlet = mock(HttpServlet.class);
        pingServlet2Session2CMROne2Many = new PingServlet2Session2CMROne2Many();
        pingServlet2Session2CMROne2Many.init(null);
        verify(httpServlet, times(1)).init(any());
        assertEquals(0, hitCount);
        assertNotNull(initTime);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetServletInfo_jjuU0() {
        PingServlet2Session2CMROne2Many pingServlet2Session2CMROne2Many = new PingServlet2Session2CMROne2Many();
        String servletInfo = pingServlet2Session2CMROne2Many.getServletInfo();
        assertEquals("web primitive, tests Servlet to Entity EJB path", servletInfo);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_1() throws Exception {
        httpServlet = mock(HttpServlet.class);
        pingServlet2Session2CMROne2Many = new PingServlet2Session2CMROne2Many();
        pingServlet2Session2CMROne2Many.init(null);
        verify(httpServlet, times(1)).init(any());
        assertEquals(0, hitCount);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_2() throws Exception {
        httpServlet = mock(HttpServlet.class);
        pingServlet2Session2CMROne2Many = new PingServlet2Session2CMROne2Many();
        pingServlet2Session2CMROne2Many.init(null);
        verify(httpServlet, times(1)).init(any());
        assertNotNull(initTime);
    }
}