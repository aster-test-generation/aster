/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.util.concurrent.TimeUnit;
import javax.faces.context.ExternalContext;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TradeConfigJSF_Test_Passing {
    private String result = "";
    private ExternalContext context;
    TradeConfigJSF tradeconfigjsf;
    HttpSession httpsession;
    ExternalContext externalcontext;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetWebInterfaceList_zfOH0_1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
        assertNotNull(webInterfaceList);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetWebInterfaceList_zfOH0_2() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
        assertTrue(webInterfaceList.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetResult_jibO0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String result = tradeConfigJSF.getResult();
        assertEquals("", "", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRuntimeModeList_lVlR0_1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] runtimeModeList = tradeConfigJSF.getRuntimeModeList();
        assertNotNull(runtimeModeList);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRuntimeModeList_lVlR0_2() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] runtimeModeList = tradeConfigJSF.getRuntimeModeList();
        assertTrue(runtimeModeList.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetMarketSummaryInterval_lygt20() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        int result = tradeConfigJSF.getMarketSummaryInterval();
        assertEquals(20, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetMarketSummaryIntervalWithPositiveValue_bjTT1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setMarketSummaryInterval(10);
        int result = tradeConfigJSF.getMarketSummaryInterval();
        assertEquals(10, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetMarketSummaryIntervalWithZeroValue_cZcR3() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setMarketSummaryInterval(0);
        int result = tradeConfigJSF.getMarketSummaryInterval();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetWebInterfaceList_BGHE0_1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] webInterfaceList = {"interface1", "interface2"};
        tradeConfigJSF.setWebInterfaceList(webInterfaceList);
        assertEquals("interface1", tradeConfigJSF.getWebInterfaceList()[0]);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetWebInterfaceList_BGHE0_2() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] webInterfaceList = {"interface1", "interface2"};
        tradeConfigJSF.setWebInterfaceList(webInterfaceList);
        assertEquals("interface2", tradeConfigJSF.getWebInterfaceList()[1]);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRuntimeMode_flYq0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String runtimeMode = tradeConfigJSF.getRuntimeMode();
        assertNotNull(runtimeMode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPrimIterations_GydB0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        int primIterations = 10;
        tradeConfigJSF.setPrimIterations(primIterations);
        assertEquals(primIterations, tradeConfigJSF.getPrimIterations());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPrimIterations_pUCK1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        int result = tradeConfigJSF.getPrimIterations();
        assertEquals(1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getMaxUsers_clQR0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setMaxUsers(10);
        assertEquals(10, tradeConfigJSF.getMaxUsers());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLongRun_fuOz0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setLongRun(true);
        assertTrue(tradeConfigJSF.isLongRun());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsPublishQuotePriceChange_Itbq0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        boolean publishQuotePriceChange = tradeConfigJSF.isPublishQuotePriceChange();
        assertTrue(publishQuotePriceChange);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrderProcessingModeList_oLmv0_2() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] orderProcessingModeList = tradeConfigJSF.getOrderProcessingModeList();
        assertEquals("Sync", orderProcessingModeList[0]);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxQuotes_uxvC10000() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        int maxQuotes = tradeConfigJSF.getMaxQuotes();
        Assertions.assertEquals(10000, maxQuotes);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetOrderProcessingModeList_ttWk0_1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] orderProcessingModeList = new String[10];
        for (int i = 0; i < orderProcessingModeList.length; i++) {
            orderProcessingModeList[i] = "mode" + i;
        }
        tradeConfigJSF.setOrderProcessingModeList(orderProcessingModeList);
        for (int i = 0; i < orderProcessingModeList.length; i++) {
        }
        assertNotNull(tradeConfigJSF.getOrderProcessingModeList());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetOrderProcessingModeList_ttWk0_2() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] orderProcessingModeList = new String[10];
        for (int i = 0; i < orderProcessingModeList.length; i++) {
            orderProcessingModeList[i] = "mode" + i;
        }
        tradeConfigJSF.setOrderProcessingModeList(orderProcessingModeList);
        for (int i = 0; i < orderProcessingModeList.length; i++) {
        }
        assertEquals(10, tradeConfigJSF.getOrderProcessingModeList().length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetWebInterface_KcYv0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setWebInterface("exampleWebInterface");
        assertEquals("exampleWebInterface", tradeConfigJSF.getWebInterface());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMarketSummaryInterval_TqJz0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setMarketSummaryInterval(1);
        assertEquals(1, tradeConfigJSF.getMarketSummaryInterval());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPublishQuotePriceChange_qiPw0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setPublishQuotePriceChange(true);
        assertEquals(true, tradeConfigJSF.isPublishQuotePriceChange());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetListQuotePriceChangeFrequency_jvzs0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setListQuotePriceChangeFrequency(1);
        assertEquals(1, tradeConfigJSF.getListQuotePriceChangeFrequency());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetRuntimeModeList_rJcU0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] runtimeModeList = {"mode1", "mode2"};
        tradeConfigJSF.setRuntimeModeList(runtimeModeList);
        assertEquals(runtimeModeList, tradeConfigJSF.getRuntimeModeList());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDisplayOrderAlerts_nOwl0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        boolean displayOrderAlerts = tradeConfigJSF.isDisplayOrderAlerts();
        assertTrue(displayOrderAlerts);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetRuntimeMode_VJru0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setRuntimeMode("runtimeMode");
        assertEquals("runtimeMode", tradeConfigJSF.getRuntimeMode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetmaxQuotes_ZqNe0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setmaxQuotes(100);
        assertEquals(100, tradeConfigJSF.getMaxQuotes());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPopulateDatabase_dYdU0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String result = tradeConfigJSF.populateDatabase();
        assertEquals("database", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetResultWithNull_ouUw1_vOsi0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.setResult(null);
        assertEquals(null, tradeConfigJSF.getResult());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetWebInterfaceList_zfOH0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
        assertNotNull(webInterfaceList);
        assertTrue(webInterfaceList.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRuntimeModeList_lVlR0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] runtimeModeList = tradeConfigJSF.getRuntimeModeList();
        assertNotNull(runtimeModeList);
        assertTrue(runtimeModeList.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetWebInterfaceList_BGHE0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] webInterfaceList = {"interface1", "interface2"};
        tradeConfigJSF.setWebInterfaceList(webInterfaceList);
        assertEquals("interface1", tradeConfigJSF.getWebInterfaceList()[0]);
        assertEquals("interface2", tradeConfigJSF.getWebInterfaceList()[1]);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetOrderProcessingModeList_ttWk0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String[] orderProcessingModeList = new String[10];
        for (int i = 0; i < orderProcessingModeList.length; i++) {
            orderProcessingModeList[i] = "mode" + i;
        }
        tradeConfigJSF.setOrderProcessingModeList(orderProcessingModeList);
        assertNotNull(tradeConfigJSF.getOrderProcessingModeList());
        assertEquals(10, tradeConfigJSF.getOrderProcessingModeList().length);
        for (int i = 0; i < orderProcessingModeList.length; i++) {
            assertTrue(tradeConfigJSF.getOrderProcessingModeList()[i].startsWith("mode"));
        }
    }
}