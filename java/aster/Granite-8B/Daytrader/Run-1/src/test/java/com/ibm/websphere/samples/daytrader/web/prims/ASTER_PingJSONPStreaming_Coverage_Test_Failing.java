/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingJSONPStreaming_Coverage_Test_Failing {
	{
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testDoGet_Gqfo29() throws javax.servlet.ServletException, java.io.IOException {
		PingJSONPStreaming pingJSONPStreaming = new PingJSONPStreaming();
		HttpServletRequest request = null;
		HttpServletResponse response = null;
		try {
			pingJSONPStreaming.doGet(request, response);
		} catch (ServletException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPost_AIDy0() throws ServletException, IOException {
	PingJSONPStreaming pingJSONPStreaming = new PingJSONPStreaming();
	pingJSONPStreaming.doPost(null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testgetServletInfo_iUFh0_TIVo0()
{
PingJSONPStreaming pingJSONPStreaming = new PingJSONPStreaming();
String expected = "Basic JSON generation and parsing in a servlet";
String actual = pingJSONPStreaming.getServletInfo();
assertEquals(expected, actual);
}
}