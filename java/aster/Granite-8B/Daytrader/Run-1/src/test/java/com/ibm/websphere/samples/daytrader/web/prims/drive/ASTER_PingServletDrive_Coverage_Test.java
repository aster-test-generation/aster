/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.drive;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletDrive_Coverage_Test {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testInit1_hFpo0() throws javax.servlet.ServletException {
		PingServletDrive pingServletDrive = new PingServletDrive();
		pingServletDrive.init(null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_bKYi0()
	{
		PingServletDrive obj = new PingServletDrive();
		assertEquals("Basic dynamic HTML generation through a servlet",obj.getServletInfo());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetContentType_SMuC0() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doGet(request, response);
    verify(response, times(1)).setContentType("text/html");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCatchException_PaTV4() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    doThrow(new Exception()).when(response).sendError(500, "general exception caught");
    servlet.doGet(request, response);
    verify(response, times(1)).sendError(500, "general exception caught");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCatchIOException_vXXk5() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    doThrow(new IOException()).when(response).getOutputStream();
    servlet.doGet(request, response);
    verify(response, times(1)).getOutputStream();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCatchServletException_acCo6() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    doThrow(new ServletException()).when(response).getOutputStream();
    servlet.doGet(request, response);
    verify(response, times(1)).getOutputStream();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCatchRuntimeException_mwSI7() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    doThrow(new RuntimeException()).when(response).getOutputStream();
    servlet.doGet(request, response);
    verify(response, times(1)).getOutputStream();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCatchThrowable_Mcjh8() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    doThrow(new Throwable()).when(response).getOutputStream();
    servlet.doGet(request, response);
    verify(response, times(1)).getOutputStream();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCatchError_JYwm9() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    doThrow(new Error()).when(response).getOutputStream();
    servlet.doGet(request, response);
    verify(response, times(1)).getOutputStream();
}
}