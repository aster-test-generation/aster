/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
public class Aster_PingReentryServlet_Coverage_Test_Passing {
private HttpServletResponse mockResponse;
	PingReentryServlet servlet = new PingReentryServlet();
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testInit1_iREu0() throws javax.servlet.ServletException {
		ServletConfig config = null;
		servlet.init(config);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetServletInfo_BKPc0()
	{
		PingReentryServlet obj = new PingReentryServlet();
		assertEquals("Basic dynamic HTML generation through a servlet",obj.getServletInfo());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_jRzc0_JYWi0() throws javax.servlet.ServletException, java.io.IOException {
        PingReentryServlet servlet = new PingReentryServlet();
        MockHttpServletRequest req = new MockHttpServletRequest();
        HttpServletResponse res = new MockHttpServletResponse();
        req.setParameter("numReentries", "0");
        res.setContentType("text/html");
        ServletOutputStream out = res.getOutputStream();
        int numReentriesLeft = 0;
        int sleepTime = 0;
        try {
            Thread.sleep(sleepTime);
            out.println(numReentriesLeft);
        } catch (Exception e) {
            res.sendError(500, e.toString());
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test2_laNk1_Wnjy0() throws javax.servlet.ServletException, java.io.IOException {
        PingReentryServlet servlet = new PingReentryServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        req.getParameter("numReentries");
        res.setContentType("text/html");
        ServletOutputStream out = res.getOutputStream();
        int numReentriesLeft = 0;
        int sleepTime = 0;
        try {
            String hostname = req.getServerName();
            int port = req.getServerPort();
            req.getContextPath();
            int saveNumReentriesLeft = numReentriesLeft;
            int nextNumReentriesLeft = numReentriesLeft - 1;
            String url = "http://" + hostname + ":" + port + "/" + req.getRequestURI();
            URL obj = new URL(url);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");
            con.setRequestProperty("User-Agent", "Mozilla/5.0");
            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            StringBuffer response = new StringBuffer();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();
            Thread.sleep(sleepTime);
            out.println(saveNumReentriesLeft + response.toString());
        } catch (Exception e) {
            res.sendError(500, e.toString());
        }
}
}