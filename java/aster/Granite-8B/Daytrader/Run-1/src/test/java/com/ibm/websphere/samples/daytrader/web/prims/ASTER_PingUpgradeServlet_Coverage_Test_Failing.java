/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpUpgradeHandler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingUpgradeServlet_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testDoGet_fUFp0() throws ServletException, IOException {
		PingUpgradeServlet servlet = new PingUpgradeServlet();
		HttpServletRequest req = mock(HttpServletRequest.class);
		HttpServletResponse res = mock(HttpServletResponse.class);
		servlet.doGet(req, res);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPostWithoutEchoUpgrade_ADvs1() throws ServletException, IOException {
        PingUpgradeServlet servlet = new PingUpgradeServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        when(req.getHeader("Upgrade")).thenReturn("not-echo");
        servlet.doPost(req, res);
        verify(res, times(1)).getWriter().println("No upgrade: not-echo");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPostWithEchoUpgrade_KKbE0_ShKK0() throws ServletException, IOException {
        PingUpgradeServlet servlet = new PingUpgradeServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        when(req.getHeader("Upgrade")).thenReturn("echo");
        servlet.doPost(req, res);
        verify(res, times(1)).setStatus(101);
        verify(res, times(1)).setHeader("Upgrade", "echo");
        verify(res, times(1)).setHeader("Connection", "Upgrade");
        verify(req, times(1)).upgrade(HttpUpgradeHandler.class);
    }
}