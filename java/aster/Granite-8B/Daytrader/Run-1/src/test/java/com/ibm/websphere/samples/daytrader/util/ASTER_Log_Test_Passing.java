/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.util.ArrayList;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Log_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintObject_JDyg0() {
        Object o = new Object();
        Log.printObject(o);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStat_vhGM0() {
        Log log = new Log();
        log.stat("Test message");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintCollectionWithEmptyCollection_Vndh0() {
        Collection<String> emptyCollection = new ArrayList<>();
        Log.printCollection(emptyCollection);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintCollectionWithNonEmptyCollection_vnkP1() {
        Collection<String> nonEmptyCollection = new ArrayList<>();
        nonEmptyCollection.add("element1");
        nonEmptyCollection.add("element2");
        Log.printCollection(nonEmptyCollection);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testError_aCSv0() {
        Throwable e = new Throwable();
        String message = "Error message";
        Log.error(e, message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTrace_KIkL0() {
        Log log = new Log();
        log.trace("Message", "parm1", "parm2", "parm3", "parm4", "parm5");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoTrace_Suia0() {
        Log log = new Log();
        boolean result = log.doTrace();
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTrace_tVFn0() {
        Log log = new Log();
        log.trace("Message", "parm1", "parm2", "parm3", "parm4");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWarning_RhhK0() {
        Log log = new Log();
        log.warning("This is a warning message");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWarningWithNullMessage_RVYf1() {
        Log log = new Log();
        log.warning(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWarningWithEmptyMessage_WLsA2() {
        Log log = new Log();
        log.warning("");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTraceInterceptor_MPOh0() {
        String message = "This is a test message";
        Object parm1 = new Object();
        Log.traceInterceptor(message, parm1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTrace_Apst0() {
        Log log = new Log();
        log.trace("Message", "parm1", "parm2", "parm3");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrint_brHl0() {
        Log log = new Log();
        String message = "Hello, World!";
        log.print(message);
        assertEquals("Hello, World!", message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testError_YwtF0() {
        String msg1 = "Error message 1";
        String msg2 = "Error message 2";
        Throwable e = new Exception("Error occurred");
        Log.error(msg1, msg2, e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDebug_gSwe0() {
        Log log = new Log();
        String message = "This is a debug message";
        log.debug(message);
        assertEquals("This is a debug message", message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLog_GYhB0() {
        Log log = new Log();
        String message = "This is a test message";
        log.log(message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTrace_jsVB0() {
        Log log = new Log();
        log.trace("Message", "parm1", "parm2", "parm3", "parm4", "parm5", "parm6", "parm7");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTrace_fELj0() {
        Log log = new Log();
        log.trace("Message", "Param1", "Param2", "Param3", "Param4", "Param5", "Param6");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testError_OsRB0() {
        Throwable e = new Throwable();
        String msg1 = "This is the first message";
        String msg2 = "This is the second message";
        Log.error(e, msg1, msg2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTrace_GxdN0() {
        Log log = new Log();
        log.trace("Test message");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDebug_Ufza0() {
        boolean result = Log.doDebug();
        assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testError_xhRF0() {
        Throwable e = new Throwable();
        String msg1 = "Error message 1";
        String msg2 = "Error message 2";
        String msg3 = "Error message 3";
        Log.error(e, msg1, msg2, msg3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testError_oUAL0() {
        String msg1 = "This is the first message";
        String msg2 = "This is the second message";
        String msg3 = "This is the third message";
        Throwable e = new Throwable();
        Log.error(msg1, msg2, msg3, e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTrace_ZqmG0() {
        Log log = new Log();
        log.trace("Message", "Parameter1", "Parameter2");
    }
}