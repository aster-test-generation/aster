/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet2MDBTopic_Coverage_Test_Passing {
private PingServlet2MDBTopic fixture;
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testgetServletInfo_REDX0() {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    String expected = "web primitive, configured with trade runtime configs, tests Servlet to Session EJB path";
    String actual = servlet.getServletInfo();
    assertEquals(expected, actual);
  }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void tearDown_acnc3() throws javax.servlet.ServletException, java.io.IOException {
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit3_hRAa2_Mwds0() throws javax.servlet.ServletException {
    PingServlet2MDBTopic pingServlet2MDBTopic = new PingServlet2MDBTopic();
    pingServlet2MDBTopic.init(null);
    assertTrue(true);
  }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet2_Nift1_WEyG1() throws javax.servlet.ServletException, IOException {
    PingServlet2MDBTopic pingServlet2MDBTopic = new PingServlet2MDBTopic();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    when(request.getContentType()).thenReturn("text/html");
    when(request.getMethod()).thenReturn("GET");
    pingServlet2MDBTopic.doGet(request, response);
    verify(response, times(1)).setContentType("text/html");
    verify(response, times(1)).getWriter();
    verify(response, times(1)).getWriter().println(anyString());
  }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_qdtl0() {
    servlet = new PingServlet2MDBTopic();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_uqFO0() throws javax.servlet.ServletException, java.io.IOException {
        fixture = new PingServlet2MDBTopic();
    }
}