/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import com.ibm.websphere.samples.daytrader.entities.OrderDataBean;
import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.Instance;
import javax.faces.component.html.HtmlDataTable;
import javax.faces.context.ExternalContext;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_QuoteJSF_Test_Passing {
    @Mock
    private HttpSession httpSessionMock;
    private TradeServices tradeAction;
    private ExternalContext context;
    private HtmlDataTable dataTable;
    private Integer quantity = 100;
    @Mock
    private QuoteJSF quoteJSF;
    @Mock
    private HttpSession httpSession;
    @Mock
    private ExternalContext externalContext;
    @Mock
    private QuoteData quoteData;
    @Mock
    private OrderDataBean orderDataBean;
    @Mock
    private OrderData orderData;
    @Mock
    private TradeServices tradeServices;
    private String symbols = null;
    @Mock
    private TradeServices tradeActionMock;
    @Mock
    private ExternalContext externalContextMock;
    @Mock
    private Instance<TradeServices> services;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setQuantity(Integer quantity)
    {
        this.quantity = quantity;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setup_eWCX1() {
        MockitoAnnotations.openMocks(this);
        when(externalContext.getSession(anyBoolean())).thenReturn(httpSession);
        when(httpSession.getAttribute(anyString())).thenReturn(tradeServices);
    }
}