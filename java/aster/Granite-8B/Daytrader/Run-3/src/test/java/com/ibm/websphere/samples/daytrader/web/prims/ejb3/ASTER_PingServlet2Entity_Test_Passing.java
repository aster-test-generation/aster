/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import java.util.concurrent.TimeUnit;
import javax.persistence.EntityManager;
import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Entity_Test_Passing {
    private static int hitCount;
    private static String initTime;
    PingServlet2Entity pingservlet2entity;
    HttpServlet httpservlet;
    @Mock
    HttpServlet httpServlet;
    @Mock
    HttpServletResponse httpServletResponse;
    PingServlet2Entity pingServlet2Entity;
    private EntityManager em;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testinit_1() throws Exception {
        httpservlet = mock(HttpServlet.class);
        pingservlet2entity = new PingServlet2Entity();
        // Mock the init method of HttpServlet
        doNothing().when(httpservlet).init(any(ServletConfig.class));
        // Call the init method of PingServlet2Entity
        pingservlet2entity.init(httpservlet);
        // Assert that hitCount and initTime are initialized correctly
        assertEquals(0, hitCount);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testinit_2() throws Exception {
        httpservlet = mock(HttpServlet.class);
        pingservlet2entity = new PingServlet2Entity();
        // Mock the init method of HttpServlet
        doNothing().when(httpservlet).init(any(ServletConfig.class));
        // Call the init method of PingServlet2Entity
        pingservlet2entity.init(httpservlet);
        // Assert that hitCount and initTime are initialized correctly
        assertNotNull(initTime);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetServletInfo_xzXx0() {
        PingServlet2Entity pingServlet2Entity = new PingServlet2Entity();
        String servletInfo = pingServlet2Entity.getServletInfo();
        assertEquals("web primitive, tests Servlet to Entity EJB path", servletInfo);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testinit() throws Exception {
        httpservlet = mock(HttpServlet.class);
        pingservlet2entity = new PingServlet2Entity();
        // Mock the init method of HttpServlet
        doNothing().when(httpservlet).init(any(ServletConfig.class));
        // Call the init method of PingServlet2Entity
        pingservlet2entity.init(httpservlet);
        // Assert that hitCount and initTime are initialized correctly
        assertEquals(0, hitCount);
        assertNotNull(initTime);
    }
}