/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.beanval;

import java.io.IOException;
import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServletBeanValSimple2_Test_Passing {
    private static LocalDateTime initTime;
    PingServletBeanValSimple2 pingServletBeanValSimple2;
    HttpServlet httpServlet;
    PingServletBeanValSimple2 pingservletbeanvalsimple2;
    HttpServlet httpservlet;
    HttpServletResponse httpservletresponse;
    ServletOutputStream servletoutputstream;
    private static int hitCount = 0;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit() throws Exception {
        httpServlet = mock(HttpServlet.class);
        pingServletBeanValSimple2 = new PingServletBeanValSimple2();
        // Mock the init method of HttpServlet
        doNothing().when(httpServlet).init(any());
        // Call the init method of PingServletBeanValSimple2
        pingServletBeanValSimple2.init(httpServlet);
        // Verify that the initTime variable is set to the current time
        verify(httpServlet).init(any());
        assertEquals(initTime, LocalDateTime.now());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_nIuN0() throws ServletException, IOException {
        PingServletBeanValSimple2 pingServletBeanValSimple2 = new PingServletBeanValSimple2();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        pingServletBeanValSimple2.doPost(req, res);
        verify(req, times(1)).getParameter("name");
        verify(res, times(1)).setContentType("text/html");
        verify(res, times(1)).getWriter();
        verify(res, times(1)).getWriter().println("Hello World");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetServletInfo_GQcL0() throws Exception {
        PingServletBeanValSimple2 pingServletBeanValSimple2 = new PingServletBeanValSimple2();
        String servletInfo = pingServletBeanValSimple2.getServletInfo();
        assertEquals("Basic dynamic HTML generation through a servlet", servletInfo);
    }
}