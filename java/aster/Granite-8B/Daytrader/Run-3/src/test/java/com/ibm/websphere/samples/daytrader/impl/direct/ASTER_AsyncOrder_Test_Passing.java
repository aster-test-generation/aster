/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AsyncOrder_Test_Passing {
    private AsyncOrder asyncOrder;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProperties_gNmM0() {
        AsyncOrder asyncOrder = new AsyncOrder();
        asyncOrder.setProperties(123, true);
        assertEquals(123, asyncOrder.orderID);
        assertTrue(asyncOrder.twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertiesWithNullOrderID_cQFg1() {
        AsyncOrder asyncOrder = new AsyncOrder();
        asyncOrder.setProperties(null, true);
        assertNull(asyncOrder.orderID);
        assertTrue(asyncOrder.twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertiesWithFalseTwoPhase_YPwo2() {
        AsyncOrder asyncOrder = new AsyncOrder();
        asyncOrder.setProperties(123, false);
        assertEquals(123, asyncOrder.orderID);
        assertFalse(asyncOrder.twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProperties_gNmM0_1() {
        AsyncOrder asyncOrder = new AsyncOrder();
        asyncOrder.setProperties(123, true);
        assertEquals(123, asyncOrder.orderID);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProperties_gNmM0_2() {
        AsyncOrder asyncOrder = new AsyncOrder();
        asyncOrder.setProperties(123, true);
        assertTrue(asyncOrder.twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertiesWithNullOrderID_cQFg1_1() {
        AsyncOrder asyncOrder = new AsyncOrder();
        asyncOrder.setProperties(null, true);
        assertNull(asyncOrder.orderID);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertiesWithNullOrderID_cQFg1_2() {
        AsyncOrder asyncOrder = new AsyncOrder();
        asyncOrder.setProperties(null, true);
        assertTrue(asyncOrder.twoPhase);
    }
}