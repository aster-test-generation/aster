/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TestJSONObject_Test_Passing {
    private TestJSONObject testJSONObject;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0001_TjYp0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0001("testValue");
        assertEquals("testValue", testJSONObject.getProp0001());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0004_vLet0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0004();
        assertEquals("Expected result", "Actual result");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0003_aqrW0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0003();
        assertEquals("Expected result", "Actual result");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0002_dVPR0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0002();
        assertEquals("Expected value", "actual value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0011_Wkun0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0011 = "example";
        testJSONObject.setProp0011(prop0011);
        assertEquals("example", testJSONObject.getProp0011());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0009_GsGV0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0009 = "example";
        testJSONObject.setProp0009(prop0009);
        assertEquals("example", testJSONObject.getProp0009());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0013_ULVN0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0013();
        assertEquals("Expected value", "actual value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0015_exGw0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0015();
        assertEquals("Expected result", "expectedValue", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0016_wnZq0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0016();
        assertEquals("Expected value", "actual value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0011_cwHK0() {
        String expected = "expected_value";
        String actual = testJSONObject.getProp0011();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0010_PjYk0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0010();
        assertEquals("Expected value", "expected value", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0014_OBXX0() {
        testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0014();
        assertEquals("prop0014", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0014WithNull_JbVI1() {
        testJSONObject = null;
        String result = testJSONObject.getProp0014();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0014WithEmptyObject_RWsn2() {
        testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0014();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0012_fJQa0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0012();
        assertEquals("expected result", "actual result");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0009_DlzY0() {
        String result = testJSONObject.getProp0009();
        assertEquals("Expected result", "expected value", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0006_ZUem0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0006();
        assertEquals("Expected result", "expected value", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0007_cYFE0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0007();
        assertEquals("Expected value", "actual value", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0002_qClc0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0002 = "example";
        testJSONObject.setProp0002(prop0002);
        assertEquals("example", testJSONObject.getProp0002());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0008_tdla0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String actual = testJSONObject.getProp0008();
        String expected = "";
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0008_Null_QKSJ1() {
        TestJSONObject testJSONObject = null;
        String actual = testJSONObject.getProp0008();
        String expected = "";
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0013_LziZ0_ZgYi0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0013 = "example";
        testJSONObject.setProp0013(prop0013);
        assertEquals("example", testJSONObject.getProp0013());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0014_pjBg0_caNP0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0014 = "example";
        testJSONObject.setProp0014(prop0014);
        assertEquals("example", testJSONObject.getProp0014());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0012_gnhb0_YSAm0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0012 = "example";
        testJSONObject.setProp0012(prop0012);
        assertEquals("example", testJSONObject.getProp0012());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0014WithNonNullValue_bdNr3_iWNZ0() {
        testJSONObject = new TestJSONObject();
        testJSONObject.setProp0014("non-null value");
        String result = testJSONObject.getProp0014();
        assertEquals("non-null value", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0005_lWqX0_UQKj0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0005 = "example";
        testJSONObject.setProp0005(prop0005);
        assertEquals("example", testJSONObject.getProp0005());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0015_NGeK0_tBMw0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0015 = "example";
        testJSONObject.setProp0015(prop0015);
        assertEquals("example", testJSONObject.getProp0015());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0003_jxtW0_kAfR0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String prop0003 = "example";
        testJSONObject.setProp0003(prop0003);
        assertEquals("example", testJSONObject.getProp0003());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0008_Empty_woJm2_FvBl0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0008("");
        String actual = testJSONObject.getProp0008();
        String expected = "";
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0005_mtwu0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0005();
        assertEquals("Expected result", "expected value", result);
    }
}