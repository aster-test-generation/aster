/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_SXEZ0_1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("123");
        accountProfileDataBean.setPassword("password");
        accountProfileDataBean.setFullName("John Doe");
        accountProfileDataBean.setAddress("123 Main St");
        accountProfileDataBean.setEmail("john.doe@example.com");
        accountProfileDataBean.setCreditCard("1234567890123456");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertNotNull(accountDataBean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_SXEZ0_2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("123");
        accountProfileDataBean.setPassword("password");
        accountProfileDataBean.setFullName("John Doe");
        accountProfileDataBean.setAddress("123 Main St");
        accountProfileDataBean.setEmail("john.doe@example.com");
        accountProfileDataBean.setCreditCard("1234567890123456");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertEquals(accountProfileDataBean.getUserID(), accountDataBean.getProfileID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_SXEZ0_3() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("123");
        accountProfileDataBean.setPassword("password");
        accountProfileDataBean.setFullName("John Doe");
        accountProfileDataBean.setAddress("123 Main St");
        accountProfileDataBean.setEmail("john.doe@example.com");
        accountProfileDataBean.setCreditCard("1234567890123456");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertEquals(accountProfileDataBean.getFullName(), accountDataBean.getProfile().getFullName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_SXEZ0_4() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("123");
        accountProfileDataBean.setPassword("password");
        accountProfileDataBean.setFullName("John Doe");
        accountProfileDataBean.setAddress("123 Main St");
        accountProfileDataBean.setEmail("john.doe@example.com");
        accountProfileDataBean.setCreditCard("1234567890123456");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertEquals(accountProfileDataBean.getAddress(), accountDataBean.getProfile().getAddress());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_SXEZ0_5() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("123");
        accountProfileDataBean.setPassword("password");
        accountProfileDataBean.setFullName("John Doe");
        accountProfileDataBean.setAddress("123 Main St");
        accountProfileDataBean.setEmail("john.doe@example.com");
        accountProfileDataBean.setCreditCard("1234567890123456");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertEquals(accountProfileDataBean.getEmail(), accountDataBean.getProfile().getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_SXEZ0_6() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("123");
        accountProfileDataBean.setPassword("password");
        accountProfileDataBean.setFullName("John Doe");
        accountProfileDataBean.setAddress("123 Main St");
        accountProfileDataBean.setEmail("john.doe@example.com");
        accountProfileDataBean.setCreditCard("1234567890123456");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertEquals(accountProfileDataBean.getCreditCard(), accountDataBean.getProfile().getCreditCard());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_zcqV0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "johndoe@example.com", "1234-5678-9012-3456");
        String expected = "\n\tAccount Profile Data for userID:12345 \n\t\t   passwd:password \n\t\t   fullName:John Doe \n\t\t    address:123 Main St \n\t\t      email:johndoe@example.com \n\t\t creditCard:1234-5678-9012-3456";
        assertEquals(expected, accountProfileDataBean.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_ABuC0_fid1() {
        AccountProfileDataBean instance = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "johndoe@example.com", "1234567890123456");
        int expResult = 12345;
        int result = instance.hashCode();
        assertEquals(expResult, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode2_NBZn1_fid1() {
        AccountProfileDataBean instance = new AccountProfileDataBean("67890", "password", "Jane Smith", "456 Elm St", "janesmith@example.com", "0987654321098765");
        int expResult = 67890;
        int result = instance.hashCode();
        assertEquals(expResult, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_viap3_fid1() {
        AccountProfileDataBean accountProfileDataBean1 = AccountProfileDataBean.getRandomInstance();
        AccountProfileDataBean accountProfileDataBean2 = AccountProfileDataBean.getRandomInstance();
        int hashCode1 = accountProfileDataBean1.hashCode();
        int hashCode2 = accountProfileDataBean2.hashCode();
        Assertions.assertEquals(hashCode1, hashCode2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_xump7_fid1() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        AccountDataBean account = accountProfileDataBean.getAccount();
        Assertions.assertNotNull(account);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_SXEZ0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("123");
        accountProfileDataBean.setPassword("password");
        accountProfileDataBean.setFullName("John Doe");
        accountProfileDataBean.setAddress("123 Main St");
        accountProfileDataBean.setEmail("john.doe@example.com");
        accountProfileDataBean.setCreditCard("1234567890123456");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertNotNull(accountDataBean);
        assertEquals(accountProfileDataBean.getUserID(), accountDataBean.getProfileID());
        assertEquals(accountProfileDataBean.getFullName(), accountDataBean.getProfile().getFullName());
        assertEquals(accountProfileDataBean.getAddress(), accountDataBean.getProfile().getAddress());
        assertEquals(accountProfileDataBean.getEmail(), accountDataBean.getProfile().getEmail());
        assertEquals(accountProfileDataBean.getCreditCard(), accountDataBean.getProfile().getCreditCard());
    }
}