/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean;
import com.ibm.websphere.samples.daytrader.entities.*;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.math.BigDecimal;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TradeDirect_Coverage_Test_Failing {
    private TradeDirect tradeDirect;
    private static final String SYMBOL = "Symbol";
    private static final String COMPANY_NAME = "Company Name";
    private static final BigDecimal PRICE = BigDecimal.valueOf(100.0);

    public void testgetAccountProfileData1_aUjP0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("1");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData2_KWDU1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("2");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData3_Hvju2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("3");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData4_kzgU3() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("4");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData5_PbuF4() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("5");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData6_XyFJ5() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("6");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData7_YpvK6() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("7");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData8_EqSe7() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("8");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData9_ZVFa8() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("9");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData10_xzvQ9() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("10");
        assertNotNull(accountProfileData);
    }

    public void testgetAccountProfileData11_SIhe10() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData("11");
        assertNotNull(accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPingTwoPhase_XTuv0() {
        TradeDirect tradeDirect = new TradeDirect();
        QuoteDataBean quoteDataBean = QuoteDataBean.getRandomInstance();
        String symbol = quoteDataBean.getSymbol();
        QuoteDataBean actual = tradeDirect.pingTwoPhase(symbol);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderAsync_1_wxNd0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.completeOrderAsync(1, true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderAsync_2_wzkp1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.completeOrderAsync(2, true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderAsync_3_JzfL2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.completeOrderAsync(3, true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateQuotePriceVolume_VxhJ0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        BigDecimal changeFactor = new BigDecimal(0.0);
        double sharesTraded = 0.0;
        QuoteDataBean result = tradeDirect.updateQuotePriceVolume("symbol", changeFactor, sharesTraded);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogin1_YQcq0() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            AccountDataBean accountData = tradeDirect.login("user1", "password1");
        } catch (Exception e) {
            fail("Login failed for user1");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogin2_bstW1() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            AccountDataBean accountData = tradeDirect.login("user2", "password2");
        } catch (Exception e) {
            fail("Login failed for user2");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogin32_nDgC2() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            AccountDataBean accountData = tradeDirect.login("user32", "password32");
        } catch (Exception e) {
            fail("Login failed for user32");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateOrder1_lGUN0() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountDataBean accountData = new AccountDataBean();
        QuoteDataBean quoteData = new QuoteDataBean();
        HoldingDataBean holdingData = new HoldingDataBean();
        String orderType = "BUY";
        double quantity = 100.0;
        OrderDataBean orderData = tradeDirect.createOrder(accountData, quoteData, holdingData, orderType, quantity);
        assertNotNull(orderData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateOrder2_WhCe1() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountDataBean accountData = new AccountDataBean();
        QuoteDataBean quoteData = new QuoteDataBean();
        HoldingDataBean holdingData = new HoldingDataBean();
        String orderType = "BUY";
        double quantity = 100.0;
        OrderDataBean orderData = tradeDirect.createOrder(accountData, quoteData, holdingData, orderType, quantity);
        assertTrue(orderData.getQuantity() == quantity);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings1_AwDQ0_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user1");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings1_AwDQ0_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user1");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings2_JdqM1_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user2");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings2_JdqM1_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user2");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings3_wCsd2_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user3");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings3_wCsd2_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user3");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings4_HGnr3_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user4");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings4_HGnr3_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user4");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings5_cHqF4_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user5");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings5_cHqF4_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user5");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings6_eRAP5_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user6");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings6_eRAP5_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user6");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings7_lXbf6_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user7");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings7_lXbf6_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user7");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings8_AhBR7_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user8");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings8_AhBR7_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user8");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings9_fQIZ8_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user9");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings9_fQIZ8_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user9");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings10_UKqk9_1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user10");
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings10_UKqk9_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user10");
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetMarketSummary1_GzYf0_2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        MarketSummaryDataBean marketSummaryDataBean = tradeDirect.getMarketSummary();
        marketSummaryDataBean = tradeDirect.getMarketSummary();
        assertEquals(0, TradeConfig.getMarketSummaryInterval());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetMarketSummary2_atPj1_2_fid1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        MarketSummaryDataBean marketSummaryDataBean = tradeDirect.getMarketSummary();
        marketSummaryDataBean = tradeDirect.getMarketSummary();
        assertTrue(TradeConfig.getMarketSummaryInterval() < 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetMarketSummary1_GzYf0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        MarketSummaryDataBean marketSummaryDataBean = tradeDirect.getMarketSummary();
        assertNotNull(marketSummaryDataBean);
        assertEquals(0, TradeConfig.getMarketSummaryInterval());
        marketSummaryDataBean = tradeDirect.getMarketSummary();
        assertNotNull(marketSummaryDataBean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetMarketSummary2_atPj1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        MarketSummaryDataBean marketSummaryDataBean = tradeDirect.getMarketSummary();
        assertNotNull(marketSummaryDataBean);
        assertTrue(TradeConfig.getMarketSummaryInterval() < 0);
        marketSummaryDataBean = tradeDirect.getMarketSummary();
        assertNotNull(marketSummaryDataBean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote_bCub2() throws java.lang.Exception {
        QuoteDataBean quoteData = tradeDirect.createQuote(SYMBOL, COMPANY_NAME, PRICE);
        assertNotNull(quoteData);
        assertEquals(SYMBOL, quoteData.getSymbol());
        assertEquals(COMPANY_NAME, quoteData.getCompanyName());
        assertTrue(quoteData.getPrice().compareTo(PRICE) == 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteWithNullSymbol_YgCw3() throws java.lang.Exception {
        try {
            tradeDirect.createQuote(null, COMPANY_NAME, PRICE);
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteWithEmptySymbol_YvJy4() throws java.lang.Exception {
        try {
            tradeDirect.createQuote("", COMPANY_NAME, PRICE);
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteWithNullCompanyName_qknp5() throws java.lang.Exception {
        try {
            tradeDirect.createQuote(SYMBOL, null, PRICE);
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteWithEmptyCompanyName_QpSZ6() throws java.lang.Exception {
        try {
            tradeDirect.createQuote(SYMBOL, "", PRICE);
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteWithNullPrice_hsrO7() throws java.lang.Exception {
        try {
            tradeDirect.createQuote(SYMBOL, COMPANY_NAME, null);
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteWithZeroPrice_qJfa8() throws java.lang.Exception {
        try {
            tradeDirect.createQuote(SYMBOL, COMPANY_NAME, BigDecimal.ZERO);
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteWithNegativePrice_msle9() throws java.lang.Exception {
        try {
            tradeDirect.createQuote(SYMBOL, COMPANY_NAME, BigDecimal.valueOf(-100.0));
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings1_AwDQ0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user1");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings2_JdqM1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user2");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings3_wCsd2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user3");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings4_HGnr3() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user4");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings5_cHqF4() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user5");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings6_eRAP5() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user6");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings7_lXbf6() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user7");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings8_AhBR7() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user8");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings9_fQIZ8() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user9");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetHoldings10_UKqk9() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("user10");
        assertNotNull(holdingDataBeans);
        assertEquals(10, holdingDataBeans.size());
    }
}