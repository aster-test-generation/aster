/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.math.BigDecimal;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_OrderData_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCompletionDate_MmqU0() {
        OrderData orderData = new OrderData(1, "open", new Date(), null, new BigDecimal("100.00"), "limit", 100, "AAPL");
        Date expectedCompletionDate = new Date();
        assertNull(expectedCompletionDate);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotalWithCompleteDate_qsuJ1() {
        OrderData orderData = new OrderData(1, "Open", new Date(), new Date(), new BigDecimal(100), "Limit", 100, "AAPL");
        BigDecimal total = orderData.getTotal();
        assertNull(new BigDecimal(100));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotalWithOrderType_OPKV3() {
        OrderData orderData = new OrderData(1, "Open", new Date(), null, new BigDecimal(100), "Market", 100, "AAPL");
        BigDecimal total = orderData.getTotal();
        assertNull(new BigDecimal(100));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCompletionDate_MmqU0_fid1() {
        OrderData orderData = new OrderData(1, "open", new Date(), null, new BigDecimal("100.00"), "limit", 100, "AAPL");
        Date expectedCompletionDate = new Date();
        assertEquals(expectedCompletionDate, orderData.getCompletionDate());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void test_JOIr0_fid1() {
        OrderData orderData = new OrderData(1, "open", new Date(), new Date(), new BigDecimal("100"), "limit", 100, "symbol");
        assertEquals(new BigDecimal("100"), orderData.getPrice());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotal_EwRZ0_fid1() {
        OrderData orderData = new OrderData(1, "Open", new Date(), null, new BigDecimal(100), "Limit", 100, "AAPL");
        BigDecimal total = orderData.getTotal();
        assertEquals(new BigDecimal(100), total);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotalWithCompleteDate_qsuJ1_fid1() {
        OrderData orderData = new OrderData(1, "Open", new Date(), new Date(), new BigDecimal(100), "Limit", 100, "AAPL");
        BigDecimal total = orderData.getTotal();
        assertEquals(new BigDecimal(100), total);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotalWithOrderFee_ubhR2_fid1() {
        OrderData orderData = new OrderData(1, "Open", new Date(), null, new BigDecimal(100), "Limit", 100, "AAPL", new BigDecimal(5));
        BigDecimal total = orderData.getTotal();
        assertEquals(new BigDecimal(105), total);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotalWithOrderType_OPKV3_fid1() {
        OrderData orderData = new OrderData(1, "Open", new Date(), null, new BigDecimal(100), "Market", 100, "AAPL");
        BigDecimal total = orderData.getTotal();
        assertEquals(new BigDecimal(100), total);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotalWithQuantity_uYFl4_fid1() {
        OrderData orderData = new OrderData(1, "Open", new Date(), null, new BigDecimal(100), "Limit", 50, "AAPL");
        BigDecimal total = orderData.getTotal();
        assertEquals(new BigDecimal(5000), total);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotalWithSymbol_LUsc5_fid1() {
        OrderData orderData = new OrderData(1, "Open", new Date(), null, new BigDecimal(100), "Limit", 100, "MSFT");
        BigDecimal total = orderData.getTotal();
        assertEquals(new BigDecimal(100), total);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTotalWithAllParameters_aQeU6_fid1() {
        OrderData orderData = new OrderData(1, "Open", new Date(), new Date(), new BigDecimal(100), "Limit", 100, "AAPL", new BigDecimal(5));
        BigDecimal total = orderData.getTotal();
        assertEquals(new BigDecimal(105), total);
    }
}