/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.ejb3;

import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AsyncScheduledOrderSubmitter_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubmitOrder_eMcA0() {
        AsyncScheduledOrderSubmitter submitter = new AsyncScheduledOrderSubmitter();
        Integer orderID = 123;
        boolean twoPhase = true;
        Future<?> result = submitter.submitOrder(orderID, twoPhase);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubmitOrderWithTwoPhaseFalse_mpqb1() {
        AsyncScheduledOrderSubmitter submitter = new AsyncScheduledOrderSubmitter();
        Integer orderID = 123;
        boolean twoPhase = false;
        Future<?> result = submitter.submitOrder(orderID, twoPhase);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubmitOrderWithOrderIDNull_eRvv2() {
        AsyncScheduledOrderSubmitter submitter = new AsyncScheduledOrderSubmitter();
        Integer orderID = null;
        boolean twoPhase = true;
        Future<?> result = submitter.submitOrder(orderID, twoPhase);
        assertNotNull(result);
    }
}