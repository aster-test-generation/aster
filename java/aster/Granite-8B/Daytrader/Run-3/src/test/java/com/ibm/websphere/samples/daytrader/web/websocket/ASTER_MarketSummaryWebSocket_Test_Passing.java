/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import javax.websocket.Session;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_MarketSummaryWebSocket_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOnMarketSummarytUpdate_aZas0() {
        MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
        marketSummaryWebSocket.onMarketSummarytUpdate("event");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSendMarketSummaryWithNullSession_JWkw5() {
        MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
        ActionMessage actionMessage = new ActionMessage();
        Session currentSession = null;
        marketSummaryWebSocket.sendMarketSummary(actionMessage, currentSession);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSendMarketSummaryWithEmptySession_kKiT6_Fqca0() {
        MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
        ActionMessage actionMessage = new ActionMessage();
        Session currentSession = mock(Session.class);
        when(currentSession.getAsyncRemote()).thenReturn(null);
        marketSummaryWebSocket.sendMarketSummary(actionMessage, currentSession);
    }
}