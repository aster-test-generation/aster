/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import com.ibm.websphere.samples.daytrader.util.FinancialUtils;
import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteData_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetGainHTMLWithAllParameters_DGuF1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        String expectedGainHTML = FinancialUtils.printGainHTML(BigDecimal.ZERO);
        String actualGainHTML = quoteData.getGainHTML();
        assertEquals(expectedGainHTML, actualGainHTML);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetVolume_vrHT0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setVolume(100.0);
        assertEquals(100.0, quoteData.getVolume(), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetChange_JTdk0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setChange(0.0);
        assertEquals(0.0, quoteData.getChange(), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHigh_QJQs0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ONE, BigDecimal.ZERO, "companyName", 1.0, 1.0);
        BigDecimal high = quoteData.getHigh();
        assertNotNull(high);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetChange_GELZ0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        double change = quoteData.getChange();
        assertEquals(0.0, change, 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPrice_fLCH0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setPrice(BigDecimal.ONE);
        assertEquals(BigDecimal.ONE, quoteData.getPrice());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOpen_ovsP0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setOpen(BigDecimal.ONE);
        assertEquals(BigDecimal.ONE, quoteData.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOpenWithNull_iBXc1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setOpen(null);
        assertNull(quoteData.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOpenWithNegativeValue_eLUN2() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setOpen(BigDecimal.valueOf(-1));
        assertEquals(BigDecimal.valueOf(-1), quoteData.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOpenWithZeroValue_RTLp3() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setOpen(BigDecimal.ZERO);
        assertEquals(BigDecimal.ZERO, quoteData.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOpenWithPositiveValue_dvaW4() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setOpen(BigDecimal.valueOf(1));
        assertEquals(BigDecimal.valueOf(1), quoteData.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLow_FVVx0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        BigDecimal low = BigDecimal.ONE;
        quoteData.setLow(low);
        assertEquals(low, quoteData.getLow());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGain_OYcU0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setGain(BigDecimal.ZERO);
        assertEquals(BigDecimal.ZERO, quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainWithNullGain_tfBm1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setGain(null);
        assertNull(quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainWithNegativeGain_dZhk2() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setGain(BigDecimal.valueOf(-100));
        assertEquals(BigDecimal.valueOf(-100), quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainWithPositiveGain_ocDt3() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setGain(BigDecimal.valueOf(100));
        assertEquals(BigDecimal.valueOf(100), quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainWithNullGainAndOtherAttributes_QaRm5() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 100.0, 10.0);
        quoteData.setGain(null);
        assertNull(quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainWithNegativeGainAndOtherAttributes_hftq6() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 100.0, 10.0);
        quoteData.setGain(BigDecimal.valueOf(-100));
        assertEquals(BigDecimal.valueOf(-100), quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainWithPositiveGainAndOtherAttributes_ZMin7() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 100.0, 10.0);
        quoteData.setGain(BigDecimal.valueOf(100));
        assertEquals(BigDecimal.valueOf(100), quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainWithZeroGainAndOtherAttributes_fvFc8() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 100.0, 10.0);
        quoteData.setGain(BigDecimal.ZERO);
        assertEquals(BigDecimal.ZERO, quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_nYGu0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "TEST_SYMBOL");
        String symbol = quoteData.getSymbol();
        assertEquals("TEST_SYMBOL", symbol);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbolWithEmptySymbol_XbsL2() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "");
        String symbol = quoteData.getSymbol();
        assertEquals("", symbol);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVolume_ceKs0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 100.0, 10.0);
        double volume = quoteData.getVolume();
        assertEquals(100.0, volume, 0.001);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHigh_ykxF0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setHigh(BigDecimal.ONE);
        assertEquals(BigDecimal.ONE, quoteData.getHigh());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHighWithNull_ODOn1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setHigh(null);
        assertNull(quoteData.getHigh());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHighWithZero_UKXi2() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setHigh(BigDecimal.ZERO);
        assertEquals(BigDecimal.ZERO, quoteData.getHigh());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHighWithNegativeValue_LXUt3() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setHigh(BigDecimal.valueOf(-100));
        assertEquals(BigDecimal.valueOf(-100), quoteData.getHigh());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHighWithPositiveValue_vWYy4() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setHigh(BigDecimal.valueOf(100));
        assertEquals(BigDecimal.valueOf(100), quoteData.getHigh());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpen_ceki0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ONE, "symbol");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ONE, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithPositivePrice_mOVd3() {
        QuoteData quoteData = new QuoteData(BigDecimal.ONE, BigDecimal.ONE, "symbol");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ONE, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithNegativePrice_vHaC4() {
        QuoteData quoteData = new QuoteData(BigDecimal.valueOf(-1), BigDecimal.ONE, "symbol");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ONE, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithZeroOpen_cBMM6() {
        QuoteData quoteData = new QuoteData(BigDecimal.ONE, BigDecimal.ZERO, "symbol");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ZERO, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCompanyName_yamI0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setCompanyName("newCompanyName");
        assertEquals("newCompanyName", quoteData.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCompanyNameWithNull_OvFo1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setCompanyName(null);
        assertEquals(null, quoteData.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCompanyNameWithEmpty_XtBD2() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setCompanyName("");
        assertEquals("", quoteData.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_HdbW0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_NullSymbol_bQGi3() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, null, BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_NullCompanyName_CRyI6() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, null, 0.0, 0.0);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetRange_aIrr0_kKvY0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setRange("range");
        assertEquals("range", quoteData.getRange());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrice_UQyG0_fid1() {
        QuoteData quoteData = new QuoteData(BigDecimal.valueOf(90.0), BigDecimal.valueOf(90.0), "ABC", BigDecimal.valueOf(110.0), BigDecimal.valueOf(80.0), "ABC Corp", 1000.0, 10.0);
        BigDecimal expectedPrice = BigDecimal.valueOf(90.0);
        BigDecimal actualPrice = quoteData.getPrice();
        assertEquals(expectedPrice, actualPrice);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void test_getGain_with_constructor_1_XUUj0_fid1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        BigDecimal expectedGain = BigDecimal.ZERO;
        BigDecimal actualGain = quoteData.getGain();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void test_getGain_with_constructor_2_aQTk1_fid1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        BigDecimal expectedGain = BigDecimal.ZERO;
        BigDecimal actualGain = quoteData.getGain();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGainPercent_jeRq0_fid1() {
        QuoteData quoteData = new QuoteData(new BigDecimal(100), new BigDecimal(100), "ABC", new BigDecimal(110), new BigDecimal(90), "XYZ", 1000.0, 10.0);
        BigDecimal expectedGainPercent = new BigDecimal(10);
        BigDecimal actualGainPercent = quoteData.getGainPercent();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbolWithNullSymbol_OEXi1_fid1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, null);
        String symbol = quoteData.getSymbol();
        assertNull(symbol);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent6_drky5_ZnKW0_fid1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setGainPercent(new BigDecimal("-1.00"));
        assertEquals(new BigDecimal("-1.00"), quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent7_RHHq6_qAPE0_fid1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setGainPercent(new BigDecimal("100.00"));
        assertEquals(new BigDecimal("100.00"), quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent8_Rcmx7_fthC0_fid1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setGainPercent(new BigDecimal("100.00"));
        assertEquals(new BigDecimal("100.00"), quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent10_jQXQ9_qhtO0_fid1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setGainPercent(new BigDecimal("-100.00"));
        assertEquals(new BigDecimal("-100.00"), quoteData.getGainPercent());
    }
}