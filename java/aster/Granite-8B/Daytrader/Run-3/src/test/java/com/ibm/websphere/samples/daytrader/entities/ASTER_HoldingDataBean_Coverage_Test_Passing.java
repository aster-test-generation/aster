/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HoldingDataBean_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals1_thSF0() {
        HoldingDataBean bean1 = new HoldingDataBean();
        HoldingDataBean bean2 = new HoldingDataBean();
        boolean result = bean1.equals(bean2);
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals2_nWjF1_FmIs0() {
        HoldingDataBean bean1 = new HoldingDataBean();
        HoldingDataBean bean2 = new HoldingDataBean();
        bean1.setHoldingID(1);
        bean2.setHoldingID(2);
        boolean result = bean1.equals(bean2);
        assertEquals(false, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals3_tZGk2_Cdhv0() {
        HoldingDataBean bean1 = new HoldingDataBean();
        bean1.setHoldingID(1);
        HoldingDataBean bean2 = new HoldingDataBean();
        bean2.setHoldingID(1);
        boolean result = bean1.equals(bean2);
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals4_YBUr3_eFYe0() {
        HoldingDataBean bean1 = new HoldingDataBean();
        bean1.setHoldingID(1);
        HoldingDataBean bean2 = new HoldingDataBean();
        bean2.setHoldingID(1);
        bean2.setPurchasePrice(new BigDecimal(100.00));
        boolean result = bean1.equals(bean2);
    }
}