/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.jaxrs;

import com.ibm.websphere.samples.daytrader.util.RecentQuotePriceChangeList;
import java.util.concurrent.TimeUnit;
import javax.ws.rs.sse.SseEventSink;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_BroadcastResource_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEventStreamCdi_Kyuf0() {
        BroadcastResource broadcastResource = new BroadcastResource();
        String event = "exampleEvent";
        broadcastResource.eventStreamCdi(event);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterWithEventSinkAndRecentQuotePriceChangeList_iEWi1_CqUK0() {
        BroadcastResource broadcastResource = new BroadcastResource();
        SseEventSink eventSink = mock(SseEventSink.class);
        RecentQuotePriceChangeList recentQuotePriceChangeList = mock(RecentQuotePriceChangeList.class);
        when(recentQuotePriceChangeList.isEmpty()).thenReturn(true);
        broadcastResource.register(eventSink);
        verify(eventSink, times(1)).send(any());
    }
}