/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.util.concurrent.TimeUnit;
import javax.servlet.FilterConfig;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JSFLoginFilter_Test_Passing {
    private FilterConfig filterConfig = null;
    JSFLoginFilter jsfLoginFilter;
    HttpServletRequest httpServletRequest;
    HttpSession httpSession;
    HttpServletResponse httpServletResponse;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoFilter_WhenUserIsNotLoggedIn_ThenRedirectToWelcomePage() throws Exception {
        httpServletRequest = mock(HttpServletRequest.class);
        httpSession = mock(HttpSession.class);
        httpServletResponse = mock(HttpServletResponse.class);
        jsfLoginFilter = new JSFLoginFilter();
        when(httpServletRequest.getSession()).thenReturn(httpSession);
        when(httpSession.getAttribute("uidBean")).thenReturn(null);
        when(httpServletRequest.getServletPath()).thenReturn("/home");
        jsfLoginFilter.doFilter(httpServletRequest, httpServletResponse, null);
        verify(httpServletResponse).sendRedirect("welcome.faces");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoFilter_WhenUserIsLoggedIn_ThenProceedWithChain() throws Exception {
        httpServletRequest = mock(HttpServletRequest.class);
        httpSession = mock(HttpSession.class);
        httpServletResponse = mock(HttpServletResponse.class);
        jsfLoginFilter = new JSFLoginFilter();
        when(httpServletRequest.getSession()).thenReturn(httpSession);
        when(httpSession.getAttribute("uidBean")).thenReturn("user123");
        jsfLoginFilter.doFilter(httpServletRequest, httpServletResponse, null);
        verify(httpServletRequest).getSession();
        verify(httpSession).getAttribute("uidBean");
        verifyNoMoreInteractions(httpServletResponse);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void destroy_Lboc2() {
        filterConfig = null;
    }
}