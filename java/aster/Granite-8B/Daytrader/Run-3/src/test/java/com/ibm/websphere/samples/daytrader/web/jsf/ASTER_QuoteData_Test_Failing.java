/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import com.ibm.websphere.samples.daytrader.util.FinancialUtils;
import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteData_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetGainHTML_eaQt0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        String expectedGainHTML = FinancialUtils.printGainHTML(BigDecimal.ZERO);
        String actualGainHTML = quoteData.getGainHTML();
        assertEquals(expectedGainHTML, actualGainHTML);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRange_kToX0() {
        QuoteData quoteData = new QuoteData(BigDecimal.valueOf(100), BigDecimal.valueOf(90), "AAPL", BigDecimal.valueOf(110), BigDecimal.valueOf(80), "Apple Inc.", 100000.0, 10.0);
        String expectedRange = "10.0";
        String actualRange = quoteData.getRange();
        assertEquals(expectedRange, actualRange);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetChangeHTMLWithPositiveChange_pHRp0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("105.00"), "AAPL");
        String expectedHTML = "<FONT color=\"#009900\">5.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
        String actualHTML = quoteData.getChangeHTML();
        assertEquals(expectedHTML, actualHTML);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetChangeHTMLWithNegativeChange_VdPR1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("105.00"), new BigDecimal("100.00"), "AAPL");
        String expectedHTML = "<FONT color=\"#cc0000\">5.00</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
        String actualHTML = quoteData.getChangeHTML();
        assertEquals(expectedHTML, actualHTML);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrice_UQyG0() {
        QuoteData quoteData = new QuoteData(BigDecimal.valueOf(100.0), BigDecimal.valueOf(90.0), "ABC", BigDecimal.valueOf(110.0), BigDecimal.valueOf(80.0), "ABC Corp", 1000.0, 10.0);
        BigDecimal expectedPrice = BigDecimal.valueOf(100.0);
        BigDecimal actualPrice = quoteData.getPrice();
        assertEquals(expectedPrice, actualPrice);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void test_getGain_with_constructor_1_XUUj0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        BigDecimal expectedGain = BigDecimal.ZERO;
        BigDecimal actualGain = quoteData.getGain();
        assertEquals(expectedGain, actualGain);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void test_getGain_with_constructor_2_aQTk1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        BigDecimal expectedGain = BigDecimal.ZERO;
        BigDecimal actualGain = quoteData.getGain();
        assertEquals(expectedGain, actualGain);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGainPercentHTML_CulP0() {
        QuoteData quoteData = new QuoteData(BigDecimal.valueOf(100.0), BigDecimal.valueOf(105.0), "AAPL", BigDecimal.valueOf(110.0), BigDecimal.valueOf(90.0), "Apple Inc.", 100000.0, 5.0);
        String expected = "<span style='color:green;'>5.00%</span>";
        String actual = quoteData.getGainPercentHTML();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGainPercent_jeRq0() {
        QuoteData quoteData = new QuoteData(new BigDecimal(100), new BigDecimal(100), "ABC", new BigDecimal(110), new BigDecimal(90), "XYZ", 1000.0, 10.0);
        BigDecimal expectedGainPercent = new BigDecimal(10);
        BigDecimal actualGainPercent = quoteData.getGainPercent();
        assertEquals(expectedGainPercent, actualGainPercent);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbolWithNullSymbol_OEXi1() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, null);
        String symbol = quoteData.getSymbol();
        assertEquals("", symbol);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbolWithNullOpenPrice_hPNl3() {
        QuoteData quoteData = new QuoteData(null, BigDecimal.ZERO, "TEST_SYMBOL");
        String symbol = quoteData.getSymbol();
        assertEquals("TEST_SYMBOL", symbol);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithNullPrice_NJob1() {
        QuoteData quoteData = new QuoteData(null, BigDecimal.ONE, "symbol");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ZERO, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithZeroPrice_YHhC2() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ONE, "symbol");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ZERO, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithNullOpen_pAVM5() {
        QuoteData quoteData = new QuoteData(BigDecimal.ONE, null, "symbol");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ZERO, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithNegativeOpen_didC8() {
        QuoteData quoteData = new QuoteData(BigDecimal.ONE, BigDecimal.valueOf(-1), "symbol");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ONE, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithNullSymbol_yVrF9() {
        QuoteData quoteData = new QuoteData(BigDecimal.ONE, BigDecimal.ONE, null);
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ZERO, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpenWithEmptySymbol_JcNd10() {
        QuoteData quoteData = new QuoteData(BigDecimal.ONE, BigDecimal.ONE, "");
        BigDecimal open = quoteData.getOpen();
        assertEquals(BigDecimal.ZERO, open);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_NullPrice_oDsa1() {
        QuoteData quoteData = new QuoteData(null, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_NullOpen_SQvX2() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, null, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_NullHigh_IWSx4() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", null, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_NullLow_FNel5() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, null, "companyName", 0.0, 0.0);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_NullVolume_hHme7() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", null, 0.0);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow_NullChange_NaUX8() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, null);
        BigDecimal low = quoteData.getLow();
        assertEquals(BigDecimal.ZERO, low);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent2_EsjB1_iNSO0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setGainPercent(BigDecimal.ZERO);
        assertEquals(BigDecimal.ZERO, quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent4_aaXU3_xrxX0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setGainPercent(BigDecimal.ONE);
        assertEquals(BigDecimal.ONE, quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent6_drky5_ZnKW0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setGainPercent(new BigDecimal("-1"));
        assertEquals(new BigDecimal("-1"), quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent7_RHHq6_qAPE0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
        quoteData.setGainPercent(new BigDecimal("100"));
        assertEquals(new BigDecimal("100"), quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent8_Rcmx7_fthC0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setGainPercent(new BigDecimal("100"));
        assertEquals(new BigDecimal("100"), quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent10_jQXQ9_qhtO0() {
        QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol", BigDecimal.ZERO, BigDecimal.ZERO, "companyName", 0.0, 0.0);
        quoteData.setGainPercent(new BigDecimal("-100"));
        assertEquals(new BigDecimal("-100"), quoteData.getGainPercent());
    }
}