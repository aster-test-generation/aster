/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingSession1_Test_Passing {
    private static String initTime;
    private static int hitCount;
    private static int count;
    PingSession1 pingsession1;
    HttpServlet httpservlet;
    @Mock
    HttpServletRequest httpservletrequest;
    @Mock
    HttpSession httpsession;
    @Mock
    HttpServletResponse httpservletresponse;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit() throws Exception {
        httpservlet = mock(HttpServlet.class);
        pingsession1 = new PingSession1();
        pingsession1.init(httpservlet);
        verify(httpservlet, times(1)).init(any(ServletConfig.class));
        assertEquals(0, count);
        assertEquals(0, hitCount);
        assertNotNull(initTime);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoPost() throws Exception {
        pingsession1 = new PingSession1();
        when(httpservletrequest.getSession(anyBoolean())).thenReturn(httpsession);
        pingsession1.doPost(httpservletrequest, httpservletresponse);
        verify(httpservletrequest, times(1)).getSession(anyBoolean());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_1() throws Exception {
        httpservlet = mock(HttpServlet.class);
        pingsession1 = new PingSession1();
        pingsession1.init(httpservlet);
        verify(httpservlet, times(1)).init(any(ServletConfig.class));
        assertEquals(0, count);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_2() throws Exception {
        httpservlet = mock(HttpServlet.class);
        pingsession1 = new PingSession1();
        pingsession1.init(httpservlet);
        verify(httpservlet, times(1)).init(any(ServletConfig.class));
        assertEquals(0, hitCount);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_3() throws Exception {
        httpservlet = mock(HttpServlet.class);
        pingsession1 = new PingSession1();
        pingsession1.init(httpservlet);
        verify(httpservlet, times(1)).init(any(ServletConfig.class));
        assertNotNull(initTime);
    }
}