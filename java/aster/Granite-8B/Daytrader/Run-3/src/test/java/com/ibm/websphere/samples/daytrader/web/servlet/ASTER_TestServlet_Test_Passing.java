/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TestServlet_Test_Passing {
    @Mock
    TradeServices tradeServices;
    @InjectMocks
    TestServlet testServlet;
    private TradeServices tradeAction;
    @Mock
    private HttpServlet httpservlet;
    HttpServlet httpServlet;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_eZdZ0() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_Kujw1() throws ServletException {
        ServletConfig config = mock(ServletConfig.class);
        testServlet.init(config);
        verify(config, times(1)).getInitParameter("init-param");
        verify(config, times(1)).getInitParameterNames();
        verify(config, times(1)).getServletContext();
        verify(config, times(1)).getServletName();
    }

    @Test
    public void testPerformTask_SkCM2() throws ServletException, IOException {
        testServlet.performTask(null, null);
    }
}