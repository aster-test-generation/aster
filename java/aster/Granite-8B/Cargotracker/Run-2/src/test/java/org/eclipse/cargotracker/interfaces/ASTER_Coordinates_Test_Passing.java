/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Coordinates_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLongitude_xUlq0() {
    Coordinates coordinates = new Coordinates(0.0, 0.0);
    double longitude = coordinates.getLongitude();
    assertEquals(0.0, longitude, 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLongitudeWithPositiveValues_kIHh1() {
    Coordinates coordinates = new Coordinates(45.0, 90.0);
    double longitude = coordinates.getLongitude();
    assertEquals(90.0, longitude, 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLongitudeWithNegativeValues_Vegc2() {
    Coordinates coordinates = new Coordinates(-45.0, -90.0);
    double longitude = coordinates.getLongitude();
    assertEquals(-90.0, longitude, 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLongitudeWithLargeValues_AxMi4() {
    Coordinates coordinates = new Coordinates(1000.0, 2000.0);
    double longitude = coordinates.getLongitude();
    assertEquals(2000.0, longitude, 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLongitudeWithSmallValues_cIbe5() {
    Coordinates coordinates = new Coordinates(-1000.0, -2000.0);
    double longitude = coordinates.getLongitude();
    assertEquals(-2000.0, longitude, 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLatitude_OQKy0() {
    Coordinates coordinates = new Coordinates(1.0, 2.0);
    assertEquals(1.0, coordinates.getLatitude(), 0.001);
  }
}