/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;

import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CarrierMovement_Test_Failing {
  private LocalDateTime departureTime;
  private CarrierMovement carrierMovement;
  private UnLocode unLocode;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_kKyC0_CeQN0() {
    CarrierMovement carrierMovement = new CarrierMovement(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("US"), "Los Angeles"), LocalDateTime.of(2022, 1, 1, 0, 0), LocalDateTime.of(2022, 1, 1, 12, 0));
    int expectedHashCode = new HashCodeBuilder().append(carrierMovement.getDepartureLocation()).append(carrierMovement.getDepartureTime()).append(carrierMovement.getArrivalLocation()).append(carrierMovement.getArrivalTime()).toHashCode();
    assertEquals(expectedHashCode, carrierMovement.hashCode());
  }
}