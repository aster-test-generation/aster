/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.file;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_EventItemWriter_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems_WGRC0() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems1_mcVv1() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems2_rdZo2() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems3_VBDk3() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems4_SYeO4() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems5_zYim5() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems6_KThs6() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems7_YyQS7() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems8_RtbB8() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems9_JmDD9() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItems10_enXC10() throws Exception {
    EventItemWriter eventItemWriter = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    items.add(new Object());
    eventItemWriter.writeItems(items);
  }
}