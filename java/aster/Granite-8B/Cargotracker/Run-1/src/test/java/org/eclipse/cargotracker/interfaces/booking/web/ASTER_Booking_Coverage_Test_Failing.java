/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Booking_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode_VleH0() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("USCHI");
    assertEquals("Chicago, IL, USA", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode2_ijXh1() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("USNYC");
    assertEquals("New York, NY, USA", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode3_elUP2() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("FRPAR");
    assertEquals("Paris, France", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode4_wDgc3() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("DEHAM");
    assertEquals("Hamburg, Germany", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode5_igev4() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("GBLHR");
    assertEquals("London, England, UK", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode6_MbUk5() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("IT mil");
    assertEquals("Milan, Italy", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode7_krnf6() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("ESmad");
    assertEquals("Madrid, Spain", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode8_VoUT7() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("ESZAR");
    assertEquals("Zaragoza, Spain", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRegister1_AXHZ0_YSPo0() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("originUnlocode");
    booking.setDestinationUnlocode("destinationUnlocode");
    booking.setArrivalDeadline(LocalDate.now());
    String actual = booking.register();
    String expected = "/admin/dashboard.xhtml";
    assertEquals(expected, actual);
  }
}