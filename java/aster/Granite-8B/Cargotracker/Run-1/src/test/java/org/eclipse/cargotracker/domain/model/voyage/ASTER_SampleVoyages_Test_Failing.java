/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SampleVoyages_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookupWithExistingVoyageNumber_qqWa1_1() {
    Voyage voyage = SampleVoyages.lookup(new VoyageNumber("123"));
    assertNotNull(voyage);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookupWithExistingVoyageNumber_qqWa1_2() {
    Voyage voyage = SampleVoyages.lookup(new VoyageNumber("123"));
    assertEquals(new VoyageNumber("123"), voyage.getVoyageNumber());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookupWithExistingVoyageNumber_qqWa1() {
    Voyage voyage = SampleVoyages.lookup(new VoyageNumber("123"));
    assertNotNull(voyage);
    assertEquals(new VoyageNumber("123"), voyage.getVoyageNumber());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_uOsJ8_fid2() {
    Voyage voyage = new Voyage(new VoyageNumber("123"), new Schedule());
    assertEquals("Voyage{voyageNumber=VoyageNumber{id='123'}, schedule=Schedule{...}}", voyage.toString());
  }
}