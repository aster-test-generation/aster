/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.tracking.web;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoTrackingViewAdapter_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testNullETA_ECcL0() {
    Cargo cargo = new Cargo();
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    String eta = adapter.getEta();
    assertEquals("?", eta);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getNextExpectedActivity_whenNoNextExpectedActivity_returnsEmpty_LDHv0() {
    Cargo cargo = new Cargo();
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    String nextExpectedActivity = cargoTrackingViewAdapter.getNextExpectedActivity();
    assertEquals("", nextExpectedActivity);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusTextUnknown_sywV0() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    String statusText = cargoTrackingViewAdapter.getStatusText();
    assertEquals("Unknown", statusText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusTextUnknownStatus_dmLj1() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    String statusText = cargoTrackingViewAdapter.getStatusText();
    assertEquals("[Unknown status]", statusText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusTextInPort_zEaZ2() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    String statusText = cargoTrackingViewAdapter.getStatusText();
    assertEquals("In port " + cargo.getRouteSpecification().getDestination().getName(), statusText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusTextOnboardVoyage_rEtO3() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    String statusText = cargoTrackingViewAdapter.getStatusText();
    assertEquals("Onboard voyage " + cargo.getRouteSpecification().getDestination().getName(), statusText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusTextClaimed_lMCJ4() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    String statusText = cargoTrackingViewAdapter.getStatusText();
    assertEquals("Claimed", statusText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusTextNotReceived_Aurc5() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    String statusText = cargoTrackingViewAdapter.getStatusText();
    assertEquals("Not received", statusText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusTextNull_ZHQi6() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    String statusText = cargoTrackingViewAdapter.getStatusText();
    assertEquals(null, statusText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testStatusCodeWhenUnloadedAtDestination_ajdh1() {
    Cargo cargo = new Cargo();
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    cargo.getDelivery().setUnloadedAtDestination(true);
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    String statusCode = adapter.getStatusCode();
    assertEquals("AT_DESTINATION", statusCode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testStatusCodeWhenMisdirected_Egpt2() {
    Cargo cargo = new Cargo();
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    cargo.getDelivery().setMisdirected(true);
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    String statusCode = adapter.getStatusCode();
    assertEquals("MISDIRECTED", statusCode);
  }
}