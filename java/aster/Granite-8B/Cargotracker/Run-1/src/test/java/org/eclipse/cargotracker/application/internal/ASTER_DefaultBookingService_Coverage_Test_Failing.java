/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.internal;

import java.time.LocalDate;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingService_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignCargoToRoute_YEFr0() {
    DefaultBookingService bookingService = new DefaultBookingService();
    Itinerary itinerary = new Itinerary();
    TrackingId trackingId = new TrackingId();
    bookingService.assignCargoToRoute(itinerary, trackingId);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRequestPossibleRoutesForCargoWhenCargoNotFound_BYIG0() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("1234567890");
    List<Itinerary> itineraries = bookingService.requestPossibleRoutesForCargo(trackingId);
    assertEquals(0, itineraries.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDestination1_zVds0() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("1234567890");
    UnLocode unLocode = new UnLocode("USCHI");
    bookingService.changeDestination(trackingId, unLocode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline1_cvsp0() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("1234567890");
    LocalDate newDeadline = LocalDate.now().plusDays(10);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline2_SJjb1() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("0987654321");
    LocalDate newDeadline = LocalDate.now().plusDays(5);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline3_gElJ2() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("1234567890");
    LocalDate newDeadline = LocalDate.now().plusDays(20);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline4_AYGl3() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("0987654321");
    LocalDate newDeadline = LocalDate.now().plusDays(15);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline5_TGdL4() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("1234567890");
    LocalDate newDeadline = LocalDate.now().plusDays(30);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline6_wuby5() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("0987654321");
    LocalDate newDeadline = LocalDate.now().plusDays(25);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline7_LnxP6() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("1234567890");
    LocalDate newDeadline = LocalDate.now().plusDays(40);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline8_NuyS7() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("0987654321");
    LocalDate newDeadline = LocalDate.now().plusDays(35);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline9_jTbT8() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("1234567890");
    LocalDate newDeadline = LocalDate.now().plusDays(50);
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline10_HYoq9() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("0987654321");
    LocalDate newDeadline = LocalDate.now().plusDays(45);
    bookingService.changeDeadline(trackingId, newDeadline);
  }
}