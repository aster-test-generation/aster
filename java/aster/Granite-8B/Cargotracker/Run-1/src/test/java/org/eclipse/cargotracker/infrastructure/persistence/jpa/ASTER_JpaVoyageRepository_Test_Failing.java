/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.infrastructure.persistence.jpa;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.voyage.Voyage;
import org.eclipse.cargotracker.domain.model.voyage.VoyageNumber;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JpaVoyageRepository_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindAll_pfgH0_1() {
    JpaVoyageRepository repository = new JpaVoyageRepository();
    List<Voyage> result = repository.findAll();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindAll_pfgH0_2() {
    JpaVoyageRepository repository = new JpaVoyageRepository();
    List<Voyage> result = repository.findAll();
    assertFalse(result.isEmpty());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFind_DmRS0() {
    JpaVoyageRepository repository = new JpaVoyageRepository();
    VoyageNumber voyageNumber = new VoyageNumber("123");
    Voyage expectedVoyage = new Voyage();
    Voyage actualVoyage = repository.find(voyageNumber);
    assertEquals(expectedVoyage, actualVoyage);
  }
}