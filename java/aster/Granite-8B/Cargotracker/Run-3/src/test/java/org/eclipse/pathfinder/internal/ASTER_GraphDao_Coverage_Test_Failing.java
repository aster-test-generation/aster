/**
 * Generated by Aster
 */
package org.eclipse.pathfinder.internal;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_GraphDao_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSwitchCase0_RjNy0() {
    GraphDao graphDao = new GraphDao();
    String from = "A";
    String to = "B";
    String expected = "0200T";
    String actual = graphDao.getVoyageNumber(from, to);
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSwitchCase1_uuLv1() {
    GraphDao graphDao = new GraphDao();
    String from = "A";
    String to = "B";
    String expected = "0301S";
    String actual = graphDao.getVoyageNumber(from, to);
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSwitchCase2_DQNR2() {
    GraphDao graphDao = new GraphDao();
    String from = "A";
    String to = "B";
    String expected = "0400S";
    String actual = graphDao.getVoyageNumber(from, to);
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSwitchCase0_RjNy0_fid2() {
    GraphDao graphDao = new GraphDao();
    String from = "A";
    String to = "B";
    String expected = "0100S";
    String actual = graphDao.getVoyageNumber(from, to);
    assertEquals(expected, actual);
  }
}