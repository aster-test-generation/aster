/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_VoyageNumber_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAs_qOYV0() {
    VoyageNumber voyageNumber = new VoyageNumber("123");
    VoyageNumber other = new VoyageNumber("123");
    boolean result = voyageNumber.sameValueAs(other);
    assertTrue(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAsWithNull_ybCq1() {
    VoyageNumber voyageNumber = new VoyageNumber("123");
    boolean result = voyageNumber.sameValueAs(null);
    assertFalse(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAsWithDifferentNumber_EQgD2() {
    VoyageNumber voyageNumber = new VoyageNumber("123");
    VoyageNumber other = new VoyageNumber("456");
    boolean result = voyageNumber.sameValueAs(other);
    assertFalse(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithNull_aNLx0() {
    VoyageNumber voyageNumber = new VoyageNumber("123456");
    boolean result = voyageNumber.equals(null);
    assertFalse(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithSameObject_cPEC1() {
    VoyageNumber voyageNumber = new VoyageNumber("123456");
    boolean result = voyageNumber.equals(voyageNumber);
    assertTrue(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithDifferentClass_Brdy2() {
    VoyageNumber voyageNumber = new VoyageNumber("123456");
    boolean result = voyageNumber.equals("123456");
    assertFalse(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithDifferentObject_SFWk3() {
    VoyageNumber voyageNumber1 = new VoyageNumber("123456");
    VoyageNumber voyageNumber2 = new VoyageNumber("654321");
    boolean result = voyageNumber1.equals(voyageNumber2);
    assertFalse(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithSameValue_TasX4() {
    VoyageNumber voyageNumber1 = new VoyageNumber("123456");
    VoyageNumber voyageNumber2 = new VoyageNumber("123456");
    boolean result = voyageNumber1.equals(voyageNumber2);
    assertTrue(result);
  }
}