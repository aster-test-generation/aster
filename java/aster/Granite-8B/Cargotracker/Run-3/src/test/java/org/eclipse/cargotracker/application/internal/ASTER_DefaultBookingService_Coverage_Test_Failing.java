/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.internal;

import java.time.LocalDate;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingService_Coverage_Test_Failing {
  private TrackingId trackingId;
  private UnLocode unLocode;
  private DefaultBookingService bookingService;
  private Cargo cargo;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRequestPossibleRoutesForCargoWithNullTrackingId_Xlry0() {
    DefaultBookingService bookingService = new DefaultBookingService();
    List<Itinerary> itineraries = bookingService.requestPossibleRoutesForCargo(null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignCargoToRoute_SQvZ0() {
    DefaultBookingService bookingService = new DefaultBookingService();
    Itinerary itinerary = new Itinerary();
    TrackingId trackingId = new TrackingId();
    bookingService.assignCargoToRoute(itinerary, trackingId);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline1_AJvV0() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("1");
    LocalDate newDeadline = LocalDate.now();
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline2_hwOm1() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("2");
    LocalDate newDeadline = LocalDate.now();
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline3_gjWt2() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("3");
    LocalDate newDeadline = LocalDate.now();
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline4_DTdy3() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("4");
    LocalDate newDeadline = LocalDate.now();
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline5_OYiq4() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("5");
    LocalDate newDeadline = LocalDate.now();
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline6_jXRi5() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("6");
    LocalDate newDeadline = LocalDate.now();
    bookingService.changeDeadline(trackingId, newDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadline7_LYMq6() {
    DefaultBookingService bookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("7");
    LocalDate newDeadline = LocalDate.now();
    bookingService.changeDeadline(trackingId, newDeadline);
  }
}