/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.tracking.web;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.eclipse.cargotracker.domain.model.handling.HandlingEventRepository;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoTrackingViewAdapter_Test_Passing {
  private Cargo cargo;
  private CargoTrackingViewAdapter cargoTrackingViewAdapter;
  private HandlingEvent handlingEvent;
  private List<HandlingEvent> handlingEvents;
  private CargoTrackingViewAdapter cargotrackingviewadapter;
  private HandlingEventRepository handlingEventRepository;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getEvents_throwsIllegalArgumentException_whenCargoIsNull_FJjX2_1() throws Exception {
    Cargo cargo = null;
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, new ArrayList<>());
    IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> cargoTrackingViewAdapter.getEvents());
  }
}