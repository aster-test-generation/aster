/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionValidator_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testValidateInvalidFirstChar_njVr2_1() {
        String option = "123";
        IllegalArgumentException exception =
                assertThrows(IllegalArgumentException.class, () -> OptionValidator.validate(option));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testValidateInvalidMiddleChar_CzVV3() {
        String option = "abc1";
        IllegalArgumentException exception =
                assertThrows(IllegalArgumentException.class, () -> OptionValidator.validate(option));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testValidateInvalidFirstChar_GtDh2_1() {
        IllegalArgumentException exception =
                assertThrows(IllegalArgumentException.class, () -> OptionValidator.validate("123"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testValidateInvalidMiddleChar_NINK3() {
        IllegalArgumentException exception =
                assertThrows(IllegalArgumentException.class, () -> OptionValidator.validate("abc1"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testValidateValidLong_DJFi5() {
        String option = "abc!@#$%^&*()_+{}|:\"<>?";
        String result = OptionValidator.validate(option);
        assertEquals(option, result);
    }
}