/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import java.util.function.Supplier;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_CommandLine_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetParsedOptionValue_xXRJ2() throws ParseException {
        CommandLine commandLine = new CommandLine();
        Option option = new Option("o", "option", false, "option description");
        Supplier<String> defaultValue = () -> "default value";
        String opt = "o";
        String parsedOptionValue = commandLine.getParsedOptionValue(option, defaultValue);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddArg_cYWs0() {
        CommandLine commandLine = new CommandLine();
        commandLine.addArg(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetParsedOptionValue_eTkK0() throws org.apache.commons.cli.ParseException {
        CommandLine commandLine = new CommandLine();
        Supplier<Object> defaultValue = () -> null;
        Option option = new Option("option", "description");
        Object res = commandLine.getParsedOptionValue(option, defaultValue);
        assertEquals(null, res);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetParsedOptionValue_AHgQ0() throws ParseException {
        CommandLine commandLine = new CommandLine();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetOptionValues_QrfI0() {
        CommandLine commandLine = new CommandLine();
        Option option = new Option("option", "longOption", true, "description");
        String[] optionValues = commandLine.getOptionValues(option);
    }
}