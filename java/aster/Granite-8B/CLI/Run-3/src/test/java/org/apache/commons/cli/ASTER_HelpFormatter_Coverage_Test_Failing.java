/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_HelpFormatter_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos1_VbUM0_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 10;
        int startPos = 0;
        int expected = 11;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos2_fBCw1_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 20;
        int startPos = 0;
        int expected = -1;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos3_TpsJ2_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 15;
        int startPos = 10;
        int expected = 26;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos4_YGhP3_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 25;
        int startPos = 10;
        int expected = 36;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos5_EWCt4_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 30;
        int startPos = 10;
        int expected = 41;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos6_aCkT5_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 35;
        int startPos = 10;
        int expected = 46;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos7_fKYl6_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 40;
        int startPos = 10;
        int expected = 51;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos8_PVWN7_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 45;
        int startPos = 10;
        int expected = 56;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos9_Ognr8_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 50;
        int startPos = 10;
        int expected = 61;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos10_kyBN9_fid2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "This is a sample text";
        int width = 55;
        int startPos = 10;
        int expected = 66;
        int actual = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }
}