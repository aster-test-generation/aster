/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionBuilder_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChar_YXQs0_1() throws IllegalArgumentException {
        Option option = OptionBuilder.create('a');
        assertNotNull(option);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChar_YXQs0_2() throws IllegalArgumentException {
        Option option = OptionBuilder.create('a');
        assertEquals('a', option.getOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChar_YXQs0_3() throws IllegalArgumentException {
        Option option = OptionBuilder.create('a');
        assertTrue(option.hasArg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateString_zwWS1_1() throws IllegalArgumentException {
        Option option = OptionBuilder.create("a");
        assertNotNull(option);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateString_zwWS1_2() throws IllegalArgumentException {
        Option option = OptionBuilder.create("a");
        assertEquals("a", option.getLongOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateString_zwWS1_3() throws IllegalArgumentException {
        Option option = OptionBuilder.create("a");
        assertTrue(option.hasLongOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasArg_pCxd0() throws Exception {
        OptionBuilder.hasArg();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasOptionalArgsInt_wHtx1() throws Exception {
        OptionBuilder.hasOptionalArgs(1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasOptionalArgs_Nobc2() throws Exception {
        OptionBuilder.hasOptionalArgs();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasArgBoolean_OBWh3() throws Exception {
        OptionBuilder.hasArg(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasArgsInt_aYjb4() throws Exception {
        OptionBuilder.hasArgs(1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasOptionalArg_WZUe5() throws Exception {
        OptionBuilder.hasOptionalArg();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasArgs_cdrT6() throws Exception {
        OptionBuilder.hasArgs();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsRequiredBoolean_xRUv7() throws Exception {
        OptionBuilder.isRequired(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_1() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(0, option.getArgs());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_2() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getDescription());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_3() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals("l", option.getLongOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_4() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getValue(0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_5() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getConverter());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_6() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(0, option.getValueSeparator());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_7() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(false, option.hasArgs());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_8() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getDeprecated());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_9() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(1732619430, option.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_10() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals("l", option.getOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_11() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(false, option.hasValueSeparator());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_12() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(0, option.getId());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_13() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getValues());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_14() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getType());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_15() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getKey());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_16() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(false, option.hasLongOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_17() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(false, option.hasArg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_18() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_19() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getValuesList());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_20() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getArgName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_21() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(false, option.hasOptionalArg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_22() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(false, option.hasArgName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate1_iSWv0_23() throws Exception {
        Option option = OptionBuilder.create("l");
        assertEquals(null, option.getValue(""));
    }
}