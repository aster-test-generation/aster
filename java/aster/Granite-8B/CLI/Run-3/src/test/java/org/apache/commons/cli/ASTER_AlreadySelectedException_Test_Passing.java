/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_AlreadySelectedException_Test_Passing {
    private Option option;
    private AlreadySelectedException alreadyselectedexception;
    private OptionGroup group;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionGroupTest_hNzR0() throws Exception {
        AlreadySelectedException exception = new AlreadySelectedException(new OptionGroup(), new Option("option", "description"));
        OptionGroup group = exception.getOptionGroup();
        assertNotNull(group);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetOption_IlZh0() throws Exception {
        AlreadySelectedException exception = new AlreadySelectedException("message");
        Option option = new Option("option", "longOption", true, "description");
        exception.getOption();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetOption2_hNwv1() throws Exception {
        AlreadySelectedException exception = new AlreadySelectedException("message");
        Option option = new Option("option", true, "description");
        exception.getOption();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetOption3_wYYo2() throws Exception {
        AlreadySelectedException exception = new AlreadySelectedException("message");
        Option option = new Option("option", "description");
        exception.getOption();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetOption22_kqXE21() throws Exception {
        AlreadySelectedException exception = new AlreadySelectedException("message");
    }
}