/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_TypeHandler_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateValueWithStringAndObject_CFvg0() throws ParseException {
        final String string = "string";
        final Object obj = Object.class;
        final Object expected = Object.class;
        final Object actual = TypeHandler.createValue(string, obj);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber_MiHu0() throws ParseException {
        String string = "123";
        Number result = TypeHandler.createNumber(string);
        Number expected = new Integer(123);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber3_WoLV2() throws ParseException {
        String string = "abc";
        Number result = TypeHandler.createNumber(string);
        Number expected = null;
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber4_Cupo3() throws ParseException {
        String string = "123abc";
        Number result = TypeHandler.createNumber(string);
        Number expected = new Integer(123);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber5_gAlB4() throws ParseException {
        String string = "abc123";
        Number result = TypeHandler.createNumber(string);
        Number expected = null;
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber6_iRhY5() throws ParseException {
        String string = "";
        Number result = TypeHandler.createNumber(string);
        Number expected = null;
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber7_EqHc6() throws ParseException {
        String string = null;
        Number result = TypeHandler.createNumber(string);
        Number expected = null;
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber9_QDBn8() throws ParseException {
        String string = "123.456abc";
        Number result = TypeHandler.createNumber(string);
        Number expected = new Double(123.456);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber10_cXHg9() throws ParseException {
        String string = "abc123.456";
        Number result = TypeHandler.createNumber(string);
        Number expected = null;
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber11_rkAX10() throws ParseException {
        String string = "123abc.456";
        Number result = TypeHandler.createNumber(string);
        Number expected = new Integer(123);
        assertEquals(expected, result);
    }
}