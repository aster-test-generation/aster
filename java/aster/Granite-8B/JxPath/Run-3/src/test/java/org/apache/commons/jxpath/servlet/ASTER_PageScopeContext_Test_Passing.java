/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.jsp.PageContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PageScopeContext_Test_Passing {
    @Mock
    private PageContext pageContext;
    private PageScopeContext pageScopeContext;
    PageScopeContext pagescopecontext;
    PageContext pagecontext;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetAttribute() throws Exception {
        pageScopeContext = new PageScopeContext(pageContext);
        String attributeName = "testAttribute";
        Object attributeValue = new Object();
        when(pageContext.getAttribute(attributeName, PageContext.PAGE_SCOPE)).thenReturn(attributeValue);
        Object result = pageScopeContext.getAttribute(attributeName);
        assertEquals(attributeValue, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetAttribute() throws Exception {
        pageScopeContext = new PageScopeContext(pageContext);
        // Set up the expected behavior of the mock pageContext object
        String attribute = "testAttribute";
        Object value = new Object();
        pageScopeContext.setAttribute(attribute, value);
        // Verify that the setAttribute method was called on the pageContext object
        verify(pageContext).setAttribute(attribute, value, PageContext.PAGE_SCOPE);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setAttribute(final String attribute, final Object value)
    {
        pageContext.setAttribute(attribute, value, PageContext.PAGE_SCOPE);
    }
}