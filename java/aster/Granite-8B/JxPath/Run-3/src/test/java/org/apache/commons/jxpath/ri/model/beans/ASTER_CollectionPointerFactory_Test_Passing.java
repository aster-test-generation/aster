/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.ArrayList;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CollectionPointerFactory_Test_Passing {
    CollectionPointerFactory collectionpointerfactory;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer1_OpVj0_1() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("prefix", "localName");
        Locale locale = Locale.getDefault();
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, new Object(), locale);
        assertNotNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer1_OpVj0_2() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("prefix", "localName");
        Locale locale = Locale.getDefault();
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, new Object(), locale);
        assertTrue(nodePointer instanceof CollectionPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer2_KjDa1_2() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("prefix", "localName");
        Locale locale = Locale.getDefault();
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, new Object(), locale);
        assertFalse(nodePointer instanceof CollectionPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectionPointerFactoryGetOrder_JHSo0() {
        CollectionPointerFactory factory = new CollectionPointerFactory();
        int order = factory.getOrder();
        assertEquals(100, order);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_1() throws Exception {
        collectionpointerfactory = new CollectionPointerFactory();
        NodePointer parent = mock(NodePointer.class);
        QName name = mock(QName.class);
        Object bean = new ArrayList();
        NodePointer nodePointer = collectionpointerfactory.createNodePointer(parent, name, bean);
        assertNotNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_2() throws Exception {
        collectionpointerfactory = new CollectionPointerFactory();
        NodePointer parent = mock(NodePointer.class);
        QName name = mock(QName.class);
        Object bean = new ArrayList();
        NodePointer nodePointer = collectionpointerfactory.createNodePointer(parent, name, bean);
        assertTrue(nodePointer instanceof CollectionPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_FAtu0_1() {
        CollectionPointerFactory factory = new CollectionPointerFactory();
        NodePointer parent = new DOMNodePointer(null, null, null);
        NodePointer pointer = factory.createNodePointer(parent, new QName("name"), new Object());
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_FAtu0_2() {
        CollectionPointerFactory factory = new CollectionPointerFactory();
        NodePointer parent = new DOMNodePointer(null, null, null);
        NodePointer pointer = factory.createNodePointer(parent, new QName("name"), new Object());
        assertTrue(pointer instanceof CollectionPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer1_OpVj0() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("prefix", "localName");
        Locale locale = Locale.getDefault();
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, new Object(), locale);
        assertNotNull(nodePointer);
        assertTrue(nodePointer instanceof CollectionPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer2_KjDa1() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("prefix", "localName");
        Locale locale = Locale.getDefault();
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, new Object(), locale);
        assertNotNull(nodePointer);
        assertFalse(nodePointer instanceof CollectionPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer() throws Exception {
        collectionpointerfactory = new CollectionPointerFactory();
        NodePointer parent = mock(NodePointer.class);
        QName name = mock(QName.class);
        Object bean = new ArrayList();
        NodePointer nodePointer = collectionpointerfactory.createNodePointer(parent, name, bean);
        assertNotNull(nodePointer);
        assertTrue(nodePointer instanceof CollectionPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_FAtu0() {
        CollectionPointerFactory factory = new CollectionPointerFactory();
        NodePointer parent = new DOMNodePointer(null, null, null);
        NodePointer pointer = factory.createNodePointer(parent, new QName("name"), new Object());
        assertNotNull(pointer);
        assertTrue(pointer instanceof CollectionPointer);
    }
}