/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleCharStream_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadLine_OLay0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("This is a test string\nwith multiple lines"), 1, 1);
        assertEquals(1, simpleCharStream.getLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadLineWithTabs_fEhb1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("\tThis is a test string\nwith multiple lines"), 1, 1);
        assertEquals(1, simpleCharStream.getLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitReaderIntIntInt_HOcK2_xyCe0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 4096);
        simpleCharStream.ReInit(new java.io.StringReader(""), 1, 1, 4096);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit1_LcJj0_WBWp0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.InputStreamReader(new java.io.ByteArrayInputStream(new byte[0])), 1, 1, 4096);
        simpleCharStream.ReInit(new java.io.InputStreamReader(new java.io.ByteArrayInputStream(new byte[0])), 1, 1, 4096);
    }
}