/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathInvalidAccessException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BasicTypeConverter_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAllocateCollection3_QIHD2() {
        BasicTypeConverter converter = new BasicTypeConverter();
        Class type = null;
        try {
            converter.allocateCollection(type);
        } catch (JXPathInvalidAccessException e) {
            assertEquals("Cannot create collection of type: null", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCanCreateCollectionWithInterface_eBrw0() {
        BasicTypeConverter converter = new BasicTypeConverter();
        boolean result = converter.canCreateCollection(List.class);
        assert !result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCanConvert2_oLxC1() {
        BasicTypeConverter instance = new BasicTypeConverter();
        boolean expResult = true;
        boolean result = instance.canConvert("", null);
        assertEquals(expResult, result);
    }
}