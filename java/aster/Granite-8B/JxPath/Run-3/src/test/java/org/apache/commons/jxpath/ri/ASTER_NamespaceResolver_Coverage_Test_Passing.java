/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_NamespaceResolver_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetExternallyRegisteredNamespaceURI_ruGU0() {
        NamespaceResolver resolver = new NamespaceResolver(null);
        resolver.getExternallyRegisteredNamespaceURI("prefix");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPrefix_NduJ0() {
        NamespaceResolver namespaceResolver = new NamespaceResolver(null);
        String namespaceURI = "namespaceURI";
        String prefix = namespaceResolver.getPrefix(namespaceURI);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_WQiJ0() {
        NamespaceResolver resolver = new NamespaceResolver(null);
        String prefix = "prefix";
        String uri = "uri";
        String result = resolver.getNamespaceURI(prefix);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_SRHr0() {
        NamespaceResolver resolver = new NamespaceResolver(null);
        Pointer pointer = resolver.getNamespaceContextPointer();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test2_TLPx1() {
        NamespaceResolver resolver = new NamespaceResolver(new NamespaceResolver(null));
        Pointer pointer = resolver.getNamespaceContextPointer();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getPrefix_1_HebH0_tzln0() {
        NamespaceResolver resolver = new NamespaceResolver();
        NodePointer pointer = mock(NodePointer.class);
        when(pointer.getNamespaceURI()).thenReturn("uri");
        String prefix = NamespaceResolver.getPrefix(pointer, "uri");
        verify(pointer).getNamespaceURI();
        assertEquals("", prefix);
    }
}