/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.functions;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ConstructorFunction_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithNullParameters_eaoY0() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = null;
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithEmptyParameters_DIRn1() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[0];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithOneParameter_iriR2() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[1];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithTwoParameters_bhqw3() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[2];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithThreeParameters_eCqX4() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[3];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithFourParameters_jlKw5() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[4];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithFiveParameters_xaEQ6() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[5];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithSixParameters_XmnH7() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[6];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithSevenParameters_OlJj8() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[7];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithEightParameters_tJGp9() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[8];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithNineParameters_sPTP10() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[9];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithTenParameters_PSAz11() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[10];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithElevenParameters_PpNY12() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[11];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithTwelveParameters_IJMW13() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[12];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithThirteenParameters_BSOt14() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[13];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithFourteenParameters_hVJF15() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[14];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithFifteenParameters_QZVr16() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[15];
        Object result = constructorFunction.invoke(null, parameters);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvokeWithSixteenParameters_fYto17() {
        ConstructorFunction constructorFunction = new ConstructorFunction(null);
        Object[] parameters = new Object[16];
        Object result = constructorFunction.invoke(null, parameters);
    }
}