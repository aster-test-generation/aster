/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.DynamicPropertyHandler;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.servlet.KeywordVariables;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynamicPropertyPointer_Test_Passing {
    private DynamicPropertyHandler handler;
    private DynamicPropertyPointer dynamicpropertypointer;
    private String[] names;
    private String name;
    private JXPathContext context;
    private Object value;
    private String requiredPropertyName;
    @Mock
    private DOMNodePointer parent;
    @Mock
    private KeywordVariables variables;
    @Mock
    private QName nameMock;
    @Mock
    private QName prefixMock;
    @Mock
    private Locale locale;
    private String id;
    private PageContextHandler handler1;
    @Mock
    private QName name1;
    @Mock
    private QName name2;
    @Mock
    private DOMNodePointer domNodePointer;
    @Mock
    private PageContextHandler pageContextHandler;
    @Mock
    private KeywordVariables keywordVariables;
    @Mock
    private QName qName;
    private DynamicPropertyPointer dynamicPropertyPointer;
    @Mock
    private DynamicPropertyHandler handlerMock;
    @Mock
    private Object beanMock;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyName1_iGoI0() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        PageContextHandler handler = new PageContextHandler();
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(parent, handler);
        dynamicPropertyPointer.setPropertyName("test");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyName2_Idmm1() {
        VariablePointer parent = new VariablePointer(null, null);
        PageContextHandler handler = new PageContextHandler();
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(parent, handler);
        dynamicPropertyPointer.setPropertyName("test");
    }
}