/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.EvalContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_LocationPath_Test_Passing {
    @Mock
    private EvalContext context;
    @Mock
    private Step[] steps;
    private LocationPath locationPath;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompute() {
        context = mock(EvalContext.class);
        steps = new Step[1];
        locationPath = new LocationPath(true, steps);
        // Set up expectations
        when(context.getRootContext().getAbsoluteRootContext()).thenReturn(context);
        when(context.getJXPathContext()).thenReturn(mock(JXPathContext.class));
        when(context.hasNext()).thenReturn(true);
        when(context.nextNode()).thenReturn(true);
        // Call the method under test
        Object result = locationPath.compute(context);
        // Verify the result
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsAbsolute_aKaM0() {
        LocationPath locationPath = new LocationPath(true, new Step[0]);
        assertTrue(locationPath.isAbsolute());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsAbsolute2_mZDC1() {
        LocationPath locationPath = new LocationPath(false, new Step[0]);
        assertFalse(locationPath.isAbsolute());
    }
}