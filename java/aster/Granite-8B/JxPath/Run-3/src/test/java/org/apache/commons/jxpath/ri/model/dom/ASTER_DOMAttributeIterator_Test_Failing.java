/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;

import java.util.List;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.servlet.KeywordVariables;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.w3c.dom.Attr;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DOMAttributeIterator_Test_Failing {
    private int position = 0;
    DOMAttributeIterator domattributeiterator;
    Node node;
    NodePointer nodepointer;
    Attr attr;
    Locale locale;
    VariablePointer variablepointer;
    KeywordVariables keywordvariables;
    QName qname;
    private List attributes;
    String id;
    VariablePointer parent;
    KeywordVariables variables;
    QName name;
    @Mock
    private NamedNodeMap namednodemap;
    @Mock
    private List list;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition_NunV0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        DOMAttributeIterator domAttributeIterator = new DOMAttributeIterator(domNodePointer, null);
        int position = domAttributeIterator.getPosition();
        assertEquals(0, position);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition2_MkVd1() {
        VariablePointer variablePointer = new VariablePointer(null, null);
        DOMAttributeIterator domAttributeIterator = new DOMAttributeIterator(null, null);
        int position = domAttributeIterator.getPosition();
        assertEquals(0, position);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition3_gJXo2() {
        KeywordVariables keywordVariables = new KeywordVariables(null, null);
        VariablePointer variablePointer = new VariablePointer(keywordVariables, null);
        DOMAttributeIterator domAttributeIterator = new DOMAttributeIterator(null, null);
        int position = domAttributeIterator.getPosition();
        assertEquals(0, position);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition4_xgvT3() {
        Node node = null;
        Locale locale = null;
        String id = null;
        DOMNodePointer domNodePointer = new DOMNodePointer(node, locale, id);
        DOMAttributeIterator domAttributeIterator = new DOMAttributeIterator(domNodePointer, null);
        int position = domAttributeIterator.getPosition();
        assertEquals(0, position);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition5_ePSY4() {
        Node node = null;
        Locale locale = null;
        DOMNodePointer domNodePointer = new DOMNodePointer(node, locale);
        DOMAttributeIterator domAttributeIterator = new DOMAttributeIterator(domNodePointer, null);
        int position = domAttributeIterator.getPosition();
        assertEquals(0, position);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition2_MkVd1_fid2() {
        VariablePointer variablePointer = new VariablePointer(null, null);
        DOMAttributeIterator domAttributeIterator = new DOMAttributeIterator(variablePointer, null);
        int position = domAttributeIterator.getPosition();
        assertEquals(0, position);
    }
}