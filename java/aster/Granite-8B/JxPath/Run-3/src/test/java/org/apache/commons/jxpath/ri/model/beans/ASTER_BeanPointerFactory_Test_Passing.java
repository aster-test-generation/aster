/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPointerFactory_Test_Passing {
    BeanPointerFactory beanpointerfactory;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        NodePointer parent = mock(NodePointer.class);
        QName name = mock(QName.class);
        Object bean = mock(Object.class);
        NodePointer result = beanpointerfactory.createNodePointer(parent, name, bean);
        verify(parent).createChild(any(), any(), any());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_uKhM0() {
        BeanPointerFactory factory = new BeanPointerFactory();
        int order = factory.getOrder();
        assertEquals(100, order);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithBeanPointerFactory_OUNL0_1() {
        BeanPointerFactory factory = new BeanPointerFactory();
        NodePointer pointer = factory.createNodePointer(null, new QName("name"), new Object());
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithBeanPointerFactory_OUNL0_2() {
        BeanPointerFactory factory = new BeanPointerFactory();
        NodePointer pointer = factory.createNodePointer(null, new QName("name"), new Object());
        assertTrue(pointer instanceof BeanPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithBeanPointerFactory_OUNL0() {
        BeanPointerFactory factory = new BeanPointerFactory();
        NodePointer pointer = factory.createNodePointer(null, new QName("name"), new Object());
        assertNotNull(pointer);
        assertTrue(pointer instanceof BeanPointer);
    }
}