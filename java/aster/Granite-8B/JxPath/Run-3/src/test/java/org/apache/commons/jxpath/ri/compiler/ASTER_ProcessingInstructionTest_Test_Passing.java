/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ProcessingInstructionTest_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest_iSvn0() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString");
        String result = testObject.getTarget();
        assertEquals("testString", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest2_gGGy1() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString2");
        String result = testObject.getTarget();
        assertEquals("testString2", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest3_aXYd2() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString3");
        String result = testObject.getTarget();
        assertEquals("testString3", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest4_sXLN3() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString4");
        String result = testObject.getTarget();
        assertEquals("testString4", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest5_iSQO4() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString5");
        String result = testObject.getTarget();
        assertEquals("testString5", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest6_GVfY5() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString6");
        String result = testObject.getTarget();
        assertEquals("testString6", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest7_FUcV6() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString7");
        String result = testObject.getTarget();
        assertEquals("testString7", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest8_HSyv7() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString8");
        String result = testObject.getTarget();
        assertEquals("testString8", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest9_yixq8() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString9");
        String result = testObject.getTarget();
        assertEquals("testString9", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest10_mWDp9() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString10");
        String result = testObject.getTarget();
        assertEquals("testString10", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest11_nSSI10() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString11");
        String result = testObject.getTarget();
        assertEquals("testString11", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest12_Kasi11() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString12");
        String result = testObject.getTarget();
        assertEquals("testString12", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest13_ZvHB12() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString13");
        String result = testObject.getTarget();
        assertEquals("testString13", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest14_bEZJ13() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString14");
        String result = testObject.getTarget();
        assertEquals("testString14", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest15_iQTC14() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString15");
        String result = testObject.getTarget();
        assertEquals("testString15", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest16_wSPB15() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString16");
        String result = testObject.getTarget();
        assertEquals("testString16", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getTargetTest17_ChpZ16() {
        ProcessingInstructionTest testObject = new ProcessingInstructionTest("testString17");
        String result = testObject.getTarget();
        assertEquals("testString17", result);
    }
}