/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_HttpSessionHandler_Test_Passing {
    HttpSessionHandler httpsessionhandler;
    HttpSession httpsession;
    HttpSessionAndServletContext httpsessionandservletcontext;
    HttpSessionHandler httpSessionHandler;
    HttpSession httpSession;
    HttpSessionAndServletContext httpSessionAndServletContext;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProperty() {
        httpSession = mock(HttpSession.class);
        httpSessionAndServletContext = mock(HttpSessionAndServletContext.class);
        httpSessionHandler = new HttpSessionHandler();
        when(httpSessionAndServletContext.getSession()).thenReturn(httpSession);
        httpSessionHandler.setProperty(httpSessionAndServletContext, "property", "value");
        verify(httpSession).setAttribute("property", "value");
    }
}