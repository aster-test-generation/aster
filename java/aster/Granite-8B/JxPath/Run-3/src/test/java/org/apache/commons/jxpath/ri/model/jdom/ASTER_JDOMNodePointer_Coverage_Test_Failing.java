/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.jdom.Document;
import org.jdom.Element;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JDOMNodePointer_Coverage_Test_Failing {
    {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNonEmptyPrefix_PYUj1() {
        final Object node = new Element("prefix:element");
        final String prefix = JDOMNodePointer.getPrefix(node);
        assertEquals("prefix", prefix);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateAttribute2_Bdsn1() {
        JDOMNodePointer jDOMNodePointer = new JDOMNodePointer(null, null, null);
        jDOMNodePointer.createAttribute(null, null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChild_jgfG0() {
        JDOMNodePointer pointer = new JDOMNodePointer(null, null, null);
        Locale locale = new Locale("");
        pointer = new JDOMNodePointer(null, locale, null);
        pointer = new JDOMNodePointer(null, locale, null);
        NodePointer ptr = pointer.createChild(null, null, 0);
        ptr.setValue(null);
        assertEquals(null, ptr.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueForElementNode_LISe0_vrHe0() {
        JDOMNodePointer pointer = new JDOMNodePointer(new Element(""), Locale.getDefault());
        String result = (String) pointer.getValue();
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafForElementNode_uHjL0_fid2() {
        JDOMNodePointer jDOMNodePointer = new JDOMNodePointer(new Element("root"), Locale.ENGLISH);
        boolean isLeaf = jDOMNodePointer.isLeaf();
        assertFalse(isLeaf);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueForElementNode_LISe0_vrHe0_fid2() {
        JDOMNodePointer pointer = new JDOMNodePointer(new Element("root"), Locale.getDefault());
        String result = (String) pointer.getValue();
        assertEquals("root", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueForDocumentNode_LISe7_veHL7_fid2() {
        Document document = new Document(new Element("root"));
        JDOMNodePointer pointer = new JDOMNodePointer(document, Locale.getDefault());
        String result = (String) pointer.getValue();
        assertEquals("root", result);
    }
}