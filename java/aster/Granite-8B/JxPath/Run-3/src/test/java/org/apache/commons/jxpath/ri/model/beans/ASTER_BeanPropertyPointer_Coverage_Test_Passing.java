/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BeanPropertyPointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPropertyNameNull_TSOp0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        String propertyName = beanPropertyPointer.getPropertyName();
        assertEquals("*", propertyName);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithReturnStatement_Jpqb3() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        NodePointer nodePointer = beanPropertyPointer.createPath(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyName1_LULY1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyName(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyName2_JUuD2() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyName(" ");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetImmediateNode1_Hxku0() {
        BeanPropertyPointer bpp = new BeanPropertyPointer(null, null);
        bpp.getImmediateNode();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove1_PycT0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.remove();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPropertyDescriptors1_nOqd0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.getPropertyDescriptors();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetIndexWhenIndexIsSameAsCurrentIndex_EErb0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setIndex(0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPropertyNames1_TByD0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        String[] result = beanPropertyPointer.getPropertyNames();
        assertEquals(0, result.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBaseValueWhenUninitialized_hAbW0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.getBaseValue();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsActualProperty_SUHJ0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        boolean result = beanPropertyPointer.isActualProperty();
        Assertions.assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex1_PUxI0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyIndex(0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex2_ETVo1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyIndex(1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex3_oZDq2() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyIndex(2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex4_RBHG3() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyIndex(3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex5_SCCt4() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyIndex(4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex6_lnjc5() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyIndex(5);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex7_TuUX6() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyIndex(6);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex8_MsKp7() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyIndex(7);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPropertyCount1_FRRo0() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(null, false);
        BeanPropertyPointer bpp = new BeanPropertyPointer(parent, beanInfo);
        int result = bpp.getPropertyCount();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPropertyCount2_mvjk1() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(null, true);
        BeanPropertyPointer bpp = new BeanPropertyPointer(parent, beanInfo);
        int result = bpp.getPropertyCount();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollectionWhenPropertyDescriptorIsIndexedPropertyDescriptor_yjOM2_ucoK0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        JXPathBasicBeanInfo jXPathBasicBeanInfo = new JXPathBasicBeanInfo(null, false);
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(domNodePointer, jXPathBasicBeanInfo);
        boolean result = beanPropertyPointer.isCollection();
        Assertions.assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyName3_hNxt3() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setPropertyName("abc");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsContainer_HhXL0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        boolean isContainer = beanPropertyPointer.isContainer();
    }
}