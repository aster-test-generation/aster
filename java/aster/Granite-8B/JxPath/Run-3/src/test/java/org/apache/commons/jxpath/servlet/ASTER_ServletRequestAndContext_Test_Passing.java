/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContext;
import javax.servlet.ServletRequest;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockServletContext;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ServletRequestAndContext_Test_Passing {
    private ServletRequest request;
    private ServletContext context;
    private ServletRequestAndContext servletrequestandcontext;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetServletRequest() throws Exception {
        request = mock(ServletRequest.class);
        context = mock(ServletContext.class);
        servletrequestandcontext = new ServletRequestAndContext(request, context);
        assertEquals(request, servletrequestandcontext.getServletRequest());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSession_Byjl0() {
        ServletRequest request = new MockHttpServletRequest();
        ServletContext context = new MockServletContext();
        ServletRequestAndContext servletRequestAndContext = new ServletRequestAndContext(request, context);
        HttpSession session = servletRequestAndContext.getSession();
        assertNotNull(session);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetServletRequest_avZZ0() {
        ServletRequestAndContext servletRequestAndContext = new ServletRequestAndContext(request, context);
        ServletRequest actualServletRequest = servletRequestAndContext.getServletRequest();
        assertEquals(request, actualServletRequest);
    }
}