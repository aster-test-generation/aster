/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathIntrospector_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanInfoWithClass_MUUi1() {
        final Class beanClass = Object.class;
        JXPathBeanInfo beanInfo = JXPathIntrospector.getBeanInfo(beanClass);
        assertNotNull(beanInfo);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindDynamicBeanInfo_PjYT0() {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterAtomicClass_JZUs0() {
        Map<Class, Object> byClass = new HashMap<>();
        JXPathIntrospector.registerAtomicClass(String.class);
        assertNotNull(byClass.get(String.class));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass1_QrwC0() {
        final Class beanClass = Object.class;
        final Class dynamicPropertyHandlerClass = Object.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass2_kVmU1() {
        final Class beanClass = String.class;
        final Class dynamicPropertyHandlerClass = String.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass3_vBri2() {
        final Class beanClass = Integer.class;
        final Class dynamicPropertyHandlerClass = Integer.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass4_cWvq3() {
        final Class beanClass = Float.class;
        final Class dynamicPropertyHandlerClass = Float.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass5_QhwE4() {
        final Class beanClass = Double.class;
        final Class dynamicPropertyHandlerClass = Double.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass6_jhhN5() {
        final Class beanClass = Long.class;
        final Class dynamicPropertyHandlerClass = Long.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass7_KNBH6() {
        final Class beanClass = Short.class;
        final Class dynamicPropertyHandlerClass = Short.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass8_Qttz7() {
        final Class beanClass = Byte.class;
        final Class dynamicPropertyHandlerClass = Byte.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass9_XaFc8() {
        final Class beanClass = Boolean.class;
        final Class dynamicPropertyHandlerClass = Boolean.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClass10_FRCH9() {
        final Class beanClass = Character.class;
        final Class dynamicPropertyHandlerClass = Character.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }
}