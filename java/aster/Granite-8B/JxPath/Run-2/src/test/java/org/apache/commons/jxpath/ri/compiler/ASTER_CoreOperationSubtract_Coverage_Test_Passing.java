/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CoreOperationSubtract_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValueWithPositiveNumbers_Bejm0() {
        CoreOperationSubtract subtract = new CoreOperationSubtract(new Constant(10.0), new Constant(5.0));
        double result = (double) subtract.computeValue(null);
        assertEquals(5.0, result, 0.0);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValueWithNegativeNumbers_pAwm1() {
        CoreOperationSubtract subtract = new CoreOperationSubtract(new Constant(-10.0), new Constant(5.0));
        double result = (double) subtract.computeValue(null);
        assertEquals(-15.0, result, 0.0);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValueWithZero_zWyz2() {
        CoreOperationSubtract subtract = new CoreOperationSubtract(new Constant(0.0), new Constant(0.0));
        double result = (double) subtract.computeValue(null);
        assertEquals(0.0, result, 0.0);
    }
}