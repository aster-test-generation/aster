/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import java.util.HashMap;
import org.apache.commons.jxpath.Pointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.HashMap;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_NamespaceResolver_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetExternallyRegisteredNamespaceURI_IqfN0() {
		NamespaceResolver resolver = new NamespaceResolver(null);
		resolver.namespaceMap.put("prefix", "uri");
		assertEquals("uri", resolver.getExternallyRegisteredNamespaceURI("prefix"));
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetNamespaceURI_qJMD0() {
		NamespaceResolver resolver = new NamespaceResolver(null);
		resolver.getNamespaceURI("prefix");
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClone1_kXte0_CFgn0() {
    NamespaceResolver namespaceResolver = new NamespaceResolver(null);
    NamespaceResolver result = (NamespaceResolver) namespaceResolver.clone();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNamespaceContextPointer_vvZh0() {
        NamespaceResolver resolver = new NamespaceResolver(null);
        Pointer pointer = resolver.getNamespaceContextPointer();
    }
}