/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BasicVariables_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariable_XuXq0() {
        BasicVariables basicVariables = new BasicVariables();
        String varName = "exampleVar";
        boolean expected = false;
        boolean actual = basicVariables.isDeclaredVariable(varName);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_PThq0() {
        BasicVariables basicVariables = new BasicVariables();
        String expected = "{}";
        String actual = basicVariables.toString();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getVariable_with_invalid_variable_name_JHpj1() {
        BasicVariables basicVariables = new BasicVariables();
        try {
            basicVariables.getVariable("invalidVarName");
            fail("Expected IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException e) {
            assertEquals("No such variable: 'invalidVarName'", e.getMessage());
        }
    }
}