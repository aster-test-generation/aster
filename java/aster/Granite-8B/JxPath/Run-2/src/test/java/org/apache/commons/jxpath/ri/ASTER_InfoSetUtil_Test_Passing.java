/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_InfoSetUtil_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberStringValidDouble_FbvF3() {
        Number result = InfoSetUtil.number("3.14");
        assertEquals(3.14, result.doubleValue(), 0.01);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueBooleanTrue_qBZw8() {
        String result = InfoSetUtil.stringValue(true);
        assertEquals("true", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueBooleanFalse_EMFA9() {
        String result = InfoSetUtil.stringValue(false);
        assertEquals("false", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueNumber_mvOB10() {
        Number number = new Double(3.14);
        String result = InfoSetUtil.stringValue(number);
        assertEquals("3.14", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueString_arYg11() {
        String result = InfoSetUtil.stringValue("hello");
        assertEquals("hello", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueNumber_gobE0() {
        Number number = new Double(1.23);
        assertEquals(1.23, InfoSetUtil.doubleValue(number), 0.001);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueBooleanTrue_iSNK1() {
        Boolean bool = new Boolean(true);
        assertEquals(0.0, InfoSetUtil.doubleValue(bool), 0.001);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueBooleanFalse_VPpq2() {
        Boolean bool = new Boolean(false);
        assertEquals(0.0, InfoSetUtil.doubleValue(bool), 1.001);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueStringEmpty_IIOI3() {
        String str = "";
        assertEquals(0.0, InfoSetUtil.doubleValue(str), 0.001);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueStringValid_FDTo4() {
        String str = "1.23";
        assertEquals(1.23, InfoSetUtil.doubleValue(str), 0.001);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueStringInvalid_zSle8() {
        String str = "abc";
        assertEquals(Double.NaN, InfoSetUtil.doubleValue(str), 0.001);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValue1_zVKo0() {
        Object object = new String("Hello");
        assertEquals("Hello", InfoSetUtil.stringValue(object));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValue2_IUbm1() {
        Object object = new Double(3.14);
        assertEquals("3.14", InfoSetUtil.stringValue(object));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValue3_mQOv2() {
        Object object = new Long(100);
        assertEquals("100", InfoSetUtil.stringValue(object));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValue4_mICg3() {
        Object object = new Boolean(true);
        assertEquals("true", InfoSetUtil.stringValue(object));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValue5_qBjD4() {
        Object object = null;
        assertEquals("", InfoSetUtil.stringValue(object));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValue8_pUaD7() {
        Object object = new Object();
    }
}