/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;

import java.lang.reflect.Method;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_MethodLookupUtils_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupStaticMethod2_nyjk1_4() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupStaticMethod(String.class, "concat", new Object[]{"a", "b"});
        method = methodLookupUtils.lookupStaticMethod(String.class, "concat", new Object[]{null, null});
        method = methodLookupUtils.lookupStaticMethod(String.class, "concat", new Object[]{null, "b"});
        method = methodLookupUtils.lookupStaticMethod(String.class, "concat", new Object[]{"a", null});
        Assertions.assertNull(method);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod_tPio0() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{0, 1});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod2_zayL1() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{0});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod3_HkdO2() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod4_Vhdq3() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{null, 1});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod5_ETVU4() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{null, null});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod6_DCUb5() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{null});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod7_Qrbn6() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{1, null});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod9_MPSa8() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{1, 1});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod10_Iqbq9() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{1, 2});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod11_CYIk10() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{1, 3});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod12_NMtn11() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{1, 4});
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod13_usLj12() {
        MethodLookupUtils methodLookupUtils = new MethodLookupUtils();
        Method method = methodLookupUtils.lookupMethod(String.class, "substring", new Object[]{1, 5});
    }
}