/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RootContext_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_DhKU0() {
        RootContext rootContext = new RootContext(null, null);
        Object value = rootContext.getValue();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void getCurrentNodePointerTest_bhdD0() {
    RootContext rootContext = new RootContext(null, null);
    NodePointer pointer = rootContext.getCurrentNodePointer();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullRegisters_eAhk0() {
        RootContext rootContext = new RootContext(null, null);
        assertEquals(RootContext.UNKNOWN_VALUE, rootContext.getRegisteredValue(0));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIdExceedsMaxRegister_kNJl1() {
        RootContext rootContext = new RootContext(null, null);
        assertEquals(RootContext.UNKNOWN_VALUE, rootContext.getRegisteredValue(Integer.MAX_VALUE));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testgetRootContext_gbvA0() {
	RootContext rootContext = new RootContext(null, null);
	rootContext.getRootContext();
}
}