/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import java.util.Locale;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CollectionPointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testIsContainer_akKz0() {
		CollectionPointer collectionPointer = new CollectionPointer(new Object(), new Locale("en"));
		boolean result = collectionPointer.isContainer();
		boolean expected = false;
		assertEquals(expected, result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testNamespacePointer_XTCi0() {
		CollectionPointer collectionPointer = new CollectionPointer(new Object(), new Locale(""));
		NodePointer nodePointer = collectionPointer.namespacePointer("");
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testNamespaceIterator_PkCD0_YeDT0() {
		DOMNodePointer parent = null;
		Object collection = null;
		CollectionPointer collectionPointer = new CollectionPointer(parent, collection);
		NodeIterator actualNodeIterator = collectionPointer.namespaceIterator();
		NodeIterator expectedNodeIterator = null;
		assertEquals(expectedNodeIterator, actualNodeIterator);
	}
}