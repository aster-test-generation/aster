/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.container;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.xml.DocumentContainer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ContainerPointer_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testIsCollection1_VOGm0() {
		ContainerPointer containerPointer = new ContainerPointer(new DOMNodePointer(null, null, null), new DocumentContainer(null));
		boolean result = containerPointer.isCollection();
		boolean expected = false;
		assertEquals(expected, result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testIsContainer_AFDH0() {
		ContainerPointer containerPointer = new ContainerPointer(new DOMNodePointer(null, null, null), new DocumentContainer(null));
		boolean isContainer = containerPointer.isContainer();
		assertTrue(isContainer);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void test_hashCode_oNzD0()
	{
	    ContainerPointer containerPointer = new ContainerPointer(new DOMNodePointer(null, null, null), new DocumentContainer(null));
	    containerPointer.hashCode();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testIsLeaf_cmZZ0() {
		ContainerPointer containerPointer = new ContainerPointer(new DOMNodePointer(null, null, null), new DocumentContainer(null));
		boolean isLeaf = containerPointer.isLeaf();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetNamespaceURI_Vuqr0() {
		ContainerPointer containerPointer = new ContainerPointer(new DOMNodePointer(null, null, null), new DocumentContainer(null));
		containerPointer.getNamespaceURI("prefix");
	}
}