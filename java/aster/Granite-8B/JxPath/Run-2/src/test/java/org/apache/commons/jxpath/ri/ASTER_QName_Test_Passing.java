/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QName_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_GSyu0() {
        QName qName = new QName("prefix", "localName");
        assertEquals("localName", qName.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithJustLocalName_SXBv1() {
        QName qName = new QName("localName");
        assertEquals("localName", qName.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithJustPrefix_wHSp2() {
        QName qName = new QName("prefix");
        assertEquals("prefix", qName.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithNullPrefixAndLocalName_LOGo3() {
        QName qName = new QName(null, null);
        assertNull(qName.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithNullPrefix_wwMK4() {
        QName qName = new QName(null, "localName");
        assertEquals("localName", qName.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithNullLocalName_iggF5() {
        QName qName = new QName("prefix", null);
        assertNull(qName.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrefix_ujYv0() {
        QName qName = new QName("prefix", "localName");
        assertEquals("prefix", qName.getPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_TtKZ0_1() {
        QName qName1 = new QName("prefix", "localName");
        QName qName2 = new QName("qualifiedName");
        assertEquals("prefix:localName", qName1.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_TtKZ0_2() {
        QName qName1 = new QName("prefix", "localName");
        QName qName2 = new QName("qualifiedName");
        assertEquals("qualifiedName", qName2.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithNullPrefix_bgIu2() {
        QName qName = new QName(null, "localName");
        assertEquals("localName", qName.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithNullLocalName_gOof3() {
        QName qName = new QName("prefix", null);
        assertEquals("prefix:null", qName.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithEmptyLocalName_oJGX5() {
        QName qName = new QName("prefix", "");
        assertEquals("prefix:", qName.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_NSFP0() {
        QName qName1 = new QName("prefix", "localName");
        QName qName2 = new QName("prefix", "localName");
        Assertions.assertEquals(qName1.hashCode(), qName2.hashCode());
    }
}