/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DynamicPropertyPointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testremove_SqQc1() throws Exception{
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPropertyIndex1_lpym0() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    dynamicPropertyPointer.setPropertyIndex(0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPropertyIndex2_brlz1() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    dynamicPropertyPointer.setPropertyIndex(1);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPropertyIndex3_PzmX2() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    dynamicPropertyPointer.setPropertyIndex(2);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPropertyIndex4_prSv3() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    dynamicPropertyPointer.setPropertyIndex(3);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testIsActualProperty_NZya0() {
		DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
		boolean actual = dynamicPropertyPointer.isActualProperty();
		boolean expected = true;
		assertEquals(expected, actual);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetValueWithNullObject_bunw4_1() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        NullPointerException exception = assertThrows(NullPointerException.class, () -> dynamicPropertyPointer.setValue("value"));}
}