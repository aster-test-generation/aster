/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathException;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.w3c.dom.Node;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DOMNodePointer_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompareChildNodePointers1_aYsI0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        NodePointer pointer1 = null;
        NodePointer pointer2 = null;
        int actual = domNodePointer.compareChildNodePointers(pointer1, pointer2);
        assertEquals(0, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValue_NodeTypeIsTextNode_XTyU0() {
    DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
    Node node = mock(Node.class);
    when(node.getNodeType()).thenReturn(Node.TEXT_NODE);
    domNodePointer.setValue(null);
    verify(node, times(1)).setNodeValue(anyString());
    verify(node, times(1)).getParentNode().removeChild(node);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValue_ValueIsString_GRdo4() {
    DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
    Node node = mock(Node.class);
    String string = "test";
    domNodePointer.setValue(string);
    verify(node, times(0)).setNodeValue(anyString());
    verify(node, times(0)).getParentNode().removeChild(node);
    verify(node, times(1)).getOwnerDocument().createTextNode(anyString());
    verify(node, times(1)).appendChild(any(Node.class));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValue_ValueIsStringAndNodeTypeIsTextNode_esdy5() {
    DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
    Node node = mock(Node.class);
    when(node.getNodeType()).thenReturn(Node.TEXT_NODE);
    String string = "test";
    domNodePointer.setValue(string);
    verify(node, times(1)).setNodeValue(anyString());
    verify(node, times(0)).getParentNode().removeChild(node);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValue_ValueIsStringAndNodeTypeIsCDATASectionNode_CXgy6() {
    DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
    Node node = mock(Node.class);
    when(node.getNodeType()).thenReturn(Node.CDATA_SECTION_NODE);
    String string = "test";
    domNodePointer.setValue(string);
    verify(node, times(1)).setNodeValue(anyString());
    verify(node, times(0)).getParentNode().removeChild(node);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValue_ValueIsStringAndNodeTypeIsNotTextNodeOrCDATASectionNode_zgAD7() {
    DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
    Node node = mock(Node.class);
    when(node.getNodeType()).thenReturn(Node.ELEMENT_NODE);
    String string = "test";
    domNodePointer.setValue(string);
    verify(node, times(0)).setNodeValue(anyString());
    verify(node, times(0)).getParentNode().removeChild(node);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveWhenParentIsNull_FVpG0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        try {
            domNodePointer.remove();
        } catch (JXPathException e) {
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLanguageWhenCurrentLanguageIsNull_pvSU0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        boolean result = domNodePointer.isLanguage("en");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateAttribute1_TcwB0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        domNodePointer.createAttribute(null, null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_kyXl0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        Pointer pointer = domNodePointer.getPointerByID(null, null);
        assertEquals(null, pointer);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_LSNw0() {
        Node node = null;
        Locale locale = null;
        String id = null;
        DOMNodePointer domNodePointer = new DOMNodePointer(node, locale, id);
        String actual = domNodePointer.getNamespaceURI();
        String expected = null;
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test2_CRDX1() {
        VariablePointer parent = null;
        Node node = null;
        DOMNodePointer domNodePointer = new DOMNodePointer(parent, node);
        String actual = domNodePointer.getNamespaceURI();
        String expected = null;
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test3_Stoh2() {
        Node node = null;
        Locale locale = null;
        DOMNodePointer domNodePointer = new DOMNodePointer(node, locale);
        String actual = domNodePointer.getNamespaceURI();
        String expected = null;
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChild_MDpi0() {
        DOMNodePointer ptr = new DOMNodePointer(null, null, null);
        ptr.createChild(null, null, 0, null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChild2_yIOM1() {
        DOMNodePointer ptr = new DOMNodePointer(null, null, null);
        ptr.createChild(null, null, 0);
    }
}