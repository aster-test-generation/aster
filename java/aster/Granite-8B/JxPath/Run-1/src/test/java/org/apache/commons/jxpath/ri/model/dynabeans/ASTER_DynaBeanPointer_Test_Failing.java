/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.beanutils.DynaBean;
import org.apache.commons.jxpath.ri.QName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynaBeanPointer_Test_Failing {
    @Mock
    private QName name;
    @Mock
    private DynaBean dynaBean;
    @Mock
    private DynaBeanPointer parent;
    private DynaBeanPointer dynabeanpointer;
    @Mock
    private QName mockQName;
    @Mock
    private Locale locale;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testhashCode() throws Exception {
        name = mockQName;
        dynabeanpointer = new DynaBeanPointer(name, null, null);
        // Arrange
        when(mockQName.hashCode()).thenReturn(1);
        // Act
        int result = dynabeanpointer.hashCode();
        // Assert
        assertEquals(1, result);
    }
}