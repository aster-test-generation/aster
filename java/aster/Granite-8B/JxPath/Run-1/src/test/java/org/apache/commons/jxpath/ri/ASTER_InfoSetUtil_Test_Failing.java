/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.*;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_InfoSetUtil_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueObject_HjHS6() {
        assertEquals("java.lang.Object@d8f4168", InfoSetUtil.stringValue(new Object()));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueArray_cMYR7() {
        assertEquals("[Ljava.lang.Object;@a96be9cc", InfoSetUtil.stringValue(new Object[]{"[Ljava.lang.Object;@a96be9cc"}));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueList_fRDQ8() {
        assertEquals("[Hello]", InfoSetUtil.stringValue(new java.util.ArrayList<String>(Arrays.asList("[Hello]"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueMap_pMur9() {
        assertEquals("{key=Hello}", InfoSetUtil.stringValue(new java.util.HashMap<String, String>(Collections.singletonMap("key", "{key=Hello}"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueSet_DakJ10() {
        assertEquals("[Hello]", InfoSetUtil.stringValue(new java.util.HashSet<String>(Arrays.asList("[Hello]"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberBooleanTrue_KBbz1() {
        assertEquals(1, InfoSetUtil.number(true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberBooleanFalse_JYkl2_fid1() {
        assertEquals(0, InfoSetUtil.number(false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueObject_HjHS6_fid1() {
        assertEquals("Hello", InfoSetUtil.stringValue(new Object()));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueArray_cMYR7_fid1() {
        assertEquals("Hello", InfoSetUtil.stringValue(new Object[]{"Hello"}));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueList_fRDQ8_fid1() {
        assertEquals("Hello", InfoSetUtil.stringValue(new java.util.ArrayList<String>(Arrays.asList("Hello"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueMap_pMur9_fid1() {
        assertEquals("Hello", InfoSetUtil.stringValue(new java.util.HashMap<String, String>(Collections.singletonMap("key", "Hello"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueSet_DakJ10_fid1() {
        assertEquals("Hello", InfoSetUtil.stringValue(new java.util.HashSet<String>(Arrays.asList("Hello"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberStringNotANumber_XUTC4_lcYX0_fid3() {
        assertEquals("NOT_A_NUMBER", InfoSetUtil.stringValue("abc"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberObject_pqQj7_afqC0() {
        assertEquals("Object", InfoSetUtil.stringValue(new Object()));
    }
}