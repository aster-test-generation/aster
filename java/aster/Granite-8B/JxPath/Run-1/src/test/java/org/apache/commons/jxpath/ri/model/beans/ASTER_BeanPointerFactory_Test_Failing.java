/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBeanInfo;
import org.apache.commons.jxpath.JXPathIntrospector;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPointerFactory_Test_Failing {
    @Mock
    private JXPathIntrospector jXPathIntrospector;
    @Mock
    private JXPathBeanInfo jXPathBeanInfo;
    @Mock
    private QName qName;
    @Mock
    private Object bean;
    @Mock
    private Locale locale;
    private BeanPointerFactory beanpointerfactory;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_xvAC0_1() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        when(jXPathIntrospector.getBeanInfo(bean.getClass())).thenReturn(jXPathBeanInfo);
        NodePointer parent = Mockito.mock(NodePointer.class);
        when(parent.getParent()).thenReturn(null);
        NodePointer result = beanpointerfactory.createNodePointer(parent, qName, bean);
        verify(jXPathIntrospector, times(1)).getBeanInfo(bean.getClass());
        assertNotNull(jXPathBeanInfo);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_xvAC0_2() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        when(jXPathIntrospector.getBeanInfo(bean.getClass())).thenReturn(jXPathBeanInfo);
        NodePointer parent = Mockito.mock(NodePointer.class);
        when(parent.getParent()).thenReturn(null);
        NodePointer result = beanpointerfactory.createNodePointer(parent, qName, bean);
        verify(jXPathIntrospector, times(1)).getBeanInfo(bean.getClass());
        assertEquals(parent, result.getParent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_xvAC0_3() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        when(jXPathIntrospector.getBeanInfo(bean.getClass())).thenReturn(jXPathBeanInfo);
        NodePointer parent = Mockito.mock(NodePointer.class);
        when(parent.getParent()).thenReturn(null);
        NodePointer result = beanpointerfactory.createNodePointer(parent, qName, bean);
        verify(jXPathIntrospector, times(1)).getBeanInfo(bean.getClass());
        assertNotNull(result);
    }
}