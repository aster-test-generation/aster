/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.beanutils.LazyDynaBean;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_StrictLazyDynaBeanPointerFactory_Test_Failing {
    @Mock
    private NodePointer parent;
    @Mock
    private QName name;
    @Mock
    private LazyDynaBean object;
    private StrictLazyDynaBeanPointerFactory strictlazydynabeanpointerfactory;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_oVlN0() {
        StrictLazyDynaBeanPointerFactory factory = new StrictLazyDynaBeanPointerFactory();
        int order = factory.getOrder();
        assertEquals(DynaBeanPointerFactory.DYNA_BEAN_POINTER_FACTORY_ORDER - 2, order);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer() throws Exception {
        strictlazydynabeanpointerfactory = new StrictLazyDynaBeanPointerFactory();
        // Arrange
        when(name.toString()).thenReturn("testName");
        when(object instanceof LazyDynaBean).thenReturn(true);
        // Act
        NodePointer result = strictlazydynabeanpointerfactory.createNodePointer(parent, name, object);
        // Assert
        verify(parent).createChild(any(JXPathContext.class), eq(name), anyInt());
        verify(object, times(1)).getClass();
        assertEquals("StrictLazyDynaBeanPointer", result.getClass().getSimpleName());
    }
}