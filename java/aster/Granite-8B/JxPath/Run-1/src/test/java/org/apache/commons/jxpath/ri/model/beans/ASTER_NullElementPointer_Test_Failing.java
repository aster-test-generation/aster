/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullElementPointer_Test_Failing {
    @Mock
    private DOMNodePointer immediateParentPointer;
    @Mock
    private QName name;
    @Mock
    private DOMNodePointer parent;
    @Mock
    private JXPathContext jXPathContext;
    @Mock
    private NodePointer nodePointer;
    @Mock
    private JXPathContext jxpathContext;
    @Mock
    private Locale locale;
    @Mock
    private DOMNodePointer parentPointer;
    @Mock
    private DOMNodePointer domNodePointer;
    @Mock
    private VariablePointer variablePointer;
    @Mock
    private QName qName;
    NullElementPointer nullelementpointer;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetValue() throws Exception {
        nullelementpointer = new NullElementPointer(parent, 0);
        // Arrange
        Object value = "Test Value";
        // Act
        nullelementpointer.setValue(value);
        // Assert
        verify(nullelementpointer).setValue(value);
        assertEquals("Collection element does not exist: " + nullelementpointer, nullelementpointer.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_tLnP0() {
        QName qName = new QName("prefix", "localName");
        VariablePointer variablePointer = new VariablePointer(qName);
        DOMNodePointer domNodePointer = new DOMNodePointer(variablePointer, null);
        NullElementPointer nullElementPointer = new NullElementPointer(domNodePointer, 0);
        nullElementPointer.setValue("value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValuePointer() throws Exception {
        nullelementpointer = new NullElementPointer(parent, 0);
        NodePointer result = nullelementpointer.getValuePointer();
        Assertions.assertEquals(new NullPointer(nullelementpointer, name), result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetImmediateNode() throws Exception {
        MockitoAnnotations.initMocks(this);
        NullElementPointer nullelementpointer = new NullElementPointer(parent, 0);
        Mockito.when(nullelementpointer.getImmediateNode()).thenReturn(null);
        Assertions.assertNull(nullelementpointer.getImmediateNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_rKhD0() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NullElementPointer nullElementPointer = new NullElementPointer(parent, 0);
        Object immediateNode = nullElementPointer.getImmediateNode();
        assertNotNull(immediateNode);
        assertEquals(null, immediateNode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode() throws Exception {
        when(immediateParentPointer.hashCode()).thenReturn(1);
        nullelementpointer = new NullElementPointer(parentPointer, 2);
        assertEquals(3, nullelementpointer.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName() {
        MockitoAnnotations.initMocks(this);
        when(name.getName()).thenReturn("TestName");
        NullElementPointer nullelementpointer = new NullElementPointer(parent, 0);
        QName result = nullelementpointer.getName();
        assertEquals("null", result.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathNullParent_Wbwv0() {
        NullElementPointer nullElementPointer = new NullElementPointer(null, 0);
        assertEquals("", nullElementPointer.asPath());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_rKhD0_1() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NullElementPointer nullElementPointer = new NullElementPointer(parent, 0);
        Object immediateNode = nullElementPointer.getImmediateNode();
        assertNotNull(immediateNode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_teTP0_ZeMi0() {
        NullElementPointer nullElementPointer = new NullElementPointer(null, 0);
        JXPathContext context = JXPathContext.newContext(null);
        Object value = "testValue";
        NodePointer result = nullElementPointer.createPath(context, value);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_BrhL0_bvyO0() {
        NullElementPointer nullElementPointer = new NullElementPointer(null, 0);
        JXPathContext context = JXPathContext.newContext(null);
        NodePointer result = nullElementPointer.createPath(context);
        assert result != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testasPath_JzEo0() throws Exception {
        MockitoAnnotations.initMocks(this);
        when(nodePointer.asPath()).thenReturn("nodePath");
        when(domNodePointer.asPath()).thenReturn("domNodePath");
        when(variablePointer.asPath()).thenReturn("variablePath");
        when(qName.toString()).thenReturn("qName");
        NullElementPointer nullElementPointer = new NullElementPointer(domNodePointer, 1);
        String asPath = nullElementPointer.asPath();
        assertEquals("domNodePath/.[1]", asPath);
    }
}