/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_KeywordVariables_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariable_mNIe0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        boolean result = keywordVariables.isDeclaredVariable("variable");
        Assertions.assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariable_HORu0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        keywordVariables.declareVariable("variable", new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getVariable_whenVariableIsDeclared_shouldReturnObject_lqwN0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        Object result = keywordVariables.getVariable("variable");
        assertEquals(new Object(), result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUndeclareVariable_rlDz0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        keywordVariables.undeclareVariable("variable");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getVariable_whenVariableIsDeclared_shouldReturnObject_lqwN0_fid1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        Object result = keywordVariables.getVariable("variable");
        assertNull(new Object());
    }
}