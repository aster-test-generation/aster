/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BasicNodeSet_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValues_EmptyPointersList_ReturnsEmptyList_bCmy0() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List actual = basicNodeSet.getValues();
        assertEquals(0, actual.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_ngoI0() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        String result = basicNodeSet.toString();
        assertEquals("toString", "toString", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodesWhenNodesIsNull_xppT0() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List result = basicNodeSet.getNodes();
        assert result != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodesWhenNodesIsNotNull_HdpY1() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        basicNodeSet.getNodes(); // call getNodes to initialize nodes
        List result = basicNodeSet.getNodes();
        assert result != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodesWhenPointersIsEmpty_urgD2() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        basicNodeSet.getNodes(); // call getNodes to initialize nodes
        List result = basicNodeSet.getNodes();
        assert result.isEmpty();
    }
}