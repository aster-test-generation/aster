/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.List;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JDOMNamespaceIterator_Test_Passing {
    @Mock
    private DOMNodePointer parent;
    private JDOMNamespaceIterator jdomnamespaceiterator;
    @Mock
    private List namespaces;
    private int position = 0;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_PositionGreaterThan0_Ecyz3_AtIN0() {
        JDOMNamespaceIterator iterator = new JDOMNamespaceIterator(new DOMNodePointer(null, Locale.US, null));
        iterator.setPosition(2);
        NodePointer result = iterator.getNodePointer();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition_fid2() throws Exception {
        jdomnamespaceiterator = new JDOMNamespaceIterator(parent);
        // Arrange
        jdomnamespaceiterator.setPosition(0);
        // Act
        int actualPosition = jdomnamespaceiterator.getPosition();
        // Assert
        assertEquals(0, actualPosition);
    }
}