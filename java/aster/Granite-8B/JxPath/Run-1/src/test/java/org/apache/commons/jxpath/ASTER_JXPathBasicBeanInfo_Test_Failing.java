/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.beans.PropertyDescriptor;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathBasicBeanInfo_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDynamicPropertyHandlerClass_zUbc0_FwnE0() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class, true);
        boolean result = beanInfo.isDynamic();
        assert result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsAtomicDynamicPropertyHandlerClass_yDhn2_rYXa0_fid2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, null);
        assertTrue(beanInfo.isDynamic());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptorsForClass_kpgJ0_XLBt1_2_fid2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class);
        PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
        Assertions.assertEquals(0, propertyDescriptors.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptorsForInterface_GBBt1_OqDU0_2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, true);
        PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
        Assertions.assertEquals(0, propertyDescriptors.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptorsForClassWithDynamicPropertyHandler_IxQs2_ZdMF0_2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, DynamicPropertyHandler.class);
        PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
        Assertions.assertEquals(0, propertyDescriptors.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptor1_pmyA0_Xevq0() {
        Class<?> clazz = Object.class;
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(clazz, null);
        PropertyDescriptor propertyDescriptor = beanInfo.getPropertyDescriptor("propertyName");
        Assertions.assertNotNull(propertyDescriptor);
    }
}