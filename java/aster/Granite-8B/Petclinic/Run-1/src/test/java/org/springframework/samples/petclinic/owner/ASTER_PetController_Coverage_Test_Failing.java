/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.owner;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PetController_Coverage_Test_Failing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFindPetWithOwnerNotFound_Bcbz2_uOhu0() {
		OwnerRepository ownerRepository = mock(OwnerRepository.class);
		when(ownerRepository.findById(1)).thenReturn(null);
		PetController petController = new PetController(ownerRepository);
		Pet pet = petController.findPet(1, 1);
		assertNotNull(pet);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFindPetWithPetFound_qqnG4_BLhI0_2() {
		Owner owner = new Owner();
		owner.setId(1);
		Pet pet = new Pet();
		pet.setId(1);
		owner.addPet(pet);
		OwnerRepository ownerRepository = mock(OwnerRepository.class);
		when(ownerRepository.findById(1)).thenReturn(owner);
		PetController petController = new PetController(ownerRepository);
		Pet foundPet = petController.findPet(1, 1);
		assertEquals(pet, foundPet);
	}

}