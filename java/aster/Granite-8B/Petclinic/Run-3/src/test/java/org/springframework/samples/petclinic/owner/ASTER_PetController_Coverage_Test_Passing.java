/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.owner;

import org.springframework.ui.ModelMap;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PetController_Coverage_Test_Passing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFindPetPetIdNull_CZTG0() {
		PetController petController = new PetController(null);
		Pet pet = petController.findPet(1, null);
		assertTrue(pet instanceof Pet);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testInitCreationForm1_vlRH0_uJZe0() {
		OwnerRepository owners = mock(OwnerRepository.class);
		Owner owner = new Owner();
		owner.setCity("city");
		owner.addPet(new Pet());
		owner.setTelephone("telephone");
		owner.setAddress("address");
		PetController petController = new PetController(owners);
		ModelMap model = new ModelMap();
		String actual = petController.initCreationForm(owner, model);
		String expected = "pets/createOrUpdatePetForm";
		assertEquals(expected, actual);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFindPetPetIdNotNull_hFNT1_dGUX0() {
		OwnerRepository ownerRepository = mock(OwnerRepository.class);
		PetController petController = new PetController(ownerRepository);
		Pet pet = petController.findPet(1, 1);
		assertTrue(pet instanceof Pet);
	}

}