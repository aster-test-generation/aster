/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_NewAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testClassConstantPoolConstructor_jduj1() {
		ClassConstantPool pool = new ClassConstantPool();
		assertEquals(0, pool.size());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLayoutIndex_kRIX0() {
        CPUTF8 cputf8 = new CPUTF8("string");
        NewAttribute newAttribute = new NewAttribute(cputf8, 0);
        assertEquals(0, newAttribute.getLayoutIndex());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLength1_xUEi0() {
    NewAttribute newAttribute = new NewAttribute(new CPUTF8("string"), 0);
    assertEquals(0, newAttribute.getLength());
}
}