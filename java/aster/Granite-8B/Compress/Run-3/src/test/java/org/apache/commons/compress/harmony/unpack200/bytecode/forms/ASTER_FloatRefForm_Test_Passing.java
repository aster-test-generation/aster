/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode.forms;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FloatRefForm_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_eizI0() {
        FloatRefForm floatRefForm = new FloatRefForm(0, "name", new int[]{1, 2, 3});
        int poolID = floatRefForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_FLOAT, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolIDWidened_ZKmn1() {
        FloatRefForm floatRefForm = new FloatRefForm(0, "name", new int[]{1, 2, 3}, true);
        int poolID = floatRefForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_FLOAT, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFloatRefFormGetOffset_ZFxj0() {
        OperandManager operandManager = new OperandManager(new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0]);
        FloatRefForm floatRefForm = new FloatRefForm(0, "", new int[0]);
        int offset = floatRefForm.getOffset(operandManager);
        assertEquals(1, operandManager.nextFloatRef());
    }
}