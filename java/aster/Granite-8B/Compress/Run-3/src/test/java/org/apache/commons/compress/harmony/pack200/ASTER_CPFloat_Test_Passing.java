/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CPFloat_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_JSCl0_1() throws Exception {
		CPFloat float1 = new CPFloat(10.0f);
		CPFloat float2 = new CPFloat(20.0f);
		assertEquals(0, float1.compareTo(float1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_JSCl0_2() throws Exception {
		CPFloat float1 = new CPFloat(10.0f);
		CPFloat float2 = new CPFloat(20.0f);
		assertTrue(float1.compareTo(float2) < 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_JSCl0_3() throws Exception {
		CPFloat float1 = new CPFloat(10.0f);
		CPFloat float2 = new CPFloat(20.0f);
		assertTrue(float2.compareTo(float1) > 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFloat_xOiR0() throws Exception {
        CPFloat floatObj = new CPFloat(10.5f);
        float actualFloat = floatObj.getFloat();
        float expectedFloat = 10.5f;
        assertEquals(expectedFloat, actualFloat, 0.0);
    }
}