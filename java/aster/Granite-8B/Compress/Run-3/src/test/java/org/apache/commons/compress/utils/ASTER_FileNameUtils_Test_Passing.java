/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.nio.file.Path;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FileNameUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExtension_oPWN0() throws Exception {
        String fileName = "example.txt";
        String expectedExtension = "txt";
        String actualExtension = FileNameUtils.getExtension(fileName);
        assertEquals(expectedExtension, actualExtension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNoExtension_JFRO1() throws Exception {
        String fileName = "example";
        String expectedExtension = "";
        String actualExtension = FileNameUtils.getExtension(fileName);
        assertEquals(expectedExtension, actualExtension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullFileName_JEEd2() throws Exception {
        String fileName = null;
        String expectedExtension = "";
        String actualExtension = FileNameUtils.getExtension(fileName);
        assertEquals(expectedExtension, actualExtension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEmptyFileName_YFvI3() throws Exception {
        String fileName = "";
        String expectedExtension = "";
        String actualExtension = FileNameUtils.getExtension(fileName);
        assertEquals(expectedExtension, actualExtension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullFileName_WnsR0() throws Exception {
        String fileName = null;
        String expected = null;
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFileNameWithExtension_fDlv1() throws Exception {
        String fileName = "example.txt";
        String expected = "example";
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFileNameWithoutExtension_zBJX2() throws Exception {
        String fileName = "example";
        String expected = "example";
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullPath_bhPA0() throws Exception {
        Path path = null;
        String expected = null;
        String actual = FileNameUtils.getBaseName(path);
        assertEquals(expected, actual);
    }
}