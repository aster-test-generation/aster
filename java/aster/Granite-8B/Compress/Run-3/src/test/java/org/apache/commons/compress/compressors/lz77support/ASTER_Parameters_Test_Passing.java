/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.lz77support;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Parameters_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testBuilderWithNegativeWindowSize_kCEg1_1() {
        IllegalArgumentException exception =
            assertThrows(IllegalArgumentException.class, () -> Parameters.builder(-1).build());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testBuilderWithNegativeWindowSize_kCEg1() {
        IllegalArgumentException exception =
            assertThrows(IllegalArgumentException.class, () -> Parameters.builder(-1).build());
        assertTrue(exception.getMessage().contains("windowSize"));
    }
}