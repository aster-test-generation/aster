/**
 * Generated by Aster
 */
package org.apache.commons.compress.changes;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ChangeSetResults_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddedFromChangeSet_TqrM0() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        changesetResults.addedFromChangeSet("filename.txt");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetAddedFromChangeSet_xzPb0() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> addedFromChangeSet = changesetResults.getAddedFromChangeSet();
        assertNotNull(addedFromChangeSet);
        assertTrue(addedFromChangeSet.isEmpty());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddedFromStream_DWkD0() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> addedFromStream = changesetResults.getAddedFromStream();
        assertNotNull(addedFromStream);
        assertTrue(addedFromStream.isEmpty());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeleted_ZurB0() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> deletedFiles = changesetResults.getDeleted();
        assertNotNull(deletedFiles);
        assertTrue(deletedFiles.isEmpty());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetAddedFromChangeSet_xzPb0_1() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> addedFromChangeSet = changesetResults.getAddedFromChangeSet();
        assertNotNull(addedFromChangeSet);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetAddedFromChangeSet_xzPb0_2() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> addedFromChangeSet = changesetResults.getAddedFromChangeSet();
        assertTrue(addedFromChangeSet.isEmpty());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddedFromStream_DWkD0_1() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> addedFromStream = changesetResults.getAddedFromStream();
        assertNotNull(addedFromStream);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddedFromStream_DWkD0_2() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> addedFromStream = changesetResults.getAddedFromStream();
        assertTrue(addedFromStream.isEmpty());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeleted_ZurB0_1() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> deletedFiles = changesetResults.getDeleted();
        assertNotNull(deletedFiles);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeleted_ZurB0_2() {
        ChangeSetResults changesetResults = new ChangeSetResults();
        List<String> deletedFiles = changesetResults.getDeleted();
        assertTrue(deletedFiles.isEmpty());}
}