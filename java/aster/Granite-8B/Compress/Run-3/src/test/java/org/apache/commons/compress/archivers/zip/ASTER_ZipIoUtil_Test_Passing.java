/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.channels.SeekableByteChannel;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ZipIoUtil_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteFullyAt_PhUC0() throws IOException {
        FileChannel channel = null;
        ByteBuffer buf = ByteBuffer.allocate(1024);
        long position = 0;
        ZipIoUtil.writeFullyAt(channel, buf, position);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteFullyAt2_cSGR1() throws IOException {
        FileChannel channel = null;
        ByteBuffer buf = ByteBuffer.allocate(1024);
        long position = 1024;
        ZipIoUtil.writeFullyAt(channel, buf, position);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteFullyAt3_AkjA2() throws IOException {
        FileChannel channel = null;
        ByteBuffer buf = ByteBuffer.allocate(1024);
        long position = -1024;
        ZipIoUtil.writeFullyAt(channel, buf, position);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteFully_RgmQ0() throws IOException {
        SeekableByteChannel channel = null; // Initialize channel
        ByteBuffer buf = ByteBuffer.allocate(1024); // Initialize buf
        ZipIoUtil.writeFully(channel, buf);
        assertTrue(true); // Add assertion statement
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteFullyWithSmallBuffer_guBW1() throws IOException {
        SeekableByteChannel channel = null; // Initialize channel
        ByteBuffer buf = ByteBuffer.allocate(10); // Initialize buf
        ZipIoUtil.writeFully(channel, buf);
        assertTrue(true); // Add assertion statement
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteFullyWithEmptyBuffer_ChaD2() throws IOException {
        SeekableByteChannel channel = null; // Initialize channel
        ByteBuffer buf = ByteBuffer.allocate(0); // Initialize buf
        ZipIoUtil.writeFully(channel, buf);
        assertTrue(true); // Add assertion statement
    }
}