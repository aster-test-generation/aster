/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.ar;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ArArchiveInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextArEntry_jcUS9() throws IOException {
        ArArchiveInputStream in = new ArArchiveInputStream(null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNextArEntry_oEBc9() throws IOException {
        ArArchiveInputStream in = new ArArchiveInputStream(null);
        ArArchiveEntry entry = in.getNextArEntry();
        assertNull(entry);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextArEntry_bXsv9() throws IOException {
        ArArchiveInputStream stream = new ArArchiveInputStream(null);
        ArArchiveEntry entry = stream.getNextArEntry();
        assertNull(entry);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getNextArEntry_nullInputStream_throwsIOException_kjbT0_1() throws Exception {
        final ArArchiveInputStream in = new ArArchiveInputStream(null);
        final IOException exception = assertThrows(IOException.class, () -> in.getNextArEntry());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextArEntry_qMXz9() throws IOException {
        ArArchiveInputStream stream = new ArArchiveInputStream(null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsBSDLongName_HasJ10() throws Exception {
    }
}