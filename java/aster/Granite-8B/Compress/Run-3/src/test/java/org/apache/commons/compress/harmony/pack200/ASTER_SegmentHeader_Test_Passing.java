/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentHeader_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHave_class_flags_hi_HqZz0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        boolean result = segmentHeader.have_class_flags_hi();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHave_all_code_flags_qcOs0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        boolean result = segmentHeader.have_all_code_flags();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPack_JMAu0() throws IOException, Pack200Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        segmentHeader.pack(null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAttribute_definition_count_uBbK0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        segmentHeader.setAttribute_definition_count(1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHave_file_size_hi_aMML0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        boolean expected = true;
        boolean actual = segmentHeader.have_file_size_hi();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddMajorVersion_fRqC0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        segmentHeader.addMajorVersion(1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHave_file_options_nujw0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        boolean result = segmentHeader.have_file_options();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCp_Utf8_count_QQGp0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        segmentHeader.setCp_Utf8_count(1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getDefaultMajorVersionTest_yXjZ0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        int defaultMajorVersion = segmentHeader.getDefaultMajorVersion();
        assertEquals(0, defaultMajorVersion);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetArchive_modtime_coSI0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        int result = segmentHeader.getArchive_modtime();
        assertEquals(0, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHave_field_flags_hi_IQiI0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        boolean result = segmentHeader.have_field_flags_hi();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHave_file_modtime_QeMM0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        boolean result = segmentHeader.have_file_modtime();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHave_code_flags_hi_EZjs0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        boolean result = segmentHeader.have_code_flags_hi();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCp_Class_count_rTSK0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        segmentHeader.setCp_Class_count(10);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHave_method_flags_hi_jTrr0() throws Exception {
        SegmentHeader segmentHeader = new SegmentHeader();
        boolean result = segmentHeader.have_method_flags_hi();
        assertTrue(result);
    }
}