/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.objectweb.asm.Label;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BcBands_Test_Passing {
private int byteCodeOffset;
private IntList bcShort = new IntList();
private IntList bcLocal = new IntList();
private static int IINC = 132;
private IntList bcByte = new IntList();
private IntList bcCodes = new IntList();
private static int MULTIANEWARRAY = 197;
private IntList bciRenumbering = new IntList();
private IntList bcLabelRelativeOffsets = new IntList();
private Map<Label, Integer> labelsToOffsets = new HashMap<>();
private static int endMarker = 255;
private int renumberedOffset;
    private Label mockLabel;
private Label label;
private String currentNewClass;
@Mock
    private CPInt cpIntMock;
@Mock
    private IntList bcCodesMock;
private IntList bcCaseValue = new IntList();
private static int TABLESWITCH = 170;
private IntList bcCaseCount = new IntList();
private List<CPMethodOrField> bcIMethodRef = new ArrayList<>();
private List bcSuperMethod = new ArrayList<>();
private List bcSuperField = new ArrayList<>();
private List<CPMethodOrField> bcMethodRef = new ArrayList<>();
private List bcThisMethod = new ArrayList<>();
private List bcInitRef = new ArrayList<>();
private List<CPMethodOrField> bcFieldRef = new ArrayList<>();
private List bcThisField = new ArrayList<>();
private static int ALOAD_0 = 42;
private String currentClass;
private String superClass;
private static int INVOKEINTERFACE = 185;
@Mock
    private List bcThisMethodMock;
@Mock
    private List bcInitRefMock;
@Mock
    private List bcSuperMethodMock;
@Mock
    private List<CPMethodOrField> bcIMethodRefMock;
@Mock
    private List<CPMethodOrField> bcMethodRefMock;
private static int LOOKUPSWITCH = 171;
@Mock
    private CPMethodOrField cpFieldMock;
}