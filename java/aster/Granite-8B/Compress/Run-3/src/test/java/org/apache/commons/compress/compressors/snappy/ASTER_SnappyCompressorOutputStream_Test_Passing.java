/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;
import java.io.IOException;
import java.io.OutputStream;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SnappyCompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinishWithoutParameters_sgrv1() throws IOException {
        OutputStream os = mock(OutputStream.class);
        SnappyCompressorOutputStream compressor = new SnappyCompressorOutputStream(os, 100L);
        compressor.finish();
        verify(os).write(any());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinishWithBlockSize_jxfP2() throws IOException {
        OutputStream os = mock(OutputStream.class);
        SnappyCompressorOutputStream compressor = new SnappyCompressorOutputStream(os, 100L, 1024);
        compressor.finish();
        verify(os).write(any());
    }
}