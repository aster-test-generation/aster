/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.gzip;
import java.io.IOException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_GzipCompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithValidBufferOffsetAndLength_QWGb0() throws IOException {
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out);
        byte[] buffer = new byte[10];
        int offset = 0;
        int length = 5;
        gzipCompressorOutputStream.write(buffer, offset, length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithValidBufferOffsetAndLengthAndParameters_nvIX1() throws IOException {
        GzipParameters parameters = new GzipParameters();
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out, parameters);
        byte[] buffer = new byte[10];
        int offset = 0;
        int length = 5;
        gzipCompressorOutputStream.write(buffer, offset, length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithLengthZero_ReYB3() throws IOException {
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out);
        byte[] buffer = new byte[10];
        int offset = 0;
        int length = 0;
        gzipCompressorOutputStream.write(buffer, offset, length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrite_PQhy0() throws IOException {
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out);
        gzipCompressorOutputStream.write(1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithParameters_tbgg1() throws IOException {
        GzipParameters gzipParameters = new GzipParameters();
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out, gzipParameters);
        gzipCompressorOutputStream.write(1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteArray_xkIN2() throws IOException {
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out);
        gzipCompressorOutputStream.write(new byte[]{1}, 0, 1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteArrayWithParameters_EDRl3() throws IOException {
        GzipParameters gzipParameters = new GzipParameters();
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out, gzipParameters);
        gzipCompressorOutputStream.write(new byte[]{1}, 0, 1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteArrayOffsetLength_rzVK4() throws IOException {
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out);
        gzipCompressorOutputStream.write(new byte[]{1, 2, 3}, 1, 2);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteArrayOffsetLengthWithParameters_kVzL5() throws IOException {
        GzipParameters gzipParameters = new GzipParameters();
        GzipCompressorOutputStream gzipCompressorOutputStream = new GzipCompressorOutputStream(System.out, gzipParameters);
        gzipCompressorOutputStream.write(new byte[]{1, 2, 3}, 1, 2);
    }
}