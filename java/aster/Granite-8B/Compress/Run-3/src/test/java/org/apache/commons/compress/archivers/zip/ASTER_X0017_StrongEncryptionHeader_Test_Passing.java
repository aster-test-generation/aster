/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_X0017_StrongEncryptionHeader_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromLocalFileData_Wszv0() throws ZipException {
        X0017_StrongEncryptionHeader strongEncryptionHeader = new X0017_StrongEncryptionHeader();
        byte[] data = new byte[100]; // Replace with actual data
        int offset = 0;
        int length = data.length;
        strongEncryptionHeader.parseFromLocalFileData(data, offset, length);
        assertNotNull(strongEncryptionHeader);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testgetRecordCount_LrPb0() {
    X0017_StrongEncryptionHeader x0017StrongEncryptionHeader = new X0017_StrongEncryptionHeader();
    long rcount = x0017StrongEncryptionHeader.getRecordCount();
    assertEquals(0, rcount);
}
}