/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnrecognizedExtraField_Test_Passing {
    private UnrecognizedExtraField uef;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHeaderId_zDAR0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        ZipShort zipShort = new ZipShort(1);
        unrecognizedExtraField.setHeaderId(zipShort);
        assertEquals(zipShort, unrecognizedExtraField.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHeaderIdWithNull_cFUC1() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        unrecognizedExtraField.setHeaderId(null);
        assertNull(unrecognizedExtraField.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_aTPE2() {
        UnrecognizedExtraField unrecognizedExtraField1 = new UnrecognizedExtraField();
        UnrecognizedExtraField unrecognizedExtraField2 = new UnrecognizedExtraField();
        assertTrue(unrecognizedExtraField1.equals(unrecognizedExtraField2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNotEquals_rrdK3() {
        UnrecognizedExtraField unrecognizedExtraField1 = new UnrecognizedExtraField();
        UnrecognizedExtraField unrecognizedExtraField2 = new UnrecognizedExtraField();
        unrecognizedExtraField2.setHeaderId(new ZipShort(2));
        assertFalse(unrecognizedExtraField1.equals(unrecognizedExtraField2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_VOOl4() {
        UnrecognizedExtraField unrecognizedExtraField1 = new UnrecognizedExtraField();
        UnrecognizedExtraField unrecognizedExtraField2 = new UnrecognizedExtraField();
        assertEquals(unrecognizedExtraField1.hashCode(), unrecognizedExtraField2.hashCode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData1_MJNR0() {
    byte[] data = new byte[10];
    int offset = 5;
    int length = 3;
    UnrecognizedExtraField uef = new UnrecognizedExtraField();
    uef.parseFromCentralDirectoryData(data, offset, length);
    byte[] expected = Arrays.copyOfRange(data, offset, offset + length);
    byte[] actual = uef.getCentralDirectoryData();
    assertArrayEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData2_DqRa1() {
    byte[] data = new byte[10];
    int offset = 5;
    int length = 3;
    UnrecognizedExtraField uef = new UnrecognizedExtraField();
    uef.parseFromCentralDirectoryData(data, offset, length);
    byte[] expected = Arrays.copyOfRange(data, offset, offset + length);
    byte[] actual = uef.getLocalFileDataData();
    assertArrayEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_eCwm0() {
        uef = new UnrecognizedExtraField();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocalFileDataData_RhqX0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[10]; // Replace with appropriate data
        unrecognizedExtraField.setLocalFileDataData(data);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryLength_YrxZ0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        ZipShort centralDirectoryLength = unrecognizedExtraField.getCentralDirectoryLength();
        assertNotNull(centralDirectoryLength);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromLocalFileData_osWn0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[10];
        int offset = 0;
        int length = 10;
        unrecognizedExtraField.parseFromLocalFileData(data, offset, length);
        assertEquals(Arrays.copyOfRange(data, offset, offset + length), unrecognizedExtraField.getLocalFileDataData());
    }
@Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_YIvj0_YRlM0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        ZipShort zipShort = unrecognizedExtraField.getHeaderId();
        assertEquals(0, zipShort.getValue());
    }
}