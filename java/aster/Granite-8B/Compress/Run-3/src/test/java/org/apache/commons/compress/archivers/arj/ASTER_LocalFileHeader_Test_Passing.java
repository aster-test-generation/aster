/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.arj;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LocalFileHeader_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithSelf_GCfN0() throws Exception {
        LocalFileHeader localFileHeader = new LocalFileHeader();
        boolean result = localFileHeader.equals(localFileHeader);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithNull_tzxV1() throws Exception {
        LocalFileHeader localFileHeader = new LocalFileHeader();
        boolean result = localFileHeader.equals(null);
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithDifferentClass_uaHE2() throws Exception {
        LocalFileHeader localFileHeader = new LocalFileHeader();
        boolean result = localFileHeader.equals(new Object());
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithAllFieldsSame_xFWY6() throws Exception {
        LocalFileHeader localFileHeader1 = new LocalFileHeader();
        LocalFileHeader localFileHeader2 = new LocalFileHeader();
        boolean result = localFileHeader1.equals(localFileHeader2);
        assertTrue(result);
    }
}