/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.jar;
import java.security.cert.Certificate;
import java.util.jar.Attributes;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JarArchiveEntry_Test_Passing {
@Mock
	JarArchiveEntry jarArchiveEntry;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetCertificates() throws Exception {
		// Mock the Certificate[] getCertificates() method
		Certificate[] certificates = new Certificate[1];
		when(jarArchiveEntry.getCertificates()).thenReturn(certificates);
		// Call the getCertificates() method and assert the result
		Certificate[] result = jarArchiveEntry.getCertificates();
		assertEquals(certificates, result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCertificates_QBNi0() throws Exception {
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("name");
        Certificate[] certificates = jarArchiveEntry.getCertificates();
        assertNotNull(certificates);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetManifestAttributes() throws Exception {
		// Mock the getManifestAttributes method to return a mock Attributes object
		Attributes attributes = mock(Attributes.class);
		when(jarArchiveEntry.getManifestAttributes()).thenReturn(attributes);
		// Assert that the getManifestAttributes method returns the mock Attributes object
		assertEquals(attributes, jarArchiveEntry.getManifestAttributes());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetManifestAttributes_uHAz0() throws Exception {
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("name");
        Attributes attributes = jarArchiveEntry.getManifestAttributes();
        assertNotNull(attributes);
    }
}