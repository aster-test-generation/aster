/**
 * Generated by Aster
 */
package org.apache.commons.compress.parallel;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FileBasedScatterGatherBackingStore_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	void testingGetInputStreamWithFile_fliz0() throws FileNotFoundException, IOException {
		File target = new File("test.txt");
		FileBasedScatterGatherBackingStore fileBasedScatterGatherBackingStore = new FileBasedScatterGatherBackingStore(target);
		InputStream inputStream = fileBasedScatterGatherBackingStore.getInputStream();
		assertEquals(true, inputStream != null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteOut_LaOT0() throws FileNotFoundException, IOException {
        FileBasedScatterGatherBackingStore store = new FileBasedScatterGatherBackingStore(new File("target"));
        byte[] data = new byte[10];
        int offset = 0;
        int length = 10;
        store.writeOut(data, offset, length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClose_ToUz0_tAFr0() throws FileNotFoundException, IOException {
        FileBasedScatterGatherBackingStore fileBasedScatterGatherBackingStore = new FileBasedScatterGatherBackingStore(new File(""));
        try {
            fileBasedScatterGatherBackingStore.close();
        } catch (IOException e) {
            throw e;
        }
    }
}