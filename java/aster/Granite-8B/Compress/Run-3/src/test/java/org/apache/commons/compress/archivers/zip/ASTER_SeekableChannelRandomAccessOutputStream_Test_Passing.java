/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.nio.channels.SeekableByteChannel;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SeekableChannelRandomAccessOutputStream_Test_Passing {
private SeekableByteChannel channel;
    private SeekableChannelRandomAccessOutputStream stream;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testWriteFullyWithNullChannel_AmMS2() {
        SeekableChannelRandomAccessOutputStream output = new SeekableChannelRandomAccessOutputStream(null);
        byte[] b = new byte[10];
        NullPointerException thrown = assertThrows(NullPointerException.class, () -> output.writeFully(b, 0, 10, 0));
    }
}