/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnparseableExtraFieldData_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromCentralDirectoryData_validInput_setsCentralDirectoryData_MaZm4() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        byte[] buffer = new byte[10];
        int offset = 0;
        int length = 10;
        unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
        assertEquals(Arrays.copyOfRange(buffer, offset, offset + length), unparseableExtraFieldData.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_MZES0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        ZipShort headerId = unparseableExtraFieldData.getHeaderId();
        assertNotNull(headerId);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetLocalFileDataLength_VqSG0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        ZipShort localFileDataLength = unparseableExtraFieldData.getLocalFileDataLength();
        assertEquals(0, localFileDataLength.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryLength_prTg0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        ZipShort centralDirectoryLength = unparseableExtraFieldData.getCentralDirectoryLength();
        assertEquals(0, centralDirectoryLength.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromCentralDirectoryData_validInput_setsLocalFileData_xZAD5_XmXU0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        byte[] buffer = new byte[10];
        int offset = 0;
        int length = 10;
        unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
        assertNotNull(unparseableExtraFieldData.getLocalFileDataData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetLocalFileDataData_jGlY0_pUBd0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        byte[] expected = unparseableExtraFieldData.getLocalFileDataData();
        byte[] actual = unparseableExtraFieldData.getLocalFileDataData();
        assertArrayEquals(expected, actual);
    }
}