/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode.forms;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_StringRefForm_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_edNA0() {
        StringRefForm stringRefForm = new StringRefForm(0, "name", new int[]{1, 2, 3});
        int actualPoolID = stringRefForm.getPoolID();
        int expectedPoolID = SegmentConstantPool.CP_STRING;
        assertEquals(expectedPoolID, actualPoolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_getOffset_yERV0() {
    OperandManager operandManager = new OperandManager(new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0], new int[0]);
    StringRefForm stringRefForm = new StringRefForm(0, "", new int[0]);
    int offset = stringRefForm.getOffset(operandManager);
    assertEquals(1, operandManager.nextStringRef());
}
}