/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CPDouble_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompareTo_feGo0() throws Exception {
        CPDouble obj1 = new CPDouble(1.0);
        CPDouble obj2 = new CPDouble(2.0);
        int result = obj1.compareTo(obj2);
        assertEquals(-1, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompareToWithSameValues_vLzC1() throws Exception {
        CPDouble obj1 = new CPDouble(1.0);
        CPDouble obj2 = new CPDouble(1.0);
        int result = obj1.compareTo(obj2);
        assertEquals(0, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompareToWithNull_dMDi2() throws Exception {
        CPDouble obj1 = new CPDouble(1.0);
        int result = obj1.compareTo(null);
        assertTrue(result > 0);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDouble_qGLg3() throws Exception {
        CPDouble obj = new CPDouble(1.0);
        double value = obj.getDouble();
        assertEquals(1.0, value, 0.001);
    }
}