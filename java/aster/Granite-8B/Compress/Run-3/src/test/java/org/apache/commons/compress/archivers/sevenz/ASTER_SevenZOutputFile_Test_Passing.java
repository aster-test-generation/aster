/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.SeekableByteChannel;
import java.nio.file.LinkOption;
import java.nio.file.Path;
import java.util.Date;
import java.util.zip.CRC32;
import static org.junit.jupiter.api.Assertions.assertThrows;
import java.util.Date;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_SevenZOutputFile_Test_Passing {
private SeekableByteChannel channel;
private boolean finished;
private CRC32 crc32 = new CRC32();
@Mock
    private SeekableByteChannel mockChannel;
@Mock
    private DataOutputStream mockHeader;
@Mock
    private ByteArrayOutputStream mockHeaderBaos;
@Mock
    private ByteBuffer mockBb;
private SevenZOutputFile sevenzoutputfile;
    private SevenZOutputFile sevenZOutputFile;
    private File fileName;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPutArchiveEntry_bskf0() throws Exception {
        SevenZArchiveEntry archiveEntry = new SevenZArchiveEntry();
        archiveEntry.setName("test.txt");
        archiveEntry.setSize(1024);
        archiveEntry.setCrc(12345);
        archiveEntry.setLastModifiedDate(new Date());
        archiveEntry.setCreationDate(new Date());
        archiveEntry.setAccessDate(new Date());
        SevenZOutputFile outputFile = new SevenZOutputFile(new File("output.7z"));
        outputFile.putArchiveEntry(archiveEntry);
        outputFile.close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteByteArray_CqIC0() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
        byte[] b = new byte[1024];
        sevenZOutputFile.write(b);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteByteArrayIntInt_xguH1() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
        byte[] b = new byte[1024];
        sevenZOutputFile.write(b, 0, b.length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression_ieae0() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"));
        sevenZOutputFile.setContentCompression(SevenZMethod.COPY);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression2_vrLl1() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.LZMA);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression3_IsiW2() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.LZMA2);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression4_xJfl3() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.DEFLATE);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression5_PRRB4() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.DEFLATE64);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression6_dsxJ5() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.BZIP2);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression7_rwkP6() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.AES256SHA256);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression8_YGKD7() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.BCJ_X86_FILTER);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression9_eOZT8() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.BCJ_PPC_FILTER);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression10_vnuq9() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.BCJ_IA64_FILTER);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression11_zRRg10() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.BCJ_ARM_FILTER);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression12_gTMR11() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.BCJ_ARM_THUMB_FILTER);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression13_bnHd12() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.BCJ_SPARC_FILTER);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentCompression14_xpgn13() throws Exception {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.txt"), "password".toCharArray());
        sevenZOutputFile.setContentCompression(SevenZMethod.DELTA_FILTER);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithFileNameAndPassword_pbnC0() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
        sevenZOutputFile.write(new byte[]{1, 2, 3}, 0, 3);
        sevenZOutputFile.close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithValidArguments_HslE0() throws IOException {
        final SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
        sevenZOutputFile.write(new byte[10], 0, 10);
        sevenZOutputFile.close();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithNullPassword_fMME2_1() throws Exception {
        final IOException exception = assertThrows(IOException.class, () -> new SevenZOutputFile(new File("test.7z"), null));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteInt_HtgP1() throws IOException {
        int b = 10;
        sevenZOutputFile.write(b);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteIntWithNullPassword_ZLLJ3() throws IOException {
        int b = 10;
        sevenZOutputFile = new SevenZOutputFile(fileName, null);
        sevenZOutputFile.write(b);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinish_Nqdn0() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), new char[0]);
        sevenZOutputFile.finish();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinish1_hXKm1() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"));
        sevenZOutputFile.finish();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinish2_dZmy2() throws IOException {
        SeekableByteChannel seekableByteChannel = null;
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(seekableByteChannel, new char[0]);
        sevenZOutputFile.finish();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinish3_OEHg3() throws IOException {
        SeekableByteChannel seekableByteChannel = null;
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(seekableByteChannel);
        sevenZOutputFile.finish();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinish_AInV0() throws IOException {
    SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), new char[0]);
    sevenZOutputFile.finish();
    sevenZOutputFile.close();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinish2_FAmG1() throws IOException {
    SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"));
    sevenZOutputFile.finish();
    sevenZOutputFile.close();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinishWithPassword_AFYv1() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
        sevenZOutputFile.finish();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinishWithOneFile_yHtp0() throws IOException {
    SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), new char[0]);
    SevenZArchiveEntry entry = new SevenZArchiveEntry();
    entry.setSize(100);
    sevenZOutputFile.putArchiveEntry(entry);
    sevenZOutputFile.write(new byte[100]);
    sevenZOutputFile.closeArchiveEntry();
    sevenZOutputFile.finish();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinishWithTwoFiles_fGkt1() throws IOException {
    SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), new char[0]);
    SevenZArchiveEntry entry1 = new SevenZArchiveEntry();
    entry1.setSize(100);
    sevenZOutputFile.putArchiveEntry(entry1);
    sevenZOutputFile.write(new byte[100]);
    sevenZOutputFile.closeArchiveEntry();
    SevenZArchiveEntry entry2 = new SevenZArchiveEntry();
    entry2.setSize(200);
    sevenZOutputFile.putArchiveEntry(entry2);
    sevenZOutputFile.write(new byte[200]);
    sevenZOutputFile.closeArchiveEntry();
    sevenZOutputFile.finish();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinish_Sxpf0() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
        sevenZOutputFile.finish();
        sevenZOutputFile.close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_TtdA0() throws Exception {
        sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), new char[]{'p', 'a', 's', 's'});
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinish_tMyZ1() throws IOException {
        sevenZOutputFile.finish();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinishWithNullPassword_LIgY2() throws IOException {
        sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), null);
        sevenZOutputFile.finish();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateArchiveEntry_sYfN0() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"));
        SevenZArchiveEntry entry = sevenZOutputFile.createArchiveEntry(new File("test.txt"), "test.txt");
        sevenZOutputFile.close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClose() throws Exception {
        channel = mock(SeekableByteChannel.class);
        finished = false;
        sevenzoutputfile = new SevenZOutputFile(channel);
        sevenzoutputfile.close();
        verify(channel, times(1)).close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCloseWithFileNameAndPassword_SEev0() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
        sevenZOutputFile.close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateArchiveEntry_fKks0() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"));
        Path inputPath = new File("test.txt").toPath();
        String entryName = "test.txt";
        LinkOption[] options = {};
        SevenZArchiveEntry entry = sevenZOutputFile.createArchiveEntry(inputPath, entryName, options);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCloseArchiveEntryWithFileAndPassword_vjZq0() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
        sevenZOutputFile.closeArchiveEntry();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCloseArchiveEntryWithFile_rIhw3() throws IOException {
        SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"));
        sevenZOutputFile.closeArchiveEntry();
    }
}