/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.brotli;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BrotliUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCacheBrotliAvailablityWhenDoCacheIsFalse_CEdo0() throws Exception {
        BrotliUtils.setCacheBrotliAvailablity(false);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCacheBrotliAvailablityWhenDoCacheIsTrueAndCachedBrotliAvailabilityIsDONT_CACHE_NUxb1() throws Exception {
        BrotliUtils.setCacheBrotliAvailablity(true);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsBrotliCompressionAvailable_rbbZ0() throws Exception {
        boolean result = BrotliUtils.isBrotliCompressionAvailable();
        assertTrue(result);
    }
}