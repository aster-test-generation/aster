/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.jar;
import java.io.OutputStream;
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JarArchiveOutputStream_Test_Passing {
private boolean jarMarkerAdded;
private ZipArchiveEntry zipArchiveEntry;
private JarArchiveOutputStream jarArchiveOutputStream;
private OutputStream outputStream;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testputArchiveEntry() throws Exception {
        outputStream = mock(OutputStream.class);
        jarArchiveOutputStream = new JarArchiveOutputStream(outputStream);
        zipArchiveEntry = mock(ZipArchiveEntry.class);
        jarArchiveOutputStream.putArchiveEntry(zipArchiveEntry);
        verify(zipArchiveEntry, times(1)).addAsFirstExtraField(any());
        verify(jarArchiveOutputStream, times(1)).putArchiveEntry(zipArchiveEntry);
    }
}