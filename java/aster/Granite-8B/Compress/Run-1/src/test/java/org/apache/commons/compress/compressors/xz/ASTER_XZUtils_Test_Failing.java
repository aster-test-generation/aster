/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.xz;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_XZUtils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName3_mKUs2_fid2() {
        String fileName = "example.tar.gz";
        boolean expected = true;
        boolean actual = XZUtils.isCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName4_pfli3_fid2() {
        String fileName = "example.zip";
        boolean expected = true;
        boolean actual = XZUtils.isCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName5_fPJw4_fid2() {
        String fileName = "example.jar";
        boolean expected = true;
        boolean actual = XZUtils.isCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName6_aNsk5_fid2() {
        String fileName = "example.7z";
        boolean expected = true;
        boolean actual = XZUtils.isCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName7_ZjMv6_fid2() {
        String fileName = "example.tar";
        boolean expected = true;
        boolean actual = XZUtils.isCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName8_OOmw7_fid2() {
        String fileName = "example.gz";
        boolean expected = true;
        boolean actual = XZUtils.isCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName9_wLJi8_fid2() {
        String fileName = "example.rar";
        boolean expected = true;
        boolean actual = XZUtils.isCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName10_CzJo9_fid2() {
        String fileName = "example.bz2";
        boolean expected = true;
        boolean actual = XZUtils.isCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsXZCompressionAvailable2_pcbR1_fid2() {
        boolean result = XZUtils.isXZCompressionAvailable();
        assertFalse(result);
    }
}