/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ByteCode_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0_LJlL0() {
        ByteCode byteCode = ByteCode.getByteCode(0);
        assertNotNull(byteCode);
        assertEquals(0, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_1_WJkZ1() {
        ByteCode byteCode = ByteCode.getByteCode(1);
        assertNotNull(byteCode);
        assertEquals(1, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_2_qFFp2() {
        ByteCode byteCode = ByteCode.getByteCode(2);
        assertNotNull(byteCode);
        assertEquals(2, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_255_lOtS3() {
        ByteCode byteCode = ByteCode.getByteCode(255);
        assertNotNull(byteCode);
        assertEquals(255, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0xFF_nzid4() {
        ByteCode byteCode = ByteCode.getByteCode(0xFF);
        assertNotNull(byteCode);
        assertEquals(255, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x100_muFk5() {
        ByteCode byteCode = ByteCode.getByteCode(0x100);
        assertNotNull(byteCode);
        assertEquals(0, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x10000_RGks6() {
        ByteCode byteCode = ByteCode.getByteCode(0x10000);
        assertNotNull(byteCode);
        assertEquals(0, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x10000000_tUtn7() {
        ByteCode byteCode = ByteCode.getByteCode(0x10000000);
        assertNotNull(byteCode);
        assertEquals(0, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x80000000_Ejlg9() {
        ByteCode byteCode = ByteCode.getByteCode(0x80000000);
        assertNotNull(byteCode);
        assertEquals(0, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0xFFFFFFFF_EmSj10() {
        ByteCode byteCode = ByteCode.getByteCode(0xFFFFFFFF);
        assertNotNull(byteCode);
        assertEquals(0xFF, byteCode.getOpcode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetName_CxJL0() {
        ByteCode byteCode = new ByteCode(0);
        String expectedName = byteCode.getByteCodeForm().getName();
        String actualName = byteCode.getName();
        assertEquals(expectedName, actualName);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRewrite_hVUQ0() {
        ByteCode byteCode = new ByteCode(0);
        int[] rewrite = byteCode.getRewrite();
        assertNotNull(rewrite);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNestedClassFileEntries_reEs0() {
        ClassFileEntry[] nested = new ClassFileEntry[0];
        ByteCode byteCode = new ByteCode(0, nested);
        ClassFileEntry[] result = byteCode.getNestedClassFileEntries();
        assertArrayEquals(nested, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIndexOf_rjvB0() {
        ClassConstantPool classConstantPool = new ClassConstantPool();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpcode_aFzo0() {
        ByteCode byteCode = new ByteCode(0);
        int opcode = byteCode.getOpcode();
        assertEquals(0, opcode);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpcodeWithNested_FGgf1() {
        ClassFileEntry[] nested = new ClassFileEntry[0];
        ByteCode byteCode = new ByteCode(0, nested);
        int opcode = byteCode.getOpcode();
        assertEquals(0, opcode);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNestedMustStartClassPool_Budp0_fid1() {
        ByteCode byteCodeForm = new ByteCode(0);
        ClassFileEntry[] nested = new ClassFileEntry[0];
        ByteCode byteCodeForm2 = new ByteCode(0, nested);
        boolean result = byteCodeForm2.nestedMustStartClassPool();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0_LJlL0_1() {
        ByteCode byteCode = ByteCode.getByteCode(0);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0_LJlL0_2() {
        ByteCode byteCode = ByteCode.getByteCode(0);
        assertEquals(0, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_1_WJkZ1_1() {
        ByteCode byteCode = ByteCode.getByteCode(1);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_1_WJkZ1_2() {
        ByteCode byteCode = ByteCode.getByteCode(1);
        assertEquals(1, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_2_qFFp2_1() {
        ByteCode byteCode = ByteCode.getByteCode(2);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_2_qFFp2_2() {
        ByteCode byteCode = ByteCode.getByteCode(2);
        assertEquals(2, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_255_lOtS3_1() {
        ByteCode byteCode = ByteCode.getByteCode(255);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_255_lOtS3_2() {
        ByteCode byteCode = ByteCode.getByteCode(255);
        assertEquals(255, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0xFF_nzid4_1() {
        ByteCode byteCode = ByteCode.getByteCode(0xFF);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0xFF_nzid4_2() {
        ByteCode byteCode = ByteCode.getByteCode(0xFF);
        assertEquals(255, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x100_muFk5_1() {
        ByteCode byteCode = ByteCode.getByteCode(0x100);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x100_muFk5_2() {
        ByteCode byteCode = ByteCode.getByteCode(0x100);
        assertEquals(0, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x10000_RGks6_1() {
        ByteCode byteCode = ByteCode.getByteCode(0x10000);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x10000_RGks6_2() {
        ByteCode byteCode = ByteCode.getByteCode(0x10000);
        assertEquals(0, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x10000000_tUtn7_1() {
        ByteCode byteCode = ByteCode.getByteCode(0x10000000);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x10000000_tUtn7_2() {
        ByteCode byteCode = ByteCode.getByteCode(0x10000000);
        assertEquals(0, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x7FFFFFFF_lHEM8_1() {
        ByteCode byteCode = ByteCode.getByteCode(0x7FFFFFFF);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x80000000_Ejlg9_1() {
        ByteCode byteCode = ByteCode.getByteCode(0x80000000);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0x80000000_Ejlg9_2() {
        ByteCode byteCode = ByteCode.getByteCode(0x80000000);
        assertEquals(0, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0xFFFFFFFF_EmSj10_1() {
        ByteCode byteCode = ByteCode.getByteCode(0xFFFFFFFF);
        assertNotNull(byteCode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getByteCode_with_opcode_0xFFFFFFFF_EmSj10_2() {
        ByteCode byteCode = ByteCode.getByteCode(0xFFFFFFFF);
        assertEquals(0xFF, byteCode.getOpcode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_VJLy1() {
        ByteCode bytecode = new ByteCode(1);
        assertEquals(1, bytecode.getLength());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_czNd0_fid1() {
        ByteCode byteCode = new ByteCode(1, null);
        String expected = "aconst_null";
        String actual = byteCode.toString();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testHasMultipleByteCodes_XhKr0_1() {
        ByteCode byteCode1 = new ByteCode(1);
        ByteCode byteCode2 = new ByteCode(2, new ClassFileEntry[0]);
        ByteCode byteCode3 = new ByteCode(3, new ClassFileEntry[0]);
}
}