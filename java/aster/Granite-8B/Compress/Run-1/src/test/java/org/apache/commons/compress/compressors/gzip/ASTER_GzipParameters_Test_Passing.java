/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.gzip;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_GzipParameters_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetOperatingSystem_uZxS0() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setOperatingSystem(1);
    assertEquals(1, gzipParameters.getOperatingSystem());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetOperatingSystemWithInvalidInput_trRl1() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setOperatingSystem(-1);
    assertEquals(-1, gzipParameters.getOperatingSystem());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetModificationTime_CBti0() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setModificationTime(1234567890L);
        assertEquals(1234567890L, gzipParameters.getModificationTime());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy_Zbpk0() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(0);
        assertEquals(0, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy1_MzWp1() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(1);
        assertEquals(1, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy2_WsKv2() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(2);
        assertEquals(2, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy3_yEOR3() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(3);
        assertEquals(3, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy4_eVuM4() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(4);
        assertEquals(4, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy5_daEE5() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(5);
        assertEquals(5, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy6_kwQV6() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(6);
        assertEquals(6, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy7_Fwfa7() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(7);
        assertEquals(7, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy8_JoOy8() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(8);
        assertEquals(8, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDeflateStrategy9_jVoJ9() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setDeflateStrategy(9);
        assertEquals(9, gzipParameters.getDeflateStrategy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetOperatingSystemWithOperatingSystemSet_cYix1() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setOperatingSystem(1);
        int result = gzipParameters.getOperatingSystem();
        assertEquals(1, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOperatingSystemToZero_LYSA5() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setOperatingSystem(0);
        assertEquals(0, gzipParameters.getOperatingSystem());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getDeflateStrategy_cbgo0() {
        GzipParameters gzipParameters = new GzipParameters();
        int deflateStrategy = gzipParameters.getDeflateStrategy();
        assertEquals(0, deflateStrategy);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBufferSize_iSvg0() {
        GzipParameters gzipParameters = new GzipParameters();
        gzipParameters.setBufferSize(1024);
        assertEquals(1024, gzipParameters.getBufferSize());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCompressionLevelWithInvalidLevel_eOLa1() {
        GzipParameters gzipParameters = new GzipParameters();
        Exception exception = null;
        try {
            gzipParameters.setCompressionLevel(10);
        } catch (IllegalArgumentException e) {
            exception = e;
        }
        assertNotNull(exception);
        assertTrue(exception.getMessage().contains("Invalid gzip compression level: 10"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetBufferSizeInvalid_TUxn1() {
    GzipParameters gzipParameters = new GzipParameters();
    Exception exception = null;
    try {
        gzipParameters.setBufferSize(0);
    } catch (IllegalArgumentException e) {
        exception = e;
    }
    assertNotNull(exception);
    assertTrue(exception.getMessage().contains("invalid buffer size: 0"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testgetFileName_BneU0_fid1() {
    GzipParameters gzipParameters = new GzipParameters();
    String fileName = gzipParameters.getFileName();
    assertNull(fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetOperatingSystem_IKRf255() {
        GzipParameters gzipParameters = new GzipParameters();
        int result = gzipParameters.getOperatingSystem();
        assertEquals(255, result);
    }
}