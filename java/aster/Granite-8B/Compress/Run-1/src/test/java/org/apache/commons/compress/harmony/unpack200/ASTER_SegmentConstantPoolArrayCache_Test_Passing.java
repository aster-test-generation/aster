/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentConstantPoolArrayCache_Test_Passing {
private SegmentConstantPoolArrayCache segmentConstantPoolArrayCache;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCacheArrayWithNonNullArray_UCOC1() {
        SegmentConstantPoolArrayCache cache = new SegmentConstantPoolArrayCache();
        String[] array = new String[]{"Hello", "World"};
        assert !cache.arrayIsCached(array);
        cache.cacheArray(array);
        assert cache.arrayIsCached(array);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testArrayIsCached_ERzu0() {
        SegmentConstantPoolArrayCache segmentConstantPoolArrayCache = new SegmentConstantPoolArrayCache();
        String[] array = new String[10];
        boolean result = segmentConstantPoolArrayCache.arrayIsCached(array);
        Assertions.assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_boAz0() {
        segmentConstantPoolArrayCache = new SegmentConstantPoolArrayCache();
    }
}