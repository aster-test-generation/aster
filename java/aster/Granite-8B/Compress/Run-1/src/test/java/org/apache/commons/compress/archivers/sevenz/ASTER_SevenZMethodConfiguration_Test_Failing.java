/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SevenZMethodConfiguration_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWithDifferentOptions_heid4() {
    SevenZMethodConfiguration obj1 = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
    SevenZMethodConfiguration obj2 = new SevenZMethodConfiguration(SevenZMethod.COPY, new Object());
    assertFalse(obj1.equals(obj2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCodeWithMethodAndOptions_xWjK0() {
        SevenZMethod method = SevenZMethod.COPY;
        Object options = new Object();
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method, options);
        int expectedHashCode = method.hashCode();
        int actualHashCode = configuration.hashCode();
        assertEquals(expectedHashCode, actualHashCode);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions_mggi0() {
        SevenZMethod method = SevenZMethod.COPY;
        Object options = new Object();
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method, options);
        assertEquals(options, configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions2_lBuy1() {
        SevenZMethod method = SevenZMethod.LZMA;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions3_syjZ2() {
        SevenZMethod method = SevenZMethod.LZMA2;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions4_ikEZ3() {
        SevenZMethod method = SevenZMethod.DEFLATE;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions5_acIE4() {
        SevenZMethod method = SevenZMethod.DEFLATE64;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions6_qFRU5() {
        SevenZMethod method = SevenZMethod.BZIP2;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions7_zswN6() {
        SevenZMethod method = SevenZMethod.AES256SHA256;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions8_vwFW7() {
        SevenZMethod method = SevenZMethod.BCJ_X86_FILTER;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions9_sMiy8() {
        SevenZMethod method = SevenZMethod.BCJ_PPC_FILTER;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions10_qOwH9() {
        SevenZMethod method = SevenZMethod.BCJ_IA64_FILTER;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions11_vSIw10() {
        SevenZMethod method = SevenZMethod.BCJ_ARM_FILTER;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions12_xTxF11() {
        SevenZMethod method = SevenZMethod.BCJ_ARM_THUMB_FILTER;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions13_pFBE12() {
        SevenZMethod method = SevenZMethod.BCJ_SPARC_FILTER;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptions14_DoBW13() {
        SevenZMethod method = SevenZMethod.DELTA_FILTER;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertNotNull(configuration.getOptions());
    }
}