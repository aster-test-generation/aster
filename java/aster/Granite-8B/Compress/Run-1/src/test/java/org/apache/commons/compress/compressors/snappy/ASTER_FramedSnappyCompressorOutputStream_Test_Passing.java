/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FramedSnappyCompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrite_sRMY0() throws IOException {
        FramedSnappyCompressorOutputStream framedSnappyCompressorOutputStream = new FramedSnappyCompressorOutputStream(new ByteArrayOutputStream());
        framedSnappyCompressorOutputStream.write(new byte[10]);
        framedSnappyCompressorOutputStream.flush();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithOffsetAndLength_RUcI1() throws IOException {
        FramedSnappyCompressorOutputStream framedSnappyCompressorOutputStream = new FramedSnappyCompressorOutputStream(new ByteArrayOutputStream());
        byte[] data = new byte[10];
        framedSnappyCompressorOutputStream.write(data, 2, 6);
        framedSnappyCompressorOutputStream.flush();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrite_FabM0_lean0() throws IOException {
        FramedSnappyCompressorOutputStream framedSnappyCompressorOutputStream = new FramedSnappyCompressorOutputStream(new ByteArrayOutputStream());
        byte[] data = new byte[10];
        framedSnappyCompressorOutputStream.write(data, 0, 10);
        framedSnappyCompressorOutputStream.close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteWithPrivateMethodFlushBuffer_CZyR2_YTcE0() throws IOException {
        FramedSnappyCompressorOutputStream framedSnappyCompressorOutputStream = new FramedSnappyCompressorOutputStream(new ByteArrayOutputStream());
        byte[] data = new byte[10];
        framedSnappyCompressorOutputStream.write(data, 0, 10);
        framedSnappyCompressorOutputStream.flush();
    }
}