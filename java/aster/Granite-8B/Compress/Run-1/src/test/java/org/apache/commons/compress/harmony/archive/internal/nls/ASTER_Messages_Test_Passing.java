/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.archive.internal.nls;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Messages_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_FiHm0() {
        assertEquals("test", Messages.getString("test", "test"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_arhR0() {
        String msg = "Hello, {0}";
        int arg = 1;
        String expected = "Hello, 1";
        String actual = Messages.getString(msg, arg);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_OlJc0() {
        String msg = "Hello, {0} and {1}";
        Object arg1 = "John";
        Object arg2 = "Doe";
        String expected = "Hello, John and Doe";
        String actual = Messages.getString(msg, arg1, arg2);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetString2_MxAb1() {
		assertEquals("format", Messages.getString("format", new Object[0]));
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetStringChar_bHwQ0_fid1() {
        Messages messages = new Messages();
        String msg = "test";
        char arg = 'a';
        String expected = "test";
        String actual = messages.getString(msg, arg);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetString_Bwgu0_fid1() {
	}
}