/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.lzma;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LZMAUtils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetCompressedFileNameWithExistingExtension_fDZv2() {
        String fileName = "example.txt.lzma.lzma";
        String expected = "example.txt.lzma.lzma";
        String actual = LZMAUtils.getCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMatches_cHeP0_fid1() {
        byte[] signature = new byte[10];
        int length = 10;
        boolean result = LZMAUtils.matches(signature, length);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetCompressedFileNameWithExistingExtension_fDZv2_fid1() {
        String fileName = "example.txt.lzma";
        String expected = "example.txt.lzma";
        String actual = LZMAUtils.getCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
}