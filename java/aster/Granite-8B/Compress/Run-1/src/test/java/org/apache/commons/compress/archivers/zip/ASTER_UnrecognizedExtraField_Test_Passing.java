/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnrecognizedExtraField_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHeaderId_Rkmb0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        ZipShort zipShort = new ZipShort(10);
        unrecognizedExtraField.setHeaderId(zipShort);
        assertEquals(zipShort, unrecognizedExtraField.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromCentralDirectoryData_snKw0() {
        UnrecognizedExtraField u = new UnrecognizedExtraField();
        byte[] data = new byte[10];
        int offset = 0;
        int length = 10;
        u.parseFromCentralDirectoryData(data, offset, length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromLocalFileData_MLey0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[10];
        int offset = 0;
        int length = 10;
        unrecognizedExtraField.parseFromLocalFileData(data, offset, length);
        assertEquals(10, unrecognizedExtraField.getLocalFileDataData().length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryDataWithCentralDataNull_mpas1() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] expected = unrecognizedExtraField.getLocalFileDataData();
        byte[] actual = unrecognizedExtraField.getCentralDirectoryData();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocalFileDataData_twxx0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[10]; // Replace with appropriate data
        unrecognizedExtraField.setLocalFileDataData(data);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryLength_pqvP0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        ZipShort centralDirectoryLength = unrecognizedExtraField.getCentralDirectoryLength();
        assertNotNull(centralDirectoryLength);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetLocalFileDataLength_iciY0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        ZipShort localFileDataLength = unrecognizedExtraField.getLocalFileDataLength();
        assertEquals(0, localFileDataLength.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetLocalFileDataLength3_bQue0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] bytes = new byte[0];
        ZipShort.getBytes(0);
        ZipShort localFileDataLength = unrecognizedExtraField.getLocalFileDataLength();
        assertEquals(0, localFileDataLength.getValue());
    }
}