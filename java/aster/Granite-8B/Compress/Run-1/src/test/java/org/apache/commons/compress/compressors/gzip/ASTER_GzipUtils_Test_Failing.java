/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.gzip;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_GzipUtils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName5_ekvV4_fid2() {
        String fileName = "example.zip";
        boolean result = GzipUtils.isCompressedFileName(fileName);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName7_phgo6_fid2() {
        String fileName = "example.7z";
        boolean result = GzipUtils.isCompressedFileName(fileName);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName10_hgLI9_fid2() {
        String fileName = "example.bz2";
        boolean result = GzipUtils.isCompressedFileName(fileName);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName11_FXkc10_fid2() {
        String fileName = "example.xz";
        boolean result = GzipUtils.isCompressedFileName(fileName);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName12_YHsL11_fid2() {
        String fileName = "example.zst";
        boolean result = GzipUtils.isCompressedFileName(fileName);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName13_MuOl12_fid2() {
        String fileName = "example.lz4";
        boolean result = GzipUtils.isCompressedFileName(fileName);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName14_gteN13_fid2() {
        String fileName = "example.lzma";
        boolean result = GzipUtils.isCompressedFileName(fileName);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFileName15_aHuk14_fid2() {
        String fileName = "example.snappy";
        boolean result = GzipUtils.isCompressedFileName(fileName);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFilename_JWzC1_5_fid2() {
        assertTrue(GzipUtils.isCompressedFilename("example.zip"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompressedFilename_JWzC1_7_fid2() {
        assertTrue(GzipUtils.isCompressedFilename("example.7z"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetCompressedFileNameWithEmptyFileName_BVnQ4() {
        String fileName = "";
        String expected = "";
        String actual = GzipUtils.getCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetCompressedFileNameWithNullFileName_acAQ5() {
        String fileName = null;
        String expected = null;
        String actual = GzipUtils.getCompressedFileName(fileName);
        assertEquals(expected, actual);
    }
}