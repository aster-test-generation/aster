/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.nio.file.Path;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FileNameUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExtension_naCZ0() {
        String fileName = "example.txt";
        String expectedExtension = "txt";
        String actualExtension = FileNameUtils.getExtension(fileName);
        assertEquals(expectedExtension, actualExtension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNoExtension_nxNQ1() {
        String fileName = "example";
        String expectedExtension = "";
        String actualExtension = FileNameUtils.getExtension(fileName);
        assertEquals(expectedExtension, actualExtension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEmptyFileName_bTCd3() {
        String fileName = "";
        String expectedExtension = "";
        String actualExtension = FileNameUtils.getExtension(fileName);
        assertEquals(expectedExtension, actualExtension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullFileName_BoWX0() {
        String fileName = null;
        String expected = null;
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFileNameWithExtension_rWiA1() {
        String fileName = "example.txt";
        String expected = "example";
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFileNameWithoutExtension_ecxZ2() {
        String fileName = "example";
        String expected = "example";
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullPath_SyLN0() {
        Path path = null;
        String extension = FileNameUtils.getExtension(path);
        assertEquals(null, extension);
    }
}