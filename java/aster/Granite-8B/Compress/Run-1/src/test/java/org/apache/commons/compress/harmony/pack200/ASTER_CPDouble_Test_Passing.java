/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CPDouble_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_rJNC8_fid1() {
		CPDouble obj1 = new CPDouble(Double.NaN);
		CPDouble obj2 = new CPDouble(Double.NaN);
		int result = obj1.compareTo(obj2);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_imyu11() {
		CPDouble obj1 = new CPDouble(Double.NaN);
		CPDouble obj2 = new CPDouble(Double.NaN);
		int result = obj1.compareTo(obj2);
		assertFalse(Double.isNaN(result));
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_jyVE0_lLph0() {
		CPDouble obj1 = new CPDouble(1.0);
		CPDouble obj2 = new CPDouble(2.0);
		int result = obj1.compareTo(obj2);
		assertEquals(-1, result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_hZPy1_RaLB0() {
		CPDouble obj1 = new CPDouble(1.0);
		CPDouble obj2 = new CPDouble(1.0);
		int result = obj1.compareTo(obj2);
		assertEquals(0, result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_OEgE3_qGTb0() {
		CPDouble obj1 = new CPDouble(Double.MAX_VALUE);
		CPDouble obj2 = new CPDouble(Double.MIN_VALUE);
		int result = obj1.compareTo(obj2);
		assertEquals(1, result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_SGwg2_WRcc0() {
		CPDouble obj1 = new CPDouble(2.0);
		CPDouble obj2 = new CPDouble(1.0);
		int result = obj1.compareTo(obj2);
		assertEquals(1, result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_Wwyh4_VdFc0() {
		CPDouble obj1 = new CPDouble(Double.MIN_VALUE);
		CPDouble obj2 = new CPDouble(Double.MAX_VALUE);
		int result = obj1.compareTo(obj2);
		assertEquals(-1, result);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCompareTo_bGEF5_LBPS0() {
		CPDouble obj1 = new CPDouble(Double.NaN);
		CPDouble obj2 = new CPDouble(Double.NaN);
		int result = obj1.compareTo(obj2);
		assertEquals(0, result);
	}
}