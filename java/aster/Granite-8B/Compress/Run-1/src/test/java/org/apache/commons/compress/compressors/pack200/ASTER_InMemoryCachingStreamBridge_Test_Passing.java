/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.pack200;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_InMemoryCachingStreamBridge_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateInputStream_uoXZ0_1() throws IOException {
        InMemoryCachingStreamBridge bridge = new InMemoryCachingStreamBridge();
        InputStream inputStream = bridge.createInputStream();
        assertNotNull(inputStream);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateInputStream_uoXZ0_2() throws IOException {
        InMemoryCachingStreamBridge bridge = new InMemoryCachingStreamBridge();
        InputStream inputStream = bridge.createInputStream();
        assertTrue(inputStream instanceof ByteArrayInputStream);}
}