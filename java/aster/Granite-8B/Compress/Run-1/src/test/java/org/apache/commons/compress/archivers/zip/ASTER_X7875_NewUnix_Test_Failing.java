/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_X7875_NewUnix_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetLocalFileDataLength_VLkY0() {
        X7875_NewUnix x7875_NewUnix = new X7875_NewUnix();
        ZipShort zipShort = x7875_NewUnix.getLocalFileDataLength();
        assertEquals(0, zipShort.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testTrimLeadingZeroesForceMinLength_cTkO0() {
        byte[] array = null;
        byte[] result = X7875_NewUnix.trimLeadingZeroesForceMinLength(array);
        assertArrayEquals(new byte[0], result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testTrimLeadingZeroesForceMinLength2_bAGI1() {
        byte[] array = new byte[0];
        byte[] result = X7875_NewUnix.trimLeadingZeroesForceMinLength(array);
        assertArrayEquals(new byte[0], result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testTrimLeadingZeroesForceMinLength3_oDsr2() {
        byte[] array = new byte[]{0, 0, 0, 0, 0};
        byte[] result = X7875_NewUnix.trimLeadingZeroesForceMinLength(array);
        assertArrayEquals(new byte[0], result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testLocalFileDataData_dVSB0() {
        X7875_NewUnix x7875_NewUnix = new X7875_NewUnix();
        byte[] actual = x7875_NewUnix.getLocalFileDataData();
        assertEquals(0, actual.length);
    }
}