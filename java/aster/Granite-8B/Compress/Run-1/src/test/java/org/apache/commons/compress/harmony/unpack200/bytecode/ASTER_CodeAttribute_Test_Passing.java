/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.compress.harmony.unpack200.Segment;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
public class Aster_CodeAttribute_Test_Passing {
@Test
    public void testRenumber_DHKV0_WzNB0() {
        int[] bcCaseCount = new int[10];
        int[] bcCaseValue = new int[10];
        int[] bcByte = new int[10];
        int[] bcShort = new int[10];
        int[] bcLocal = new int[10];
        int[] bcLabel = new int[10];
        int[] bcIntRef = new int[10];
        int[] bcFloatRef = new int[10];
        int[] bcLongRef = new int[10];
        int[] bcDoubleRef = new int[10];
        int[] bcStringRef = new int[10];
        int[] bcClassRef = new int[10];
        int[] bcFieldRef = new int[10];
        int[] bcMethodRef = new int[10];
        int[] bcIMethodRef = new int[10];
        int[] bcThisField = new int[10];
        int[] bcSuperField = new int[10];
        int[] bcThisMethod = new int[10];
        int[] bcSuperMethod = new int[10];
        int[] bcInitRef = new int[10];
        int[] wideByteCodes = new int[10];
        Segment segment = new Segment();
        OperandManager operandManager = new OperandManager(bcCaseCount, bcCaseValue, bcByte, bcShort, bcLocal, bcLabel, bcIntRef, bcFloatRef, bcLongRef, bcDoubleRef, bcStringRef, bcClassRef, bcFieldRef, bcMethodRef, bcIMethodRef, bcThisField, bcSuperField, bcThisMethod, bcSuperMethod, bcInitRef, wideByteCodes);
        byte[] codePacked = new byte[10];
        List<ExceptionTableEntry> exceptionTable = new ArrayList<>();
        CodeAttribute codeAttribute = new CodeAttribute(10, 10, codePacked, segment, operandManager, exceptionTable);
        List<Integer> byteCodeOffsets = new ArrayList<>();
        byteCodeOffsets.add(1);
        byteCodeOffsets.add(2);
        byteCodeOffsets.add(3);
        codeAttribute.renumber(byteCodeOffsets);
        exceptionTable.forEach(entry -> entry.renumber(byteCodeOffsets));
    }
}