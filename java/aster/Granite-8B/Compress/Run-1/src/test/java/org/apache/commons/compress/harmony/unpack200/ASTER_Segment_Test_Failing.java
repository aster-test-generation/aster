/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.util.ArrayList;
import org.apache.commons.compress.harmony.unpack200.bytecode.Attribute;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.ArrayList;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Segment_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantPool_qTpe0() {
        Segment segment = new Segment();
        SegmentConstantPool constantPool = segment.getConstantPool();
        assertNotNull(constantPool);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRawClassFlags_RkXS0() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        long[] rawClassFlags = classBands.getRawClassFlags();
        assertNotNull(rawClassFlags);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassSuperInts_Dipu1() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classSuperInts = classBands.getClassSuperInts();
        assertNotNull(classSuperInts);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassMethodCount_GbrF2() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classMethodCount = classBands.getClassMethodCount();
        assertNotNull(classMethodCount);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassThisInts_gwIC3() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classThisInts = classBands.getClassThisInts();
        assertNotNull(classThisInts);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassFlags_vKWo4() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        long[] classFlags = classBands.getClassFlags();
        assertNotNull(classFlags);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeHandlerStartP_EvBC5() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[][] codeHandlerStartP = classBands.getCodeHandlerStartP();
        assertNotNull(codeHandlerStartP);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFieldAttributes_phtX6() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        ArrayList<Attribute>[][] fieldAttributes = classBands.getFieldAttributes();
        assertNotNull(fieldAttributes);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethodAttributes_nncO7() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        ArrayList<Attribute>[][] methodAttributes = classBands.getMethodAttributes();
        assertNotNull(methodAttributes);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetIcLocal_vmDg8() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        IcTuple[][] icLocal = classBands.getIcLocal();
        assertNotNull(icLocal);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeMaxNALocals_EWfq9() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] codeMaxNALocals = classBands.getCodeMaxNALocals();
        assertNotNull(codeMaxNALocals);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeHandlerCount_RelU10() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] codeHandlerCount = classBands.getCodeHandlerCount();
        assertNotNull(codeHandlerCount);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassFieldCount_uHjy11() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classFieldCount = classBands.getClassFieldCount();
        assertNotNull(classFieldCount);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethodDescrInts_XGRG12() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[][] methodDescrInts = classBands.getMethodDescrInts();
        assertNotNull(methodDescrInts);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassVersionMajor_fOhj13() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classVersionMajor = classBands.getClassVersionMajor();
        assertNotNull(classVersionMajor);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeHandlerEndPO_Wrzk14() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[][] codeHandlerEndPO = classBands.getCodeHandlerEndPO();
        assertNotNull(codeHandlerEndPO);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeHasAttributes_BSig15() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        boolean[] codeHasAttributes = classBands.getCodeHasAttributes();
        assertNotNull(codeHasAttributes);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFieldDescrInts_FceD16() {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[][] fieldDescrInts = classBands.getFieldDescrInts();
        assertNotNull(fieldDescrInts);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetIcBands_yQuY0() {
        Segment segment = new Segment();
        IcBands icBands = segment.getIcBands();
        assertNotNull(icBands);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCpBands_KfOD0() {
        Segment segment = new Segment();
        CpBands cpBands = segment.getCpBands();
        assertNotNull(cpBands);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullGetCpBands_LhGi1() {
        Segment segment = null;
        CpBands cpBands = segment.getCpBands();
        assertNull(cpBands);
    }
}