/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.examples;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import org.apache.commons.compress.archivers.ArchiveException;
import org.apache.commons.compress.archivers.ArchiveOutputStream;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Archiver_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateWithNullTarget_tKpR1_1() {
        Archiver archiver = new Archiver();
        ArchiveOutputStream<?> target = null;
        File directory = new File("path/to/directory"); // Replace with actual directory
        Exception exception = assertThrows(IOException.class, () -> archiver.create(target, directory));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate_ejqI0() throws IOException, ArchiveException {
        Archiver archiver = new Archiver();
        File target = Files.createTempFile("test", ".zip").toFile();
        File directory = Files.createTempDirectory("test").toFile();
        archiver.create("zip", target, directory);
    }
}