/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CodecEncoding_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSpecifierForDefaultCodec_BQSk0() {
        BHSDCodec defaultCodec = new BHSDCodec(1, 2, 3, 4);
        int specifier = CodecEncoding.getSpecifierForDefaultCodec(defaultCodec);
        assertEquals(1, specifier);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_nFHI2() {
        BHSDCodec defaultCodec = new BHSDCodec(1, 2, 3, 4);
        boolean isEqual = defaultCodec.equals(new Object());
        assertEquals(false, isEqual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCanonicalCodec_PALQ0_1() {
        BHSDCodec bhsdCodec = CodecEncoding.getCanonicalCodec(0);
        assertNotNull(bhsdCodec);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCanonicalCodec_PALQ0_2() {
        BHSDCodec bhsdCodec = CodecEncoding.getCanonicalCodec(0);
        assertEquals(0, bhsdCodec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCanonicalCodec_PALQ0_3() {
        BHSDCodec bhsdCodec = CodecEncoding.getCanonicalCodec(0);
        assertEquals(0, bhsdCodec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCanonicalCodec_PALQ0_4() {
        BHSDCodec bhsdCodec = CodecEncoding.getCanonicalCodec(0);
        assertEquals(0, bhsdCodec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCanonicalCodec_PALQ0_5() {
        BHSDCodec bhsdCodec = CodecEncoding.getCanonicalCodec(0);
        assertEquals(0, bhsdCodec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCanonicalCodec_PALQ0_6() {
        BHSDCodec bhsdCodec = CodecEncoding.getCanonicalCodec(0);
        assertEquals(0, bhsdCodec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCanonicalCodec_PALQ0() {
        BHSDCodec bhsdCodec = CodecEncoding.getCanonicalCodec(0);
        assertNotNull(bhsdCodec);
        assertEquals(0, bhsdCodec.getB());
        assertEquals(0, bhsdCodec.hashCode());
        assertEquals(0, bhsdCodec.getS());
        assertEquals(0, bhsdCodec.getH());
        assertEquals(0, bhsdCodec.getL());
    }
}