/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarArchiveInputStream_Test_Passing {
final int magicLen = TarConstants.MAGICLEN;
final int magicOffset = TarConstants.MAGIC_OFFSET;
    private static void generateTestCases_nILe1() {
    }
    private static void generateNextTarEntryTestCases(TarArchiveInputStream tarArchiveInputStream) {
    }
    private static void generatePaxHeadersTestCases(TarArchiveInputStream tarArchiveInputStream) {
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMarkSupported_Xnok0() {
        TarArchiveInputStream tarArchiveInputStream = new TarArchiveInputStream(null);
        boolean result = tarArchiveInputStream.markSupported();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCanReadEntryDataWithNullArchiveEntry_HePN3() {
        TarArchiveInputStream tarArchiveInputStream = new TarArchiveInputStream(null);
        boolean result = tarArchiveInputStream.canReadEntryData(null);
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetModTime_ZaRm0() {
    }
}