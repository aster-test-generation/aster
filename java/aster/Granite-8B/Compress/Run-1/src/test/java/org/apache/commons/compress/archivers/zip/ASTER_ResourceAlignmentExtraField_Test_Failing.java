/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ResourceAlignmentExtraField_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryDataWithAlignmentAndAllowMethodChange_bKRP1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true);
        byte[] expected = {1, 1};
        assertArrayEquals(expected, resourceAlignmentExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryDataWithAlignment_RGIl1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1);
        byte[] expected = {1, 1};
        assertArrayEquals(expected, resourceAlignmentExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryDataWithAlignmentAndPadding_muPH2() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true, 2);
        byte[] expected = {1, 1};
        assertArrayEquals(expected, resourceAlignmentExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAllowMethodChangeWithAlignmentOnly_PDnh3_fid1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1);
        boolean result = resourceAlignmentExtraField.allowMethodChange();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryDataWithAlignmentAndAllowMethodChange_bKRP0() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true);
        byte[] expected = {0, 1};
        assertArrayEquals(expected, resourceAlignmentExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryDataWithAlignment_RGIl1_fid1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1);
        byte[] expected = {0, 1};
        assertArrayEquals(expected, resourceAlignmentExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryDataWithAlignmentAndPadding_muPH2_fid1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true, 2);
        byte[] expected = {0, 1};
        assertArrayEquals(expected, resourceAlignmentExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLocalFileDataLength_VTtP0_fid1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true, 2);
        ZipShort localFileDataLength = resourceAlignmentExtraField.getLocalFileDataLength();
        assertEquals(5, localFileDataLength.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLocalFileDataLength2_uKxo1_fid1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true);
        ZipShort localFileDataLength = resourceAlignmentExtraField.getLocalFileDataLength();
        assertEquals(4, localFileDataLength.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLocalFileDataLength3_urQE2_fid1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1);
        ZipShort localFileDataLength = resourceAlignmentExtraField.getLocalFileDataLength();
        assertEquals(4, localFileDataLength.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetCentralDirectoryLength_SGJC0_fid1() {
		ResourceAlignmentExtraField extraField = new ResourceAlignmentExtraField(1, false);
		ZipShort centralDirectoryLength = extraField.getCentralDirectoryLength();
		assertEquals(4, centralDirectoryLength.getValue());
	}
}