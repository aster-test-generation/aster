/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ServiceLoaderIterator_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNext_ALdi0() {
    ServiceLoaderIterator<String> iterator = new ServiceLoaderIterator<>(String.class);
    assertEquals("Next element should be 'Hello'", "Hello", iterator.next());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNextWithClassLoader_mpov1() {
    ServiceLoaderIterator<String> iterator = new ServiceLoaderIterator<>(String.class, getClass().getClassLoader());
    assertEquals("Next element should be 'Hello'", "Hello", iterator.next());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_FINm0() {
        ServiceLoaderIterator<String> iterator = new ServiceLoaderIterator<>(String.class);
        iterator.remove();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove2_qyed1() {
        ServiceLoaderIterator<Integer> iterator = new ServiceLoaderIterator<>(Integer.class, null);
        iterator.remove();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNext_ALdi0_fid1() {
    ServiceLoaderIterator<String> iterator = new ServiceLoaderIterator<>(String.class);
    iterator.next();
    assertEquals("Next element should be 'Hello'", "Hello", iterator.next());
}
}