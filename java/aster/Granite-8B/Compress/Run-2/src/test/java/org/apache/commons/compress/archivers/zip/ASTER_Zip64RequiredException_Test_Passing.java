/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_Zip64RequiredException_Test_Passing {
Zip64RequiredException zip64requiredexception;
ZipArchiveEntry zipArchiveEntry;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetEntryTooBigMessage() {
        zip64requiredexception = new Zip64RequiredException("test");
        zipArchiveEntry = mock(ZipArchiveEntry.class);
        when(zipArchiveEntry.getName()).thenReturn("test");
        String message = Zip64RequiredException.getEntryTooBigMessage(zipArchiveEntry);
        assertEquals("test's size exceeds the limit of 4GByte.", message);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getEntryTooBigMessage_EasQ0() {
        ZipArchiveEntry ze = new ZipArchiveEntry("name");
        ze.setSize(4294967296L);
        assertEquals("name's size exceeds the limit of 4GByte.", Zip64RequiredException.getEntryTooBigMessage(ze));
    }
}