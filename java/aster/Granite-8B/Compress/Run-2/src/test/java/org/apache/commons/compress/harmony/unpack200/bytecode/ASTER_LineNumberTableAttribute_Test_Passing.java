/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LineNumberTableAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_WUSb0() {
        LineNumberTableAttribute attribute = new LineNumberTableAttribute(10, new int[]{1, 2, 3, 4, 5}, new int[]{10, 20, 30, 40, 50});
        assertEquals("LineNumberTable: 10 lines", attribute.toString());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testStartPCs_xbHC0_1() {
		LineNumberTableAttribute attribute = new LineNumberTableAttribute(10, new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10});
		int[] startPcs = attribute.getStartPCs();
		for (int i = 0; i < startPcs.length; i++) {
		}
		assertEquals(10, startPcs.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_vpUx0() {
        LineNumberTableAttribute attribute = new LineNumberTableAttribute(1, new int[]{1}, new int[]{1});
        int length = attribute.getLength();
        assertEquals(2 + 4 * 1, length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testStartPCs_xbHC0() {
		LineNumberTableAttribute attribute = new LineNumberTableAttribute(10, new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10});
		int[] startPcs = attribute.getStartPCs();
		assertEquals(10, startPcs.length);
		for (int i = 0; i < startPcs.length; i++) {
			assertEquals(i + 1, startPcs[i]);
		}
	}
}