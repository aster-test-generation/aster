/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.zstandard;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ZstdUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesWithEmptySignature_CHoM0() throws Exception {
    byte[] signature = new byte[0];
    boolean result = ZstdUtils.matches(signature, 0);
    assertFalse(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsZstdCompressionAvailable_AXKV0() throws Exception {
        assertTrue(ZstdUtils.isZstdCompressionAvailable());
}
}