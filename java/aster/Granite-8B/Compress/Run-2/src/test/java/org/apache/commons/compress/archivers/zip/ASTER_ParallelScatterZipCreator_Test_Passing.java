/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;

import org.apache.commons.compress.parallel.InputStreamSupplier;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ParallelScatterZipCreator_Test_Passing {
private ParallelScatterZipCreator parallelScatterZipCreator;
private ExecutorService executorService;
private DefaultBackingStoreSupplier backingStoreSupplier;
private ZipArchiveEntry zipArchiveEntry;
private InputStreamSupplier source;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubmit_lPQV0() {
        ParallelScatterZipCreator parallelScatterZipCreator = new ParallelScatterZipCreator();
        Callable callable = () -> {
            return null;
        };
        parallelScatterZipCreator.submit(callable);
    }
}