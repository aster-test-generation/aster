/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.io.OutputStream;
import java.util.concurrent.TimeUnit;
import java.util.jar.JarFile;
import java.util.jar.JarInputStream;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
public class Aster_Pack200PackerAdapter_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPackWithNullOutputStream_bjwR1() throws IOException {
    Pack200PackerAdapter packer = new Pack200PackerAdapter();
    JarInputStream in = mock(JarInputStream.class);
    try {
        packer.pack(in, null);
        fail("Must specify both input and output streams");
    } catch (IllegalArgumentException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFirePropertyChangeStringObjectObject_PoNV0() throws IOException {
        Pack200PackerAdapter pack200PackerAdapter = new Pack200PackerAdapter();
        pack200PackerAdapter.firePropertyChange("propertyName", "oldValue", "newValue");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPackWithNullOutputStream_QiZc1() throws Exception {
        Pack200PackerAdapter packerAdapter = new Pack200PackerAdapter();
        JarFile file = new JarFile("example.jar");
        OutputStream out = null;
        try {
            packerAdapter.pack(file, out);
            fail("Must specify both input and output streams");
        } catch (IllegalArgumentException e) {
        }
    }
}