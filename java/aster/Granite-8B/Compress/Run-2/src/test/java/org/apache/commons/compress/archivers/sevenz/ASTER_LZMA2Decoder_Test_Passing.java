/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LZMA2Decoder_Test_Passing {

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOptionsAsProperties_NELX0_1() {
        LZMA2Decoder decoder = new LZMA2Decoder();
        Object opts = new Object(); // Assuming opts is an object of some class
        byte[] result = decoder.getOptionsAsProperties(opts);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOptionsAsProperties_NELX0_2() {
        LZMA2Decoder decoder = new LZMA2Decoder();
        Object opts = new Object(); // Assuming opts is an object of some class
        byte[] result = decoder.getOptionsAsProperties(opts);
        assertEquals(1, result.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOptionsAsProperties_NELX0_3() {
        LZMA2Decoder decoder = new LZMA2Decoder();
        Object opts = new Object(); // Assuming opts is an object of some class
        byte[] result = decoder.getOptionsAsProperties(opts);
        assertTrue(result[0] >= 0 && result[0] <= 18);}

}