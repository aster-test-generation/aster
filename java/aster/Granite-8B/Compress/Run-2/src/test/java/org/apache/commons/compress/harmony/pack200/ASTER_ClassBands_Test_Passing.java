/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;

import org.apache.commons.compress.harmony.unpack200.ClassBands;
import org.apache.commons.compress.harmony.unpack200.Segment;
import org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ClassBands_Test_Passing {
private int index;
private CPClass[] class_this;
private Map<CPClass, Set<CPClass>> classReferencesInnerClass = new HashMap<>();
@Mock
    private CPClass inner;
@Mock
    private CPClass currentClass;
@Mock
    private Segment segment;
@Mock
    private CPUTF8 utf8;
@Mock
    private CPClass cpClass;
private ClassBands classbands;
}