/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_StreamingNotSupportedException_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetFormat_qRfU0() {
		StreamingNotSupportedException streamingNotSupportedException = new StreamingNotSupportedException("format");
		assertEquals("format", streamingNotSupportedException.getFormat());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetFormatWithNullFormat_VOwc1() {
		StreamingNotSupportedException streamingNotSupportedException = new StreamingNotSupportedException(null);
		assertEquals("", streamingNotSupportedException.getFormat());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetFormatWithEmptyFormat_ejOZ2() {
		StreamingNotSupportedException streamingNotSupportedException = new StreamingNotSupportedException("");
		assertEquals("", streamingNotSupportedException.getFormat());
	}
}