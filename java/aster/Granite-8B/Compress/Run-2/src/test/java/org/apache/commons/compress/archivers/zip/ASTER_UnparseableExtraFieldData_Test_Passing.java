/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnparseableExtraFieldData_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetLocalFileDataLength_JMJs0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        ZipShort localFileDataLength = unparseableExtraFieldData.getLocalFileDataLength();
        assertEquals(0, localFileDataLength.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryLength_lzMM0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        ZipShort centralDirectoryLength = unparseableExtraFieldData.getCentralDirectoryLength();
        assertNotNull(centralDirectoryLength);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromCentralDirectoryData_lengthNegative_throwsIllegalArgumentException_dJSh2_1() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        byte[] buffer = new byte[10];
        int offset = 0;
        int length = -1;
        IllegalArgumentException exception =
                assertThrows(IllegalArgumentException.class, () -> unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length));}
}