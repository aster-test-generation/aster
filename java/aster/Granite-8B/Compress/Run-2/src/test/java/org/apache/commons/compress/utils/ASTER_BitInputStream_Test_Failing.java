/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BitInputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits_bSis0() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(0);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits2_mqeM1() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(100);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits3_DeXA2() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(57);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits4_jdEm3() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(58);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits5_tymX4() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(59);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits6_WjkC5() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(60);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits7_ZRSS6() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(61);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits8_bNVR7() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(62);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits9_eVcj8() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(63);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits10_uQrr9() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(64);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits11_AagR10() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(65);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits12_VjsB11() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(66);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits13_rDRS12() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(67);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits14_jBHG13() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(68);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits15_NGux14() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(69);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits16_HsPD15() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(70);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits17_eWxr16() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(71);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits18_pMYI17() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(72);
        assertEquals(-1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits19_wmfe18() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(73);
        assertEquals(-1, result);
    }
}