/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;

import org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ScatterZipOutputStream_Test_Passing {
private FileBasedScatterGatherBackingStore backingStore;
private ZipArchiveEntryRequest zipArchiveEntryRequest;
private ScatterZipOutputStream scatterzipoutputstream;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFileBased_Gywv0() throws FileNotFoundException {
        File file = new File("test.txt");
        ScatterZipOutputStream stream = ScatterZipOutputStream.fileBased(file);
    }
}