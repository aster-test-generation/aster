/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnicodePathExtraField_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_jxoF0() {
        UnicodePathExtraField unicodePathExtraField = new UnicodePathExtraField("text", new byte[0], 0, 0);
        ZipShort headerId = unicodePathExtraField.getHeaderId();
        assertNotNull(headerId);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_withBytes_PXXR1() {
        byte[] bytes = new byte[10];
        UnicodePathExtraField unicodePathExtraField = new UnicodePathExtraField("text", bytes, 0, 10);
        ZipShort headerId = unicodePathExtraField.getHeaderId();
        assertNotNull(headerId);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_withOffsetAndLength_QSYI3() {
        byte[] bytes = new byte[10];
        UnicodePathExtraField unicodePathExtraField = new UnicodePathExtraField("text", bytes, 5, 5);
        ZipShort headerId = unicodePathExtraField.getHeaderId();
        assertNotNull(headerId);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_withNameAndBytes_pipy4() {
        byte[] bytes = new byte[10];
        UnicodePathExtraField unicodePathExtraField = new UnicodePathExtraField("name", bytes);
        ZipShort headerId = unicodePathExtraField.getHeaderId();
        assertNotNull(headerId);
    }
}