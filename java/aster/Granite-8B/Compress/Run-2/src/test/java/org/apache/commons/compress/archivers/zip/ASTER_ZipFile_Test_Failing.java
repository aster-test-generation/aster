/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import java.io.File;
import java.io.IOException;
import java.nio.channels.SeekableByteChannel;
import java.nio.file.Path;
import java.util.Enumeration;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ZipFile_Test_Failing {
private static byte[] ONE_ZERO_BYTE = new byte[1];
ZipFile zipfile;
@Mock
    ZipArchiveEntry entry;
private ZipEncoding zipEncoding;
@Mock
    ZipArchiveOutputStream mockZipArchiveOutputStream;
@Mock
    ZipArchiveEntryPredicate mockZipArchiveEntryPredicate;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize1_Vfsy0() throws Throwable {
		ZipFile zipFile = new ZipFile((Path) null, (String) null, (boolean) false);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize2_pPVO1() throws Throwable {
		ZipFile zipFile = new ZipFile((String) null);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize3_fLrD2() throws Throwable {
		ZipFile zipFile = new ZipFile((SeekableByteChannel) null, (String) null);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize4_iACU3() throws Throwable {
		ZipFile zipFile = new ZipFile((File) null, (String) null, (boolean) false);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize5_CvdL4() throws Throwable {
		ZipFile zipFile = new ZipFile((SeekableByteChannel) null, (String) null, (String) null, (boolean) false, (boolean) false);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize6_MvFS5() throws Throwable {
		ZipFile zipFile = new ZipFile((Path) null, (String) null, (boolean) false, (boolean) false);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize7_EbXH6() throws Throwable {
		ZipFile zipFile = new ZipFile((File) null, (String) null, (boolean) false, (boolean) false);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize8_IXoT7() throws Throwable {
		ZipFile zipFile = new ZipFile((SeekableByteChannel) null);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize9_IcPM8() throws Throwable {
		ZipFile zipFile = new ZipFile((SeekableByteChannel) null, (String) null, (String) null, (boolean) false);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize10_QueU9() throws Throwable {
		ZipFile zipFile = new ZipFile((Path) null, (String) null);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize11_eeMR10() throws Throwable {
		ZipFile zipFile = new ZipFile((String) null, (String) null);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize12_jGhL11() throws Throwable {
		ZipFile zipFile = new ZipFile((File) null, (String) null);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize13_FfnX12() throws Throwable {
		ZipFile zipFile = new ZipFile((Path) null);
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetEncoding_hPaM0() throws IOException {
		ZipFile zipFile = new ZipFile(new File("test.zip"), "UTF-8", false);
		String encoding = zipFile.getEncoding();
		assertEquals("UTF-8", encoding);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEntries_QLPS0() throws IOException {
        ZipFile zipFile = new ZipFile(new File("path_to_zip_file"));
        Enumeration<ZipArchiveEntry> entries = zipFile.getEntries();
        assertNotNull(entries);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize1_Vfsy0_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((Path) null, (String) null, (boolean) false);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize2_pPVO1_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile("C:\\Users\\1\\Desktop\\1.zip");
		zipFile.finalize();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize3_fLrD2_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((SeekableByteChannel) null, (String) null);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize4_iACU3_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((File) null, (String) null, (boolean) false);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize5_CvdL4_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((SeekableByteChannel) null, (String) null, (String) null, (boolean) false, (boolean) false);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize6_MvFS5_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((Path) null, (String) null, (boolean) false, (boolean) false);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize7_EbXH6_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((File) null, (String) null, (boolean) false, (boolean) false);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize9_IcPM8_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((SeekableByteChannel) null, (String) null, (String) null, (boolean) false);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize10_QueU9_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((Path) null, (String) null);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize11_eeMR10_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((String) null, (String) null);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize12_jGhL11_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((File) null, (String) null);
		zipFile.close();
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFinalize13_FfnX12_fid1() throws Throwable {
		ZipFile zipFile = new ZipFile((Path) null);
		// Add the necessary code to fix the test case
		// For example:
		// zipFile.close();
	}
}