/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ParsingUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseIntValue_PDog0_1() throws IOException {
        assertEquals(0, ParsingUtils.parseIntValue("0"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseIntValue_PDog0_2() throws IOException {
        assertEquals(1, ParsingUtils.parseIntValue("1"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseIntValue_PDog0_3() throws IOException {
        assertEquals(10, ParsingUtils.parseIntValue("10"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseIntValue_PDog0_4() throws IOException {
        assertEquals(-1, ParsingUtils.parseIntValue("-1"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseIntValue_PDog0_5() throws IOException {
        assertEquals(-10, ParsingUtils.parseIntValue("-10"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void parseIntValueTest_qCVD0() throws Exception {
        int radix = 10;
        String value = "123";
        int expected = 123;
        int actual = ParsingUtils.parseIntValue(value, radix);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParseLongValue_KPPg0() throws IOException {
		assertEquals(123L, ParsingUtils.parseLongValue("123"));
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParseLongValueWithRadix_QDNF2() throws IOException {
		assertEquals(10L, ParsingUtils.parseLongValue("10", 2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseLongValue_wWTi0() throws Exception {
        assertEquals(10L, ParsingUtils.parseLongValue("10", 10));
    }
}