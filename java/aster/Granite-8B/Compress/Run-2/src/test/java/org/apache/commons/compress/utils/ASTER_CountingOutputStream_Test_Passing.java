/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CountingOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteByteArrayIntInt_VdtX0() throws Exception {
        CountingOutputStream cos = new CountingOutputStream(System.out);
        byte[] b = new byte[10];
        cos.write(b, 0, b.length);
        assertEquals(10, cos.getBytesWritten());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBytesWritten_pvnb0() throws Exception {
        CountingOutputStream countingOutputStream = new CountingOutputStream(null);
        long bytesWritten = countingOutputStream.getBytesWritten();
        assertEquals(0, bytesWritten);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCount_jeAP0() throws Exception {
		CountingOutputStream cos = new CountingOutputStream(System.out);
		cos.count(10);
		assertEquals(10, cos.getBytesWritten());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testCountWithNegativeValue_GOkX1() throws Exception {
		CountingOutputStream cos = new CountingOutputStream(System.out);
		cos.count(-10);
		assertEquals(0, cos.getBytesWritten());
	}
}