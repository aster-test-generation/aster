/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.deflate;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.io.OutputStream;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;
public class Aster_DeflateCompressorOutputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testWriteWithNullOutputStream_NxWG1_1() {
        DeflateParameters parameters = new DeflateParameters();
        OutputStream outputStream = null;
        DeflateCompressorOutputStream deflateCompressorOutputStream = new DeflateCompressorOutputStream(outputStream, parameters);
        IOException exception = assertThrows(IOException.class, () -> deflateCompressorOutputStream.write(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClose2_RUZJ1_DnoC0() throws IOException {
        OutputStream outputStream = spy(OutputStream.class);
        DeflateCompressorOutputStream deflateCompressorOutputStream = new DeflateCompressorOutputStream(outputStream);
        doThrow(IOException.class).when(outputStream).close();
        deflateCompressorOutputStream.close();
        verify(outputStream, times(1)).close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testWriteWithNullOutputStream_NxWG1() {
        DeflateParameters parameters = new DeflateParameters();
        OutputStream outputStream = null;
        DeflateCompressorOutputStream deflateCompressorOutputStream = new DeflateCompressorOutputStream(outputStream, parameters);
        IOException exception = assertThrows(IOException.class, () -> deflateCompressorOutputStream.write(1));
        assertTrue(exception.getMessage().contains("Output stream is null"));
    }
}