/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentOptions_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFieldFlagsHi_LDJN0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFieldFlagsHi();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFieldFlagsHiFalse_dbHV1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFieldFlagsHi();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileSizeHi_ZFHB0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFileSizeHi();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileSizeHiFalse_shzS1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileSizeHi();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasCodeFlagsHi_KKga0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasCodeFlagsHi();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasCodeFlagsHiFalse_WnRu1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasCodeFlagsHi();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasSpecialFormats_jqyF0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasSpecialFormats();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasSpecialFormats2_spVN1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasSpecialFormats();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasArchiveFileCountsFalse_XSiM1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasArchiveFileCounts();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileOptions_OxnS0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFileOptions();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileOptionsFalse_lOVA1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileOptions();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testShouldNotDeflate_WgBN1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.shouldDeflate();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasAllCodeFlags_oQAJ0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasAllCodeFlags();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasAllCodeFlagsFalse_kOYG1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasAllCodeFlags();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasMethodFlagsHi_qYal0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasMethodFlagsHi();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtime_vKnK0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFileModtime();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtimeFalse_CmQs1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileModtime();
        assertFalse(result);
    }
}