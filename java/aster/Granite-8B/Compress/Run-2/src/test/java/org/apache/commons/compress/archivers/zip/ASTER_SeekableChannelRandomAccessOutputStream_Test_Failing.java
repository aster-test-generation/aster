/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.SeekableByteChannel;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
public class Aster_SeekableChannelRandomAccessOutputStream_Test_Failing {
    private SeekableChannelRandomAccessOutputStream stream;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteFully_YNPu1() throws IOException {
        SeekableByteChannel channel = mock(SeekableByteChannel.class);
        SeekableChannelRandomAccessOutputStream output = new SeekableChannelRandomAccessOutputStream(channel);
        byte[] b = new byte[10];
        long position = 5;
        output.writeFully(b, 0, 10, position);
        verify(channel).position(position);
        verify(channel).write(ByteBuffer.wrap(b, 0, 10));
    }
}