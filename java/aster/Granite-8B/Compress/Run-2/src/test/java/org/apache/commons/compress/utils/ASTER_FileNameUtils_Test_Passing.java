/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.nio.file.Path;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FileNameUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExtension_CmfG0() throws Exception {
        String fileName = "example.txt";
        String extension = FileNameUtils.getExtension(fileName);
        assertEquals("txt", extension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNoExtension_Llks1() throws Exception {
        String fileName = "example";
        String extension = FileNameUtils.getExtension(fileName);
        assertEquals("", extension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullFileName_ixyh2() throws Exception {
        String fileName = null;
        String extension = FileNameUtils.getExtension(fileName);
        assertEquals("", extension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEmptyFileName_kmLv3() throws Exception {
        String fileName = "";
        String extension = FileNameUtils.getExtension(fileName);
        assertEquals("", extension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHiddenFile_nEzd4() throws Exception {
        String fileName = ".hiddenfile";
        String extension = FileNameUtils.getExtension(fileName);
        assertEquals("", extension);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullFileName_IZga0() throws Exception {
        String fileName = null;
        String expected = null;
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFileNameWithExtension_UjUr1() throws Exception {
        String fileName = "test.txt";
        String expected = "test";
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFileNameWithoutExtension_mcpL2() throws Exception {
        String fileName = "test";
        String expected = "test";
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFileNameWithMultipleExtensions_smGh3() throws Exception {
        String fileName = "test.tar.gz";
        String expected = "test.tar";
        String actual = FileNameUtils.getBaseName(fileName);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullPath_QYrc0() throws Exception {
        Path path = null;
        String expected = null;
        String actual = FileNameUtils.getBaseName(path);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getExtension_NullPath_ReturnsNull_ryhq0() throws Exception {
        Path path = null;
        String expected = null;
        String actual = FileNameUtils.getExtension(path);
        assertEquals(expected, actual);
    }
}