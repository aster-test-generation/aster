/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;

import org.apache.commons.compress.harmony.unpack200.Segment;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.List;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RuntimeVisibleorInvisibleParameterAnnotationsAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCPUTF8Constructor2_pLof1_2() throws Exception {
        CPUTF8 cPUTF8 = new CPUTF8("utf8", 1);
        assertEquals(1, cPUTF8.globalIndex);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClassConstantPoolConstructor_fsZh2() throws Exception {
        ClassConstantPool classConstantPool = new ClassConstantPool();
        assertNotNull(classConstantPool);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClassConstantPoolEntries_vdbs4_1() throws Exception {
        ClassConstantPool classConstantPool = new ClassConstantPool();
        List<ClassFileEntry> entries = classConstantPool.entries();
        assertNotNull(entries);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClassConstantPoolEntries_vdbs4_2() throws Exception {
        ClassConstantPool classConstantPool = new ClassConstantPool();
        List<ClassFileEntry> entries = classConstantPool.entries();
        assertTrue(entries.isEmpty());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClassConstantPoolResolve_IydX5() throws Exception {
        ClassConstantPool classConstantPool = new ClassConstantPool();
        classConstantPool.resolve(new Segment());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClassConstantPoolGet_lziz6() throws Exception {
        ClassConstantPool classConstantPool = new ClassConstantPool();
        ClassFileEntry entry = classConstantPool.get(0);
        assertNull(entry);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClassConstantPoolAddNestedEntries_vSUt7() throws Exception {
        ClassConstantPool classConstantPool = new ClassConstantPool();
        classConstantPool.addNestedEntries();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClassConstantPoolSize_mLiO10() throws Exception {
        ClassConstantPool classConstantPool = new ClassConstantPool();
        int size = classConstantPool.size();
        assertEquals(0, size);
    }
}