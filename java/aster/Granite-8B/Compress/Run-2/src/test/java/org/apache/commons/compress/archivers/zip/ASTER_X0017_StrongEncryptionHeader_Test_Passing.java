/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;
import java.util.zip.ZipException;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_X0017_StrongEncryptionHeader_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromCentralDirectoryData_xdkI0() throws ZipException {
        X0017_StrongEncryptionHeader header = new X0017_StrongEncryptionHeader();
        byte[] data = new byte[100]; // Replace with actual data
        int offset = 0; // Replace with actual offset
        int length = data.length; // Replace with actual length
        header.parseFromCentralDirectoryData(data, offset, length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseCentralDirectoryFormatWithInvalidLength_ZSAU1() {
        X0017_StrongEncryptionHeader header = new X0017_StrongEncryptionHeader();
        byte[] data = new byte[11];
        int offset = 0;
        int length = 11;
        try {
            header.parseCentralDirectoryFormat(data, offset, length);
            fail("Exception should be thrown");
        } catch (ZipException e) {
            assertTrue(true);
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetRecordCount_hXhp0() {
		X0017_StrongEncryptionHeader x0017_StrongEncryptionHeader = new X0017_StrongEncryptionHeader();
		long result = x0017_StrongEncryptionHeader.getRecordCount();
		assertEquals(0, result);
	}
}