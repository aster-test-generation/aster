/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.nio.ByteOrder;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BitInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAlignWithByteBoundary_1_HJon0() {
        BitInputStream bitInputStream = new BitInputStream(null, ByteOrder.LITTLE_ENDIAN);
        bitInputStream.alignWithByteBoundary();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAlignWithByteBoundary_2_YPsh1() {
        BitInputStream bitInputStream = new BitInputStream(null, ByteOrder.BIG_ENDIAN);
        bitInputStream.alignWithByteBoundary();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReadBits_bSis0_fid1() throws IOException {
        BitInputStream bitInputStream = new BitInputStream(null, null);
        long result = bitInputStream.readBits(0);
        assertEquals(0, result);
}
}