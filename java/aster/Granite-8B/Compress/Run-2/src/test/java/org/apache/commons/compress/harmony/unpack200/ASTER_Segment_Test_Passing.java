/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;

import org.apache.commons.compress.harmony.unpack200.bytecode.Attribute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Segment_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
            public void write(int b) throws IOException {
            }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAttrDefinitionBands_QgEP0() throws Exception {
        Segment segment = new Segment();
        AttrDefinitionBands attrDefinitionBands = segment.getAttrDefinitionBands();
        assertNotNull(attrDefinitionBands);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRawClassFlags_jFoW0() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        long[] rawClassFlags = classBands.getRawClassFlags();
        assertNotNull(rawClassFlags);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassSuperInts_ZIhs1() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classSuperInts = classBands.getClassSuperInts();
        assertNotNull(classSuperInts);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassMethodCount_peAO2() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classMethodCount = classBands.getClassMethodCount();
        assertNotNull(classMethodCount);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassThisInts_ftjA3() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classThisInts = classBands.getClassThisInts();
        assertNotNull(classThisInts);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassFlags_MiUw4() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        long[] classFlags = classBands.getClassFlags();
        assertNotNull(classFlags);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeHandlerStartP_Hxze5() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[][] codeHandlerStartP = classBands.getCodeHandlerStartP();
        assertNotNull(codeHandlerStartP);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFieldAttributes_zDrD6() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        ArrayList<Attribute>[][] fieldAttributes = classBands.getFieldAttributes();
        assertNotNull(fieldAttributes);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethodAttributes_Shwc7() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        ArrayList<Attribute>[][] methodAttributes = classBands.getMethodAttributes();
        assertNotNull(methodAttributes);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetIcLocal_AImB8() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        IcTuple[][] icLocal = classBands.getIcLocal();
        assertNotNull(icLocal);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeMaxNALocals_zBYJ9() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] codeMaxNALocals = classBands.getCodeMaxNALocals();
        assertNotNull(codeMaxNALocals);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeHandlerCount_dDJk10() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] codeHandlerCount = classBands.getCodeHandlerCount();
        assertNotNull(codeHandlerCount);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassFieldCount_XefK11() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classFieldCount = classBands.getClassFieldCount();
        assertNotNull(classFieldCount);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethodDescrInts_EyKB12() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[][] methodDescrInts = classBands.getMethodDescrInts();
        assertNotNull(methodDescrInts);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassVersionMajor_zFsU13() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[] classVersionMajor = classBands.getClassVersionMajor();
        assertNotNull(classVersionMajor);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeHandlerEndPO_ZSit14() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[][] codeHandlerEndPO = classBands.getCodeHandlerEndPO();
        assertNotNull(codeHandlerEndPO);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCodeHasAttributes_psJx15() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        boolean[] codeHasAttributes = classBands.getCodeHasAttributes();
        assertNotNull(codeHasAttributes);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFieldDescrInts_ZXOi16() throws Exception {
        Segment segment = new Segment();
        ClassBands classBands = segment.getClassBands();
        int[][] fieldDescrInts = classBands.getFieldDescrInts();
        assertNotNull(fieldDescrInts);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCpBands_oPxq0() throws Exception {
        Segment segment = new Segment();
        CpBands cpBands = segment.getCpBands();
        assertNotNull(cpBands);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetIcBands_EkDf0() throws Exception {
        Segment segment = new Segment();
        IcBands icBands = segment.getIcBands();
        assertNotNull(icBands);
    }
}