/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Lister_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGoWithIOException_giax1_1() throws IOException {
        Lister lister = new Lister();
        String[] args = {"/path/to/non-existent-directory"};
        IOException expectedException = new IOException("File not found");
        IOException actualException = assertThrows(IOException.class, () -> lister.go());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGoWithIOException_giax1() throws IOException {
        Lister lister = new Lister();
        String[] args = {"/path/to/non-existent-directory"};
        IOException expectedException = new IOException("File not found");
        IOException actualException = assertThrows(IOException.class, () -> lister.go());
        assertEquals(expectedException.getMessage(), actualException.getMessage());
    }
}