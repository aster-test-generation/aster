/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PrecedingOrFollowingContext_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetPosition_positionEqualToCurrentPosition_noReset_LCrD1_eLrK0() {
        SelfContext parentContext = new SelfContext(null, null);
        NodeTypeTest nodeTest = new NodeTypeTest(0);
        PrecedingOrFollowingContext context = new PrecedingOrFollowingContext(parentContext, nodeTest, false);
        context.setPosition(0);
        assertEquals(0, context.getPosition());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNextNode_stackPush_AFXD17_xZPi0() {
        NamespaceContext parentContext = new NamespaceContext(new SelfContext(null, null), new NodeTypeTest(0));
        NodeTypeTest nodeTest = new NodeTypeTest(0);
        PrecedingOrFollowingContext context = new PrecedingOrFollowingContext(parentContext, nodeTest, false);
    }
}