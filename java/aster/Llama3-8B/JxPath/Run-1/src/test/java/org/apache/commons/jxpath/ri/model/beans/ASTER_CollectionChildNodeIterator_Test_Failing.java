/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CollectionChildNodeIterator_Test_Failing {
    private NodeTest test;
    private NodePointer nodePointer;
    private CollectionPointer collectionPointer;
    private CollectionChildNodeIterator collectionchildnodeiterator;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetElementNodeIterator() throws Exception {
        test = mock(NodeTest.class);
        nodePointer = mock(NodePointer.class);
        collectionPointer = mock(CollectionPointer.class);
        collectionchildnodeiterator = new CollectionChildNodeIterator(collectionPointer, test, false, null);
        NodeIterator nodeIterator = collectionchildnodeiterator.getElementNodeIterator(nodePointer);
        verify(nodePointer).childIterator(test, false, null);
        assertEquals(nodeIterator.getClass(), NodeIterator.class);
    }
}