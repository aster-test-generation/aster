/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.Compiler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XPathParser_Coverage_Test_Failing {
    private int[] jj_la1 = new int[39];
    private Compiler compiler;
    private Compiler compilerMock;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFunctionName_WNrO0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("test"));
        Object result = parser.FunctionName();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFilterExprInitialization_WUsV0() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        Object result = parser.FilterExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFilterExprArrayListInitialization_CShZ1() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        parser.FilterExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnaryExprSlash_AXiZ0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("/"));
        Object result = parser.UnaryExpr();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnaryExprSlashSlash_Mwno1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("//"));
        Object result = parser.UnaryExpr();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnaryExprVariable_FJXx2() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("$"));
        Object result = parser.UnaryExpr();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnaryExprLiteral_ccBr3() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("Literal"));
        Object result = parser.UnaryExpr();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnaryExprMinus_wwMI4() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("-"));
        parser.UnaryExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnaryExprMinusWithParentheses_lHJn5() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("(-)"));
        parser.UnaryExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnaryExprUnknownToken_vUjn6() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("UnknownToken"));
        try {
            parser.UnaryExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnaryExprMultipleTokens_RlMN8() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("MultipleTokens"));
        try {
            parser.UnaryExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPredicate_xcQW0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("Predicate".getBytes()));
        Object result = parser.Predicate();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPredicateWithExpression_ebcs1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("Predicate Expression".getBytes()));
        Object result = parser.Predicate();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPredicateWithMultipleTokens_OMDB3() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("Predicate 85 Expression 86".getBytes()));
        Object result = parser.Predicate();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LT_tLDJ0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 < 2".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GT_wsqY1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 > 2".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LTE_gPsO2() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 <= 2".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GTE_RJld3() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 >= 2".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LTE_noMatch_OtFd6() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 <= 1".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GTE_noMatch_YhAl7() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 >= 1".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_invalidInput_yGQR8() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 invalid 2".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_multipleLT_yFfI10() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 < 2 < 3".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_multipleGT_xwOw11() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 > 2 > 3".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_multipleLTE_SWzA12() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 <= 2 <= 3".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_multipleGTE_DNTj13() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 >= 2 >= 3".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LT_additiveExpr_JMUJ14() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 + 2 < 3".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LTE_additiveExpr_lYit16() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 + 2 <= 3".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName1_KPmK0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName2_DMeg1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("OR NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName3_mbTx2() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("AND NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName4_ukoS3() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("MOD NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName5_eUYQ4() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("DIV NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName6_aLgK5() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("NODE NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName7_znJQ6() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("TEXT NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName8_CVzw7() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("COMMENT NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName9_sHPX8() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("PI NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName10_QUJt9() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_LAST NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName11_ihDT10() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_POSITION NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName12_ERWp11() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_COUNT NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName13_Ohfj12() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_ID NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName14_zPre13() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_KEY NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName15_Eked14() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_LOCAL_NAME NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName16_JKaS15() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_NAMESPACE_URI NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName17_EUkA16() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_NAME NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName18_grGz17() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_STRING NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWildcardName19_QXtG18() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_CONCAT NCName"));
        Object result = parser.WildcardName();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubtractiveExpr_yKJl0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1-2".getBytes()));
        Object result = parser.SubtractiveExpr();
        assertEquals(1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubtractiveExprWithMinus_RoFe1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1-2-3".getBytes()));
        Object result = parser.SubtractiveExpr();
        assertEquals(-2, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubtractiveExprWithMultipleMinus_YOqH2() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1-2-3-4".getBytes()));
        Object result = parser.SubtractiveExpr();
        assertEquals(-3, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubtractiveExprWithNoMinus_EvJd3() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1".getBytes()));
        Object result = parser.SubtractiveExpr();
        assertEquals(1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSubtractiveExprWithInvalidInput_jDVV4() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1-2-".getBytes()));
        try {
            parser.SubtractiveExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAbbreviatedAxisSpecifierAttribute_UEgq1() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("attribute".getBytes()));
        assertEquals(Compiler.AXIS_ATTRIBUTE, parser.AbbreviatedAxisSpecifier());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelativeLocationPathSlash_Szgt0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("a/b".getBytes()));
        Object result = parser.RelativeLocationPath();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelativeLocationPathSlashSlash_pKeq1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("a//b".getBytes()));
        Object result = parser.RelativeLocationPath();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelativeLocationPathNoSlash_gYIS2() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("a".getBytes()));
        Object result = parser.RelativeLocationPath();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitTokenSource_JDmg0() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        parser.ReInit(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        assertEquals(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0), parser.token_source);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitTokenNext_gIbr2() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        parser.ReInit(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        assertEquals(parser.token.next, parser.token_source.getNextToken());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOR_aNWA0() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("OR".getBytes()));
        Object result = parser.LocationPath();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSlash_qDsD1() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("/".getBytes()));
        Object result = parser.LocationPath();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSlashSlash_goNj2() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("//".getBytes()));
        Object result = parser.LocationPath();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDefault_RMVu3() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("default".getBytes()));
        try {
            parser.LocationPath();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInvalidInput_pIhC4() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("InvalidInput".getBytes()));
        try {
            parser.LocationPath();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitInputStreamToken_xWoV2() {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        parser.ReInit(new java.io.ByteArrayInputStream(new byte[0]));
        assertNull(parser.token);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitInputStreamTokenNext_qsmX3() {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        parser.ReInit(new java.io.ByteArrayInputStream(new byte[0]));
        assertEquals(parser.token.next, parser.token.next = parser.token_source.getNextToken());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LT_noMatch_ncDn4() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 < 1".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GT_noMatch_NhPs5() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 > 1".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GT_additiveExpr_Clkf15() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 + 2 > 3".getBytes()));
        Object result = parser.RelationalExpr();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitInputStreamToken_xWoV2_fid1() {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        parser.ReInit(new java.io.ByteArrayInputStream(new byte[0]));
        assertEquals(parser.token, parser.token = new Token());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitInputStream_SGss0() {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        parser.ReInit(new java.io.ByteArrayInputStream(new byte[0]));
        assertEquals(1, parser.jj_input_stream.getBeginLine());
        assertEquals(1, parser.jj_input_stream.getBeginColumn());
    }
}