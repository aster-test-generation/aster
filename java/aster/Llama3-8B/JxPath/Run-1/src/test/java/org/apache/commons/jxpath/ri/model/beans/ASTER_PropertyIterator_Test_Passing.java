/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PropertyIterator_Test_Passing {
    private boolean targetReady = false;
    private int startPropertyIndex;
    private boolean empty = false;
    private int startIndex = 0;
    private boolean includeStart = false;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer_wFjm0() {
        QName qName = new QName("name", "localName");
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Class.class, false);
        Object bean = new Object();
        Locale locale = Locale.US;
        BeanPointer beanPointer = new BeanPointer(qName, bean, beanInfo, locale);
        PropertyIterator propertyIterator = new PropertyIterator(beanPointer, "name", false, null);
        NodePointer result = propertyIterator.getPropertyPointer();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_NullProperty_CvxK0_jRvg0() {
        PropertyIterator propertyIterator = new PropertyIterator(new BeanPointer(new QName("name"), null, new JXPathBasicBeanInfo(Class.class, true), Locale.US), "name", false, null);
        NodePointer nodePointer = propertyIterator.getNodePointer();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_SetPosition_gAbg3_UWdi0() {
        PropertyIterator propertyIterator = new PropertyIterator(new BeanPointer(new QName("name"), null, new JXPathBasicBeanInfo(Class.class, true), Locale.US), "name", false, null);
        propertyIterator.setPosition(1);
        NodePointer nodePointer = propertyIterator.getNodePointer();
        Assertions.assertNotNull(nodePointer);
    }
}