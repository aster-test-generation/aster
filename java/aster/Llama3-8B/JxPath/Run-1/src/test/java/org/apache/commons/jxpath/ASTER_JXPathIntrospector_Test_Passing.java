/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathIntrospector_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanInfoWithClass_uwKK0() {
        JXPathIntrospector.getBeanInfo(Class.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanInfoWithJXPathIntrospector_jETj1() {
        JXPathIntrospector.getBeanInfo(JXPathIntrospector.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanInfoWithJXPathBeanInfo_XZAz2() {
        JXPathIntrospector.getBeanInfo(JXPathBeanInfo.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanInfoWithClass_gaCZ1() {
        JXPathIntrospector introspector = new JXPathIntrospector();
        JXPathBeanInfo beanInfo = introspector.getBeanInfo(Class.class);
        Assertions.assertNotNull(beanInfo);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanInfoWithoutDynamicBeanInfo_CApZ3() {
        JXPathIntrospector introspector = new JXPathIntrospector();
        JXPathBeanInfo beanInfo = introspector.getBeanInfo(Object.class);
        Assertions.assertNotNull(beanInfo);
    }
}