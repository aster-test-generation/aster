/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.AbstractFactory;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullPointer_Test_Passing {
    @Mock
    private QName name;
    private NullPointer nullpointer;
    @Mock
    private JXPathContext jXPathContext;
    @Mock
    private NodePointer nodePointer;
    @Mock
    private QName qName;
    @Mock
    private Locale locale;
    @Mock
    private AbstractFactory abstractFactory;
    @Mock
    private Variables variables;
    @Mock
    private Pointer pointer;
    @Mock
    private NullPointer nullPointer;
    @Mock
    private QName qname;
    private String id;
    @Mock
    private DOMNodePointer parent;
    @Mock
    private DOMNodePointer domNodePointer;
    @Mock
    private VariablePointer variablePointer;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameObject_kQgi0() {
        NullPointer pointer = new NullPointer(new Locale("en", "US", ""), "id");
        boolean result = pointer.equals(pointer);
        assert result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsNull_sCaM2() {
        NullPointer pointer = new NullPointer(new Locale("en", "US", ""), "id");
        boolean result = pointer.equals(null);
        assert !result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameName_WQIR4() {
        NullPointer pointer1 = new NullPointer(new Locale("en", "US", ""), "id");
        NullPointer pointer2 = new NullPointer(new Locale("en", "US", ""), "id");
        boolean result = pointer1.equals(pointer2);
        assert result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentLocale_qfAV5() {
        NullPointer pointer1 = new NullPointer(new Locale("en", "US", ""), "id");
        NullPointer pointer2 = new NullPointer(new Locale("fr", "FR", ""), "id");
        boolean result = pointer1.equals(pointer2);
        assert result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_NullName_PREE0() {
        NullPointer nullPointer = new NullPointer(Locale.US, "id");
        int result = nullPointer.hashCode();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_Name_rfYK1() {
        QName qName = new QName("prefix", "localName");
        NullPointer nullPointer = new NullPointer(qName, Locale.US);
        int result = nullPointer.hashCode();
        assertEquals(qName.hashCode(), result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName5_GHHl4() {
        NullPointer nullPointer = new NullPointer(new QName("name"), new Locale("en", "US"));
        QName result = nullPointer.getName();
        assert result != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer_1() {
        nullpointer = new NullPointer(locale, "id");
        PropertyPointer propertyPointer = nullpointer.getPropertyPointer();
        Assertions.assertNotNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer_2() {
        nullpointer = new NullPointer(locale, "id");
        PropertyPointer propertyPointer = nullpointer.getPropertyPointer();
        Assertions.assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer_sLYK0() {
        Locale locale = new Locale("en", "US");
        String id = "testId";
        NullPointer nullPointer = new NullPointer(locale, id);
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testasPath_1() {
        id = "testId";
        nullpointer = new NullPointer(locale, id);
        // Test when id is not null
        String expectedPath = "null/name";
        // Test when id is null
        nullpointer = new NullPointer(parent, name);
        assertEquals(expectedPath, nullpointer.asPath());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testasPath_3() {
        id = "testId";
        nullpointer = new NullPointer(locale, id);
        // Test when id is not null
        String expectedPath = "id(testId)";
        // Test when id is null
        nullpointer = new NullPointer(parent, name);
        assertEquals("null/name", nullpointer.asPath());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithId_BEqg0() {
        NullPointer nullPointer = new NullPointer(Locale.US, "testId");
        String result = nullPointer.asPath();
        assertEquals("id(testId)", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValue_xOQn0() {
        Locale locale = new Locale("en", "US");
        String id = "testId";
        NullPointer nullPointer = new NullPointer(locale, id);
        Object result = nullPointer.getBaseValue();
        assert result == null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsActual_qnKY0() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        assertFalse(nullPointer.isActual());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsActual2_VqKt1() {
        VariablePointer variablePointer = new VariablePointer(new QName("prefix", "localName"));
        NullPointer nullPointer = new NullPointer(variablePointer, new QName("prefix", "localName"));
        assertFalse(nullPointer.isActual());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsActual5_uouu4() {
        QName qName = new QName("prefix", "localName");
        NullPointer nullPointer = new NullPointer(qName, new Locale("en", "US"));
        assertFalse(nullPointer.isActual());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_kXcp0() {
        Locale locale = new Locale("en", "US");
        String id = "testId";
        NullPointer nullPointer = new NullPointer(locale, id);
        boolean result = nullPointer.isLeaf();
        assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer2_jZMr1_KJGe1() {
        Locale locale = new Locale("en", "US");
        String id = "id";
        NullPointer nullPointer = new NullPointer(locale, id);
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithoutId_hGsP1_JuPy0() {
        QName qName = new QName("testName");
        NullPointer nullPointer = new NullPointer(null, qName);
        String result = nullPointer.asPath();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithParent_nAWD2_LISA0() {
        QName qName = new QName("testPrefix", "testLocalName");
        VariablePointer variablePointer = new VariablePointer(qName);
        NullPointer nullPointer = new NullPointer(variablePointer, qName);
        String result = nullPointer.asPath();
        assertEquals("$testPrefix:testLocalName", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_YHUp0_GiCP1() {
        QName qName = new QName("prefix", "localName");
        NullPointer nullPointer = new NullPointer(qName, new Locale("en", "US"));
        int length = nullPointer.getLength();
        assert length == 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsActual3_heKF2_YFIU0() {
        QName qName = new QName("prefix", "localName");
        NullPointer nullPointer = new NullPointer(qName, new Locale("en", "US"));
        assertTrue(nullPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf2_ECNM1_uqMl0() {
        Locale locale = new Locale("en", "US");
        String id = "testId";
        DOMNodePointer domNodePointer = new DOMNodePointer(null, locale, id);
        NullPointer nullPointer = new NullPointer(domNodePointer, new QName("prefix", "localName"));
        boolean result = nullPointer.isLeaf();
        assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf3_ARGd2_lIQx0() {
        QName qName = new QName("qualifiedName");
        NullPointer nullPointer = new NullPointer(qName, locale);
        boolean result = nullPointer.isLeaf();
        assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer() {
        nullpointer = new NullPointer(locale, "id");
        PropertyPointer propertyPointer = nullpointer.getPropertyPointer();
        Assertions.assertNotNull(propertyPointer);
        Assertions.assertTrue(propertyPointer instanceof NullPropertyPointer);
    }
}