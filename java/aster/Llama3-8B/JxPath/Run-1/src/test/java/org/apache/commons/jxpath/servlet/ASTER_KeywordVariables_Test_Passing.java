/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_KeywordVariables_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariable_GHFx1() {
        KeywordVariables keywordVariables = new KeywordVariables("test", null);
        boolean result = keywordVariables.isDeclaredVariable("test");
        assert result == true;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariable_DzwC0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", null);
        Exception exception = assertThrows(UnsupportedOperationException.class, () -> {
            keywordVariables.declareVariable("variable", "value");
        });
        assert true;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVariableUndeclaredVariable_BUSa1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", "object");
        Object result = keywordVariables.getVariable("undeclaredVariable");
        assert result == null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUndeclareVariable_jBFF0_rKnS0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", "object");
        try {
            keywordVariables.undeclareVariable("variable");
            org.junit.Assert.fail("Expected UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            org.junit.Assert.assertEquals("Cannot undeclare keyword variables.", e.getMessage());
        }
    }
}