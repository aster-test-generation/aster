/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BeanPropertyPointer_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_NullNames_MpYl0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        String[] result = beanPropertyPointer.getPropertyNames();
        assert result != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_PDNull_mUOz0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        assertEquals(1, beanPropertyPointer.getLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_PDNotNull_eXxC1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(new DOMNodePointer(null, null, null), new JXPathBasicBeanInfo(null, false));
        assertEquals(1, beanPropertyPointer.getLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyCountNullBeanInfo_jGjq2() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        assertEquals(0, beanPropertyPointer.getPropertyCount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValue_BaseValueUninitialized_zFPX1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        assertEquals(null, beanPropertyPointer.getBaseValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathImmediateNodeNotNull_Anmg0_OeWZ0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        JXPathContext context = JXPathContext.newContext(null);
        NodePointer result = beanPropertyPointer.createPath(context);
        assertEquals(beanPropertyPointer, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathBaseValueUninitialized_ktHW3_gRhs1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        JXPathContext context = JXPathContext.newContext(null);
        beanPropertyPointer.createPath(context);
        assertEquals(0, beanPropertyPointer.getPropertyCount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollection_PDNullAndValueNotCollection_ReturnsFalse_VVpb9_fzGQ1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, new JXPathBasicBeanInfo(Class.class, false));
        boolean result = beanPropertyPointer.getPropertyCount() > 0;
        Assertions.assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveCollectionGetBaseValue_hKVp3_PnGp0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.getPropertyCount();
        beanPropertyPointer.getBaseValue();
        beanPropertyPointer.remove();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveIndexZero_HAiR9_gqay0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setIndex(0);
        assertEquals(0, beanPropertyPointer.getPropertyCount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyCountNonAtomicBeanInfo_yVdb1_FgBy1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, new JXPathBasicBeanInfo(Object.class, false));
        assertEquals(1, beanPropertyPointer.getPropertyCount()); // assuming getPropertyDescriptors().length returns 1
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathImmediateNodeNotNull_Anmg0_OeWZ0_fid2() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        JXPathContext context = JXPathContext.newContext(null);
        NodePointer result = beanPropertyPointer.createPath(context);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathBaseValueUninitialized_ktHW3_gRhs1_fid2() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        JXPathContext context = JXPathContext.newContext(null);
        beanPropertyPointer.createPath(context);
        assertEquals(-1, beanPropertyPointer.getPropertyCount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveIndexZero_HAiR9_gqay0_fid2() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        beanPropertyPointer.setIndex(0);
        assertEquals(-1, beanPropertyPointer.getPropertyCount());
    }
}