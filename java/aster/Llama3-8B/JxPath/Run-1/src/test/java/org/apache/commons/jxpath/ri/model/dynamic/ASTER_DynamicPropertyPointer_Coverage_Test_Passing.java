/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DynamicPropertyPointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsContainer_gOnh0() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        boolean result = dynamicPropertyPointer.isContainer();
        assert(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyIndex_SetPropertyIndex_qlVI5() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setPropertyIndex(1);
        assertEquals(1, dynamicPropertyPointer.getPropertyIndex());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex_SameIndex_jbnL0() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setPropertyIndex(0);
        assertEquals(0, dynamicPropertyPointer.getPropertyIndex());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyIndex_DifferentIndex_DePh1() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setPropertyIndex(0);
        dynamicPropertyPointer.setPropertyIndex(1);
        assertEquals(1, dynamicPropertyPointer.getPropertyIndex());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyName_SetRequiredPropertyName_jgjR2_MBvI0() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setPropertyName("testPropertyName");
        assertEquals("testPropertyName", dynamicPropertyPointer.getPropertyName());
    }
}