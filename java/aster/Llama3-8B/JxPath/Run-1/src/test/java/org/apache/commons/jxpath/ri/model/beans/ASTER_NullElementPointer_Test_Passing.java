/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullElementPointer_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_QUbI0() {
        NullElementPointer nullElementPointer = new NullElementPointer(null, 0);
        Object immediateNode = nullElementPointer.getImmediateNode();
        assertEquals(null, immediateNode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_NullParentNoIndex_xPzc1() {
        NullElementPointer pointer = new NullElementPointer(null, NullElementPointer.WHOLE_COLLECTION);
        String result = pointer.asPath();
        assert result.equals("");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_NullParentWithIndex_wLnG2() {
        NullElementPointer pointer = new NullElementPointer(null, 1);
        String result = pointer.asPath();
        assert result.equals("[2]");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_xKlm0() {
        NullElementPointer nullElementPointer = new NullElementPointer(null, 0);
        assertEquals(0, nullElementPointer.getLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisLeaf_qSQS0() throws Exception {
        MockitoAnnotations.initMocks(this);
        DOMNodePointer parent = Mockito.mock(DOMNodePointer.class);
        NullElementPointer nullelementpointer = new NullElementPointer(parent, 0);
        boolean result = nullelementpointer.isLeaf();
        Assertions.assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer_fWTd0() throws Exception {
        NullElementPointer nullElementPointer = new NullElementPointer(null, 0);
        boolean propertyPointer = nullElementPointer.isLeaf();
        Assertions.assertTrue(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisCollection_xQGV0() throws Exception {
        MockitoAnnotations.initMocks(this);
        NullElementPointer nullelementpointer = new NullElementPointer(null, 0);
        boolean result = nullelementpointer.isLeaf();
        Assertions.assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetBaseValue_pMtm0() throws Exception {
        MockitoAnnotations.initMocks(this);
        NullElementPointer nullElementPointer = new NullElementPointer(null, 0);
        assertEquals(true, nullElementPointer.isLeaf());
    }
}