/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.w3c.dom.Attr;
import org.w3c.dom.Node;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DOMNamespaceIterator_Test_Failing {
    private int position = 0;
    @Mock
    private Node node;
    @Mock
    private DOMNodePointer domNodePointer;
    @Mock
    private VariablePointer variablePointer;
    @Mock
    private QName qName;
    @Mock
    private List<String> attributes = new ArrayList<>();
    private NodePointer parent;
    private Attr attr;
    private List<Attr> list;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_Position0_ReturnsNull_CTnx0() {
        DOMNamespaceIterator iterator = new DOMNamespaceIterator(new DOMNodePointer(null, null, null));
        iterator.setPosition(0);
        NodePointer result = iterator.getNodePointer();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_Position1_ReturnsNodePointer_GEtZ1() {
        DOMNamespaceIterator iterator = new DOMNamespaceIterator(new DOMNodePointer(null, null, null));
        iterator.setPosition(1);
        NodePointer result = iterator.getNodePointer();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_PositionGreaterThan1_ReturnsNodePointer_TSzB5() {
        DOMNamespaceIterator iterator = new DOMNamespaceIterator(new DOMNodePointer(null, null, null));
        iterator.setPosition(2);
        NodePointer result = iterator.getNodePointer();
        assertNotNull(result);
    }
}