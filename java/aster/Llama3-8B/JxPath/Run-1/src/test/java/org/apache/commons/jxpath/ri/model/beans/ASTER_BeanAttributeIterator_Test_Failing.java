/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanAttributeIterator_Test_Failing {
    @Mock
    private BeanPointer beanPointer;
    @Mock
    private QName qName;
    @Mock
    private JXPathBasicBeanInfo jXPathBasicBeanInfo;
    @Mock
    private Object bean;
    @Mock
    private BeanAttributeIterator superBeanAttributeIterator;
    private boolean includeXmlLang;
    private int position = 0;
    @Mock
    private NodePointer parent;
    private BeanAttributeIterator beanattributeiterator;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition() throws Exception {
        beanattributeiterator = new BeanAttributeIterator(beanPointer, qName);
        // Set the position
        beanattributeiterator.setPosition(5);
        // Verify the position
        assertEquals(5, beanattributeiterator.getPosition());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition_GzND0() {
        QName qName = new QName("name", "localName");
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Class.class, false);
        Object bean = new Object();
        BeanPointer beanPointer = new BeanPointer(qName, bean, beanInfo, Locale.US);
        BeanAttributeIterator beanAttributeIterator = new BeanAttributeIterator(beanPointer, qName);
        int position = beanAttributeIterator.getPosition();
        assert position > 0;
    }
}