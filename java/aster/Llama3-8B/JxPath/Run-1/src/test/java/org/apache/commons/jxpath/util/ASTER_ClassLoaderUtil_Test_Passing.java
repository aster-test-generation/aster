/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ClassLoaderUtil_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ContextClassLoader_rqMu0() {
        try {
            Class<?> clazz = ClassLoaderUtil.getClass("java.lang.String", true);
            assertNotNull(clazz);
        } catch (ClassNotFoundException e) {
            fail("ClassNotFoundException should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_CurrentClassLoader_nNJt1() {
        try {
            Class<?> clazz = ClassLoaderUtil.getClass("java.lang.Integer", true);
            assertNotNull(clazz);
        } catch (ClassNotFoundException e) {
            fail("ClassNotFoundException should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ADYw1() throws ClassNotFoundException {
        ClassLoader classLoader = this.getClass().getClassLoader();
        String className = "java.lang.String";
        Class<?> result = ClassLoaderUtil.getClass(classLoader, className);
        assertSame(String.class, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ucMx1() throws ClassNotFoundException {
        Class<?> clazz = ClassLoaderUtil.getClass("java.lang.String");
        assertSame(String.class, clazz);
    }
}