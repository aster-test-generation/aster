/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.beans.PropertyDescriptor;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathBasicBeanInfo_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptorsForClassWithProperties_zisW0_ymuQ0() {
        try {
            JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Class.forName("java.lang.String"), false);
            PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
            Assertions.assertNotNull(propertyDescriptors);
            Assertions.assertArrayEquals(new PropertyDescriptor[0], propertyDescriptors);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptorsForClassWithDynamicProperties_YRtD2_rGWO0() {
        try {
            JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Class.forName("java.util.HashMap"), Class.forName("com.sun.beans.dynamic.DynamicPropertyHandler"));
            PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
            Assertions.assertNotNull(propertyDescriptors);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptorsForClassWithException_ILWF4_rXwc0() {
        try {
            JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Class.forName("java.lang.Thread"), false);
            PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
            Assertions.assertNotNull(propertyDescriptors);
            Assertions.assertArrayEquals(new PropertyDescriptor[0], propertyDescriptors);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }
    }
}