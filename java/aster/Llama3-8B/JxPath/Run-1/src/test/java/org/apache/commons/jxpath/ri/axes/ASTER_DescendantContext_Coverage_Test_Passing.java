/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DescendantContext_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReset_SuperResetCalled_STNw0() {
        DescendantContext descendantContext = new DescendantContext(null, false, null);
        descendantContext.reset();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCurrentNodePointer_PositionZero_ReturnsNull_tqPT1_bAGM0() {
        DescendantContext descendantContext = new DescendantContext(new NamespaceContext(new SelfContext(null, null), null), true, null);
        NodePointer result = descendantContext.getCurrentNodePointer();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCurrentNodePointer_SetPositionFailed_ReturnsNull_BEIA2_fgvk0_1() {
        DescendantContext descendantContext = new DescendantContext(new NamespaceContext(new SelfContext(null, null), null), true, null);
        boolean setPositionResult = descendantContext.setPosition(1);
        NodePointer result = descendantContext.getCurrentNodePointer();
        assertFalse(setPositionResult);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCurrentNodePointer_SetPositionFailed_ReturnsNull_BEIA2_fgvk0_2() {
        DescendantContext descendantContext = new DescendantContext(new NamespaceContext(new SelfContext(null, null), null), true, null);
        boolean setPositionResult = descendantContext.setPosition(1);
        NodePointer result = descendantContext.getCurrentNodePointer();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCurrentNodePointer_PositionNotZero_ReturnsCurrentNodePointer_gPbK0_ULLv1() {
        DescendantContext descendantContext = new DescendantContext(new NamespaceContext(new SelfContext(null, null), null), true, null);
        NodePointer result = descendantContext.getCurrentNodePointer();
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNextNode_CurrentNodePointerIsNull_ReturnsFalse_bpxB15_ILMQ0() {
        DescendantContext descendantcontext = new DescendantContext(new NamespaceContext(new SelfContext(new NamespaceContext(null, null), null), null), true, new NodeTypeTest(0));
        boolean result = descendantcontext.isChildOrderingRequired();
        Assertions.assertTrue(result);
    }
}