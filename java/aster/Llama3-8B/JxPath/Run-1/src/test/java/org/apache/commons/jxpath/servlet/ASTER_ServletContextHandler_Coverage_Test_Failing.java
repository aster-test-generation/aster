/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.springframework.mock.web.MockServletContext;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ServletContextHandler_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_reLH0() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        Object context = new Object();
        String[] propertyNames = servletContextHandler.getPropertyNames(context);
        assertNotNull(propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_ReturnsArray_eLBf1() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        Object context = new Object();
        String[] propertyNames = servletContextHandler.getPropertyNames(context);
        assertArrayEquals(new String[0], propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_ReturnsNonEmptyArray_eojk2() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        Object context = new Object();
        String[] propertyNames = servletContextHandler.getPropertyNames(context);
        assertNotNull(propertyNames);
        assertNotEquals(new String[0], propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNullContext_nQVc2() {
        ServletContext servletContext = null;
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        String property = "testProperty";
        Object result = servletContextHandler.getProperty(servletContext, property);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNullContextAndProperty_ogbi4() {
        ServletContext servletContext = null;
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        String property = null;
        Object result = servletContextHandler.getProperty(servletContext, property);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_NullBean_eLEp2() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        HashSet set = new HashSet();
        servletContextHandler.collectPropertyNames(set, null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_ReturnsNonEmptyArray_eojk2_2() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        Object context = new Object();
        String[] propertyNames = servletContextHandler.getPropertyNames(context);
        assertNotEquals(new String[0], propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_EnumerationDoesNotHaveMoreElements_hRso6_WAjS0() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        MockServletContext servletContext = new MockServletContext();
        servletContext.setAttribute("attr1", "value1");
        HashSet set = new HashSet();
        servletContextHandler.collectPropertyNames(set, servletContext);
    }
}