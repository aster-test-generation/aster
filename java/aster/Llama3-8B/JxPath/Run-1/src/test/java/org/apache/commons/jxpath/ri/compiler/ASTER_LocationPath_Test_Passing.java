/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.axes.InitialContext;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_LocationPath_Test_Passing {
    @Mock
    private EvalContext evalContext;
    @Mock
    private RootContext rootContext;
    @Mock
    private InitialContext initialContext;
    @Mock
    private NodePointer nodePointer;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependentAbsoluteTrue_UHzE0() {
        LocationPath locationPath = new LocationPath(true, new Step[0]);
        boolean result = locationPath.computeContextDependent();
        assert (!result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependentAbsoluteFalse_pFfe1() {
        LocationPath locationPath = new LocationPath(false, new Step[0]);
        boolean result = locationPath.computeContextDependent();
        assert (result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsAbsoluteTrue_wHyZ0() {
        LocationPath locationPath = new LocationPath(true, new Step[0]);
        boolean result = locationPath.isAbsolute();
        assert(result == true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsAbsoluteFalse_iETB1() {
        LocationPath locationPath = new LocationPath(false, new Step[0]);
        boolean result = locationPath.isAbsolute();
        assert(result == false);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringEmptyPath_RAPp4_fid1() {
        LocationPath locationPath = new LocationPath(true, new Step[0]);
    }
}