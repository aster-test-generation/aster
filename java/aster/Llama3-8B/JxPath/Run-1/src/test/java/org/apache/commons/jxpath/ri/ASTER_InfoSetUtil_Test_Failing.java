/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_InfoSetUtil_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueObject_HSoI6() {
        assertEquals("java.lang.Object@9585d089", InfoSetUtil.stringValue(new Object()));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueArray_oYUh7() {
        assertEquals("[Ljava.lang.Object;@e519be82", InfoSetUtil.stringValue(new Object[]{"[Ljava.lang.Object;@e519be82"}));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueList_kTBT8() {
        assertEquals("[hello]", InfoSetUtil.stringValue(new java.util.ArrayList<Object>(Arrays.asList("[hello]"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueMap_oUhq9() {
        assertEquals("{key=hello}", InfoSetUtil.stringValue(new java.util.HashMap<String, Object>(){
            {
                put("key", "{key=hello}");
            }
        }));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueOther_GMqs10() {
        assertEquals("Tue Jul 02 23:13:17 CDT 2024", InfoSetUtil.stringValue(new java.util.Date()));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberBooleanTrue_ZELB1() {
        assertEquals(1, InfoSetUtil.number(true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberBooleanFalse_jdWT2_fid1() {
        assertEquals(0, InfoSetUtil.number(false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberStringInt_pske4_fid1() {
        assertEquals(5, InfoSetUtil.number("5"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueObject_HSoI6_fid1() {
        assertEquals("hello", InfoSetUtil.stringValue(new Object()));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueArray_oYUh7_fid1() {
        assertEquals("hello", InfoSetUtil.stringValue(new Object[]{"hello"}));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueList_kTBT8_fid1() {
        assertEquals("hello", InfoSetUtil.stringValue(new java.util.ArrayList<Object>(Arrays.asList("hello"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueMap_oUhq9_fid1() {
        assertEquals("hello", InfoSetUtil.stringValue(new java.util.HashMap<String, Object>(){
            {
                put("key", "hello");
            }
        }));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueOther_GMqs10_fid1() {
        assertEquals("hello", InfoSetUtil.stringValue(new java.util.Date()));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberObject_CCQa8_cWww0_fid3() {
        assertEquals("java.lang.Object", InfoSetUtil.stringValue(new Object()));
    }
}