/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.JXPathContext;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BeanPropertyPointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyname_PDNull_HogY1_XrLW0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, new JXPathBasicBeanInfo(Object.class, true));
        assertEquals("*", beanPropertyPointer.getPropertyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathSuperCreatePath_HsSs2_EhXR0() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, null);
        JXPathContext context = JXPathContext.newContext(null);
        assertEquals(true, true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollection_PDNull_ReturnsFalse_iJQm0_eMyS1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, new JXPathBasicBeanInfo(getClass(), false));
        boolean result = beanPropertyPointer.isCollection();
        Assertions.assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyCountAtomicBeanInfo_NJWt0_dxCT1() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, new JXPathBasicBeanInfo(Object.class, true));
        assertEquals(0, beanPropertyPointer.getPropertyCount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollection_PDNullAndValueNotCollection_ReturnsFalse_VVpb9_fzGQ1_fid2() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, new JXPathBasicBeanInfo(Class.class, false));
        boolean result = beanPropertyPointer.getPropertyCount() > 0;
        Assertions.assertTrue(result);
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyCountNonAtomicBeanInfo_yVdb1_FgBy1_fid2() {
        BeanPropertyPointer beanPropertyPointer = new BeanPropertyPointer(null, new JXPathBasicBeanInfo(Object.class, false));
        assertEquals(1, beanPropertyPointer.getPropertyCount()); // assuming getPropertyDescriptors().length returns0
    }
}