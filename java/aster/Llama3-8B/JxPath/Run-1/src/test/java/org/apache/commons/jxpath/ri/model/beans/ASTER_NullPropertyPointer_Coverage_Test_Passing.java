/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathInvalidAccessException;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_NullPropertyPointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollection_WHOLE_COLLECTION_zpfi0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        nullPropertyPointer.setIndex(NullPropertyPointer.WHOLE_COLLECTION);
        boolean result = nullPropertyPointer.isCollection();
        assert(!result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_PropertyOwnerPointer_PropertyPointer_XZxV5() {
        PropertyOwnerPointer propertyOwnerPointer = mock(PropertyOwnerPointer.class);
        PropertyPointer propertyPointer = mock(PropertyPointer.class);
        when(propertyOwnerPointer.getPropertyPointer()).thenReturn(propertyPointer);
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(propertyOwnerPointer);
        nullPropertyPointer.setValue("test");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathByStaticPath_IGgl0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        String result = nullPropertyPointer.asPath();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsActualProperty_iHiV0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        boolean result = nullPropertyPointer.isActualProperty();
        assert (result == false);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_NullParent_hwBb0_fid1() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        try {
            nullPropertyPointer.setValue("test");
            fail("Expected JXPathInvalidAccessException");
        } catch (JXPathInvalidAccessException e) {
            assertEquals("Cannot set property /*, the target object is null", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_ContainerParent_vLJA1_fid1() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(new DOMNodePointer(null, Locale.US, "test"));
        try {
            nullPropertyPointer.setValue("test");
            fail("Expected JXPathInvalidAccessException");
        } catch (JXPathInvalidAccessException e) {
            assertEquals("Cannot set property id('test')/*, path does not match a changeable location", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_PropertyOwnerPointer_PropertyPointer_SetValue_ThrowsException_RWWH8_fid1() {
        PropertyOwnerPointer propertyOwnerPointer = mock(PropertyOwnerPointer.class);
        PropertyPointer propertyPointer = mock(PropertyPointer.class);
        when(propertyOwnerPointer.getPropertyPointer()).thenReturn(propertyPointer);
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(propertyOwnerPointer);
        try {
            nullPropertyPointer.setValue("test");
            fail("Expected JXPathInvalidAccessException");
        } catch (JXPathInvalidAccessException e) {
            assertEquals("Cannot set property null/*, path does not match a changeable location", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_PropertyOwnerPointer_SoDj2_hvuZ0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        nullPropertyPointer.getPropertyCount();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_vGjZ0_VmLS0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        JXPathContext context = JXPathContext.newContext(null);
        Object value = "testValue";
        NodePointer result = null;
        try {
            result = nullPropertyPointer.createPath(context, value);
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathAttributeThrowException_XVTC3_gwxy0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        JXPathContext context = JXPathContext.newContext(null);
        Object value = "testValue";
        boolean isAttribute = true;
        try {
            nullPropertyPointer.createPath(context, value);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathPropertyOwnerPointerGetPropertyPointerCreateChildThrowException_sLSv8_mjwk0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        JXPathContext context = JXPathContext.newContext(null);
        Object value = "testValue";
        try {
            nullPropertyPointer.createPath(context, value);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithEscape_pABT7_vKQq0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        nullPropertyPointer.setPropertyName("<test>");
        String result = nullPropertyPointer.asPath();
    }
}