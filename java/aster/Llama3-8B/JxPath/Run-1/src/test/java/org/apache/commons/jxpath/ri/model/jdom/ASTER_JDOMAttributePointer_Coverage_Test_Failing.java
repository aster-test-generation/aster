/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.jdom.Attribute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JDOMAttributePointer_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentObject_TzFF1() {
        JDOMAttributePointer pointer1 = new JDOMAttributePointer(null, null);
        JDOMAttributePointer pointer2 = new JDOMAttributePointer(null, null);
        assertFalse(pointer1.equals(pointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_kqIe0() {
        JDOMAttributePointer jdomAttributePointer = new JDOMAttributePointer(new DOMNodePointer(null, null, null), null);
        Attribute attr = new Attribute("name", "value");
        Object result = jdomAttributePointer.getValue();
        assert result.equals("value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveAttribute_xdWD0() {
        JDOMAttributePointer jdomAttributePointer = new JDOMAttributePointer(null, null);
        jdomAttributePointer.remove();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveAttributeWithParent_XymF1() {
        DOMNodePointer parentNode = new DOMNodePointer(null, null, null);
        Attribute attr = new Attribute("name", "value");
        JDOMAttributePointer jdomAttributePointer = new JDOMAttributePointer(parentNode, attr);
        jdomAttributePointer.remove();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_NullAttr_Rvvf0() {
        JDOMAttributePointer pointer = new JDOMAttributePointer(null, null);
        String result = pointer.getNamespaceURI();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_EmptyURI_dinG1() {
        Attribute attr = new Attribute("namespace", "http://");
        JDOMAttributePointer pointer = new JDOMAttributePointer(null, attr);
        String result = pointer.getNamespaceURI();
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_NonEmptyURI_XgKr2() {
        Attribute attr = new Attribute("namespace", "http://example.com");
        JDOMAttributePointer pointer = new JDOMAttributePointer(null, attr);
        String result = pointer.getNamespaceURI();
        assertEquals("http://example.com", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_NullURI_ibDq3() {
        Attribute attr = new Attribute("namespace", null);
        JDOMAttributePointer pointer = new JDOMAttributePointer(null, attr);
        String result = pointer.getNamespaceURI();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_BufferHasNoLength_geSE0() {
        JDOMAttributePointer pointer = new JDOMAttributePointer(null, null);
        String result = pointer.asPath();
        assertEquals("@", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_BufferHasSlashAtEnd_JqkS1() {
        JDOMAttributePointer pointer = new JDOMAttributePointer(new JDOMAttributePointer(null, null), null);
        String result = pointer.asPath();
        assertEquals("/@name", result);
    }
}