/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

public class Aster_PredicateContext_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNextNodeParentContextNextNodeTrue_Lusy1() {
        PredicateContext predicateContext = new PredicateContext(new NamespaceContext(new SelfContext(null, null), null), new Constant("test"));
        boolean result = predicateContext.nextNode();
        assert (result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCurrentNodePointer_PositionZero_SetPositionAndReturnNull_oWVa2_SpII0() {
        PredicateContext predicateContext = new PredicateContext(null, null);
        predicateContext.setPosition(0);
        boolean setPosition = predicateContext.setPosition(1);
        when(predicateContext.setPosition(1)).thenReturn(false);
        NodePointer result = predicateContext.getCurrentNodePointer();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNextNodeDoneTrue_YtWV0_xsPw0() {
        PredicateContext predicateContext = new PredicateContext(new NamespaceContext(new SelfContext(null, null), null), new Constant("test"));
        boolean result = predicateContext.nextSet();
        assert (!result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNextNodeSetupDynamicPropertyPointerTrue_BbgN3_SmCR0() {
        PredicateContext predicateContext = new PredicateContext(new NamespaceContext(new SelfContext(null, null), null), new Constant("test"));
        boolean result = predicateContext.nextSet();
        assert (result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNextNodeDoneTrue_YtWV0_xsPw0_fid1() {
        PredicateContext predicateContext = new PredicateContext(new NamespaceContext(new SelfContext(null, null), null), new Constant("test"));
        boolean result = predicateContext.nextSet();
        assert (result == false);
    }
}