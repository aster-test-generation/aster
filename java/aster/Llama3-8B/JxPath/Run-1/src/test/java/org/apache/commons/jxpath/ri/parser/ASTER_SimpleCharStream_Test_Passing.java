/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleCharStream_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn_Fnmd0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(3, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn2_fFLU1_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.tokenBegin = 5;
        stream.bufpos = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(2, stream.getBeginLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn2_fFLU1_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.tokenBegin = 5;
        stream.bufpos = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(3, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn3_EYDP2_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.bufpos = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(2, stream.getBeginLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn3_EYDP2_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.bufpos = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(3, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn4_kqfi3_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.bufpos = 5;
        stream.tokenBegin = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(2, stream.getBeginLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn4_kqfi3_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.bufpos = 5;
        stream.tokenBegin = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(3, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginLine_gSTn0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 0, 0);
        assertEquals(1, simpleCharStream.getBeginLine());
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginLine2_DgLR1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 0, 0, 00);
        assertEquals(1, simpleCharStream.getBeginLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit_snVC0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream("test".getBytes()), 1, 1);
        simpleCharStream.ReInit(new java.io.ByteArrayInputStream("test".getBytes()), 2, 2, 4096);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithNegativeBufferSize_NtVN2() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream("test".getBytes()), 1, 1);
        try {
            simpleCharStream.ReInit(new java.io.ByteArrayInputStream("test".getBytes()), 2, 2, -1);
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit_xlru0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
        simpleCharStream.ReInit(new java.io.ByteArrayInputStream(new byte[0]), 2, 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithBufferSize_Weus1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
        simpleCharStream.ReInit(new java.io.ByteArrayInputStream(new byte[0]), 2, 2, 4096);
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn_AMGe0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 0, 0);
        assertEquals(1, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit_qsDs0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1);
        simpleCharStream.ReInit(new java.io.StringReader("newTest"), 2, 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitInputStreamBufferSize_clNX2() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 4096);
        simpleCharStream.ReInit(new java.io.ByteArrayInputStream(new byte[0]), 2, 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitReader_njlj3() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.ReInit(new java.io.StringReader("newTest"), 2, 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitReaderStartLineStartColumnBufferSize_ljus5() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1, 4096);
        simpleCharStream.ReInit(new java.io.StringReader("newTest"), 2, 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneReaderConstructor_klkx0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1);
        stream.Done();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneInputStreamConstructor_CdRb1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
        stream.Done();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneReaderConstructorWithBufferSize_IvWw2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1, 10);
        stream.Done();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneInputStreamConstructorWithStartLineAndStartColumn_lWog3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 10);
        stream.Done();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneInputStreamConstructorWithoutStartLineAndStartColumn_fuLw4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
        stream.Done();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneReaderConstructorWithoutStartLineAndStartColumn_SrdR5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"));
        stream.Done();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithNullInputStream_Nnba1_Tgpb0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream("test".getBytes()), 1, 1);
        try {
            simpleCharStream.UpdateLineColumn('a'); // Call update method instead of ReInit
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBackup_Xmdw0_hUmv0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.backup(2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn2_fFLU1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.tokenBegin = 5;
        stream.bufpos = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(2, stream.getBeginLine());
        assertEquals(3, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn3_EYDP2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.bufpos = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(2, stream.getBeginLine());
        assertEquals(3, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn4_kqfi3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.bufpos = 5;
        stream.tokenBegin = 5;
        stream.adjustBeginLineColumn(2, 3);
        assertEquals(2, stream.getBeginLine());
        assertEquals(3, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBackup_Xmdw0_hUmv0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.backup(2);
        assertEquals(1, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBackupAtEnd_FrWV1_kOGz0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        stream.backup(5);
        assertEquals(1, stream.line);
    }
}