/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BeanPointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_ReturnsBooleanValueAsPath_WhenBeanIsBoolean_fATP1() {
        BeanPointer beanPointer = new BeanPointer(null, Boolean.TRUE, null, null);
        String result = beanPointer.asPath();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentName_ReturnsFalse_EeYI4() {
        BeanPointer beanPointer = new BeanPointer(null, "Name1", null, null);
        BeanPointer other = new BeanPointer(null, "Name2", null, null);
        assertEquals(false, beanPointer.equals(other));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_BeanIsNumber_ReturnsTrue_DmzY6() {
        BeanPointer beanPointer = new BeanPointer(null, null, 1, null);
        BeanPointer other = new BeanPointer(null, null, 1, null);
        assertEquals(true, beanPointer.equals(other));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_BeanIsString_ReturnsTrue_KNft7() {
        BeanPointer beanPointer = new BeanPointer(null, null, "String", null);
        BeanPointer other = new BeanPointer(null, null, "String", null);
        assertEquals(true, beanPointer.equals(other));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_BeanIsBoolean_ReturnsTrue_pVIL8() {
        BeanPointer beanPointer = new BeanPointer(null, null, true, null);
        BeanPointer other = new BeanPointer(null, null, true, null);
        assertEquals(true, beanPointer.equals(other));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafAtomicValue_WRWn1() {
        BeanPointer beanPointer = new BeanPointer(null, null, "atomicValue", new JXPathBasicBeanInfo(String.class, true));
        assertTrue(beanPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafNonAtomicValue_xveP2() {
        BeanPointer beanPointer = new BeanPointer(null, null, "nonAtomicValue", new JXPathBasicBeanInfo(String.class, false));
        assertTrue(beanPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafNonStringValue_WqqM3() {
        BeanPointer beanPointer = new BeanPointer(null, null, new Integer(1), new JXPathBasicBeanInfo(Integer.class, false));
        assertTrue(beanPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafNullBeanInfo_yepd4() {
        BeanPointer beanPointer = new BeanPointer(null, null, "atomicValue", null);
        assertTrue(beanPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafNullBean_iwvr5() {
        BeanPointer beanPointer = new BeanPointer(null, null, null, new JXPathBasicBeanInfo(String.class, true));
        assertTrue(beanPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameObject_ReturnsTrue_UCpC0_DEhq1() {
        BeanPointer beanPointer = new BeanPointer(null, null, null, Locale.US);
        assertEquals(true, beanPointer.equals(beanPointer));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NullObject_ReturnsFalse_UNWL1_OEzh1() {
        BeanPointer beanPointer = new BeanPointer(null, null, null, Locale.US);
        assertEquals(false, beanPointer.equals(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentParent_ReturnsFalse_PzDn3_uDeM0() {
        BeanPointer beanPointer = new BeanPointer(new DOMNodePointer(null, null, null), null, null, null);
        BeanPointer other = new BeanPointer(new DOMNodePointer(null, null, null), null, null, null);
        assertEquals(true, beanPointer.equals(other));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafNullValue_BEAs0_baiU1() {
        BeanPointer beanPointer = new BeanPointer(null, null, null, Locale.US);
        assertTrue(beanPointer.hashCode() == 0);
    }
}