/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.functions.ConstructorFunction;
import org.apache.commons.jxpath.functions.MethodFunction;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ClassFunctions_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionConstructor_NAyV0() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "new", new Object[]{});
        assert function instanceof ConstructorFunction;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionMethodStatic_oaAb1() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "method", new Object[]{});
        assert function instanceof MethodFunction;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionNullNamespace_pXyM3() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, null);
        Function function = classFunctions.getFunction(null, "method", new Object[]{});
        assert function == null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionDifferentNamespace_kpTj4() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("differentNamespace", "method", new Object[]{});
        assert function == null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionNullParameters_HwNt5() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "method", null);
        assert function instanceof MethodFunction;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionNoMethod_eaaD6() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "nonExistingMethod", new Object[]{});
        assert function == null;
    }
}