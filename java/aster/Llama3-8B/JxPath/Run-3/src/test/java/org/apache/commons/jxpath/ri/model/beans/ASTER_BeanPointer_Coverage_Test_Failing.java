/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import org.apache.commons.jxpath.ri.QName;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BeanPointer_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafNonAtomicNode_pGqJ2() {
        BeanPointer beanPointer = new BeanPointer(null, "nonAtomic", null, null);
        assertFalse(beanPointer.isLeaf());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAsPath_ReturnsSuperAsPath_WhenParentIsNotNull_LEpA0_Djwv0() {
    BeanPointer beanPointer = new BeanPointer(null, QName.class, null, null);
    String result = beanPointer.asPath();
    assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAsPath_ReturnsNull_WhenBeanIsNull_GDBc1_NRby1() {
    QName name = null;
    BeanPointer beanPointer = new BeanPointer(name, null, null, null);
    String result = beanPointer.asPath();
    assertEquals("null", result);
}
}