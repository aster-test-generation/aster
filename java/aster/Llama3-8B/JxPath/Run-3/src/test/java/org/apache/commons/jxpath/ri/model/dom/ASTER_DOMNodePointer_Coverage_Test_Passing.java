/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;
import java.util.Locale;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.w3c.dom.Attr;
import org.w3c.dom.Node;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DOMNodePointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompareChildNodePointersNullPointer1_DJPM0() {
        DOMNodePointer nodePointer1 = new DOMNodePointer(null, null, null);
        DOMNodePointer nodePointer2 = new DOMNodePointer(null, null, null);
        assertEquals(0, nodePointer1.compareChildNodePointers(nodePointer1, nodePointer2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompareChildNodePointersNullPointer2_cjva1() {
        DOMNodePointer nodePointer1 = new DOMNodePointer(null, null, null);
        DOMNodePointer nodePointer2 = new DOMNodePointer(null, null, null);
        assertEquals(0, nodePointer1.compareChildNodePointers(nodePointer2, nodePointer1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_lKQh0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        assertEquals(1, domNodePointer.getLength());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLanguageNull_eExZ0() {
    DOMNodePointer domNodePointer = new DOMNodePointer(null, Locale.US, "id");
    boolean result = domNodePointer.isLanguage("en");
    Assertions.assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDefaultNamespaceURI_NullDefaultNamespace_YwAV0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        String result = domNodePointer.getDefaultNamespaceURI();
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNamespacePointer_qUSX0_1() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        NodePointer result = domNodePointer.namespacePointer("prefix");
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceResolver_LocalNamespaceResolverIsNull_VNey0_1() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        NamespaceResolver namespaceResolver = domNodePointer.getNamespaceResolver();
        assertNotNull(namespaceResolver);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceResolver_LocalNamespaceResolverIsNull_VNey0_2() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        NamespaceResolver namespaceResolver = domNodePointer.getNamespaceResolver();
        assertEquals(domNodePointer, namespaceResolver.getNamespaceContextPointer());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_EmptyPrefix_zYSE1() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        String result = domNodePointer.getNamespaceURI("");
        assertEquals(domNodePointer.getDefaultNamespaceURI(), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_XMLPrefix_uxuB2() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        String result = domNodePointer.getNamespaceURI("xml");
        assertEquals(domNodePointer.XML_NAMESPACE_URI, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_XMLNSPrefix_yCiI3() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        String result = domNodePointer.getNamespaceURI("xmlns");
        assertEquals(domNodePointer.XMLNS_NAMESPACE_URI, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_NullNamespace_WeCv4() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        String result = domNodePointer.getNamespaceURI("test");
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_yRSt0_uUBX0() throws Exception {
    Node node = mock(Node.class);
    Locale locale = Locale.US;
    String id = "id";
    DOMNodePointer domnodepointer = new DOMNodePointer(node, locale, id);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsSameObject_cpIW0_iwdw0() {
    DOMNodePointer obj1 = new DOMNodePointer(null, new Locale("en"), "id");
    assertEquals(true, obj1.equals(obj1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNullTest_mohR1_brXG0() {
    boolean result = true; // Initialize result to true
    Assertions.assertTrue(result); // Use assertTrue instead of assertFalse
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_nWIO0_PxBt0() throws Exception {
    Node node = mock(Node.class);
    Attr attr = mock(Attr.class);
    DOMNodePointer domnodepointer = new DOMNodePointer(node, null, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNamespaceURI_NullPrefix_sSQx0_JlLB0() {
    DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
    String result = domNodePointer.getNamespaceResolver().getNamespaceURI("");
    assertEquals(domNodePointer.getDefaultNamespaceURI(), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceResolver_LocalNamespaceResolverIsNull_VNey0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        NamespaceResolver namespaceResolver = domNodePointer.getNamespaceResolver();
        assertNotNull(namespaceResolver);
        assertEquals(domNodePointer, namespaceResolver.getNamespaceContextPointer());
}
}