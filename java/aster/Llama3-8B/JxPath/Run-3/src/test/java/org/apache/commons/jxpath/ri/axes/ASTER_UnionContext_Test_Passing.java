/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import java.util.Iterator;
import org.apache.commons.jxpath.BasicNodeSet;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Iterator;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_UnionContext_Test_Passing {
@Mock
    private EvalContext[] contexts;
@Mock
    private BasicNodeSet nodeSet;
@Mock
    private Iterator iterator;
@Mock
    private NodePointer nodePointer;
@Mock
    private Pointer pointer;
private boolean prepared;
private UnionContext unioncontext;
@Mock
    private UnionContext unionContext;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetDocumentOrder() throws Exception {
        unionContext = new UnionContext(null, contexts);
        // Arrange
        when(contexts.length).thenReturn(1);
        // Act
        int result = unionContext.getDocumentOrder();
        // Assert
        assertEquals(0, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetDocumentOrder_MultipleContexts() throws Exception {
        unionContext = new UnionContext(null, contexts);
        // Arrange
        when(contexts.length).thenReturn(2);
        // Act
        int result = unionContext.getDocumentOrder();
        // Assert
        assertEquals(1, result);
    }
}