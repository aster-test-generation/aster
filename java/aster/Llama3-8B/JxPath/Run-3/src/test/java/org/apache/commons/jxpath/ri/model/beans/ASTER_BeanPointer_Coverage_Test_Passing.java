/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import org.apache.commons.jxpath.ri.QName;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BeanPointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_ReturnsString_WhenBeanIsString_Xhnv2() {
        BeanPointer beanPointer = new BeanPointer(null, "Hello", null, null);
        String result = beanPointer.asPath();
        assertEquals("'Hello'", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_ReturnsBoolean_WhenBeanIsBoolean_lbAc3() {
        BeanPointer beanPointer = new BeanPointer(null, true, null, null);
        String result = beanPointer.asPath();
        assertEquals("true()", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_ReturnsNumber_WhenBeanIsNumber_XvRB4() {
        BeanPointer beanPointer = new BeanPointer(null, 10.0, null, null);
        String result = beanPointer.asPath();
        assertEquals("10", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafAtomicNode_bmfa1() {
        BeanPointer beanPointer = new BeanPointer(null, "atomic", null, null);
        assertTrue(beanPointer.isLeaf());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_NonNullName_orYH1() {
        QName name = new QName("test");
        BeanPointer beanPointer = new BeanPointer(name, null, null, null);
        assertEquals(name.hashCode(), beanPointer.hashCode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafNonAtomicNode_pGqJ2_fid2() {
        BeanPointer beanPointer = new BeanPointer(null, "nonAtomic", null, null);
        assertTrue(beanPointer.isLeaf());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAsPath_ReturnsNull_WhenBeanIsNull_GDBc1_NRby1_fid2() {
    QName name = null;
    BeanPointer beanPointer = new BeanPointer(name, null, null, null);
    String result = beanPointer.asPath();
}
}