/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.util.ValueUtils;
import org.apache.commons.jxpath.servlet.KeywordVariables;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_VariablePointer_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueCollectionIndex_PMBy2() {
        VariablePointer variablePointer = new VariablePointer(new QName("test"));
        variablePointer.setValue("test");
        assertEquals(true, variablePointer.index != VariablePointer.WHOLE_COLLECTION);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueCollection_clKB3() {
        VariablePointer variablePointer = new VariablePointer(new QName("test"));
        variablePointer.setValue("test");
        assertEquals(true, variablePointer.index == VariablePointer.WHOLE_COLLECTION);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueCollectionValue_DwHi4() {
        VariablePointer variablePointer = new VariablePointer(new QName("test"));
        variablePointer.setValue("test");
        assertEquals("test", variablePointer.getBaseValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueCollectionIndexValue_yknp5() {
        VariablePointer variablePointer = new VariablePointer(new QName("test"));
        variablePointer.setValue("test");
        assertEquals("test", variablePointer.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCodeWithoutVariables_BzQc1() {
        VariablePointer variablePointer = new VariablePointer(new QName("prefix", "localName"));
        int expectedHashCode = 0 + new QName("prefix", "localName").hashCode() + 0;
        assertEquals(expectedHashCode, variablePointer.hashCode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollectionNullValue_HThM0() {
        VariablePointer variablePointer = new VariablePointer(new QName("test"));
        assertFalse(variablePointer.isCollection());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafWhenNodeIsNotSet_ugss3() {
        VariablePointer variablePointer = new VariablePointer(new QName("test"));
        assertFalse(variablePointer.isLeaf());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNamespacePointer_yuAZ0() {
        VariablePointer variablePointer = new VariablePointer(new QName("prefix", "localName"));
        NodePointer nodePointer = variablePointer.namespacePointer("name");
        assertNotNull(nodePointer);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValueUndefinedVariable_uWYv0_svAW0() {
    VariablePointer variablePointer = new VariablePointer(new QName("test"));
    variablePointer.setValue("test");
    assertEquals(null, variablePointer.isActual());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValueDefinedVariable_ijpr1_KKrF0() {
    VariablePointer variablePointer = new VariablePointer(new QName("test"));
    variablePointer.setValue("test");
    assertEquals(true, variablePointer.isActual());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValueKeywordVariables_MJUY6_Eemn0() {
    KeywordVariables keywordVariables = new KeywordVariables("test", "test");
    VariablePointer variablePointer = new VariablePointer(keywordVariables, new QName("test"));
    variablePointer.setValue("test");
    QName qName = new QName("test");
    boolean result = variablePointer.isActual();
    assertEquals(true, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFindVariables_VariablesIsNotDeclaredVariable_BYwQ3_tpnZ1() {
    VariablePointer variablePointer = new VariablePointer(new QName("qualifiedName"));
    JXPathContext context = JXPathContext.newContext(null);
    variablePointer.findVariables(context);
    assertEquals(true, variablePointer.isActual());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLeafWhenNodeIsNotAtomic_BjnY2_wgnQ0() {
    VariablePointer variablePointer = new VariablePointer(new QName("test"));
    KeywordVariables variables = new KeywordVariables("test", new Object());
    variablePointer = new VariablePointer(variables, new QName("test"));
    assertFalse(variablePointer.isActual());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRemoveWholeCollection_HLau2_gLAQ0() {
    QName qName = new QName("prefix", "localName");
    VariablePointer variablePointer = new VariablePointer(qName);
    variablePointer.index = VariablePointer.WHOLE_COLLECTION;
    KeywordVariables keywordVariables = new KeywordVariables("keyword", "object");
    VariablePointer variablePointer1 = new VariablePointer(keywordVariables, qName);
    boolean result = variablePointer.isActual();
    assertEquals(true, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_Hras0_Lrbw0() {
    VariablePointer variablePointer = new VariablePointer(new QName("name"));
    JXPathContext context = JXPathContext.newContext(new Object());
    QName name = new QName("name");
    int index = 0;
    Object value = "value";
    NodePointer result = variablePointer.createChild(context, name, index, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChildWithCollection_SiQC1_ejBH0() {
    VariablePointer variablePointer = new VariablePointer(new QName("name"));
    JXPathContext context = JXPathContext.newContext(new Object());
    QName name = new QName("name");
    int index = 0;
    Object value = "value";
    Object collection = new Object();
    ValueUtils.setValue(collection, index, value);
    NodePointer result = variablePointer.createChild(context, name, index, value);
}
}