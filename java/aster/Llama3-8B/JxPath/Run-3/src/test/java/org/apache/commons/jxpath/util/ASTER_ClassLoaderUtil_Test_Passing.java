/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ClassLoaderUtil_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_KcVU0() {
        ClassLoader classLoader = new ClassLoader() {};
        String className = "java.lang.String";
        boolean initialize = true;
        try {
            Class clazz = ClassLoaderUtil.getClass(classLoader, className, initialize);
            assertEquals(String.class, clazz);
        } catch (ClassNotFoundException e) {
            fail("ClassNotFoundException should not be thrown");
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassArray_wYDv1() {
        ClassLoader classLoader = new ClassLoader() {};
        String className = "[Ljava.lang.String;";
        boolean initialize = true;
        try {
            Class clazz = ClassLoaderUtil.getClass(classLoader, className, initialize);
            assertEquals(String[].class, clazz);
        } catch (ClassNotFoundException e) {
            fail("ClassNotFoundException should not be thrown");
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassWithContextClassLoader_XAss0() {
        try {
            Class<?> clazz = ClassLoaderUtil.getClass("java.lang.String", true);
            assertSame(String.class, clazz);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassWithCurrentClassLoader_TXxX1() {
        try {
            Class<?> clazz = ClassLoaderUtil.getClass("java.lang.Integer", true);
            assertSame(Integer.class, clazz);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_nNFN1() throws ClassNotFoundException {
        ClassLoader classLoader = new ClassLoader() {};
        Class<?> clazz = ClassLoaderUtil.getClass(classLoader, "java.lang.String");
        assertSame(String.class, clazz);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_wZTL1() throws ClassNotFoundException {
        Class<?> clazz = ClassLoaderUtil.getClass("java.lang.String");
        assertSame(String.class, clazz);
    }
}