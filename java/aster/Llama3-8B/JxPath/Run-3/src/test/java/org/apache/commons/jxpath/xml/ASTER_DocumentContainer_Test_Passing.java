/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.xml;
import java.net.URL;
import org.apache.commons.jxpath.JXPathException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DocumentContainer_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValue_sdft0() throws Exception {
    URL xmlURL = new URL("http://example.com");
    DocumentContainer documentContainer = new DocumentContainer(xmlURL);
    documentContainer.setValue("testValue");
    assertEquals("testValue", documentContainer.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithNullXmlURL_yJhO0() throws Exception {
        DocumentContainer documentContainer = new DocumentContainer(null, "model");
        Object result = documentContainer.getValue();
        assert result == null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithValidXmlURL_YLIy1() throws Exception {
        URL xmlURL = getClass().getResource("validXML.xml");
        DocumentContainer documentContainer = new DocumentContainer(xmlURL, "model");
        Object result = documentContainer.getValue();
        assert result != null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithIOException_pTiK2() throws Exception {
        URL xmlURL = getClass().getResource("invalidXML.xml");
        DocumentContainer documentContainer = new DocumentContainer(xmlURL, "model");
        try {
            Object result = documentContainer.getValue();
            assert false;
        } catch (JXPathException ex) {
            assert ex.getMessage().equals("Cannot read XML from: " + xmlURL.toString());
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithNullModel_UtvO3() throws Exception {
        URL xmlURL = getClass().getResource("validXML.xml");
        DocumentContainer documentContainer = new DocumentContainer(xmlURL, null);
        Object result = documentContainer.getValue();
        assert result == null;
}
}