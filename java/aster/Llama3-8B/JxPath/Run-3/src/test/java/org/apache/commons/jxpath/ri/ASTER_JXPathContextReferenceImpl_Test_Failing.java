/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import java.util.Iterator;
import org.apache.commons.jxpath.CompiledExpression;
import org.apache.commons.jxpath.ExceptionHandler;
import org.apache.commons.jxpath.Function;
import org.apache.commons.jxpath.Functions;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.NodePointerFactory;
import org.apache.commons.jxpath.util.ClassLoaderUtil;
import org.apache.commons.jxpath.servlet.KeywordVariables;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import java.util.Iterator;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JXPathContextReferenceImpl_Test_Failing {
@Mock
    private JXPathContext jxpathcontext;
@Mock
    private NodePointer nodePointer;
@Mock
    private VariablePointer variablePointer;
@Mock
    private KeywordVariables keywordVariables;
@Mock
    private Pointer pointer;
@Mock
    private Object contextBean;
@Mock
    private EvalContext evalContext;
@Mock
    private Expression expression;
@Mock
    private RootContext rootContext;
@Mock
    private NodePointerFactory nodePointerFactory;
private JXPathContextReferenceImpl jxpathcontextreferenceimpl;
@Mock
    private Iterator iterator;
@Mock
    private ClassLoaderUtil classLoaderUtil;
@Mock
    private Class<?> cls;
@Mock
    private NodePointerFactory[] nodeFactories;
@Mock
    private NamespaceResolver namespaceResolver;
@Mock
    private Pointer contextPointer;
@Mock
    private NodePointer nodepointer;
@Mock
    private CompiledExpression compiledexpression;
@Mock
    private Pointer rootPointer;
@Mock
    private ExceptionHandler exceptionHandler;
@Mock
    private Functions functions;
@Mock
    private Function function;
}