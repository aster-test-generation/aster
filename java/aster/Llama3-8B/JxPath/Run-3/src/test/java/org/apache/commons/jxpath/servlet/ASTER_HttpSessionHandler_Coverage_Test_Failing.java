/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;
import java.util.Enumeration;
import java.util.HashSet;
import javax.servlet.http.HttpSession;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.Enumeration;
import java.util.HashSet;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_HttpSessionHandler_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_SessionNull_Ufmy2() {
        HttpSessionHandler httpSessionHandler = new HttpSessionHandler();
        HttpSessionAndServletContext httpSessionAndServletContext = mock(HttpSessionAndServletContext.class);
        when(httpSessionAndServletContext.getSession()).thenReturn(null);
        HashSet set = new HashSet();
        httpSessionHandler.collectPropertyNames(set, httpSessionAndServletContext);
        verify(httpSessionAndServletContext, times(1)).getServletContext();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_SessionAttributeNames_NoMoreElements_owYf5() {
        HttpSessionHandler httpSessionHandler = new HttpSessionHandler();
        HttpSessionAndServletContext httpSessionAndServletContext = mock(HttpSessionAndServletContext.class);
        HttpSession httpSession = mock(HttpSession.class);
        when(httpSessionAndServletContext.getSession()).thenReturn(httpSession);
        when(httpSession.getAttributeNames()).thenReturn(mock(Enumeration.class));
        when(mock(Enumeration.class).hasMoreElements()).thenReturn(false);
        HashSet set = new HashSet();
        httpSessionHandler.collectPropertyNames(set, httpSessionAndServletContext);
        verify(httpSession, times(1)).getAttributeNames();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_SessionAttributeNames_AddElement_Vrjr6_1() {
        HttpSessionHandler httpSessionHandler = new HttpSessionHandler();
        HttpSessionAndServletContext httpSessionAndServletContext = mock(HttpSessionAndServletContext.class);
        HttpSession httpSession = mock(HttpSession.class);
        when(httpSessionAndServletContext.getSession()).thenReturn(httpSession);
        when(httpSession.getAttributeNames()).thenReturn(mock(Enumeration.class));
        when(mock(Enumeration.class).hasMoreElements()).thenReturn(true);
        when(mock(Enumeration.class).nextElement()).thenReturn("element");
        HashSet set = new HashSet();
        httpSessionHandler.collectPropertyNames(set, httpSessionAndServletContext);
        verify(httpSession, times(1)).getAttributeNames();
        assertEquals(1, set.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_SessionAttributeNames_AddElement_Vrjr6_2() {
        HttpSessionHandler httpSessionHandler = new HttpSessionHandler();
        HttpSessionAndServletContext httpSessionAndServletContext = mock(HttpSessionAndServletContext.class);
        HttpSession httpSession = mock(HttpSession.class);
        when(httpSessionAndServletContext.getSession()).thenReturn(httpSession);
        when(httpSession.getAttributeNames()).thenReturn(mock(Enumeration.class));
        when(mock(Enumeration.class).hasMoreElements()).thenReturn(true);
        when(mock(Enumeration.class).nextElement()).thenReturn("element");
        HashSet set = new HashSet();
        httpSessionHandler.collectPropertyNames(set, httpSessionAndServletContext);
        verify(httpSession, times(1)).getAttributeNames();
        assertTrue(set.contains("element"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_SessionAttributeNames_AddElement_Vrjr6() {
        HttpSessionHandler httpSessionHandler = new HttpSessionHandler();
        HttpSessionAndServletContext httpSessionAndServletContext = mock(HttpSessionAndServletContext.class);
        HttpSession httpSession = mock(HttpSession.class);
        when(httpSessionAndServletContext.getSession()).thenReturn(httpSession);
        when(httpSession.getAttributeNames()).thenReturn(mock(Enumeration.class));
        when(mock(Enumeration.class).hasMoreElements()).thenReturn(true);
        when(mock(Enumeration.class).nextElement()).thenReturn("element");
        HashSet set = new HashSet();
        httpSessionHandler.collectPropertyNames(set, httpSessionAndServletContext);
        verify(httpSession, times(1)).getAttributeNames();
        assertEquals(1, set.size());
        assertTrue(set.contains("element"));
    }
}