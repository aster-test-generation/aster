/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;
import org.apache.commons.jxpath.JXPathContext;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DynamicPropertyPointer_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWhenNameIsNull_kruX0() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        assertEquals("*", dynamicPropertyPointer.getPropertyName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyName_SetPropertyIndex_hoqD0() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setPropertyIndex(DynamicPropertyPointer.UNSPECIFIED_PROPERTY);
        assertEquals(DynamicPropertyPointer.UNSPECIFIED_PROPERTY, dynamicPropertyPointer.getPropertyIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValue_ifyA0() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        Object bean = new Object();
        String propertyName = "propertyName";
        Object result = dynamicPropertyPointer.getBaseValue();
        assertEquals(null, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringBuilderCreation_hCSB0() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        String result = dynamicPropertyPointer.asPath();
        assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAppendPropertyName_tXBO3() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setPropertyName("test");
        String result = dynamicPropertyPointer.asPath();
        assertEquals("/./[@name='test']", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAppendPropertyNameWithEscape_gRKV4() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setPropertyName("test'");
        String result = dynamicPropertyPointer.asPath();
        assertEquals("/./[@name='test\\''']", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAppendIndexWholeCollectionNoCollection_nyCx7() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setIndex(DynamicPropertyPointer.WHOLE_COLLECTION);
        String result = dynamicPropertyPointer.asPath();
        assertEquals("/./[@name='']", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAppendEmptyBuffer_pGgp8() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        String result = dynamicPropertyPointer.asPath();
        assertEquals("/./[@name='']", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPropertyNamesNullNames_wuEA0() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    String[] result = dynamicPropertyPointer.getPropertyNames();
    Assertions.assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPropertyWhenGetPropertyNamesReturnsEmptyArray_fgva1_OnVt1() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    assertEquals(0, dynamicPropertyPointer.getPropertyCount());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreatePath_WHOLE_COLLECTION_iuIZ0_PjSf0() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    JXPathContext context = JXPathContext.newContext(null);
    Object value = "testValue";
    dynamicPropertyPointer.createPath(context, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPropertyName_ArraysBinarySearch_NullNames_ftjh4_ldLg0() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    dynamicPropertyPointer.setPropertyName("testPropertyName");
    assertEquals(1, dynamicPropertyPointer.getPropertyCount());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAppendIndex_Tfwi5_XuxM0() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    dynamicPropertyPointer.setIndex(1);
    String result = dynamicPropertyPointer.asPath();
    assertEquals("/./[@name=''][1]", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPropertyNamesEmptyNames_tDyW1_KwAt0() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    String[] result = dynamicPropertyPointer.getPropertyNames();
    Assertions.assertArrayEquals(new String[0], result);
}
}