/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;
import java.util.Locale;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DynamicPointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafAtomicValue_VlpM1() {
        DynamicPointer dynamicPointer = new DynamicPointer(null, "atomicValue", null, null);
        assertTrue(dynamicPointer.isLeaf());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWhenBothNamesAreNull_LoXR0_gUXy0() {
    DynamicPointer dp1 = new DynamicPointer(new QName(null, null), null, new PageContextHandler(), Locale.US);
    DynamicPointer dp2 = new DynamicPointer(new QName(null, null), null, new PageContextHandler(), Locale.US);
    boolean result = dp1.equals(dp2);
    assert(result == true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWhenBothNamesAreNotNull_AQgX1_ghcs0() {
    DynamicPointer dp1 = new DynamicPointer(new QName("prefix1", "localName1"), new Object(), new PageContextHandler(), Locale.US);
    DynamicPointer dp2 = new DynamicPointer(new QName("prefix1", "localName1"), new Object(), new PageContextHandler(), Locale.US);
    boolean result = dp1.equals(dp2);
    assert(result == true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWhenOneNameIsNull_DJHZ2_VNVq0() {
    DynamicPointer dp1 = new DynamicPointer(new QName(null, "localName1"), new Object(), new PageContextHandler(), Locale.US);
    DynamicPointer dp2 = new DynamicPointer(new QName("prefix1", "localName1"), new Object(), new PageContextHandler(), Locale.US);
    boolean result = dp1.equals(dp2);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWhenNamesAreDifferent_Ycab3_sbfN0() {
    DynamicPointer dp1 = new DynamicPointer(new QName("prefix1", "localName1"), new Object(), new PageContextHandler(), Locale.US);
    DynamicPointer dp2 = new DynamicPointer(new QName("prefix2", "localName2"), new Object(), new PageContextHandler(), Locale.US);
    boolean result = dp1.equals(dp2);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWhenBeansAreDifferent_jBGR4_gnSF0() {
    DynamicPointer dp1 = new DynamicPointer(new QName("prefix1", "localName1"), new Object(), new PageContextHandler(), Locale.US);
    DynamicPointer dp2 = new DynamicPointer(new QName("prefix1", "localName1"), new Object(), new PageContextHandler(), Locale.US);
    boolean result = dp1.equals(dp2);
    assert(!result);
}
}