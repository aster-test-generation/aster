/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import java.util.Locale;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.ArrayList;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CollectionPointerFactory_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerCollection_UVjJ0_1() {
        CollectionPointerFactory factory = new CollectionPointerFactory();
        Object bean = new Object[1];
        Locale locale = Locale.US;
        NodePointer result = factory.createNodePointer(new QName("name"), bean, locale);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerCollection_UVjJ0_2() {
        CollectionPointerFactory factory = new CollectionPointerFactory();
        Object bean = new Object[1];
        Locale locale = Locale.US;
        NodePointer result = factory.createNodePointer(new QName("name"), bean, locale);
        assertTrue(result instanceof CollectionPointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerCollection_nFri0_vKUK0() {
    CollectionPointerFactory factory = new CollectionPointerFactory();
    QName name = new QName("test");
    Object bean = new ArrayList<>();
    NodePointer parent = null;
    NodePointer result = factory.createNodePointer(parent, name, bean);
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerCollection_UVjJ0() {
        CollectionPointerFactory factory = new CollectionPointerFactory();
        Object bean = new Object[1];
        Locale locale = Locale.US;
        NodePointer result = factory.createNodePointer(new QName("name"), bean, locale);
        assertNotNull(result);
        assertTrue(result instanceof CollectionPointer);
    }
}