/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathInvalidAccessException;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.*;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullPropertyPointer_Test_Failing {
private String propertyName = "*";
@Mock
    private PropertyOwnerPointer propertyOwnerPointer;
@Mock
    private PropertyPointer propertyPointer;
@Mock
    private DOMNodePointer parent;
@Mock
    private QName qName;
@Mock
    private JXPathContext jXPathContext;
@Mock
    private NullPropertyPointer nullpropertypointer;
private boolean byNameAttribute = false;
@Mock
    private NodePointer nodePointer;
@Mock
    private DOMNodePointer immediateParentPointer;
@Mock
    private NullPropertyPointer nullPropertyPointer;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValueValid_KzcV2() {
    QName qName = new QName("test");
    VariablePointer variablePointer = new VariablePointer(qName);
    DOMNodePointer domNodePointer = new DOMNodePointer(variablePointer, null);
    NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(domNodePointer);
    nullPropertyPointer.setValue("test");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValueInvalidPath_Wxfz4() {
    QName qName = new QName("test");
    VariablePointer variablePointer = new VariablePointer(qName);
    DOMNodePointer domNodePointer = new DOMNodePointer(variablePointer, null);
    NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(domNodePointer);
    try {
        nullPropertyPointer.setValue("test");
        fail("Expected JXPathInvalidAccessException");
    } catch (JXPathInvalidAccessException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath() throws Exception {
        MockitoAnnotations.initMocks(this);
        nullpropertypointer = new NullPropertyPointer(parent);
        // Arrange
        Object value = "testValue";
        NodePointer expectedParent = Mockito.mock(NodePointer.class);
        Mockito.when(parent.createPath(jXPathContext)).thenReturn(expectedParent);
        // Act
        NodePointer actual = nullpropertypointer.createPath(jXPathContext, value);
        // Assert
        Mockito.verify(parent, Mockito.times(1)).createPath(jXPathContext);
        Mockito.verifyNoMoreInteractions(parent);
    assertNull(expectedParent);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChildWithNullJXPathContext_JFmy1() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
        QName qName = new QName("prefix", "localName");
        NodePointer nodePointer = nullPropertyPointer.createChild(null, qName, 0);
        assert nodePointer == null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyName_LBQO0() {
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(new DOMNodePointer(null, null, null));
        String propertyName = nullPropertyPointer.getPropertyName();
        assert propertyName == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreatePath() throws Exception {
        MockitoAnnotations.initMocks(this);
        nullpropertypointer = new NullPropertyPointer(parent);
        // Arrange
        when(parent.createPath(jXPathContext)).thenReturn(parent);
        // Act
        NodePointer result = nullpropertypointer.createPath(jXPathContext);
        // Assert
    assertNull(parent);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_cgws0_2() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(parent);
        Object immediateNode = nullPropertyPointer.getImmediateNode();
        assertNotNull(immediateNode);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChildWithNullQName_SLtN2_fTLj0() {
    NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
    JXPathContext jxpathContext = JXPathContext.newContext(null);
    NodePointer nodePointer = nullPropertyPointer.createChild(jxpathContext, null, 0);
    assert nodePointer == null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChildWithNegativeIndex_Qpvf3_RCRN0() {
    NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
    JXPathContext jxpathContext = JXPathContext.newContext(null);
    QName qName = new QName("prefix", "localName");
    NodePointer nodePointer = nullPropertyPointer.createChild(jxpathContext, qName, -1);
    assert nodePointer == null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreatePath_NullParent_vAiJ0_RqsJ0() {
    NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
    JXPathContext context = JXPathContext.newContext(null);
    NodePointer result = nullPropertyPointer.createPath(context);
    Assertions.assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChildWithIndex_RpaA1_RDfg0() {
    NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
    JXPathContext jXPathContext = JXPathContext.newContext(null);
    QName qName = new QName("prefix", "localName");
    NodePointer nodePointer = nullPropertyPointer.createChild(jXPathContext, qName, 1, null);
    assert nodePointer != null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChildWithValue_QwZK2_VkTS0() {
    NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(null);
    JXPathContext jXPathContext = JXPathContext.newContext(null);
    QName qName = new QName("prefix", "localName");
    NodePointer nodePointer = nullPropertyPointer.createChild(jXPathContext, qName, 0, "value");
    assert nodePointer != null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPropertyIndex_KQEW0() {
    NullPropertyPointer nullpropertypointer = new NullPropertyPointer(null);
    int index = 1;
    nullpropertypointer.setPropertyIndex(index);
    // Mockito.verify(nullpropertypointer, Mockito.times(1)).setPropertyIndex(index);
    // Replace the above line with the following line
    Mockito.verify(nullpropertypointer).setPropertyIndex(index);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_fid2() throws Exception {
        MockitoAnnotations.initMocks(this);
        nullpropertypointer = new NullPropertyPointer(parent);
        // Arrange
        Object value = "testValue";
        NodePointer expectedParent = Mockito.mock(NodePointer.class);
        Mockito.when(parent.createPath(jXPathContext)).thenReturn(expectedParent);
        // Act
        NodePointer actual = nullpropertypointer.createPath(jXPathContext, value);
        // Assert
        Mockito.verify(parent, Mockito.times(1)).createPath(jXPathContext);
        Mockito.verifyNoMoreInteractions(parent);
        assertEquals(expectedParent, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreatePath_fid2() throws Exception {
        MockitoAnnotations.initMocks(this);
        nullpropertypointer = new NullPropertyPointer(parent);
        // Arrange
        when(parent.createPath(jXPathContext)).thenReturn(parent);
        // Act
        NodePointer result = nullpropertypointer.createPath(jXPathContext);
        // Assert
        assertEquals(parent, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisCollection_fid2() throws Exception{
        nullpropertypointer = Mockito.mock(NullPropertyPointer.class);
        // Arrange
        Mockito.when(nullpropertypointer.getIndex()).thenReturn(0);
        // Act
        boolean result = nullpropertypointer.isCollection();
        // Assert
        Assertions.assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetImmediateNode() {
        nullpropertypointer = new NullPropertyPointer(parent);
        // Arrange
        Mockito.when(parent.getImmediateNode()).thenReturn("expected result");
        // Act
        Object actual = nullpropertypointer.getImmediateNode();
        // Assert
        Assertions.assertEquals("expected result", actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testasPath_fid2() throws Exception{
        when(immediateParentPointer.asPath()).thenReturn("parentPath");
        nullpropertypointer = new NullPropertyPointer(immediateParentPointer);
        String expectedPath = "parentPath[@name='propertyName'][1]";
        String actualPath = nullpropertypointer.asPath();
        assertEquals(expectedPath, actualPath);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPropertyIndex_KQEW0_fid2() {
    nullpropertypointer = new NullPropertyPointer(null);
    int index = 1;
    nullpropertypointer.setPropertyIndex(index);
    Mockito.verify(nullpropertypointer, Mockito.times(1)).setPropertyIndex(index);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_cgws0() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(parent);
        Object immediateNode = nullPropertyPointer.getImmediateNode();
        assertEquals(null, immediateNode);
        assertNotNull(immediateNode);
    }
}