/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CoreOperationAnd_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_LGcY0() {
        CoreOperationAnd coreOperationAnd = new CoreOperationAnd(new Expression[0]);
        String symbol = coreOperationAnd.getSymbol();
        assert(symbol.equals("and"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSymmetric_gLIb0() {
        CoreOperationAnd coreOperationAnd = new CoreOperationAnd(new Expression[]{});
        assertTrue(coreOperationAnd.isSymmetric());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPrecedence_uUuo0_GsQA0() {
    CoreOperationAnd operation = new CoreOperationAnd(new Expression[0]);
    int precedence = operation.getPrecedence();
    assertEquals(CoreOperationAnd.AND_PRECEDENCE, precedence);
}
}