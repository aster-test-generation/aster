/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.Locale;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanAttributeIterator_Test_Failing {
@Mock
    private BeanPointer beanPointer;
@Mock
    private QName qName;
@Mock
    private BeanAttributeIterator superBeanAttributeIterator;
private boolean includeXmlLang;
private int position = 0;
@Mock
    private NodePointer parent;
private BeanAttributeIterator beanAttributeIterator;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPositionPositive_JrjC0_AIZb0() {
    BeanAttributeIterator beanAttributeIterator = new BeanAttributeIterator(new BeanPointer(new QName("name"), new Object(), null, Locale.US), new QName("name"));
    boolean result = beanAttributeIterator.setPosition(1);
    Assertions.assertTrue(result);
}
}