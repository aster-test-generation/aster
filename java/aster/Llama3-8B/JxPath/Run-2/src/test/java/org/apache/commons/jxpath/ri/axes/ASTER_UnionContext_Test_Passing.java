/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import java.util.Iterator;
import org.apache.commons.jxpath.BasicNodeSet;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.model.NodePointer;
import java.util.Iterator;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_UnionContext_Test_Passing {
@Mock
    private EvalContext[] contexts;
@Mock
    private BasicNodeSet nodeSet;
@Mock
    private Iterator it;
@Mock
    private NodePointer ptr;
private boolean prepared;
private UnionContext unioncontext;
@Mock
    private UnionContext superContext;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition_PreparedFalse_LKKq0() {
        UnionContext unionContext = new UnionContext(new NamespaceContext(new SelfContext(null, null), null), new EvalContext[0]);
        unionContext.setPosition(0);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPosition_MultipleContexts_UccC4_kXuy0() {
    EvalContext[] contexts = new EvalContext[2];
    UnionContext unionContext = new UnionContext(new NamespaceContext(new SelfContext(null, null), null), contexts);
    unionContext.setPosition(0);
}
}