/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.w3c.dom.Node;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DOMNodeIterator_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPosition_InBetween_NNzZ3_FXkg0() throws Exception {
    Node node = mock(Node.class);
    NodePointer nodePointer = mock(NodePointer.class);
    DOMNodeIterator domNodeIterator = new DOMNodeIterator(nodePointer, new NodeTypeTest(1), false, null);
    when(nodePointer.getNode()).thenReturn(node);
    when(node.getFirstChild()).thenReturn(node);
    when(node.getNextSibling()).thenReturn(node);
    domNodeIterator.getNodePointer(); // Fix the error
    verify(nodePointer, times(1)).getNode();
    verify(node, times(1)).getNextSibling();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPosition_Previous_ReturnsFalse_nCUO7_ceLS0() throws Exception {
    Node node = mock(Node.class);
    NodePointer nodePointer = mock(NodePointer.class);
    DOMNodeIterator domNodeIterator = new DOMNodeIterator(nodePointer, new NodeTypeTest(1), false, null);
    when(nodePointer.getNode()).thenReturn(node);
    when(node.getLastChild()).thenReturn(null);
    when(node.getFirstChild()).thenReturn(null);
    boolean result = domNodeIterator.setPosition(0);
    assertFalse(result);
    verify(nodePointer, times(1)).getNode();
    verify(node, times(1)).getFirstChild();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPosition_Next_Npdc4_yrnO0() throws Exception {
    Node node = mock(Node.class);
    NodePointer nodePointer = mock(NodePointer.class);
    DOMNodeIterator domNodeIterator = new DOMNodeIterator(new DOMNodePointer(nodePointer, node), new NodeTypeTest(0), false, null);
    when(nodePointer.getNode()).thenReturn(node);
    when(node.getFirstChild()).thenReturn(node);
    when(node.getFirstChild()).thenReturn(node);
    domNodeIterator.getNodePointer();
    when(node.getFirstChild()).thenReturn(null);
    assertEquals(null, domNodeIterator.getNodePointer().getNode());
    verify(nodePointer, times(1)).getNode();
    verify(node, times(1)).getFirstChild();
    verify(node, times(1)).getFirstChild();
}
}