/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ParentContext_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNextNode_CurrentNodePointerIsNotContainer_ReturnFalse_ZkWB3_gENA0() {
    NodeTypeTest nodeTest1 = new NodeTypeTest(1);
    NodeTypeTest nodeTest2 = new NodeTypeTest(1);
    NodeTypeTest nodeTest3 = new NodeTypeTest(1);
    SelfContext selfContext = new SelfContext(null, nodeTest1);
    NamespaceContext namespaceContext = new NamespaceContext(new SelfContext(null, nodeTest1), nodeTest2);
    NamespaceContext namespaceContext2 = new NamespaceContext(new SelfContext(null, nodeTest1), nodeTest3);
    ParentContext parentContext = new ParentContext(namespaceContext2, nodeTest3);
    boolean result = parentContext.getCurrentPosition() == 1;
    assert (result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNextNode_PositionNotIncremented_ReturnFalse_fehF8_kYZi0() {
    ParentContext parentContext = new ParentContext(new NamespaceContext(new SelfContext(new NamespaceContext(new SelfContext(null, new NodeTypeTest(1)), new NodeTypeTest(1)), new NodeTypeTest(1)), new NodeTypeTest(1)), new NodeTypeTest(1));
    int position = parentContext.getCurrentPosition();
    boolean result = parentContext.getCurrentPosition() == 1;
    assert (!result);
    assert (position == 1);
}
}