/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_KeywordVariables_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariableTrue_NeuA0() {
        KeywordVariables keywordVariables = new KeywordVariables("test", null);
        boolean result = keywordVariables.isDeclaredVariable("test");
        assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariableFalse_kTFL1() {
        KeywordVariables keywordVariables = new KeywordVariables("test", null);
        boolean result = keywordVariables.isDeclaredVariable("notTest");
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVariableUndeclaredVariable_RPNt1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", "object");
        Object result = keywordVariables.getVariable("undeclaredVariable");
        assertEquals(null, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVariableDeclaredVariable_BLGm0_fid1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", "object");
        Object result = keywordVariables.getVariable("variable");
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUndeclareVariable_KFku0_CkZi0() {
    KeywordVariables keywordVariables = new KeywordVariables("keyword", "object");
    try {
        keywordVariables.undeclareVariable("variable");
        org.junit.Assert.fail("Expected UnsupportedOperationException");
    } catch (UnsupportedOperationException e) {
        org.junit.Assert.assertNotNull(e);
    }
}
}