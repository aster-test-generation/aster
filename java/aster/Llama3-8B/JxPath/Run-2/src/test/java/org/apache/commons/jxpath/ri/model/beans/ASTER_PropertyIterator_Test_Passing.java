/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.QName;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.Locale;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PropertyIterator_Test_Passing {
@Mock
    private BeanPointer beanPointer;
@Mock
    private DOMNodePointer domNodePointer;
@Mock
    private QName qName;
@Mock
    private JXPathBasicBeanInfo jXPathBasicBeanInfo;
@Mock
    private VariablePointer variablePointer;
private PropertyIterator propertyIterator;
@Mock
    private NodePointer nodePointer;
@Mock
    private PropertyPointer propertyNodePointer;
@Mock
    private QName name;
private String propertyName = "propertyName";
private boolean includeStart = false;
private int startIndex = 0;
private boolean targetReady = false;
private boolean empty = false;
private boolean reverse = false;
private int startPropertyIndex = 0;
    private int position = 0;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_NameNotNull_TargetReadyFalse_EmptyTrue_AnNw0_towE0() {
    PropertyIterator propertyIterator = new PropertyIterator(new BeanPointer(new QName("name"), null, new JXPathBasicBeanInfo(Object.class), Locale.US), "name", false, null);
    NodePointer nodePointer = propertyIterator.getNodePointer();
    Assertions.assertNull(nodePointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_NameNotNull_TargetReadyFalse_EmptyFalse_QlnO1_SXmy0() {
    PropertyIterator propertyIterator = new PropertyIterator(new BeanPointer(new QName("name"), null, new JXPathBasicBeanInfo(new Object().getClass(), false), Locale.US), "name", false, null);
    NodePointer nodePointer = propertyIterator.getNodePointer();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_NameNull_TargetReadyFalse_EmptyTrue_IWLV2_AeDk0() {
    PropertyIterator propertyIterator = new PropertyIterator(new BeanPointer(new QName("name"), null, new JXPathBasicBeanInfo(Class.class), Locale.US), null, false, null);
    NodePointer nodePointer = propertyIterator.getNodePointer();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_NameNull_TargetReadyTrue_EmptyTrue_nxrk3_aAwK0() {
    PropertyIterator propertyIterator = new PropertyIterator(new BeanPointer(new QName("name"), null, new JXPathBasicBeanInfo(new Object().getClass(), true), Locale.US), null, true, null);
    NodePointer nodePointer = propertyIterator.getNodePointer();
    Assertions.assertNull(nodePointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_NameNull_TargetReadyTrue_EmptyFalse_amEg4_tNBo0() {
    PropertyIterator propertyIterator = new PropertyIterator(new BeanPointer(new QName("name"), null, new JXPathBasicBeanInfo(Class.class), Locale.US), null, true, null);
    NodePointer nodePointer = propertyIterator.getNodePointer();
    Assertions.assertNotNull(nodePointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_NameNull_TargetReadyFalse_EmptyFalse_rQvP5_TpBD0() {
    PropertyIterator propertyIterator = new PropertyIterator(new BeanPointer(new QName("name"), null, new JXPathBasicBeanInfo(new Object().getClass(), true), Locale.US), null, false, null);
    NodePointer nodePointer = propertyIterator.getNodePointer();
}
}