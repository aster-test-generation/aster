/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ClassFunctions_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionWithValidNamespaceAndNameAndParameters_nIUN0() {
    ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
    Function function = classFunctions.getFunction("namespace", "methodName", new Object[] { "param1", "param2" });
    assertNotNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionWithNullParameters_dUEv3() {
    ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
    Function function = classFunctions.getFunction("namespace", "methodName", null);
    assertNotNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionWithNewMethod_pjLY4() {
    ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
    Function function = classFunctions.getFunction("namespace", "new", new Object[] { "param1", "param2" });
    assertNotNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionWithEmptyParameters_XmBS8() {
    ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
    Function function = classFunctions.getFunction("namespace", "methodName", new Object[0]);
    assertNotNull(function);
}
}