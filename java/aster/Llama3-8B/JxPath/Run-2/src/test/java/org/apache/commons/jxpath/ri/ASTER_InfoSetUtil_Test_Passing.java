/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import org.apache.commons.jxpath.JXPathContext;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_InfoSetUtil_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberNumber_gaIt0() {
        assertEquals(5, InfoSetUtil.number(5));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberBooleanFalse_BWBA2() {
        assertEquals(0.0, InfoSetUtil.number(false));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberStringValid_DZjU3() {
        assertEquals(5.0, InfoSetUtil.number("5.0"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleValueNumber_vJTW0() {
    double result = InfoSetUtil.doubleValue(10);
    Assertions.assertEquals(10.0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleValueBooleanTrue_cKLd1() {
    double result = InfoSetUtil.doubleValue(true);
    Assertions.assertEquals(0.0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleValueBooleanFalse_byyG2() {
    double result = InfoSetUtil.doubleValue(false);
    Assertions.assertEquals(1.0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleValueStringEmpty_TLKS3() {
    double result = InfoSetUtil.doubleValue("");
    Assertions.assertEquals(0.0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleValueStringValid_iPyU4() {
    double result = InfoSetUtil.doubleValue("10.5");
    Assertions.assertEquals(10.5, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleValueStringInvalid_GgLQ5() {
    double result = InfoSetUtil.doubleValue("abc");
    Assertions.assertEquals(Double.NaN, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleValueObject_qdXo8() {
    double result = InfoSetUtil.doubleValue(new Object());
    Assertions.assertEquals(Double.NaN, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0_1() {
        assertEquals(true, InfoSetUtil.booleanValue(new Double(1.0)));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0_2() {
        assertEquals(true, InfoSetUtil.booleanValue(new Float(1.0f)));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0_3() {
        assertEquals(false, InfoSetUtil.booleanValue(new Double(0.0)));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0_4() {
        assertEquals(false, InfoSetUtil.booleanValue(new Float(0.0f)));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0_5() {
        assertEquals(false, InfoSetUtil.booleanValue(new Double(-0.0)));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0_6() {
        assertEquals(false, InfoSetUtil.booleanValue(new Float(-0.0f)));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0_7() {
        assertEquals(false, InfoSetUtil.booleanValue(Double.NaN));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0_8() {
        assertEquals(false, InfoSetUtil.booleanValue(Float.NaN));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueBoolean_CJSm1_1() {
        assertEquals(true, InfoSetUtil.booleanValue(Boolean.TRUE));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueBoolean_CJSm1_2() {
        assertEquals(false, InfoSetUtil.booleanValue(Boolean.FALSE));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueString_SYPS3_1() {
        assertEquals(true, InfoSetUtil.booleanValue("Hello"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueString_SYPS3_2() {
        assertEquals(false, InfoSetUtil.booleanValue(""));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNull_QYII6() {
        assertEquals(false, InfoSetUtil.booleanValue(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueOther_QMXV7() {
        assertEquals(true, InfoSetUtil.booleanValue(new Object()));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueArray_Casb8() {
        assertEquals(true, InfoSetUtil.booleanValue(new Object[] {}));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueString_Reda0() {
        assertEquals("hello", InfoSetUtil.stringValue("hello"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueNumber_jHAg1_1() {
        assertEquals("10", InfoSetUtil.stringValue(10));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueNumber_jHAg1_2() {
        assertEquals("10.5", InfoSetUtil.stringValue(10.5));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueBoolean_wfZy2_1() {
        assertEquals("true", InfoSetUtil.stringValue(true));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueBoolean_wfZy2_2() {
        assertEquals("false", InfoSetUtil.stringValue(false));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueNull_KYOT3() {
        assertEquals("", InfoSetUtil.stringValue(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueList_gWDF8() {
        assertEquals("[1, 2, 3]", InfoSetUtil.stringValue(new java.util.ArrayList<Integer>(Arrays.asList(1, 2, 3))));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueSet_KXdr10() {
        assertEquals("[1, 2, 3]", InfoSetUtil.stringValue(new java.util.HashSet<Integer>(Arrays.asList(1, 2, 3))));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNumberStringInvalid_ydcF4_mMAM0() {
    assertEquals("abc", InfoSetUtil.stringValue("abc"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNumberEvalContextNull_mDVd5_Kkrw0() {
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBooleanValueEvalContext_cWOD2_KGvq0() {
    JXPathContext ctx = JXPathContext.newContext(new HashMap());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueNumber_Zrpp0() {
        assertEquals(true, InfoSetUtil.booleanValue(new Double(1.0)));
        assertEquals(true, InfoSetUtil.booleanValue(new Float(1.0f)));
        assertEquals(false, InfoSetUtil.booleanValue(new Double(0.0)));
        assertEquals(false, InfoSetUtil.booleanValue(new Float(0.0f)));
        assertEquals(false, InfoSetUtil.booleanValue(new Double(-0.0)));
        assertEquals(false, InfoSetUtil.booleanValue(new Float(-0.0f)));
        assertEquals(false, InfoSetUtil.booleanValue(Double.NaN));
        assertEquals(false, InfoSetUtil.booleanValue(Float.NaN));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueBoolean_CJSm1() {
        assertEquals(true, InfoSetUtil.booleanValue(Boolean.TRUE));
        assertEquals(false, InfoSetUtil.booleanValue(Boolean.FALSE));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBooleanValueString_SYPS3() {
        assertEquals(true, InfoSetUtil.booleanValue("Hello"));
        assertEquals(false, InfoSetUtil.booleanValue(""));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueNumber_jHAg1() {
        assertEquals("10", InfoSetUtil.stringValue(10));
        assertEquals("10.5", InfoSetUtil.stringValue(10.5));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueBoolean_wfZy2() {
        assertEquals("true", InfoSetUtil.stringValue(true));
        assertEquals("false", InfoSetUtil.stringValue(false));
}
}