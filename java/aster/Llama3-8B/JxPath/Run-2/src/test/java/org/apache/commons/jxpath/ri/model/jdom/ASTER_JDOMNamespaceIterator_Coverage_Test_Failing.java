/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JDOMNamespaceIterator_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullNamespaces_NUrL0() {
        JDOMNamespaceIterator iterator = new JDOMNamespaceIterator(null);
        boolean result = iterator.setPosition(1);
        assert (!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPositionZero_ADKK0_UeIE0() {
    JDOMNamespaceIterator jdomNamespaceIterator = new JDOMNamespaceIterator(new DOMNodePointer(null, null, null));
    jdomNamespaceIterator.setPosition(0);
    NodePointer result = jdomNamespaceIterator.getNodePointer();
    assert result != null;
    assert result instanceof JDOMNamespacePointer;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPositionNonZero_Imbd1_iwks0() {
    JDOMNamespaceIterator jdomNamespaceIterator = new JDOMNamespaceIterator(new DOMNodePointer(null, null, null));
    jdomNamespaceIterator.setPosition(1);
    NodePointer result = jdomNamespaceIterator.getNodePointer();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPositionZero_ADKK0_UeIE0_fid2() {
    JDOMNamespaceIterator jdomNamespaceIterator = new JDOMNamespaceIterator(new DOMNodePointer(null, null, null));
    jdomNamespaceIterator.setPosition(0);
    NodePointer result = jdomNamespaceIterator.getNodePointer();
    assert result instanceof JDOMNamespacePointer;
}
}