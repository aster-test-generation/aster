/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.Pointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ChildContext_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionZero_ReturnsNull_aQHa0_jeKQ0() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.setPosition(0);
    assertNull(childContext.nextNode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionZero_NextSetReturnsFalse_ReturnNull_flKb2_XrlK0() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.setPosition(0);
    when(childContext.nextSet()).thenReturn(false);
    assertNull(childContext.nextNode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionZero_NextSetReturnsTrue_PrepareAndReturnPointer_JtNP1_FZVh0_1() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.setPosition(0);
    assertEquals(true, childContext.nextNode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionZero_NextSetReturnsTrue_PrepareAndReturnPointer_JtNP1_FZVh0_2() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.setPosition(0);
    assertEquals(Pointer.class, childContext.getSingleNodePointer().getClass());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionZero_IteratorIsNull_ReturnNull_lcqm3_skQh0() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.setPosition(0);
    when(childContext.nextNode()).thenReturn(true);
    assertNull(childContext.getSingleNodePointer());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionNotZero_ReturnNull_PHex6_eEwR0() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.nextNode();
    assertNull(childContext.getSingleNodePointer());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionNotZero_NextSetReturnsTrue_PrepareAndReturnPointer_xtWV7_Pzzb0_1() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.setPosition(1);
    when(childContext.nextSet()).thenReturn(true);
    assertEquals(true, childContext.nextNode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionNotZero_NextSetReturnsTrue_PrepareAndReturnPointer_xtWV7_Pzzb0_2() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.setPosition(1);
    when(childContext.nextSet()).thenReturn(true);
    assertEquals(Pointer.class, childContext.getSingleNodePointer().getClass());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionNotZero_IteratorIsNull_ReturnNull_hecd9_Bfoe0() {
    ChildContext childContext = new ChildContext(null, null, false, false);
    childContext.setPosition(1);
    when(childContext.nextNode()).thenReturn(true);
    assertNull(childContext.getSingleNodePointer());
}
}