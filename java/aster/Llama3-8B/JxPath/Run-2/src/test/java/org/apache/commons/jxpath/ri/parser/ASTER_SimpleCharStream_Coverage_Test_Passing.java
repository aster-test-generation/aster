/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SimpleCharStream_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSuffixWhenLenIsZero_YJmI2() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("abcdefghijklmnopqrstuvwxyz"), 1, 1);
        simpleCharStream.bufpos = 10;
        simpleCharStream.bufsize = 20;
        char[] result = simpleCharStream.GetSuffix(0);
        char[] expected = new char[0];
        assertArrayEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn_qXcq0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        simpleCharStream.adjustBeginLineColumn(2, 3);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffNoWrapAround_tjpp1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        simpleCharStream.ExpandBuff(false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInit_BufferIsNotNull_BufferSizeIsEqualToBufferLength_dbaS1_NYXY0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
}
}