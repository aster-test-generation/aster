/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_XPathParser_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFunctionName_UTfw0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("".getBytes()));
        Object result = parser.FunctionName();
        assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFunctionNameWithQNameWithoutCoreFunctions_BmtL1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("".getBytes()));
        Object result = parser.FunctionName();
        assertEquals("QName_Without_CoreFunctions", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEnableTracing_kPaX0() {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        parser.enable_tracing();
        assertNotNull(parser);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPredicateWithToken85_JVVU0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        Object result = parser.Predicate();
        assertEquals("Expected result", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LT_CrJT0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 < 2".getBytes()));
        Object result = parser.RelationalExpr();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GT_ENgh1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 > 2".getBytes()));
        Object result = parser.RelationalExpr();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LTE_ISrb2() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 <= 2".getBytes()));
        Object result = parser.RelationalExpr();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GTE_uAcl3() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 >= 2".getBytes()));
        Object result = parser.RelationalExpr();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LT_noMatch_XWwJ4() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 < 1".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GT_noMatch_AFrD5() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 > 1".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LTE_noMatch_ccxd6() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 <= 1".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_GTE_noMatch_ZLVI7() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 >= 1".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_invalidInput_RzFW8() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 invalid 2".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_noInput_VZwX9() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_multipleLT_hGtU10() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 < 2 < 3".getBytes()));
        Object result = parser.RelationalExpr();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_multipleGT_rGov11() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 > 2 > 3".getBytes()));
        Object result = parser.RelationalExpr();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_multipleLTE_hdkz12() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 <= 2 <= 3".getBytes()));
        Object result = parser.RelationalExpr();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_multipleGTE_qYBM13() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 >= 2 >= 3".getBytes()));
        Object result = parser.RelationalExpr();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelationalExpr_LT_noAdditiveExpr_fzQz14() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("1 <".getBytes()));
        try {
            parser.RelationalExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnionExpr_aUDb0() throws Exception {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("path expr".getBytes()));
        Object result = parser.UnionExpr();
        assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnionExprWithUnion_FfZT1() throws Exception {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("path expr union path expr".getBytes()));
        Object result = parser.UnionExpr();
        assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnionExprWithMultipleUnions_hrYi2() throws Exception {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("path expr union path expr union path expr".getBytes()));
        Object result = parser.UnionExpr();
        assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnionExprWithError_TgFH8() throws Exception {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("path expr union".getBytes()));
        try {
            parser.UnionExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnionExprWithEmptyInput_JTCw9() throws Exception {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        try {
            parser.UnionExpr();
            fail("Expected ParseException");
        } catch (ParseException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testArgument_JJVx0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("".getBytes()));
        Object result = parser.Argument();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDisableTracing_lSgJ0() {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[0]));
        parser.disable_tracing();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testVariableReference_cquG0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("VARIABLE".getBytes()));
        Object result = parser.VariableReference();
        assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelativeLocationPathSlash_SJNx0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("a/b".getBytes()));
        Object result = parser.RelativeLocationPath();
        assertEquals("compiler.locationPath(false, [a, b])", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelativeLocationPathSlashSlash_PIYX1() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("//a/b".getBytes()));
        Object result = parser.RelativeLocationPath();
        assertEquals("compiler.locationPath(false, [a, b])", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRelativeLocationPathNoSlash_jYHB2() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("a".getBytes()));
        Object result = parser.RelativeLocationPath();
        assertEquals("compiler.locationPath(false, [a])", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitTokenSource_irfi0() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        parser.ReInit(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        assertEquals(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0), parser.token_source);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitToken_ApSb1() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        parser.ReInit(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        assertNotNull(parser.token);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitTokenNext_mmrz2() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        parser.ReInit(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        assertNotNull(parser.token.next);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitJjNt_gMmU3() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        parser.ReInit(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")), 0));
        assertNotNull(parser.jj_nt);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAxisSpecifierAxisName_LiTE0() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("self".getBytes()));
        int axis = parser.AxisSpecifier();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAxisSpecifierDefault_ueVg1() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("abc".getBytes()));
        int axis = parser.AxisSpecifier();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAxisSpecifierError_DvoB2() throws org.apache.commons.jxpath.ri.parser.ParseException {
        XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream("xyz".getBytes()));
        try {
            parser.AxisSpecifier();
        } catch (Exception e) {
        }
    }
}