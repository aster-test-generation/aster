/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;
import java.util.Enumeration;
import javax.servlet.jsp.PageContext;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Enumeration;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PageScopeContext_Test_Passing {
@Mock
    private PageContext pageContext;
private PageScopeContext pageScopeContext;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetAttribute() throws Exception{
        pageScopeContext = new PageScopeContext(pageContext);
        // Arrange
        String attribute = "testAttribute";
        Object attributeValue = "testAttributeValue";
        when(pageContext.getAttribute(attribute, PageContext.PAGE_SCOPE)).thenReturn(attributeValue);
        // Act
        Object result = pageScopeContext.getAttribute(attribute);
        // Assert
        assertEquals(attributeValue, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetAttributeNames() {
        pageScopeContext = new PageScopeContext(pageContext);
        // Arrange
        Enumeration enumeration = mock(Enumeration.class);
        when(pageContext.getAttributeNamesInScope(PageContext.PAGE_SCOPE)).thenReturn(enumeration);
        // Act
        Enumeration result = pageScopeContext.getAttributeNames();
        // Assert
        assertEquals(enumeration, result);
    }
}