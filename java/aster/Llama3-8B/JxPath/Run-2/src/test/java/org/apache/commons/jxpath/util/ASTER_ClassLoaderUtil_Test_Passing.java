/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ClassLoaderUtil_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetClass_RMEu0() throws ClassNotFoundException {
    ClassLoader classLoader = new ClassLoader() {};
    String className = "java.lang.String";
    boolean initialize = true;
    Class clazz = ClassLoaderUtil.getClass(classLoader, className, initialize);
    Assertions.assertEquals(String.class, clazz);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetClassWithContextClassLoader_fVBe0() throws ClassNotFoundException {
    String className = "java.lang.String";
    boolean initialize = true;
    Class<?> result = ClassLoaderUtil.getClass(className, initialize);
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetClassWithCurrentClassLoader_AVqu1() throws ClassNotFoundException {
    String className = "java.lang.Integer";
    boolean initialize = false;
    Class<?> result = ClassLoaderUtil.getClass(className, initialize);
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_OeKg1() throws ClassNotFoundException {
        Class<?> clazz = ClassLoaderUtil.getClass("java.lang.String");
        assertSame(String.class, clazz);
    }
}