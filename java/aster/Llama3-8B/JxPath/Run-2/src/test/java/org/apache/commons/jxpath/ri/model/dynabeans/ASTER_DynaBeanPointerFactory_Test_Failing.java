/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.*;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynaBeanPointerFactory_Test_Failing {
@Mock
    private NodePointer parent;
@Mock
    private QName name;
@Mock
    private Object bean;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer() {
        MockitoAnnotations.initMocks(this);
        // Arrange
        DynaBeanPointerFactory dynabeanpointerfactory = new DynaBeanPointerFactory();
        NodePointer expected = Mockito.mock(NodePointer.class);
        // Act
        NodePointer actual = dynabeanpointerfactory.createNodePointer(parent, name, bean);
        // Assert
        Mockito.verify(parent).getParent();
        Mockito.verify(name).getName();
        Mockito.verify(bean).getClass();
        Mockito.verify(dynabeanpointerfactory).createNodePointer(parent, name, bean);
        Mockito.verifyNoMoreInteractions(parent, name, bean);
        Assertions.assertEquals(expected, actual);
    }
}