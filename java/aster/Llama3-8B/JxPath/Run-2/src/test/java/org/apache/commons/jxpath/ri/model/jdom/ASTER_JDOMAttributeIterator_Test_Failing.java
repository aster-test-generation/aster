/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import java.util.List;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JDOMAttributeIterator_Test_Failing {
@Mock
    private DOMNodePointer parent;
@Mock
    private QName name;
private JDOMAttributeIterator jdomattributeiterator;
@Mock
    private List attributes;
private int position = 0;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition() {
        jdomattributeiterator = new JDOMAttributeIterator(parent, name);
        // Arrange
        jdomattributeiterator.setPosition(5);
        // Act
        int actualPosition = jdomattributeiterator.getPosition();
        // Assert
        assertEquals(5, actualPosition);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPosition_BhnT0_1() {
    MockitoAnnotations.initMocks(this);
    when(attributes.size()).thenReturn(5);
    jdomattributeiterator.setPosition(1);
    verify(attributes).size();
    jdomattributeiterator.setPosition(5);
    verify(attributes).size();
    jdomattributeiterator.setPosition(6);
    verify(attributes).size();
    assertEquals(1, jdomattributeiterator.getPosition()); }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPosition_BhnT0_2() {
    MockitoAnnotations.initMocks(this);
    when(attributes.size()).thenReturn(5);
    jdomattributeiterator.setPosition(1);
    verify(attributes).size();
    jdomattributeiterator.setPosition(5);
    verify(attributes).size();
    jdomattributeiterator.setPosition(6);
    verify(attributes).size();
    assertEquals(5, jdomattributeiterator.getPosition()); }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPosition_BhnT0_3() {
    MockitoAnnotations.initMocks(this);
    when(attributes.size()).thenReturn(5);
    jdomattributeiterator.setPosition(1);
    verify(attributes).size();
    jdomattributeiterator.setPosition(5);
    verify(attributes).size();
    jdomattributeiterator.setPosition(6);
    verify(attributes).size();
    assertFalse(jdomattributeiterator.setPosition(6));}
}