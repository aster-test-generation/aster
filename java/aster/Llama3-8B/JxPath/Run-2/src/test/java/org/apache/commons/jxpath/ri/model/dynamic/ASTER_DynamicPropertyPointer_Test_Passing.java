/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;
import org.apache.commons.jxpath.AbstractFactory;
import org.apache.commons.jxpath.DynamicPropertyHandler;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.util.ValueUtils;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import org.apache.commons.jxpath.ri.QName;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynamicPropertyPointer_Test_Passing {
@Mock
    private DynamicPropertyHandler handler;
@Mock
    private ValueUtils valueUtils;
@Mock
    private PageContextHandler pageContextHandler;
@Mock
    private DOMNodePointer domNodePointer;
private DynamicPropertyPointer dynamicPropertyPointer;
private String[] names = new String[]{"prop1", "prop2", "prop3"};
private String name;
@Mock
    private JXPathContext jxpathContext;
@Mock
    private NodePointer nodePointer;
@Mock
    private DynamicPropertyHandler dynamicPropertyHandler;
@Mock
    private AbstractFactory abstractFactory;
@Mock
    private JXPathContext jXPathContext;
@Mock
    private DynamicPropertyPointer dynamicpropertypointer;
@Mock
    private VariablePointer variablePointer;
@Mock
    private QName qName;
@Mock
    private DOMNodePointer parent;
@Mock
    private DOMNodePointer immediateParentPointer;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetPropertyIndex_1() throws Exception{
        dynamicpropertypointer = new DynamicPropertyPointer(parent, pageContextHandler);
        int initialIndex = 0;
        dynamicpropertypointer.setPropertyIndex(initialIndex);
        int newIndex = 1;
        dynamicpropertypointer.setPropertyIndex(newIndex);
        Assertions.assertEquals(newIndex, dynamicpropertypointer.getPropertyIndex());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPropertyIndex_zkgF0_1() throws Exception{
    PageContextHandler pageContextHandler = new PageContextHandler();
    DynamicPropertyPointer dynamicpropertypointer = new DynamicPropertyPointer(null, pageContextHandler);
    int initialIndex = 0;
    dynamicpropertypointer.setPropertyIndex(initialIndex);
    int newIndex = 1;
    dynamicpropertypointer.setPropertyIndex(newIndex);
    Assertions.assertEquals(newIndex, dynamicpropertypointer.getPropertyIndex());}
}