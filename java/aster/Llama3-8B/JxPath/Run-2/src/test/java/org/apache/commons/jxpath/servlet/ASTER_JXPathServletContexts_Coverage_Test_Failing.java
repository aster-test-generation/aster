/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.jsp.PageContext;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.AbstractFactory;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockPageContext;
import org.springframework.mock.web.MockServletContext;
public class Aster_JXPathServletContexts_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPageContext_PageContextNull_Kdvd1() {
        PageContext pageContext = null;
        JXPathContext context = JXPathServletContexts.getPageContext(pageContext);
        assertNull(context);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPageContext_GetAttributeNullContextNullPageContext_Piyt15() {
        PageContext pageContext = null;
        JXPathContext context = null;
        pageContext.setAttribute("JXPATH_CONTEXT", context);
        assertNull(pageContext.getAttribute("JXPATH_CONTEXT"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_PageContextNotNull_AAIR0_jhNE0() {
    ServletContext servletContext = new MockServletContext();
    JXPathContext context = JXPathServletContexts.getRequestContext(new MockHttpServletRequest(), servletContext);
    assertEquals(JXPathContext.class, context.getClass());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_RequestContextNull_nbFu3_BlkE0() {
    MockServletContext servletContext = new MockServletContext();
    JXPathContext parentContext = JXPathServletContexts.getRequestContext(null, servletContext);
    assertNull(parentContext);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_VariablesNotNull_shrp6_IGmx0() {
    ServletContext servletContext = new MockServletContext();
    HttpServletRequest request = new MockHttpServletRequest();
    JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
    assertNotNull(context);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_SetVariables_sDxL8_lOAe0() {
    MockPageContext pageContext = new MockPageContext();
    JXPathContext context = JXPathServletContexts.getPageContext(pageContext);
    context.setVariables(new KeywordVariables("pageScope", new PageScopeContext(pageContext)));
    assertNotNull(context.getVariables());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_FactoryNull_CEIC5_AUsz0() {
    AbstractFactory factory = null;
    JXPathContext context = JXPathServletContexts.getRequestContext(null, null);
    assertNull(context);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_ReturnContext_DeWo10_ldrA0() {
    ServletContext servletContext = new MockServletContext();
    HttpServletRequest request = new MockHttpServletRequest();
    JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
    assertEquals(JXPathServletContexts.getRequestContext(request, servletContext), null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_GetAttribute_VsPl11_kStn1() {
    ServletContext servletContext = new MockServletContext();
    HttpServletRequest request = new MockHttpServletRequest();
    JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
    assertEquals(context, servletContext.getAttribute(Constants.JXPATH_CONTEXT));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_GetAttributeNullContext_yvyo13_GPOi0() {
    MockHttpServletRequest request = new MockHttpServletRequest();
    MockServletContext servletContext = new MockServletContext();
    JXPathServletContexts jxpathServletContexts = new JXPathServletContexts();
    JXPathContext context = jxpathServletContexts.getRequestContext(request, servletContext);
    assertNotNull(context);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_PageContextNotNull_AAIR0_jhNE0_fid1() {
    ServletContext servletContext = new MockServletContext();
    JXPathContext context = JXPathServletContexts.getRequestContext(new MockHttpServletRequest(), servletContext);
    assertNotNull(context);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_VariablesNotNull_shrp6_IGmx0_fid1() {
    ServletContext servletContext = new MockServletContext();
    HttpServletRequest request = new MockHttpServletRequest();
    JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
    assertNotNull(context.getVariables());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_ReturnContext_DeWo10_ldrA0_fid1() {
    ServletContext servletContext = new MockServletContext();
    HttpServletRequest request = new MockHttpServletRequest();
    JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
    assertEquals(context, JXPathServletContexts.getRequestContext(request, servletContext));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPageContext_GetAttributeNullContext_yvyo13_GPOi0_fid1() {
    MockHttpServletRequest request = new MockHttpServletRequest();
    MockServletContext servletContext = new MockServletContext();
    JXPathServletContexts jxpathServletContexts = new JXPathServletContexts();
    JXPathContext context = jxpathServletContexts.getRequestContext(request, servletContext);
    assertNull(context);
}
}