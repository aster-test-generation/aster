/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SimpleCharStream_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSuffixWhenBufposPlusOneIsGreaterThanOrEqualToLen_QeDb0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("abcdefghijklmnopqrstuvwxyz"), 1, 1);
        simpleCharStream.bufpos = 10;
        simpleCharStream.bufsize = 20;
        char[] result = simpleCharStream.GetSuffix(15);
        char[] expected = new char[15];
        System.arraycopy("abcdefghijklmnopqrstuvwxyz".toCharArray(), 10, expected, 0, 15);
        assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSuffixWhenBufposPlusOneIsLessThanLen_ESOO1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("abcdefghijklmnopqrstuvwxyz"), 1, 1);
        simpleCharStream.bufpos = 5;
        simpleCharStream.bufsize = 20;
        char[] result = simpleCharStream.GetSuffix(15);
        char[] expected = new char[15];
        System.arraycopy("abcdefghijklmnopqrstuvwxyz".toCharArray(), 15 - 5, expected, 0, 5);
        System.arraycopy("abcdefghijklmnopqrstuvwxyz".toCharArray(), 0, expected, 5, 10);
        assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLine_fnnG0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        assertEquals(1, simpleCharStream.getLine());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffWrapAround_kaTO0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        simpleCharStream.ExpandBuff(true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn_fkaa0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        assertEquals(1, simpleCharStream.getColumn());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnLF_hjMX0_mKgs0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("\r"), 1, 1);
    simpleCharStream.UpdateLineColumn('\n');
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnTab_abaD2_bGXb0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    simpleCharStream.UpdateLineColumn('\t');
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnLFThenDefault_nOfw6_iskv0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    simpleCharStream.UpdateLineColumn('\n');
    simpleCharStream.UpdateLineColumn('\u0001'); // replace '\u0001' with '\u0001'
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnCRThenLF_SmRG5_xDNn0_1() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    simpleCharStream.prevCharIsCR = true;
    simpleCharStream.UpdateLineColumn('\r');
    simpleCharStream.UpdateLineColumn('\n');
    assertEquals(1, simpleCharStream.line);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnCRThenLF_SmRG5_xDNn0_2() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    simpleCharStream.prevCharIsCR = true;
    simpleCharStream.UpdateLineColumn('\r');
    simpleCharStream.UpdateLineColumn('\n');
    assertEquals(1, simpleCharStream.column);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnDefaultThenCR_BuSf7_TWCY0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("a"), 1, 1);
    simpleCharStream.UpdateLineColumn('a');
    simpleCharStream.prevCharIsLF = false;
    simpleCharStream.prevCharIsCR = true;
    simpleCharStream.UpdateLineColumn('\r');
    simpleCharStream.UpdateLineColumn('b');
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnDefaultThenLF_GeEW8_eYzO0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("a"), 1, 1);
    simpleCharStream.UpdateLineColumn('\n');
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnCRThenDefault_EZoM9_Yses0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    simpleCharStream.prevCharIsCR = true;
    simpleCharStream.UpdateLineColumn('\r');
    simpleCharStream.UpdateLineColumn('\0'); 
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnDefaultThenTab_TIRb13_KpYO0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("a"), 1, 1);
    simpleCharStream.UpdateLineColumn('\t');
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnTabThenLF_oRUQ12_swmd0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    simpleCharStream.UpdateLineColumn('\t');
    simpleCharStream.UpdateLineColumn('\n');
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnCRThenTab_YDSh14_mVmk0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    simpleCharStream.prevCharIsCR = true;
    simpleCharStream.UpdateLineColumn('\r');
    simpleCharStream.UpdateLineColumn('\t');
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnDefaultThenLFThenDefault_zQdx17_QolG0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("")); // Initialize the object
    simpleCharStream.UpdateLineColumn('a');
    simpleCharStream.UpdateLineColumn('\r'); // Changed from '\n' to '\r'
    simpleCharStream.UpdateLineColumn('\n'); // Changed from 'a' to '\n'
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnDefaultThenCRThenLF_YhKy16_RXgv0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("a"), 1, 1);
    simpleCharStream.UpdateLineColumn('a');
    simpleCharStream.prevCharIsLF = simpleCharStream.prevCharIsCR;
    simpleCharStream.prevCharIsCR = true;
    simpleCharStream.UpdateLineColumn('\r');
    simpleCharStream.prevCharIsLF = false;
    simpleCharStream.UpdateLineColumn('y');
    simpleCharStream.UpdateLineColumn('h');
    simpleCharStream.UpdateLineColumn('K');
    simpleCharStream.UpdateLineColumn('y');
    simpleCharStream.UpdateLineColumn('1');
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateLineColumnCRThenDefaultThenLF_MiJO18_BbVu0() {
    SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    simpleCharStream.prevCharIsCR = true;
    simpleCharStream.UpdateLineColumn('\r');
    simpleCharStream.UpdateLineColumn((char) 0);
    simpleCharStream.UpdateLineColumn('\n');
    simpleCharStream.UpdateLineColumn((char) 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSuffixWhenBufposPlusOneIsGreaterThanOrEqualToLen_QeDb0_fid1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("abcdefghij lmnopqrstuvwxyz"), 1, 1);
        simpleCharStream.bufpos = 10;
        simpleCharStream.bufsize = 20;
        char[] result = simpleCharStream.GetSuffix(15);
        char[] expected = new char[15];
        System.arraycopy("abcdefghij lmnopqrstuvwxyz".toCharArray(), 10, expected, 0, 15);
        assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSuffixWhenBufposPlusOneIsLessThanLen_ESOO1_fid1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("abcdefghij lmnopqrstuvwxyz"), 1, 1);
        simpleCharStream.bufpos = 5;
        simpleCharStream.bufsize = 20;
        char[] result = simpleCharStream.GetSuffix(15);
        char[] expected = new char[15];
        System.arraycopy("abcdefghij lmnopqrstuvwxyz".toCharArray(), 15 - 5, expected, 0, 5);
        System.arraycopy("abcdefghij lmnopqrstuvwxyz".toCharArray(), 0, expected, 5, 10);
        assertArrayEquals(expected, result);
}
}