/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import org.apache.commons.jxpath.ri.Compiler;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Step_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAxis_TBaB0() {
        Step step = new Step(1, new NodeTypeTest(1), new Expression[0]);
        int result = step.getAxis();
        assert result == 1;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsContextDependentNullPredicates_FRqj0() {
    Step step = new Step(0, new NodeTypeTest(0), null);
    boolean result = step.isContextDependent();
    Assertions.assertFalse(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_AxisChild_KASF0() {
        Step step = new Step(Compiler.AXIS_CHILD, new NodeTypeTest(1), null);
        assertEquals("node()", step.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_AxisAttribute_xBHz1() {
        Step step = new Step(Compiler.AXIS_ATTRIBUTE, new NodeTypeTest(1), null);
        assertEquals("@node()", step.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_AxisSelf_ItiL2() {
        Step step = new Step(Compiler.AXIS_SELF, new NodeTypeTest(1), null);
        assertEquals(".", step.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_AxisParent_aQGo3() {
        Step step = new Step(Compiler.AXIS_PARENT, new NodeTypeTest(1), null);
        assertEquals("..", step.toString());
    }
}