/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ParseException_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage2_WBCO1() {
    ParseException e = new ParseException();
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage3_BBpm2() {
    ParseException e = new ParseException(new Token(), new int[][]{{}}, new String[] {"tokenImage"});
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage4_RjkD3() {
    ParseException e = new ParseException(new Token(), new int[][]{{1, 2}}, new String[] {"tokenImage"});
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage5_VxAH4() {
    ParseException e = new ParseException(new Token(), new int[][]{{1, 2, 3}}, new String[] {"tokenImage"});
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage6_uuMs5() {
    ParseException e = new ParseException(new Token(), new int[][]{{1, 2, 3, 0}}, new String[] {"tokenImage"});
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage7_jykt6() {
    ParseException e = new ParseException(new Token(), new int[][]{{1, 2, 3, 4}}, new String[] {"tokenImage"});
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage8_KQTo7() {
    ParseException e = new ParseException(new Token(), new int[][]{{1, 2, 3, 4, 5}}, new String[] {"tokenImage"});
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage9_XNcH8() {
    ParseException e = new ParseException(new Token(), new int[][]{{1, 2, 3, 4, 5, 0}}, new String[] {"tokenImage"});
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMessage10_XBfD9() {
    ParseException e = new ParseException(new Token(), new int[][]{{1, 2, 3, 4, 5, 6}}, new String[] {"tokenImage"});
    String result = e.getMessage();
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes3_GmBQ2() {
        ParseException parser = new ParseException();
        String result = parser.add_escapes("Hello\\\"World");
        assertEquals("Hello\\\\\"World", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes4_tOYQ3() {
        ParseException parser = new ParseException();
        String result = parser.add_escapes("Hello\\u0000World");
        assertEquals("Hello\\u0000World", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes4_tOYQ3_fid1() {
        ParseException parser = new ParseException();
        String result = parser.add_escapes("Hello\u0000World");
        assertEquals("Hello\u0000World", result);
    }
}