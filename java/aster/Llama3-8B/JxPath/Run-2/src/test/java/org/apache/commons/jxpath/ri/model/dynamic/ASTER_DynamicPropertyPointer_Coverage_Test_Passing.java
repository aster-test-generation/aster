/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;
import org.apache.commons.jxpath.DynamicPropertyHandler;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DynamicPropertyPointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyIndex_PropertyIndexSpecified_PXdN1() {
        DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
        dynamicPropertyPointer.setPropertyIndex(5);
        assertEquals(5, dynamicPropertyPointer.getPropertyIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPropertyName_SetRequiredPropertyName_mpPb2_DWXE0() {
    DynamicPropertyPointer dynamicPropertyPointer = new DynamicPropertyPointer(null, null);
    String propertyName = "testProperty";
    dynamicPropertyPointer.setPropertyName(propertyName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_dvke0_HNex0() throws Exception {
    DynamicPropertyHandler handler = mock(DynamicPropertyHandler.class);
    PageContextHandler pageContextHandler = mock(PageContextHandler.class);
    DOMNodePointer domNodePointer = mock(DOMNodePointer.class);
    DynamicPropertyPointer dynamicpropertypointer = new DynamicPropertyPointer(domNodePointer, pageContextHandler);
}
}