/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;
import org.apache.commons.beanutils.LazyDynaBean;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_StrictLazyDynaBeanPointerFactory_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerNotLazyDynaBean_becz1_raLc0() {
    StrictLazyDynaBeanPointerFactory factory = new StrictLazyDynaBeanPointerFactory();
    QName name = new QName("testName");
    Object object = new Object();
    NodePointer parent = null;
    NodePointer result = factory.createNodePointer(parent, name, object);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerLazyDynaBean_JYPC0_OVbQ0_1() {
    StrictLazyDynaBeanPointerFactory factory = new StrictLazyDynaBeanPointerFactory();
    QName name = new QName("testName");
    LazyDynaBean object = new LazyDynaBean();
    NodePointer parent = null;
    NodePointer result = factory.createNodePointer(parent, name, object);
    assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerLazyDynaBean_JYPC0_OVbQ0_2() {
    StrictLazyDynaBeanPointerFactory factory = new StrictLazyDynaBeanPointerFactory();
    QName name = new QName("testName");
    LazyDynaBean object = new LazyDynaBean();
    NodePointer parent = null;
    NodePointer result = factory.createNodePointer(parent, name, object);
    assertTrue(result instanceof NodePointer);}
}