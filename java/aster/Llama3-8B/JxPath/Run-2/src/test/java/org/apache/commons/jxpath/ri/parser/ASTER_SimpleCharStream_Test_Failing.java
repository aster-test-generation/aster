/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SimpleCharStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSuffix_IOqh0_fid2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("abcdefghijklmnopqrstuvwxyz"), 1, 1);
        stream.buffer = new char[100];
        stream.bufpos = 20;
        stream.bufsize = 50;
        for (int i = 0; i < 20; i++) {
            stream.buffer[i] = 'a';
        }
        for (int i = 20; i < 50; i++) {
            stream.buffer[i] = 'b';
        }
        char[] result = stream.GetSuffix(10);
        char[] expected = new char[]{'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'};
        assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAdjustBeginLineColumn1_Bpdm0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.adjustBeginLineColumn(2, 3);
    assertEquals(2, stream.getBeginLine());
    assertEquals(3, stream.getBeginColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEndColumn_Swkn0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        assertEquals(1, stream.getEndColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEndColumn2_YQUz1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 10);
        assertEquals(1, stream.getEndColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginLine_FIDs0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1);
        assertEquals(1, stream.getBeginLine());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginLine2_EvmR1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1, 10);
        assertEquals(1, stream.getBeginLine());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginLine3_OjTB2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"));
        assertEquals(1, stream.getBeginLine());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImageBufposGreaterThanOrEqualToTokenBegin_mAma0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        String result = simpleCharStream.GetImage();
        assertEquals("Hello World", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImageBufposLessThanTokenBegin_QIQs1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 5);
        String result = simpleCharStream.GetImage();
        assertEquals("Hello", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn_arTq0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1);
        assertEquals(1, stream.getBeginColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn2_GTDo1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1, 10);
        assertEquals(1, stream.getBeginColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn3_ePED2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"));
        assertEquals(1, stream.getBeginColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEndLine_AQJS0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        assertEquals(1, stream.getEndLine());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEndLine2_WhfV1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 10);
        assertEquals(1, stream.getEndLine());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLine_wJhk0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        assertEquals(1, stream.getLine());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLine2_LrSv1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1, 10);
        assertEquals(1, stream.getLine());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLine4_qbOe3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"));
        assertEquals(1, stream.getLine());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn_yTCe0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1);
        assertEquals(1, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn2_rVXu1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 2);
        assertEquals(2, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn3_nEvA2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 3);
        assertEquals(3, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn4_tKLB3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 2, 1);
        assertEquals(1, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn5_CgNi4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 2, 2);
        assertEquals(2, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn6_oNJp5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 2, 3);
        assertEquals(3, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn7_BngW6() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 3, 1);
        assertEquals(1, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn8_mOlY7() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 3, 2);
        assertEquals(2, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn9_zMEu8() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 3, 3);
        assertEquals(3, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn10_fKRf9() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 4, 1);
        assertEquals(1, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn11_lILB10() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 4, 2);
        assertEquals(2, stream.getColumn());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnDefault_nJJO0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getLine());
        assertEquals(1, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnCR_GZfU1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("\rHello"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getLine());
        assertEquals(1, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnLF_tLeX2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello\n"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getLine());
        assertEquals(1, stream.getColumn());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnTab_oVvT3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello\t"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getLine());
        assertEquals(9, stream.getColumn());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAdjustBeginLineColumn1_Bpdm0_1_fid3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.adjustBeginLineColumn(2, 3);
    assertEquals(2, stream.getBeginLine());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnDefault_nJJO0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getLine());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnDefault_nJJO0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getColumn());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnCR_GZfU1_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("\rHello"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getLine());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnCR_GZfU1_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("\rHello"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getColumn());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnLF_tLeX2_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello\n"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getLine());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnLF_tLeX2_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello\n"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getColumn());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnTab_oVvT3_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello\t"));
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.getLine());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumnTab_oVvT3_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello\t"));
        stream.UpdateLineColumn('a');
        assertEquals(9, stream.getColumn());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInitReaderStartLineStartColumnBufferSize_UBex0_weMr0() {
    java.io.Reader reader = new java.io.StringReader("Hello World");
    SimpleCharStream simpleCharStream = new SimpleCharStream(reader, 1, 1, 10);
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.ReInit(reader, 2, 2, 10);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInitReaderStartLineStartColumn_uAES1_fUOh0() {
    java.io.Reader reader = new java.io.StringReader("Hello World");
    SimpleCharStream simpleCharStream = new SimpleCharStream(reader, 1, 1, 10);
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.UpdateLineColumn(' ');
    simpleCharStream.ReInit(reader, 2, 2);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandBuffWrapAround_kmHy0_eMoa0_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.UpdateLineColumn('a');
    assertEquals(1, stream.line);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandBuffWrapAround_kmHy0_eMoa0_2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.UpdateLineColumn('a');
    assertEquals(2, stream.column);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandBuffNoWrapAround_opkC1_TDXh0_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.UpdateLineColumn('c');
    assertEquals(1, stream.line);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandBuffNoWrapAround_opkC1_TDXh0_2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.UpdateLineColumn('c');
    assertEquals(2, stream.column);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandBuffNoWrapAround_opkC1_TDXh0_3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.UpdateLineColumn('c');
    assertEquals(1, stream.bufpos);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandBuffNoWrapAround_opkC1_TDXh0_5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.UpdateLineColumn('c');
    assertEquals(1, stream.column);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBackup_aLbw0_zAMh0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
    stream.backup(2);
    assertEquals(0, stream.bufpos);
}
}