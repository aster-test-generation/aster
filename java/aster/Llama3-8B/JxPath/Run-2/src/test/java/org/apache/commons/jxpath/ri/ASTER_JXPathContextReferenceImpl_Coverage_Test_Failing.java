/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import org.apache.commons.jxpath.Function;
import org.apache.commons.jxpath.JXPathFunctionNotFoundException;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JXPathContextReferenceImpl_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathAndSetValue_jYvD0() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        String xpath = "path";
        Object value = "value";
        Pointer result = jxpathContextReferenceImpl.createPathAndSetValue(xpath, value);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemovePath_Amli0() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        jxpathContextReferenceImpl.removePath("xpath");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemovePathWithCompileExpression_zAgY1() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        jxpathContextReferenceImpl.removePath("xpath", null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_ZWaG0() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        String xpath = "path";
        Pointer pointer = jxpathContextReferenceImpl.createPath(xpath);
        assertNotNull(pointer);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetValue_HcsB0() {
    JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
    jxpathContextReferenceImpl.setValue("xpath", "value");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue_NEws0() {
    JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
    Object result = jxpathContextReferenceImpl.getValue("xpath", String.class);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue_LGVL0() {
    JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
    String xpath = "some_xpath";
    Object result = jxpathContextReferenceImpl.getValue(xpath);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction_NullFunctionName_iBLP0() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        QName functionName = null;
        Object[] parameters = new Object[0];
        Function function = jxpathContextReferenceImpl.getFunction(functionName, parameters);
        Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction_EmptyPrefix_tAxy1() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        QName functionName = new QName("", "testFunction");
        Object[] parameters = new Object[0];
        Function function = jxpathContextReferenceImpl.getFunction(functionName, parameters);
        Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction_EmptyName_FvqC2() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        QName functionName = new QName("testPrefix", "");
        Object[] parameters = new Object[0];
        Function function = jxpathContextReferenceImpl.getFunction(functionName, parameters);
        Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction_NullParameters_Ecad3() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        QName functionName = new QName("testPrefix", "testFunction");
        Object[] parameters = null;
        Function function = jxpathContextReferenceImpl.getFunction(functionName, parameters);
        Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction_FunctionFound_rXfS4() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        QName functionName = new QName("testPrefix", "testFunction");
        Object[] parameters = new Object[0];
        Function function = jxpathContextReferenceImpl.getFunction(functionName, parameters);
        Assertions.assertNotNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction_ParentContextNull_gFEH6() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        QName functionName = new QName("testPrefix", "testFunction");
        Object[] parameters = new Object[0];
        jxpathContextReferenceImpl = null;
        try {
            jxpathContextReferenceImpl.getFunction(functionName, parameters);
            Assertions.fail("Expected JXPathFunctionNotFoundException");
        } catch (JXPathFunctionNotFoundException e) {
            Assertions.assertEquals("Undefined function: testPrefix:testFunction", e.getMessage());
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction_FunctionsNull_EbmM8() {
        JXPathContextReferenceImpl jxpathContextReferenceImpl = new JXPathContextReferenceImpl(null, null);
        QName functionName = new QName("testPrefix", "testFunction");
        Object[] parameters = new Object[0];
        jxpathContextReferenceImpl.setFunctions(null);
        Function function = jxpathContextReferenceImpl.getFunction(functionName, parameters);
        Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValueResultInstanceOfEvalContext_sOtM5_VgGB0() {
    JXPathContextReferenceImpl jxpathcontextreferenceimpl = new JXPathContextReferenceImpl(null, null);
    NamespaceResolver namespaceResolver = jxpathcontextreferenceimpl.getNamespaceResolver();
    Object result = namespaceResolver.getNamespaceURI("namespaceURI");
    Assertions.assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValueResultInstanceOfNodePointerVerifyLenientNullNotLenient_iMNv13_AAyz0() {
    JXPathContextReferenceImpl jxpathcontextreferenceimpl = new JXPathContextReferenceImpl(null, null);
    jxpathcontextreferenceimpl.setLenient(true);
    NodePointer.verify(null);
    jxpathcontextreferenceimpl.setLenient(true); 
    NamespaceResolver namespaceResolver = jxpathcontextreferenceimpl.getNamespaceResolver();
    namespaceResolver.seal();
    Object result = namespaceResolver;
    Assertions.assertNull(result);
}
}