/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import java.util.Collections;
import java.util.Set;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.Collections;
import java.util.Set;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PackageFunctions_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionNullNamespace_Zqiq0() {
    PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
    Function function = packageFunctions.getFunction(null, "name", new Object[0]);
    Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionNullName_eSav1() {
    PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
    Function function = packageFunctions.getFunction("namespace", null, new Object[0]);
    Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionNullParameters_LPlC2() {
    PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
    Function function = packageFunctions.getFunction("namespace", "name", null);
    Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionDifferentNamespace_XodG3() {
    PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
    Function function = packageFunctions.getFunction("differentNamespace", "name", new Object[0]);
    Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFunctionInvalidMethod_FLuK16() {
    PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
    Function function = packageFunctions.getFunction("namespace", "invalidMethodName", new Object[0]);
    Assertions.assertNull(function);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespaces_nVwa0() {
        PackageFunctions packageFunctions = new PackageFunctions("prefix", "namespace");
        Set<String> usedNamespaces = packageFunctions.getUsedNamespaces();
        Set<String> expected = Collections.singleton("namespace");
        assert expected.equals(usedNamespaces);
    }
}