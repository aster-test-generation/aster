/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JXPathContextFactoryConfigurationError_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetException1_CkvS0() {
        JXPathContextFactoryConfigurationError error = new JXPathContextFactoryConfigurationError();
        Exception exception = error.getException();
        assert exception == null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetException2_OVeP1() {
        JXPathContextFactoryConfigurationError error = new JXPathContextFactoryConfigurationError("msg");
        Exception exception = error.getException();
        assert exception == null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetException3_blJO2() {
        Exception e = new Exception();
        JXPathContextFactoryConfigurationError error = new JXPathContextFactoryConfigurationError(e);
        Exception exception = error.getException();
        assert exception == e;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetException4_Rjwr3() {
        Exception e = new Exception();
        String msg = "msg";
        JXPathContextFactoryConfigurationError error = new JXPathContextFactoryConfigurationError(e, msg);
        Exception exception = error.getException();
        assert exception == e;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMessageWithNullMessageAndException_QCdb0() {
    JXPathContextFactoryConfigurationError error = new JXPathContextFactoryConfigurationError(null, "exception message");
    String message = error.getMessage();
    assert message.equals("exception message");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMessageWithNullMessageAndNoException_VHwj1() {
    JXPathContextFactoryConfigurationError error = new JXPathContextFactoryConfigurationError("message");
    String message = error.getMessage();
    assert message.equals("message");
}
}