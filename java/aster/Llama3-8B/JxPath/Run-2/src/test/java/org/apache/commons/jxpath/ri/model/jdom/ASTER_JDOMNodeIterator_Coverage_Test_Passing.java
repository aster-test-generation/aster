/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JDOMNodeIterator_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetPosition_PositionLessThanCurrentPosition_ReturnsFalse_Cxhs0() {
        JDOMNodeIterator iterator = new JDOMNodeIterator(null, null, false, null);
        iterator.setPosition(5);
        assertFalse(iterator.setPosition(3));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetPosition_PositionGreaterThanCurrentPosition_ReturnsFalse_sUCK1() {
        JDOMNodeIterator iterator = new JDOMNodeIterator(null, null, false, null);
        iterator.setPosition(5);
        assertFalse(iterator.setPosition(7));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetPosition_PositionEqualToCurrentPosition_ReturnsTrue_HbZO2() {
        JDOMNodeIterator iterator = new JDOMNodeIterator(null, null, false, null);
        assertTrue(iterator.setPosition(5));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_NullChild_Imee0() {
        JDOMNodeIterator iterator = new JDOMNodeIterator(null, new NodeTypeTest(1), false, null);
        NodePointer result = iterator.getNodePointer();
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_SetPositionSuccessful_RklP2() {
        JDOMNodeIterator iterator = new JDOMNodeIterator(new DOMNodePointer(null, null, null), new NodeTypeTest(1), false, null);
        iterator.setPosition(1);
        NodePointer result = iterator.getNodePointer();
        assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_SetPositionFailed_BFPb1_ZiEC0() {
    JDOMNodeIterator iterator = new JDOMNodeIterator(new DOMNodePointer(null, null, null), new NodeTypeTest(1), false, null);
    JDOMNodeIterator child = new JDOMNodeIterator(new DOMNodePointer(null, null, null), new NodeTypeTest(1), false, null);
    NodePointer result = iterator.getNodePointer();
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_ReturnsNodePointer_emLR4_hhRp0() {
    JDOMNodeIterator iterator = new JDOMNodeIterator(new DOMNodePointer(null, null, null), new NodeTypeTest(1), false, null);
    NodePointer result = iterator.getNodePointer();
    assertNotNull(result);
}
}