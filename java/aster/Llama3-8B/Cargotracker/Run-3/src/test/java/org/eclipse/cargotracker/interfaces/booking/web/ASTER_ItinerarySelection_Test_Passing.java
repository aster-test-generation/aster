/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.RouteCandidate;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ItinerarySelection_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteCanditates_ZKXg0() throws Exception {
    ItinerarySelection itinerarySelection = new ItinerarySelection();
    List<RouteCandidate> routeCandidates = itinerarySelection.getRouteCanditates();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_kWad0() throws Exception {
    ItinerarySelection itinerarySelection = new ItinerarySelection();
    String trackingId = itinerarySelection.getTrackingId();
    assertEquals("Expected trackingId", trackingId, "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteCandidates_JaUm0() throws Exception {
    ItinerarySelection itinerarySelection = new ItinerarySelection();
    List<RouteCandidate> routeCandidates = itinerarySelection.getRouteCandidates();
    assertNotNull(routeCandidates);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetTrackingId_tkTp0() throws Exception {
    ItinerarySelection itinerarySelection = new ItinerarySelection();
    itinerarySelection.setTrackingId("12345");
    assertEquals("12345", itinerarySelection.getTrackingId());
  }
}