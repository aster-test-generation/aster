/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.handling;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HandlingHistory_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsHandlingHistoryWithDifferentObject_jGpO3_DSut0() {
    HandlingHistory handlingHistory = new HandlingHistory(new ArrayList<>());
    assertFalse(handlingHistory.hashCode() == new Object().hashCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsHandlingHistoryWithSameObject_klcl4_ruHK1() {
    HandlingHistory handlingHistory = new HandlingHistory(new ArrayList<>());
    assertEquals(handlingHistory.hashCode(), handlingHistory.hashCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsHandlingHistoryWithSameEvents_ZlEi0_VKTY0() {
    HandlingHistory handlingHistory = new HandlingHistory(new ArrayList<>());
    HandlingHistory otherHandlingHistory = new HandlingHistory(new ArrayList<>());
    handlingHistory.equals(otherHandlingHistory);
    assertEquals(handlingHistory.hashCode(), otherHandlingHistory.hashCode());
  }
}