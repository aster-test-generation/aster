/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.tracking.web;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoTrackingViewAdapter_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEtaWithNullCargo_KbaD2() {
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(null, new ArrayList<>());
    assertNull(adapter.getEta());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testStatusCode_NullItinerary_ReturnsNOT_ROUTED_FEWK5() {
    Cargo cargo = new Cargo(new TrackingId("id"), null);
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, null);
    assertEquals("NOT_ROUTED", adapter.getStatusCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusText_NullRouteSpecification_vkZs7() {
    Cargo cargo = new Cargo(new TrackingId("id"), null);
    assertEquals("[Unknown status]", new CargoTrackingViewAdapter(cargo, new ArrayList<>()).getStatusText());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testNullHandlingActivity_gJgk0() {
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(new Cargo(), new ArrayList<>());
    String result = adapter.getNextExpectedActivity();
    assertEquals("", result);
  }
}