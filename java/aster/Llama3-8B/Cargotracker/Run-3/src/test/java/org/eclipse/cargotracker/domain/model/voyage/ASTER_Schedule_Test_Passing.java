/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Schedule_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_BYun0() throws Exception {
    Schedule schedule = new Schedule();
    int result = schedule.hashCode();
    assertEquals(0, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCarrierMovements_LDyb0() throws Exception {
    Schedule schedule = new Schedule();
    List<CarrierMovement> movements = schedule.getCarrierMovements();
    assert movements != null;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsSameObject_XiBN0() throws Exception {
    Schedule schedule = new Schedule();
    boolean result = schedule.equals(schedule);
    assert result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsNull_dAwh1() throws Exception {
    Schedule schedule = new Schedule();
    boolean result = schedule.equals(null);
    assert !result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsDifferentObject_IyzL2() throws Exception {
    Schedule schedule1 = new Schedule();
    Schedule schedule2 = new Schedule();
    boolean result = schedule1.equals(schedule2);
    assert !result;
  }
}