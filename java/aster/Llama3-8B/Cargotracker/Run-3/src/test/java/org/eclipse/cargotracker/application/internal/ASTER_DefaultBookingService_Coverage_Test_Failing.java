/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.internal;

import java.time.LocalDate;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingService_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDestinationWithValidTrackingIdAndUnLocodeWithSameDestination_Lgqd8() {
    TrackingId trackingId = new TrackingId("12345");
    UnLocode unLocode = new UnLocode("US LAX");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_WithValidInputs_HKAx0() {
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    UnLocode originUnLocode = new UnLocode("US LAX");
    UnLocode destinationUnLocode = new UnLocode("JP NRT");
    LocalDate arrivalDeadline = LocalDate.now();
    TrackingId trackingId = defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, arrivalDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_WithNullOriginUnLocode_xMvx1() {
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    UnLocode destinationUnLocode = new UnLocode("JP NRT");
    LocalDate arrivalDeadline = LocalDate.now();
    try {
      defaultBookingService.bookNewCargo(null, destinationUnLocode, arrivalDeadline);
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_WithNullDestinationUnLocode_mckB2() {
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    UnLocode originUnLocode = new UnLocode("US LAX");
    LocalDate arrivalDeadline = LocalDate.now();
    try {
      defaultBookingService.bookNewCargo(originUnLocode, null, arrivalDeadline);
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_WithNullArrivalDeadline_qIIQ3() {
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    UnLocode originUnLocode = new UnLocode("US LAX");
    UnLocode destinationUnLocode = new UnLocode("JP NRT");
    try {
      defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, null);
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_WithInvalidOriginUnLocode_pYJx4() {
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    UnLocode originUnLocode = new UnLocode("Invalid UnLocode");
    UnLocode destinationUnLocode = new UnLocode("JP NRT");
    LocalDate arrivalDeadline = LocalDate.now();
    try {
      defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, arrivalDeadline);
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_WithInvalidDestinationUnLocode_caBB5() {
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    UnLocode originUnLocode = new UnLocode("US LAX");
    UnLocode destinationUnLocode = new UnLocode("Invalid UnLocode");
    LocalDate arrivalDeadline = LocalDate.now();
    try {
      defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, arrivalDeadline);
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_WithInvalidArrivalDeadline_jAiU6() {
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    UnLocode originUnLocode = new UnLocode("US LAX");
    UnLocode destinationUnLocode = new UnLocode("JP NRT");
    LocalDate arrivalDeadline = null;
    try {
      defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, arrivalDeadline);
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_UaBX0_SEnH0() {
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("testId");
    defaultBookingService.requestPossibleRoutesForCargo(trackingId);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDestinationWithInvalidUnLocode_KXUT5_XvPj0() {
    TrackingId trackingId = new TrackingId("12345");
    UnLocode unLocode = new UnLocode("InvalidUnLocode");
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    try {
      defaultBookingService.requestPossibleRoutesForCargo(trackingId);
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDeadlineWithNullNewDeadline_LHma2_LGqF0() {
    TrackingId trackingId = new TrackingId("testId");
    LocalDate newDeadline = null;
    try {
      DefaultBookingService defaultBookingService = new DefaultBookingService();
      List<Itinerary> possibleRoutes = defaultBookingService.requestPossibleRoutesForCargo(trackingId);
      defaultBookingService.changeDeadline(trackingId, newDeadline);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
      assertEquals("newDeadline", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testChangeDestinationWithInvalidUnLocode_KXUT5_XvPj0_fid1() {
    TrackingId trackingId = new TrackingId("12345");
    UnLocode unLocode = new UnLocode("USNY"); // Changed to a valid UN/LOCODE
    DefaultBookingService defaultBookingService = new DefaultBookingService();
    try {
      defaultBookingService.requestPossibleRoutesForCargo(trackingId);
    } catch (Exception e) {
      // No assertion, as the test is expected to throw an exception
    }
  }
}