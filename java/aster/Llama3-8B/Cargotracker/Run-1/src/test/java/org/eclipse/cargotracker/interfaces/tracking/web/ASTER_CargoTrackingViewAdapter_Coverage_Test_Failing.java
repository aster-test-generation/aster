/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.tracking.web;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoTrackingViewAdapter_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEtaWithNullRouteSpecification_IeEf3() {
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(new Cargo(), null);
    String eta = adapter.getEta();
    assertEquals("?", eta);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testNullRouteSpecification_PPfq7() {
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(new Cargo(), null);
    assertEquals("[Unknown status]", adapter.getStatusText());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testNullHandlingActivity_BXnQ0() {
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(new Cargo(), new ArrayList<>());
    String result = adapter.getNextExpectedActivity();
    assertEquals("", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testNullCargo_fIYI8() {
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(null, new ArrayList<>());
    String result = adapter.getNextExpectedActivity();
    assertEquals("", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testNullHandlingEvents_iBDf9() {
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(new Cargo(), null);
    String result = adapter.getNextExpectedActivity();
    assertEquals("", result);
  }
}