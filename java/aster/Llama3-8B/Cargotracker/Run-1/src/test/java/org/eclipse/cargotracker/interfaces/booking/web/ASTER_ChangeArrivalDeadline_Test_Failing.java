/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ChangeArrivalDeadline_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadline_arGJ0() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    LocalDate expected = LocalDate.now();
    LocalDate actual = changeArrivalDeadline.getArrivalDeadline();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_1() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getFinalDestinationName(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_2() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getFinalDestination(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_3() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getTrackingId(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_4() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getFinalDestinationCode(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_5() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getOriginCode(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_6() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getNextLocation(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_7() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getOriginName(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_8() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getOrigin(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_9() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getArrivalDeadline(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_10() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getLastKnownLocationName(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_11() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getLastKnownLocation(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_12() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getTransportStatus(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_13() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getLegs().size(), 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0_14() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getLastKnownLocationCode(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadline_arGJ0_fid2() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    LocalDate expected = LocalDate.now();
    LocalDate actual = changeArrivalDeadline.getArrivalDeadline();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_iMoT0_fid2() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    String trackingId = changeArrivalDeadline.getTrackingId();
    assertEquals("Expected trackingId", trackingId, "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_Uqlz0() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertEquals(cargoRoute.getFinalDestinationName(), "");
    assertEquals(cargoRoute.getFinalDestination(), "");
    assertEquals(cargoRoute.getTrackingId(), "");
    assertEquals(cargoRoute.getFinalDestinationCode(), "");
    assertEquals(cargoRoute.getOriginCode(), "");
    assertEquals(cargoRoute.getNextLocation(), "");
    assertEquals(cargoRoute.getOriginName(), "");
    assertEquals(cargoRoute.getOrigin(), "");
    assertEquals(cargoRoute.getArrivalDeadline(), "");
    assertEquals(cargoRoute.getLastKnownLocationName(), "");
    assertEquals(cargoRoute.getLastKnownLocation(), "");
    assertEquals(cargoRoute.getTransportStatus(), "");
    assertEquals(cargoRoute.getLegs().size(), 0);
    assertEquals(cargoRoute.getLastKnownLocationCode(), "");
  }
}