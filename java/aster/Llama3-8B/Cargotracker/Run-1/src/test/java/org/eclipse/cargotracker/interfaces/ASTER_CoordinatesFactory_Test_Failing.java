/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CoordinatesFactory_Test_Failing {
  @Mock
  private UnLocode unLocode;
  @Mock
  private Coordinates coordinates;
  private CoordinatesFactory coordinatesfactory;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFind_dAbQ0() {
    UnLocode unLocode = new UnLocode("US LAX");
    Coordinates coordinates = CoordinatesFactory.find(unLocode);
    assertNotNull(coordinates);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testfind_RSdr0() throws Exception {
    CoordinatesFactory coordinatesfactory = CoordinatesFactory.class.newInstance();
    String unLocode = "unLocode";
    Coordinates result = coordinatesfactory.find(unLocode);
    assertEquals(null, result);
  }
}