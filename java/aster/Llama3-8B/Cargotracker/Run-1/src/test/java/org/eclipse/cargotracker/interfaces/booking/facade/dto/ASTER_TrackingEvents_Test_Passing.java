/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.dto;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TrackingEvents_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testIsExpectedTrue_iMsL0() {
    TrackingEvents trackingEvents = new TrackingEvents(true, "description", "time");
    boolean result = trackingEvents.isExpected();
    assert(result == true);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testIsExpectedFalse_Rvlm1() {
    TrackingEvents trackingEvents = new TrackingEvents(false, "description", "time");
    boolean result = trackingEvents.isExpected();
    assert(result == false);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDescription_bvYc0() {
    TrackingEvents trackingEvents = new TrackingEvents(true, "Test Description", "Test Time");
    String result = trackingEvents.getDescription();
    assertEquals("Test Description", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTime_mmaS0() {
    TrackingEvents trackingEvents = new TrackingEvents(true, "description", "time");
    String result = trackingEvents.getTime();
    assertEquals("time", result);
  }
}