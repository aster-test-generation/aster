/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.handling;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HandlingHistory_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsDifferentHandlingHistory_TcYJ3() {
    HandlingHistory handlingHistory1 = new HandlingHistory(new ArrayList<>());
    HandlingHistory handlingHistory2 = new HandlingHistory(new ArrayList<>());
    boolean result = handlingHistory1.equals(handlingHistory2);
    assert !result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAllHandlingEvents_BASs0() {
    Collection<HandlingEvent> handlingEvents = new ArrayList<>();
    HandlingHistory handlingHistory = new HandlingHistory(handlingEvents);
    List<HandlingEvent> result = handlingHistory.getAllHandlingEvents();
    assert result == handlingEvents;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_FHrn0() {
    Collection<HandlingEvent> handlingEvents = Arrays.asList(new HandlingEvent(), new HandlingEvent());
    HandlingHistory handlingHistory = new HandlingHistory(handlingEvents);
    int hashCode = handlingHistory.hashCode();
    assertEquals(0, hashCode);
  }
}