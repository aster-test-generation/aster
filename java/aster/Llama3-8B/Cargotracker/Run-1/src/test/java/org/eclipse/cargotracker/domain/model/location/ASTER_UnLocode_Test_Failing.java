/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.location;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_UnLocode_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetIdString_Ngov0() {
    UnLocode unLocode = new UnLocode("DE FRA");
    assertEquals("DE FRA", unLocode.getIdString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsSameObject_pbvb0() {
    UnLocode unLocode = new UnLocode("US LAX");
    boolean result = unLocode.equals(unLocode);
    assert result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsNull_cFVV1() {
    UnLocode unLocode = new UnLocode("US LAX");
    boolean result = unLocode.equals(null);
    assert !result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsDifferentObject_tHvj2() {
    UnLocode unLocode1 = new UnLocode("US LAX");
    UnLocode unLocode2 = new UnLocode("US ORD");
    boolean result = unLocode1.equals(unLocode2);
    assert !result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsSameValue_Xeuc3() {
    UnLocode unLocode1 = new UnLocode("US LAX");
    UnLocode unLocode2 = new UnLocode("US LAX");
    boolean result = unLocode1.equals(unLocode2);
    assert result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_nrHf0() {
    UnLocode unLocode = new UnLocode("US LAX");
    assertEquals("US LAX", unLocode.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAsNull_cnyM0() {
    UnLocode unLocode = new UnLocode("US LAX");
    boolean result = unLocode.sameValueAs(null);
    assert !result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAsDifferentUnLocode_eohy1() {
    UnLocode unLocode1 = new UnLocode("US LAX");
    UnLocode unLocode2 = new UnLocode("DE FRA");
    boolean result = unLocode1.sameValueAs(unLocode2);
    assert !result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAsSameUnLocode_EyzL2() {
    UnLocode unLocode1 = new UnLocode("US LAX");
    UnLocode unLocode2 = new UnLocode("US LAX");
    boolean result = unLocode1.sameValueAs(unLocode2);
    assert result;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_aYMH0() {
    UnLocode unLocode = new UnLocode("US LAX");
    int result = unLocode.hashCode();
    assert result != 0;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetIdStringDefault_fBPo1_fid1() {
    UnLocode unLocode = new UnLocode();
    assertEquals("", unLocode.getIdString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringEmpty_USoC1_fid1() {
    UnLocode unLocode = new UnLocode();
    assertEquals("", unLocode.toString());
  }
}