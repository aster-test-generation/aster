/**
 * Generated by Aster
 */
package org.eclipse.pathfinder.api;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_GraphTraversalService_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPathOriginNull_JHgN1() {
    GraphTraversalService graphTraversalService = new GraphTraversalService();
    String originUnLocode = null;
    String destinationUnLocode = "destination";
    String deadline = "deadline";
    try {
      graphTraversalService.findShortestPath(originUnLocode, destinationUnLocode, deadline);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPathDestinationNull_BzST2() {
    GraphTraversalService graphTraversalService = new GraphTraversalService();
    String originUnLocode = "origin";
    String destinationUnLocode = null;
    String deadline = "deadline";
    try {
      graphTraversalService.findShortestPath(originUnLocode, destinationUnLocode, deadline);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPathDeadlineNull_RMvI3() {
    GraphTraversalService graphTraversalService = new GraphTraversalService();
    String originUnLocode = "origin";
    String destinationUnLocode = "destination";
    String deadline = null;
    try {
      graphTraversalService.findShortestPath(originUnLocode, destinationUnLocode, deadline);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPathNullOrigin_iisn1() {
    GraphTraversalService graphTraversalService = new GraphTraversalService();
    try {
      graphTraversalService.findShortestPath(null, "destination", "deadline");
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPathNullDestination_irOr2() {
    GraphTraversalService graphTraversalService = new GraphTraversalService();
    try {
      graphTraversalService.findShortestPath("origin", null, "deadline");
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPathNullDeadline_jkKE3() {
    GraphTraversalService graphTraversalService = new GraphTraversalService();
    try {
      graphTraversalService.findShortestPath("origin", "destination", null);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }
}