/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.handling;

import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.eclipse.cargotracker.domain.model.voyage.VoyageNumber;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HandlingEventFactory_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateHandlingEventWithNullTrackingId_ylUw2() {
    HandlingEventFactory factory = new HandlingEventFactory();
    LocalDateTime registrationTime = LocalDateTime.now();
    LocalDateTime completionTime = LocalDateTime.now().plusHours(1);
    TrackingId trackingId = null;
    VoyageNumber voyageNumber = new VoyageNumber("456");
    UnLocode unlocode = new UnLocode("789");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
      factory.createHandlingEvent(registrationTime, completionTime, trackingId, voyageNumber, unlocode, type);
      fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateHandlingEventWithNullVoyageNumber_OGVq3() {
    HandlingEventFactory factory = new HandlingEventFactory();
    LocalDateTime registrationTime = LocalDateTime.now();
    LocalDateTime completionTime = LocalDateTime.now().plusHours(1);
    TrackingId trackingId = new TrackingId("123");
    VoyageNumber voyageNumber = null;
    UnLocode unlocode = new UnLocode("789");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
      factory.createHandlingEvent(registrationTime, completionTime, trackingId, voyageNumber, unlocode, type);
      fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateHandlingEventWithNullUnLocode_hTbU4() {
    HandlingEventFactory factory = new HandlingEventFactory();
    LocalDateTime registrationTime = LocalDateTime.now();
    LocalDateTime completionTime = LocalDateTime.now().plusHours(1);
    TrackingId trackingId = new TrackingId("123");
    VoyageNumber voyageNumber = new VoyageNumber("456");
    UnLocode unlocode = null;
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
      factory.createHandlingEvent(registrationTime, completionTime, trackingId, voyageNumber, unlocode, type);
      fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateHandlingEventWithInvalidType_jEeY5() {
    HandlingEventFactory factory = new HandlingEventFactory();
    LocalDateTime registrationTime = LocalDateTime.now();
    LocalDateTime completionTime = LocalDateTime.now().plusHours(1);
    TrackingId trackingId = new TrackingId("123");
    VoyageNumber voyageNumber = new VoyageNumber("456");
    UnLocode unlocode = new UnLocode("789");
    HandlingEvent.Type type = HandlingEvent.Type.values()[HandlingEvent.Type.values().length - 1];
    try {
      factory.createHandlingEvent(registrationTime, completionTime, trackingId, voyageNumber, unlocode, type);
      fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
  }
}