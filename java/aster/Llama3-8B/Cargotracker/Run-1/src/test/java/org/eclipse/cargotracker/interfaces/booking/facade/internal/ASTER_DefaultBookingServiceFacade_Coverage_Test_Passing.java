/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingServiceFacade_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargoNullOrigin_MZEW1() {
    DefaultBookingServiceFacade defaultBookingServiceFacade = new DefaultBookingServiceFacade();
    String origin = null;
    String destination = "destination";
    LocalDate arrivalDeadline = LocalDate.now();
    try {
      defaultBookingServiceFacade.bookNewCargo(origin, destination, arrivalDeadline);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRequestPossibleRoutesForCargoTrackingIdNull_Mxax1() {
    DefaultBookingServiceFacade defaultBookingServiceFacade = new DefaultBookingServiceFacade();
    try {
      defaultBookingServiceFacade.requestPossibleRoutesForCargo(null);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
      assertEquals("The validated object is null", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRequestPossibleRoutesForCargoTrackingIdEmpty_VjWq2() {
    DefaultBookingServiceFacade defaultBookingServiceFacade = new DefaultBookingServiceFacade();
    try {
      defaultBookingServiceFacade.requestPossibleRoutesForCargo("");
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
      assertNull(e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRequestPossibleRoutesForCargoBookingServiceNull_qpgp3_KHvM0() {
    DefaultBookingServiceFacade defaultBookingServiceFacade = new DefaultBookingServiceFacade();
    try {
      CargoRoute cargoRoute = defaultBookingServiceFacade.loadCargoForRouting(null);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }
}