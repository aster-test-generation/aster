/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_VoyageNumber_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameObject_OEVt0() {
        VoyageNumber voyageNumber = new VoyageNumber("123");
        assertEquals(true, voyageNumber.equals(voyageNumber));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsNull_Uacf1() {
        VoyageNumber voyageNumber = new VoyageNumber("123");
        assertEquals(false, voyageNumber.equals(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentClass_qJNC2() {
        VoyageNumber voyageNumber = new VoyageNumber("123");
        assertEquals(false, voyageNumber.equals(new Object()));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentObject_DVIC3() {
        VoyageNumber voyageNumber1 = new VoyageNumber("123");
        VoyageNumber voyageNumber2 = new VoyageNumber("456");
        assertEquals(false, voyageNumber1.equals(voyageNumber2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameValue_ZjRU4() {
        VoyageNumber voyageNumber1 = new VoyageNumber("123");
        VoyageNumber voyageNumber2 = new VoyageNumber("123");
        assertEquals(true, voyageNumber1.equals(voyageNumber2));
}
}