/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.tracking.web;
import java.util.ArrayList;
import java.util.List;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.eclipse.cargotracker.domain.model.cargo.RouteSpecification;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.when;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CargoTrackingViewAdapter_Test_Failing {
@Mock
    private Cargo cargo;
@Mock
    private RouteSpecification routeSpecification;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testgetTrackingId_RFQu0() {
    TrackingId trackingId = new TrackingId("expectedTrackingId");
    Cargo cargo = new Cargo(trackingId, new RouteSpecification());
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoTrackingViewAdapter cargotrackingviewadapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    String expectedTrackingId = "expectedTrackingId";
    when(cargo.getTrackingId()).thenReturn(trackingId);
    String actualTrackingId = cargotrackingviewadapter.getLastKnownLocationCode();
    assertEquals(expectedTrackingId, actualTrackingId);
}
}