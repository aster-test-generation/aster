/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal;
import java.time.LocalDate;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DefaultBookingServiceFacade_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBookNewCargoNullOrigin_yLOZ1() {
        DefaultBookingServiceFacade facade = new DefaultBookingServiceFacade();
        String origin = null;
        String destination = "destination";
        LocalDate arrivalDeadline = LocalDate.now();
        try {
            facade.bookNewCargo(origin, destination, arrivalDeadline);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRequestPossibleRoutesForCargoNullTrackingId_uRYi2_zkvs0() {
    try {
        DefaultBookingServiceFacade defaultBookingServiceFacade = new DefaultBookingServiceFacade();
        CargoRoute cargoRoute = defaultBookingServiceFacade.loadCargoForRouting(null);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
}