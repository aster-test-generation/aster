/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.internal;
import java.time.LocalDateTime;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.handling.CannotCreateHandlingEventException;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.eclipse.cargotracker.domain.model.voyage.VoyageNumber;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DefaultHandlingEventService_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegisterHandlingEventWithNullTrackingId_eJNk1() {
    DefaultHandlingEventService service = new DefaultHandlingEventService();
    LocalDateTime completionTime = LocalDateTime.now();
    TrackingId trackingId = null;
    VoyageNumber voyageNumber = new VoyageNumber("voyageNumber");
    UnLocode unLocode = new UnLocode("countryAndLocation");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
        service.registerHandlingEvent(completionTime, trackingId, voyageNumber, unLocode, type);
        fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegisterHandlingEventWithNullVoyageNumber_nogJ2() {
    DefaultHandlingEventService service = new DefaultHandlingEventService();
    LocalDateTime completionTime = LocalDateTime.now();
    TrackingId trackingId = new TrackingId("trackingId");
    VoyageNumber voyageNumber = null;
    UnLocode unLocode = new UnLocode("countryAndLocation");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
        service.registerHandlingEvent(completionTime, trackingId, voyageNumber, unLocode, type);
        fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegisterHandlingEventWithNullUnLocode_aGqw3() {
    DefaultHandlingEventService service = new DefaultHandlingEventService();
    LocalDateTime completionTime = LocalDateTime.now();
    TrackingId trackingId = new TrackingId("trackingId");
    VoyageNumber voyageNumber = new VoyageNumber("voyageNumber");
    UnLocode unLocode = null;
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
        service.registerHandlingEvent(completionTime, trackingId, voyageNumber, unLocode, type);
        fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegisterHandlingEventWithInvalidType_fnhz4() {
    DefaultHandlingEventService service = new DefaultHandlingEventService();
    LocalDateTime completionTime = LocalDateTime.now();
    TrackingId trackingId = new TrackingId("trackingId");
    VoyageNumber voyageNumber = new VoyageNumber("voyageNumber");
    UnLocode unLocode = new UnLocode("countryAndLocation");
    HandlingEvent.Type type = HandlingEvent.Type.values()[HandlingEvent.Type.values().length];
    try {
        service.registerHandlingEvent(completionTime, trackingId, voyageNumber, unLocode, type);
        fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegisterHandlingEventWithInvalidCompletionTime_CDaO6() {
    DefaultHandlingEventService service = new DefaultHandlingEventService();
    LocalDateTime completionTime = LocalDateTime.now().minusDays(1);
    TrackingId trackingId = new TrackingId("trackingId");
    VoyageNumber voyageNumber = new VoyageNumber("voyageNumber");
    UnLocode unLocode = new UnLocode("countryAndLocation");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
        service.registerHandlingEvent(completionTime, trackingId, voyageNumber, unLocode, type);
        fail("Expected CannotCreateHandlingEventException");
    } catch (CannotCreateHandlingEventException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegisterHandlingEventWithValidParameters_augN0_aleT0() {
    DefaultHandlingEventService service = new DefaultHandlingEventService();
    LocalDateTime completionTime = LocalDateTime.now();
    TrackingId trackingId = new TrackingId("trackingId");
    VoyageNumber voyageNumber = new VoyageNumber("voyageNumber");
    UnLocode unLocode = new UnLocode("countryAndLocation");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
        service.registerHandlingEvent(completionTime, trackingId, voyageNumber, unLocode, type);
    } catch (CannotCreateHandlingEventException e) {
        fail("Expected registerHandlingEvent to succeed but threw exception: " + e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegisterHandlingEventWithValidCompletionTime_NFgR5_ViYW0() {
    DefaultHandlingEventService service = new DefaultHandlingEventService();
    LocalDateTime completionTime = LocalDateTime.now().plusDays(1);
    TrackingId trackingId = new TrackingId("trackingId");
    VoyageNumber voyageNumber = new VoyageNumber("voyageNumber");
    UnLocode unLocode = new UnLocode("countryAndLocation");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
        service.registerHandlingEvent(completionTime, trackingId, voyageNumber, unLocode, type);
    } catch (CannotCreateHandlingEventException e) {
        fail("Expected registerHandlingEvent to succeed but threw " + e.getMessage());
    }
}
}