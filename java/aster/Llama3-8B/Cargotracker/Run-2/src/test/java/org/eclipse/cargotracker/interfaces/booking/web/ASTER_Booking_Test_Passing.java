/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;
import java.time.LocalDate;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Booking_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetArrivalDeadline_JdQG0() {
        Booking booking = new Booking();
        LocalDate arrivalDeadline = LocalDate.now();
        booking.setArrivalDeadline(arrivalDeadline);
        assert booking.getArrivalDeadline().equals(arrivalDeadline);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDuration_zJsz0() {
        Booking booking = new Booking();
        long expectedDuration =-1;
        long actualDuration = booking.getDuration();
        assertEquals(expectedDuration, actualDuration);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetReturnValue_rlzA0() {
        Booking booking = new Booking();
        String returnValue = booking.getReturnValue();
        assertEquals("/admin/dashboard.xhtml", returnValue);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDestinationName_LUPu0() {
        Booking booking = new Booking();
        String destinationName = booking.getDestinationName();
    assertNull(destinationName);
    }
}