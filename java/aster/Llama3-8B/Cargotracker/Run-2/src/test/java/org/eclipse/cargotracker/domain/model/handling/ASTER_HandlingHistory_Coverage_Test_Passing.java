/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.handling;
import java.util.ArrayList;
import java.util.ArrayList;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_HandlingHistory_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsNull_CBwc0() {
        HandlingHistory handlingHistory = new HandlingHistory(new ArrayList<>());
        boolean result = handlingHistory.equals(null);
        assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentClass_SVEt1() {
        HandlingHistory handlingHistory = new HandlingHistory(new ArrayList<>());
        boolean result = handlingHistory.equals(new Object());
        assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameObject_UJAo2() {
        HandlingHistory handlingHistory = new HandlingHistory(new ArrayList<>());
        boolean result = handlingHistory.equals(handlingHistory);
        assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentHandlingEvents_YFFK3() {
        HandlingHistory handlingHistory1 = new HandlingHistory(new ArrayList<>());
        HandlingHistory handlingHistory2 = new HandlingHistory(new ArrayList<>());
        boolean result = handlingHistory1.equals(handlingHistory2);
        assert !result;
}

}