/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.util;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DateConverter_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDate_sDRl0_1() {
        DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String date = "2022-01-01";
        LocalDate expected = LocalDate.parse(date, DATE_FORMATTER);
        LocalDate actual = DateConverter.toDate(date);
        assertEquals(expected, actual);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDate_sDRl0_2() {
        DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String date = "2022-01-01";
        LocalDate expected = LocalDate.parse(date, DATE_FORMATTER);
        LocalDate actual = DateConverter.toDate(date);
        assertNotNull(actual);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToDateTime_Kyjz0_wbpi0() {
    DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    String datetime = "2022-01-01";
    LocalDateTime expected = LocalDateTime.parse(datetime + " 00:00:00", DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
    String actual = DateConverter.toString(LocalDate.parse(datetime, DATE_FORMATTER));
    assertEquals(expected.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")), actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_mRiR0_dVBj0() {
    LocalDate date = LocalDate.of(2022, 1, 1);
    String expected = "2022-01-01";
    String actual = DateConverter.toString(date);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDate_sDRl0() {
        DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String date = "2022-01-01";
        LocalDate expected = LocalDate.parse(date, DATE_FORMATTER);
        LocalDate actual = DateConverter.toDate(date);
        assertEquals(expected, actual);
        assertNotNull(actual);
    }
}