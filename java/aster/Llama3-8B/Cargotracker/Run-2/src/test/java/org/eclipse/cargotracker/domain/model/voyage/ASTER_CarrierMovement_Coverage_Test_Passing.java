/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CarrierMovement_Coverage_Test_Passing {
    CarrierMovement carriermovement;
    CarrierMovement anotherCarriermovement;
    CarrierMovement nullObject;
    Object notCarrierMovementObject;
    CarrierMovement sameCarriermovement;
    CarrierMovement differentCarriermovement;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsNull_TPiB2() {
        assertEquals(false, carriermovement.equals(nullObject));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsNotCarrierMovement_xobm3() {
        assertEquals(false, carriermovement.equals(notCarrierMovementObject));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameCarrierMovement_wrbg4() {
        assertEquals(true, carriermovement.equals(sameCarriermovement));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentCarrierMovement_bwOT5() {
        assertEquals(false, carriermovement.equals(differentCarriermovement));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentObject_sywt6() {
        assertEquals(false, carriermovement.equals(new CarrierMovement()));
    }
}