/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.location;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnLocode_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSameValueAs_mpri0() {
        UnLocode unLocode1 = new UnLocode("US LAX");
        UnLocode unLocode2 = new UnLocode("US LAX");
        assertTrue(unLocode1.sameValueAs(unLocode2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameObject_yUHs0() {
        UnLocode unLocode = new UnLocode("countryAndLocation");
        assertTrue(unLocode.equals(unLocode));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsNull_NqWu1() {
        UnLocode unLocode = new UnLocode("countryAndLocation");
        assertFalse(unLocode.equals(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentClass_TjRA2() {
        UnLocode unLocode = new UnLocode("countryAndLocation");
        assertFalse(unLocode.equals("not an UnLocode"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentObject_UWoa3() {
        UnLocode unLocode1 = new UnLocode("countryAndLocation");
        UnLocode unLocode2 = new UnLocode("different countryAndLocation");
        assertFalse(unLocode1.equals(unLocode2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameValue_cwOF4() {
        UnLocode unLocode1 = new UnLocode("countryAndLocation");
        UnLocode unLocode2 = new UnLocode("countryAndLocation");
        assertTrue(unLocode1.equals(unLocode2));
}
}