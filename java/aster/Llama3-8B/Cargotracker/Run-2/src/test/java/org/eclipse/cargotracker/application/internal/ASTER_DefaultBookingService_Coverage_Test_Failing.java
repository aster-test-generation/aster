/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.internal;
import java.time.LocalDate;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DefaultBookingService_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testChangeDestinationWithValidTrackingIdAndUnLocode_ZNbb0() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        TrackingId trackingId = new TrackingId("12345");
        UnLocode unLocode = new UnLocode("US LAX");
        defaultBookingService.changeDestination(trackingId, unLocode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testChangeDestinationWithNullTrackingId_mAwp1() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        UnLocode unLocode = new UnLocode("US LAX");
        defaultBookingService.changeDestination(null, unLocode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testChangeDestinationWithNullUnLocode_Ufau2() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        TrackingId trackingId = new TrackingId("12345");
        defaultBookingService.changeDestination(trackingId, null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testChangeDestinationWithInvalidTrackingId_TbfJ3() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        TrackingId trackingId = new TrackingId("InvalidTrackingId");
        UnLocode unLocode = new UnLocode("US LAX");
        defaultBookingService.changeDestination(trackingId, unLocode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testChangeDestinationWithInvalidUnLocode_UktA4() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        TrackingId trackingId = new TrackingId("12345");
        UnLocode unLocode = new UnLocode("InvalidUnLocode");
        defaultBookingService.changeDestination(trackingId, unLocode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testChangeDestinationWithMultipleCalls_bYGX8() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        TrackingId trackingId = new TrackingId("12345");
        UnLocode unLocode = new UnLocode("US LAX");
        defaultBookingService.changeDestination(trackingId, unLocode);
        defaultBookingService.changeDestination(trackingId, unLocode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testChangeDestinationWithDifferentUnLocode_CLoq9() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        TrackingId trackingId = new TrackingId("12345");
        UnLocode unLocode1 = new UnLocode("US LAX");
        UnLocode unLocode2 = new UnLocode("US JFK");
        defaultBookingService.changeDestination(trackingId, unLocode1);
        defaultBookingService.changeDestination(trackingId, unLocode2);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testChangeDestinationWithDifferentTrackingId_rbEj10() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        TrackingId trackingId1 = new TrackingId("12345");
        TrackingId trackingId2 = new TrackingId("67890");
        UnLocode unLocode = new UnLocode("US LAX");
        defaultBookingService.changeDestination(trackingId1, unLocode);
        defaultBookingService.changeDestination(trackingId2, unLocode);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBookNewCargo_WithValidInputs_ZcdO0() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        UnLocode originUnLocode = new UnLocode("US LAX");
        UnLocode destinationUnLocode = new UnLocode("US JFK");
        LocalDate arrivalDeadline = LocalDate.now();
        TrackingId trackingId = defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, arrivalDeadline);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBookNewCargo_WithNullOriginUnLocode_TOMt1() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        UnLocode destinationUnLocode = new UnLocode("US JFK");
        LocalDate arrivalDeadline = LocalDate.now();
        try {
            defaultBookingService.bookNewCargo(null, destinationUnLocode, arrivalDeadline);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBookNewCargo_WithNullDestinationUnLocode_tzQZ2() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        UnLocode originUnLocode = new UnLocode("US LAX");
        LocalDate arrivalDeadline = LocalDate.now();
        try {
            defaultBookingService.bookNewCargo(originUnLocode, null, arrivalDeadline);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBookNewCargo_WithNullArrivalDeadline_prFZ3() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        UnLocode originUnLocode = new UnLocode("US LAX");
        UnLocode destinationUnLocode = new UnLocode("US JFK");
        try {
            defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBookNewCargo_WithInvalidOriginUnLocode_jtiX4() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        UnLocode originUnLocode = new UnLocode("Invalid UnLocode");
        UnLocode destinationUnLocode = new UnLocode("US JFK");
        LocalDate arrivalDeadline = LocalDate.now();
        try {
            defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, arrivalDeadline);
            fail("Expected Exception");
        } catch (Exception e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBookNewCargo_WithInvalidDestinationUnLocode_Npku5() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        UnLocode originUnLocode = new UnLocode("US LAX");
        UnLocode destinationUnLocode = new UnLocode("Invalid UnLocode");
        LocalDate arrivalDeadline = LocalDate.now();
        try {
            defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, arrivalDeadline);
            fail("Expected Exception");
        } catch (Exception e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBookNewCargo_WithInvalidArrivalDeadline_UBBw6() {
        DefaultBookingService defaultBookingService = new DefaultBookingService();
        UnLocode originUnLocode = new UnLocode("US LAX");
        UnLocode destinationUnLocode = new UnLocode("US JFK");
        LocalDate arrivalDeadline = null;
        try {
            defaultBookingService.bookNewCargo(originUnLocode, destinationUnLocode, arrivalDeadline);
            fail("Expected Exception");
        } catch (Exception e) {
        }
}
}