/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;
import java.util.ArrayList;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_Itinerary_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameObject_NfFB0() {
        Itinerary itinerary = new Itinerary(new ArrayList<>());
        boolean result = itinerary.equals(itinerary);
        assert result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsNull_KwEz1() {
        Itinerary itinerary = new Itinerary(new ArrayList<>());
        boolean result = itinerary.equals(null);
        assert !result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsDifferentObject_DkbT2() {
        Itinerary itinerary1 = new Itinerary(new ArrayList<>());
        Itinerary itinerary2 = new Itinerary(new ArrayList<>());
        boolean result = itinerary1.equals(itinerary2);
        assert !result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsSameObjectWithSameLegs_iWmE3() {
        Itinerary itinerary1 = new Itinerary(new ArrayList<>());
        Itinerary itinerary2 = new Itinerary(new ArrayList<>());
        boolean result = itinerary1.equals(itinerary2);
        assert result;
    }
}