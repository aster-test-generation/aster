/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.rest;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_HandlingReport_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUnLocode_DMZR0() {
        HandlingReport handlingReport = new HandlingReport();
        String expected = "expectedUnLocode";
        String actual = handlingReport.getUnLocode();
    assertNull(expected);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUnLocode_DMZR0_fid1() {
        HandlingReport handlingReport = new HandlingReport();
        String expected = "expectedUnLocode";
        String actual = handlingReport.getUnLocode();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetTrackingId_DTuR0_fid1() {
        HandlingReport handlingReport = new HandlingReport();
        String trackingId = handlingReport.getTrackingId();
        assertEquals("Expected trackingId", trackingId, "");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCompletionTime_aHBk0_fid1() {
        HandlingReport handlingReport = new HandlingReport();
        String result = handlingReport.getCompletionTime();
        assertEquals("Expected result", result);
    }
}