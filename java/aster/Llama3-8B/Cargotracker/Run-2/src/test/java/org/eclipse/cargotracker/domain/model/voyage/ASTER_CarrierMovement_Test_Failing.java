/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;
import java.time.LocalDateTime;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.when;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CarrierMovement_Test_Failing {
@Mock
    private UnLocode unLocode;
@Mock
    private CarrierMovement carriermovement;
@Mock
    private CarrierMovement anotherCarrierMovement;
private LocalDateTime arrivalTime;
@Mock
    private LocalDateTime departureTime;
private CarrierMovement carrierMovement;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_BoXm0() {
    UnLocode unLocode = new UnLocode("countryAndLocation");
    Location departureLocation = new Location(unLocode, "departureLocation");
    Location arrivalLocation = new Location(unLocode, "arrivalLocation");
    LocalDateTime departureTime = LocalDateTime.now();
    LocalDateTime arrivalTime = LocalDateTime.now();
    carrierMovement = new CarrierMovement(departureLocation, arrivalLocation, departureTime, arrivalTime);
    when(departureLocation.hashCode()).thenReturn(1);
    when(arrivalLocation.hashCode()).thenReturn(2);
    when(departureTime.hashCode()).thenReturn(3);
    when(arrivalTime.hashCode()).thenReturn(4);
    int result = carrierMovement.hashCode();
    assertEquals(1234, result);
}
}