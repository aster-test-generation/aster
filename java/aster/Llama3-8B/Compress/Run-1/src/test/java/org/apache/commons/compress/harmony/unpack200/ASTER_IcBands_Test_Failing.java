/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.io.IOException;
import java.io.InputStream;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_IcBands_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadWithInnerClassCount_rTbe1_EWYN0() throws IOException, Pack200Exception {
    IcBands icBands = new IcBands(new Segment());
    InputStream in = new java.io.ByteArrayInputStream(new byte[0]);
    icBands.read(in);
    assert icBands.getRelevantIcTuples("className", new ClassConstantPool()) != null;
}
}