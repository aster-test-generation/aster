/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.gzip;
import java.io.IOException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_GzipCompressorInputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMetaData_uuNu0() throws IOException {
        GzipCompressorInputStream gzipCompressorInputStream = new GzipCompressorInputStream(new java.io.ByteArrayInputStream(new byte[0]), true);
        GzipParameters metaData = gzipCompressorInputStream.getMetaData();
        assert metaData.getCompressionLevel() == 0;
        assert metaData.getModificationTime() == 0;
        assert metaData.getFileName() == null;
        assert metaData.getFilename() == null;
        assert metaData.getOperatingSystem() == 0;
        assert metaData.getDeflateStrategy() == 0;
        assert metaData.getBufferSize() == 0;
        assert metaData.getComment() == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCloseWithNullInputStream_dxBz0() throws IOException {
        GzipCompressorInputStream gzipCompressorInputStream = new GzipCompressorInputStream(null, false);
        gzipCompressorInputStream.close();
    }
}