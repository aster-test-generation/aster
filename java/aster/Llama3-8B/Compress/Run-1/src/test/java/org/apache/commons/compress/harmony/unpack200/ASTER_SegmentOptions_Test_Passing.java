/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentOptions_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFieldFlagsHiFalse_dXWy1_fEui1() throws Pack200Exception {
    SegmentOptions segmentOptions = new SegmentOptions(0);
    boolean result = segmentOptions.hasFileModtime();
    assert(result == false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasCPNumberCountsFalse_UHZb1_PjzL0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileModtime();
        assert !result;
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasClassFlagsHiFalse_VjYZ1_QdYS0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileModtime();
        assert(!result);
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasCodeFlagsHiFalse_NkuE1_AIkO0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileModtime();
        assert result == false;
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFileModtimeFalse_rzEv1_DOWH1() throws Pack200Exception {
    SegmentOptions segmentOptions = new SegmentOptions(0);
    boolean result = segmentOptions.hasFileModtime();
    assert result == false;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasArchiveFileCountsTrue_gRuh0_eAsi0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileModtime();
        assert(result == false);
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFileOptionsTrue_Tryz0_GSqo0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(1);
    } catch (Pack200Exception e) {
        fail("Pack200Exception was thrown, but it should not");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFileOptionsFalse_wsyH3_jxrh0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        assertFalse(segmentOptions.hasFileModtime());
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
}