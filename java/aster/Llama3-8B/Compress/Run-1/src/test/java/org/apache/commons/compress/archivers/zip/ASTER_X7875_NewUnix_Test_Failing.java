/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_X7875_NewUnix_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsDifferentObject_AwpJ2() {
    X7875_NewUnix obj1 = new X7875_NewUnix();
    X7875_NewUnix obj2 = new X7875_NewUnix();
    boolean result = obj1.equals(obj2);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGID_XTcT0() {
        X7875_NewUnix obj = new X7875_NewUnix();
        long l = 1234567890L;
        obj.setGID(l);
        assertEquals(ZipUtil.longToBig(l), obj.getGID());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_lejo0() {
        X7875_NewUnix obj = new X7875_NewUnix();
        int hash = obj.hashCode();
        assertEquals(0, hash);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTrimLeadingZeroesForceMinLengthEmptyArray_ehnk1() {
        byte[] array = new byte[0];
        byte[] result = X7875_NewUnix.trimLeadingZeroesForceMinLength(array);
        assertArrayEquals(new byte[0], result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_Tdrj0_cUss0() {
    X7875_NewUnix obj = new X7875_NewUnix();
    String expected = "0x7875 Zip Extra Field: UID=" + obj.getLocalFileDataData().toString() + " GID=" + obj.getLocalFileDataData().toString();
    assertEquals(expected, obj.toString());
}
}