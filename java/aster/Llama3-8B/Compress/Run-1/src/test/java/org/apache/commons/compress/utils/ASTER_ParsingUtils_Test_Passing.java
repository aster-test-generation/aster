/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ParsingUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseLongValueInvalidInput_glWC1() {
        try {
            ParsingUtils.parseLongValue("abc");
            assertEquals(false, true); // This will fail the test
        } catch (IOException e) {
            assertEquals(true, true); // This will pass the test
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseIntValueValidInput_gjod0() {
        try {
            int result = ParsingUtils.parseIntValue("123", 10);
            assert result == 123;
        } catch (IOException e) {
            assert false;
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseIntValueInvalidInput_CCPK1() {
        assertThrows(IOException.class, () -> ParsingUtils.parseIntValue("abc", 10));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseLongValueInvalidInput_fTTM1() {
        assertThrows(IOException.class, () -> ParsingUtils.parseLongValue("abc", 10));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseLongValue_zoct0_PrRz0() {
    try {
        long result = ParsingUtils.parseLongValue("123", 10);
        assertEquals(123L, result);
    } catch (IOException e) {
        fail("IOException was not expected to be thrown");
    }
}
}