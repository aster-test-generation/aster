/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200UnpackerAdapter_Test_Passing {
@Test
public void testNewBoundedInputStream_aHPb0_gdUt0_1() throws IOException {
    Path path = Files.createTempFile("test", ".tmp");
    InputStream inputStream = new Pack200UnpackerAdapter().unwrap(Files.newInputStream(path));
    try {
        long size = Files.size(path);
        int available = 0;
        byte[] buffer = new byte[1024];
        while ((available = inputStream.read(buffer)) != -1) {
            size -= available;
        }
    } finally {
        inputStream.close();
    }
    assertNotNull(inputStream);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUnpackNullFile_qBmZ0_RXts0() {
    Pack200UnpackerAdapter adapter = new Pack200UnpackerAdapter();
    try {
        InputStream inputStream = adapter.unwrap(null);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUnpackNullOutputStream_sjyy1_GQWN1() {
    Pack200UnpackerAdapter adapter = new Pack200UnpackerAdapter();
    try {
        adapter.unwrap(null);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFileInputStreamInstance_urMa2_NHly1() throws IOException {
    FileInputStream fileInputStream = new FileInputStream(new File("test.txt"));
    InputStream result = Pack200UnpackerAdapter.unwrap(fileInputStream);
    assert result instanceof InputStream;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNormalInputStreamInstance_VbeY3_QFvM0() throws IOException {
    InputStream inputStream = new java.io.ByteArrayInputStream(new byte[0]);
    InputStream result = Pack200UnpackerAdapter.unwrap(inputStream);
    assert result instanceof InputStream;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUnwrapInputStream_ZqnJ1_scLO0() {
    java.io.ByteArrayInputStream inputStream = new java.io.ByteArrayInputStream(new byte[0]);
    InputStream result = Pack200UnpackerAdapter.unwrap(inputStream);
    assert result == inputStream;
}
}