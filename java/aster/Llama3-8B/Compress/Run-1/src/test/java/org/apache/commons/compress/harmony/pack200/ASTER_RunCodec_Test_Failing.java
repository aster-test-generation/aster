/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RunCodec_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBCodec_eTjJ0_XCBv0() {
    try {
        RunCodec runCodec = new RunCodec(1, new BHSDCodec(1, 2), new BHSDCodec(1, 2));
        Codec result = runCodec.getBCodec();
        assertEquals(BHSDCodec.class, result.getClass());
    } catch (Pack200Exception e) {
        fail("Should not throw Pack200Exception");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithThreeParams_PjTO0_hTAL0() {
    int k = 5;
    BHSDCodec aCodec = new BHSDCodec(1, 2, 3, 4);
    BHSDCodec bCodec = new BHSDCodec(5, 6, 7, 8);
    try {
        RunCodec runCodec = new RunCodec(k, aCodec, bCodec);
        assertEquals("RunCodec[k=5;aCodec=BHSDCodec[b=1;h=2;s=3;d=4];bCodec=BHSDCodec[b=5;h=6;s=7;d=8];", runCodec.toString());
    } catch (Pack200Exception e) {
        fail("Expected no exception, but got " + e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithTwoParams_bIlI1_qMoi0() {
    int k = 5;
    BHSDCodec aCodec = new BHSDCodec(1, 2, 3);
    BHSDCodec bCodec = new BHSDCodec(5, 6, 7);
    try {
        RunCodec runCodec = new RunCodec(k, aCodec, bCodec);
        assertEquals("RunCodec[k=5;aCodec=BHSDCodec[b=1;h=2;s=3];bCodec=BHSDCodec[b=5;h=6;s=7];", runCodec.toString());
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
}