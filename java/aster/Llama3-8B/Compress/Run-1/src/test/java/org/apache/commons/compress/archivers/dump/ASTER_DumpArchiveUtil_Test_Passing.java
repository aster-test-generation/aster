/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.dump;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DumpArchiveUtil_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetIno_oEon1() {
        byte[] buffer = new byte[32];
        int result = DumpArchiveUtil.getIno(buffer);
        assertEquals(0, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testConvert16_ugIx1() {
        byte[] buffer = new byte[] {(byte) 0x01, (byte) 0x02};
        int result = DumpArchiveUtil.convert16(buffer, 0);
        assertEquals(0x0201, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDecodeInvalidOffsetLength_cADZ1_HoJk0() throws IOException {
    byte[] b = new byte[] {1, 2, 3, 4, 5};
    try {
        DumpArchiveUtil.verify(b);
        assert false;
    } catch (Exception e) {
        assert true;
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testVerifyInvalidDumpArchive_abTn1_Zdiz1() {
    byte[] buffer = new byte[32];
    buffer[24] = (byte) 0;
    assert !DumpArchiveUtil.verify(buffer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testVerifyNullDumpArchive_OKtv2_xUbi0() {
    byte[] buffer = null;
    boolean result = DumpArchiveUtil.verify(buffer);
    assert !result;
}
}