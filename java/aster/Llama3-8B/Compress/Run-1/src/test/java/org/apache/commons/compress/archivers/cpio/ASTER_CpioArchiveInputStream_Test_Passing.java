/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.cpio;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CpioArchiveInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature5_vmKr4() {
    byte[] signature = new byte[] {0x30, 0x37, 0x30, 0x37, 0x30, 0x31};
    boolean result = CpioArchiveInputStream.matches(signature, 6);
    assert(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature6_mzXp5() {
    byte[] signature = new byte[] {0x30, 0x37, 0x30, 0x37, 0x30, 0x32};
    boolean result = CpioArchiveInputStream.matches(signature, 6);
    assert(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature7_yxxZ6() {
    byte[] signature = new byte[] {0x30, 0x37, 0x30, 0x37, 0x30, 0x37};
    boolean result = CpioArchiveInputStream.matches(signature, 6);
    assert(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature8_ZOOy7() {
    byte[] signature = new byte[] {0x30, 0x37, 0x30, 0x37, 0x30, 0x38};
    boolean result = CpioArchiveInputStream.matches(signature, 6);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature9_RWMw8() {
    byte[] signature = new byte[] {0x30, 0x36, 0x30, 0x37, 0x30, 0x31};
    boolean result = CpioArchiveInputStream.matches(signature, 6);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature10_OukV9() {
    byte[] signature = new byte[] {0x30, 0x37, 0x30, 0x37, 0x30, 0x30};
    boolean result = CpioArchiveInputStream.matches(signature, 6);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature11_AoQp10() {
    byte[] signature = new byte[] {0x31, 0x37, 0x30, 0x37, 0x30, 0x31};
    boolean result = CpioArchiveInputStream.matches(signature, 6);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature12_xEWm11() {
    byte[] signature = new byte[] {0x30, 0x37, 0x30, 0x37, 0x30, 0x39};
    boolean result = CpioArchiveInputStream.matches(signature, 6);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature13_Caxw12() {
    byte[] signature = new byte[] {0x30, 0x37, 0x30, 0x37, 0x30};
    boolean result = CpioArchiveInputStream.matches(signature, 5);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignature14_fiCb13() {
    byte[] signature = new byte[] {0x30, 0x37, 0x30, 0x37};
    boolean result = CpioArchiveInputStream.matches(signature, 4);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNextCPIOEntryNullInputStream_vTRa6() throws IOException {
    CpioArchiveInputStream cpioArchiveInputStream = new CpioArchiveInputStream(null, 1024);
    try {
        cpioArchiveInputStream.getNextCPIOEntry();
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNextCPIOEntryNullInputStream2_wDmn7() throws IOException {
    CpioArchiveInputStream cpioArchiveInputStream = null;
    try {
        cpioArchiveInputStream.getNextCPIOEntry();
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
}