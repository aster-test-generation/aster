/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AttributeLayoutMap_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCheckMap_SameLayoutNameCombinationExistsTwice_zvpB0_Aiyr0() throws Pack200Exception {
    AttributeLayoutMap attributeLayoutMap = new AttributeLayoutMap();
    Map<Integer, AttributeLayout> map = new HashMap<>();
    AttributeLayout layout1 = new AttributeLayout("layout1", 1, "name1", 1);
    AttributeLayout layout2 = new AttributeLayout("layout1", 1, "name1", 2, true);
    map.put(1, layout1);
    map.put(2, layout2);
    attributeLayoutMap.add(layout1);
    attributeLayoutMap.add(layout2);
    attributeLayoutMap.checkMap();
}
}