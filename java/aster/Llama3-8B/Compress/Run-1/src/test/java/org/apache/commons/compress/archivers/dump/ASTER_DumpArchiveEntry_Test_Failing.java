/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.dump;
import java.util.Date;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import java.util.Date;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DumpArchiveEntry_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate1_rIGC0() {
    DumpArchiveEntry entry = new DumpArchiveEntry("name", "simpleName");
    byte[] buffer = new byte[512];
    buffer[16] = 1;
    buffer[160] = 1;
    for (int i = 0; i < 512 && i < 1; i++) {
        buffer[164 + i] = 0;
    }
    entry.update(buffer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSparseRecordFalse_yzjl1() {
        DumpArchiveEntry dumpArchiveEntry = new DumpArchiveEntry("name", "simpleName");
        boolean result = dumpArchiveEntry.isSparseRecord(0);
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_OugG0() {
        DumpArchiveEntry entry = new DumpArchiveEntry("name", "simpleName");
        int result = entry.hashCode();
        assert result != 0;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderCount_USpQ0_EWSF0_2() {
    DumpArchiveEntry dumpArchiveEntry = new DumpArchiveEntry("name", "simpleName");
    Date result = dumpArchiveEntry.getAccessTime();
    org.junit.Assert.assertNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetType_THma0_bVvT0() {
    DumpArchiveEntry dumpArchiveEntry = new DumpArchiveEntry("name", "simpleName");
    assertEquals(DumpArchiveEntry.TYPE.WHITEOUT, dumpArchiveEntry.getType());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsFile_TRUE_FhMR0_uYyR1() {
    DumpArchiveEntry dumpArchiveEntry = new DumpArchiveEntry("name", "simpleName");
    boolean result = dumpArchiveEntry.isFile();
    assert(result == true);
}
}