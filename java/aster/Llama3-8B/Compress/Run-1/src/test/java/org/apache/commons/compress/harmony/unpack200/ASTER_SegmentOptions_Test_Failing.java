/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentOptions_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFieldFlagsHiTrue_NRno0_GjVB0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFileModtime();
        assert(result == true);
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasCPNumberCountsTrue_HczK0_HNZW0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFileModtime();
        assert result;
    } catch (Pack200Exception e) {
        fail("Pack200Exception was thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasClassFlagsHiTrue_bRyg0_csDF0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(1 << 1);
        boolean result = segmentOptions.hasFileModtime();
        assert(result);
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFileSizeHiTrue_LlAE0_qftK0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFileModtime();
        assert(result == true);
    } catch (Pack200Exception e) {
        assert(false);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasCodeFlagsHiTrue_bDqU0_EdeV0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFileModtime();
        assert result == true;
    } catch (Pack200Exception e) {
        assert false : "Should not throw Pack200Exception";
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasAllCodeFlagsTrue_rQVG0_HBvm0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileModtime();
        assert(result);
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasMethodFlagsHiTrue_fdUI0_SHVe0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(1 << 8);
        boolean result = segmentOptions.hasFileModtime();
        assert result == true;
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasMethodFlagsHiTrue_kVxO2_bLbc0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions((int) (1 << 8));
        boolean result = segmentOptions.hasFileModtime();
        assert result;
    } catch (Pack200Exception e) {
        throw new RuntimeException(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFileModtimeTrue_GHIm0_adqb0() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions((int) (1 << 1));
        boolean result = segmentOptions.hasFileModtime();
        assert result == true;
    } catch (Pack200Exception e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFileOptionsTrue_Tryz0_GSqo0_fid1() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        assertTrue(segmentOptions.hasFileModtime());
    } catch (Pack200Exception e) {
        fail("Pack200Exception was thrown, but it should not");
    }
}
}