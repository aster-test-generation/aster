/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.fail;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarFile_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInputStream2_HzQo1_fwfg0() throws IOException {
    byte[] content = new byte[1024];
    TarFile tarFile = new TarFile(content, true);
    List<TarArchiveEntry> entries = tarFile.getEntries();
    TarArchiveEntry entry = null;
    for (TarArchiveEntry e : entries) {
        if (e.getName().equals("entry_name")) {
            entry = e;
            break;
        }
    }
    assert entry != null;
    InputStream inputStream = tarFile.getInputStream(entry);
    assert inputStream != null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsAtEOF2_QtxZ1_vRLs1_fid1() {
    try {
        TarFile tarFile = new TarFile(new byte[0], true);
        assertFalse(tarFile.isAtEOF());
    } catch (IOException e) {
        fail("IOException was thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsAtEOF5_iQcM4_MvHU0_fid1() {
    try {
        TarFile tarFile = new TarFile(new File("file"), true);
        assertFalse(tarFile.isAtEOF());
    } catch (IOException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsAtEOF7_wXlf6_dAvL0_fid1() {
    try {
        TarFile tarFile = new TarFile(new File("file"), true);
        assertFalse(tarFile.isAtEOF());
    } catch (IOException e) {
        fail("IOException was expected");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsAtEOF8_zxAW7_FNdw1_fid1() {
    try {
        TarFile tarFile = new TarFile(new File("file"));
        assertFalse(tarFile.isAtEOF());
    } catch (IOException e) {
        fail("IOException was expected");
    }
}
}