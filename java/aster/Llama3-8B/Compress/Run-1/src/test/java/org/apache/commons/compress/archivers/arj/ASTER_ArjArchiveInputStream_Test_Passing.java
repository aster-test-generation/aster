/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.arj;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ArjArchiveInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesInvalidLength_yFkz1() {
    byte[] signature = new byte[] {(byte) 0x1a, (byte) 0x07};
    boolean result = ArjArchiveInputStream.matches(signature, 1);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesInvalidMagic1_dkaE2() {
    byte[] signature = new byte[] {(byte) 0x1b, (byte) 0x07};
    boolean result = ArjArchiveInputStream.matches(signature, 2);
    assert(!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesInvalidMagic2_EtMR3() {
    byte[] signature = new byte[] {(byte) 0x1a, (byte) 0x08};
    boolean result = ArjArchiveInputStream.matches(signature, 2);
    assert(!result);
}
}