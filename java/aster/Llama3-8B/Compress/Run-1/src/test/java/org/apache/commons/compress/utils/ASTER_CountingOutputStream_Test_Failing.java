/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CountingOutputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_luXd0_JKxc0() throws IOException {
    java.io.ByteArrayOutputStream out = new java.io.ByteArrayOutputStream();
    CountingOutputStream countingOutputStream = new CountingOutputStream(out);
    byte[] b = new byte[] {1, 2, 3};
    countingOutputStream.write(b, 0, b.length);
    assert out.toByteArray().equals(new byte[] {1, 2, 3});
    countingOutputStream.count(out.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesWritten_zSKp0_iEBR1_fid3() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    CountingOutputStream cout = new CountingOutputStream(bos);
    cout.write("Hello".getBytes());
    cout.write("World".getBytes());
    assertEquals(12, cout.getBytesWritten());
}
}