/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import java.io.File;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CLI_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithNoArguments_hSwT0_BJXm1() {
    String[] args = new String[0];
    try {
        CLI.main(args);
    } catch (Exception e) {
        fail("Exception was thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithOneArgumentFileDoesNotExist_PuIa2_NYOP0() {
    String[] args = new String[] {"test"};
    try {
        CLI.main(args);
        fail("Expected an exception");
    } catch (Exception e) {
        assertEquals("Is a directory", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithOneArgumentFileIsDirectory_qXkU3_pbMu0() {
    String[] args = new String[] {"test"};
    File file = new File("test");
    file.mkdirs();
    try {
        CLI.main(args);
    } catch (Exception e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithTwoArgumentsFileDoesNotExist_zXNn5_KeDo0() {
    String[] args = new String[] {"test", "list"};
    try {
        CLI.main(args);
    } catch (Exception e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithNoArguments_LSAD0_ZtWB0() {
    String[] args = new String[0];
    try {
        CLI.main(args);
    } catch (Exception e) {
        assertEquals("Usage: java -jar cli.jar [mode] [file]\n", e.getMessage());
    }
}
}