/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ResourceAlignmentExtraField_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAllowMethodChange1_HUNN0() {
    ResourceAlignmentExtraField rf = new ResourceAlignmentExtraField(1, true);
    boolean result = rf.allowMethodChange();
    assert(result == true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAllowMethodChange2_SfId1() {
    ResourceAlignmentExtraField rf = new ResourceAlignmentExtraField(1);
    boolean result = rf.allowMethodChange();
    assert(result == false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAllowMethodChange3_bfVc2() {
    ResourceAlignmentExtraField rf = new ResourceAlignmentExtraField();
    boolean result = rf.allowMethodChange();
    assert(result == false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAllowMethodChange4_nvov3() {
    ResourceAlignmentExtraField rf = new ResourceAlignmentExtraField(1, true, 1);
    boolean result = rf.allowMethodChange();
    assert(result == true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryDataWithAlignmentAndAllowMethodChange_xhst0() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true);
    byte[] result = resourceAlignmentExtraField.getCentralDirectoryData();
    assert result != null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryDataWithoutAlignmentAndAllowMethodChange_kkTw1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField();
    byte[] result = resourceAlignmentExtraField.getCentralDirectoryData();
    assert result != null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLocalFileDataLengthWithPadding_lEnA1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true, 2);
        ZipShort zipShort = resourceAlignmentExtraField.getLocalFileDataLength();
        assertEquals(new ZipShort(4).getValue(), zipShort.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCentralDirectoryLength_KnHI1() {
        ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1);
        ZipShort zipShort = resourceAlignmentExtraField.getCentralDirectoryLength();
        assertEquals(new ZipShort(2).getValue(), zipShort.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData3_IiId2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(0x1234, true, 0);
    try {
        resourceAlignmentExtraField.parseFromCentralDirectoryData(new byte[0], 0, 1);
        fail("ZipException expected");
    } catch (ZipException e) {
        assertEquals("Too short content for ResourceAlignmentExtraField (0xa11e): 1", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithAlignmentAndAllowMethodChange_oPbz0() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10, true);
    short alignment = resourceAlignmentExtraField.getAlignment();
    assertEquals((short)10, alignment);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithAlignment_AHio1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10);
    short alignment = resourceAlignmentExtraField.getAlignment();
    assertEquals((short)10, alignment);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithoutParameters_XPSC2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField();
    short alignment = resourceAlignmentExtraField.getAlignment();
    assertEquals((short)0, alignment);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithAlignmentAndAllowMethodChangeAndPadding_yBQA3() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10, true, 5);
    short alignment = resourceAlignmentExtraField.getAlignment();
    assertEquals((short)10, alignment);
}
}