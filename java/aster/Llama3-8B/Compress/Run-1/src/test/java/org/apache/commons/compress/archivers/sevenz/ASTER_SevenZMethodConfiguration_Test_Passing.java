/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SevenZMethodConfiguration_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsSameObject_fuZN0() {
    SevenZMethodConfiguration obj1 = new SevenZMethodConfiguration(SevenZMethod.LZMA);
    boolean result = obj1.equals(obj1);
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsNull_iFEk1() {
    SevenZMethodConfiguration obj1 = new SevenZMethodConfiguration(SevenZMethod.LZMA);
    boolean result = obj1.equals(null);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsDifferentClass_vvjM2() {
    SevenZMethodConfiguration obj1 = new SevenZMethodConfiguration(SevenZMethod.LZMA);
    boolean result = obj1.equals(new Object());
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsDifferentMethod_OVnN3() {
    SevenZMethodConfiguration obj1 = new SevenZMethodConfiguration(SevenZMethod.LZMA);
    SevenZMethodConfiguration obj2 = new SevenZMethodConfiguration(SevenZMethod.DEFLATE);
    boolean result = obj1.equals(obj2);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionsWithMethod_MMuq1() {
        SevenZMethod method = SevenZMethod.LZMA;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        Object result = configuration.getOptions();
        assertEquals(null, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_anMg0() {
        SevenZMethod method = SevenZMethod.LZMA;
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(method);
        assertEquals(method, configuration.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_NullMethod_YiPh0() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(null);
    int result = config.hashCode();
    Assertions.assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_NonNullMethod_nLJQ1() {
    SevenZMethod method = SevenZMethod.LZMA;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    int result = config.hashCode();
    Assertions.assertEquals(method.hashCode(), result);
}
}