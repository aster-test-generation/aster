/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.pack200;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Map;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200CompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_amsl0_kFEs0() throws IOException {
    Pack200Strategy mode = Pack200Strategy.IN_MEMORY;
    Map<String, String> props = new HashMap<>();
    OutputStream out = new java.io.ByteArrayOutputStream();
    Pack200CompressorOutputStream compressorOutputStream = new Pack200CompressorOutputStream(out, mode, props);
    byte[] b = new byte[10];
    compressorOutputStream.write(b);
    assert compressorOutputStream != null;
}
}