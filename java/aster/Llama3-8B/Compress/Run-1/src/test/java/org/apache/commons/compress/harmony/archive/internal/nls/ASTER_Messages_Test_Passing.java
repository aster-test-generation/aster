/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.archive.internal.nls;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Messages_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetStringBundleNull_xsfS1() {
        String result = Messages.getString("msg");
        assertEquals("msg", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_bbyM1() {
        String result = Messages.getString("Hello {0}", "World");
        assertEquals("Hello World", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_NAoX0() {
        String result = Messages.getString("Hello {0} {1}", "John", "Doe");
        assertEquals("Hello John Doe", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetStringBundleNotNull_aDOo0() {
        String msg = "msg";
        Object[] args = new Object[]{"arg1", "arg2"};
        String result = Messages.getString(msg, args);
        assertEquals(msg, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_tMkl1_fid1() {
        String result = Messages.getString("Hello %c", 'a');
        assertEquals("Hello %c", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat1_OZvg0_fid1() {
        assertEquals("Hello World!", Messages.format("Hello World!", new Object[] {"World"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat2_elmj1_fid1() {
        assertEquals("Hello World! Java", Messages.format("Hello World! Java", new Object[] {"World", "Java"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat3_QBII2_fid1() {
        assertEquals("Hello World! Java Programming", Messages.format("Hello World! Java Programming", new Object[] {"World", "Java", "Programming"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat4_fHqq3_fid1() {
        assertEquals("Hello World! Java Programming Language", Messages.format("Hello World! Java Programming Language", new Object[] {"World", "Java", "Programming", "Language"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat5_WnxK4_fid1() {
        assertEquals("Hello World! Java Programming Language Framework", Messages.format("Hello World! Java Programming Language Framework", new Object[] {"World", "Java", "Programming", "Language", "Framework"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat6_hUUM5_fid1() {
        assertEquals("Hello World! Java Programming Language Framework Development", Messages.format("Hello World! Java Programming Language Framework Development", new Object[] {"World", "Java", "Programming", "Language", "Framework", "Development"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat7_nAqp6_fid1() {
        assertEquals("Hello World! Java Programming Language Framework Development Testing", Messages.format("Hello World! Java Programming Language Framework Development Testing", new Object[] {"World", "Java", "Programming", "Language", "Framework", "Development", "Testing"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat8_AcZI7_fid1() {
        assertEquals("Hello World! Java Programming Language Framework Development Testing Debugging", Messages.format("Hello World! Java Programming Language Framework Development Testing Debugging", new Object[] {"World", "Java", "Programming", "Language", "Framework", "Development", "Testing", "Debugging"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat9_TMsS8_fid1() {
        assertEquals("Hello World! Java Programming Language Framework Development Testing Debugging Deployment", Messages.format("Hello World! Java Programming Language Framework Development Testing Debugging Deployment", new Object[] {"World", "Java", "Programming", "Language", "Framework", "Development", "Testing", "Debugging", "Deployment"}));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormat10_OBYw9_fid1() {
        assertEquals("Hello World! Java Programming Language Framework Development Testing Debugging Deployment Maintenance", Messages.format("Hello World! Java Programming Language Framework Development Testing Debugging Deployment Maintenance", new Object[] {"World", "Java", "Programming", "Language", "Framework", "Development", "Testing", "Debugging", "Deployment", "Maintenance"}));
    }
}