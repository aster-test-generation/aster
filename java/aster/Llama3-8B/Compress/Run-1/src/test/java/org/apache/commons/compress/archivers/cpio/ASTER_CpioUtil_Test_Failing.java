/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.cpio;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CpioUtil_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2longNormalCase_JXlu0() {
        byte[] number = {0x12, 0x34, 0x56, 0x78};
        long result = CpioUtil.byteArray2long(number, false);
        assertEquals(0x12345678, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2longSwapHalfWord_URmB1() {
        byte[] number = {0x12, 0x34, 0x56, 0x78};
        long result = CpioUtil.byteArray2long(number, true);
        assertEquals(0x78563412, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2longEmpty_yAJd4() {
        byte[] number = new byte[0];
        try {
            CpioUtil.byteArray2long(number, false);
            assertEquals(false, true);
        } catch (UnsupportedOperationException e) {
            assertEquals(true, true);
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2ByteArray_Kmpe0() {
        byte[] result = CpioUtil.long2byteArray(1, 2, false);
        byte[] expected = new byte[] {(byte) 0x00, (byte) 0x01};
        assertArrayEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2ByteArraySwapHalfWord_rige1() {
        byte[] result = CpioUtil.long2byteArray(1, 2, true);
        byte[] expected = new byte[] {(byte) 0x01, (byte) 0x00};
        assertArrayEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2ByteArrayLongValue1_NaIO5() {
        byte[] result = CpioUtil.long2byteArray(1, 4, false);
        byte[] expected = new byte[] {(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01};
        assertArrayEquals(expected, result);
    }
}