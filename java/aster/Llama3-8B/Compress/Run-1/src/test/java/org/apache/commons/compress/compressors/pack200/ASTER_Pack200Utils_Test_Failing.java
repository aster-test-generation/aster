/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.pack200;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200Utils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNormalize_Irlx0() throws IOException {
        File from = new File("from");
        File to = new File("to");
        Pack200Utils.normalize(from, to);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNormalize_PAnl0() throws IOException {
        File jar = new File("path_to_your_jar");
        Map<String, String> props = new HashMap<>();
        props.put("key", "value");
        Pack200Utils.normalize(jar, props);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNormalize_jUlf0() throws IOException {
        File jar = new File("path_to_your_jar");
        Pack200Utils.normalize(jar);
    }
}