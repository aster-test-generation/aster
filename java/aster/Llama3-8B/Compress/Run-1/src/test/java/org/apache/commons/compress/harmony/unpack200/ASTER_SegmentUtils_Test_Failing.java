/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentUtils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountInvokeInterfaceArgs_GmqE0() {
        assertEquals(2, SegmentUtils.countInvokeInterfaceArgs("()I"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_gjcX1() {
        int result = SegmentUtils.countArgs("()V");
        assert result == 1;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountBit16Bit16Set_XrBW2() {
        int[] flags = new int[]{65535, 0, 1, 2, 3};
        assertEquals(1, SegmentUtils.countBit16(flags));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs1_dNnZ0() {
        int result = SegmentUtils.countArgs("I", 8);
        assert result == 1;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs2_PEsM1() {
        int result = SegmentUtils.countArgs("Ljava/lang/String;", 8);
        assert result == 1;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs4_LfGp3() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I", 8);
        assert result == 2;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs5_eyhH4() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D", 8);
        assert result == 3;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs6_cdvR5() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F", 8);
        assert result == 4;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs7_fInx6() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F[Z", 8);
        assert result == 5;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs8_IYcW7() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F[Z[B", 8);
        assert result == 6;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs9_lAge8() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F[Z[B[C", 8);
        assert result == 7;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs10_EScr9() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F[Z[B[C[D", 8);
        assert result == 8;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs11_sbBp10() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F[Z[B[C[D[F", 8);
        assert result == 9;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs12_lBQF11() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F[Z[B[C[D[F[Z", 8);
        assert result == 10;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs13_lOvR12() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F[Z[B[C[D[F[Z[B", 8);
        assert result == 11;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs14_csHD13() {
        int result = SegmentUtils.countArgs("([Ljava/lang/String;)[I[D[F[Z[B[C[D[F[Z[B[C", 8);
        assert result == 12;
    }
}