/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ByteCode_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetByteCodeTargets_qHSX0() {
    ByteCode byteCode = new ByteCode(1);
    int[] byteCodeTargets = new int[]{1, 2, 3};
    byteCode.setByteCodeTargets(byteCodeTargets);
    assert byteCode.getByteCodeTargets() == byteCodeTargets;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeNoArgByteCode_UTiR0() {
    ByteCode byteCode = ByteCode.getByteCode(0x00);
    assertEquals(byteCode.getOpcode(), 0x00);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeHasOperand_spBz1() {
    ByteCode byteCode = ByteCode.getByteCode(0x01);
    assertEquals(byteCode.getOpcode(), 0x01);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetRewrite_uSjQ0() {
        ByteCode byteCode = new ByteCode(1);
        int[] rewrite = new int[] {1, 2, 3};
        byteCode.setRewrite(rewrite);
        assert byteCode.getRewrite() == rewrite;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsSameObject_xyIk0() {
    ByteCode bc1 = new ByteCode(1);
    ByteCode bc2 = bc1;
    boolean result = bc1.equals(bc2);
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsDifferentObject_Jzkm1() {
    ByteCode bc1 = new ByteCode(1);
    ByteCode bc2 = new ByteCode(2);
    boolean result = bc1.equals(bc2);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNestedClassFileEntries_BEgk0() {
        ByteCode byteCode = new ByteCode(1);
        ClassFileEntry[] expected = new ClassFileEntry[0];
        ClassFileEntry[] actual = byteCode.getNestedClassFileEntries();
        assert actual.length == expected.length;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testResolveWithNoNestedEntries_PuHZ2() {
    ByteCode byteCode = new ByteCode(1);
    ClassConstantPool pool = new ClassConstantPool();
    byteCode.resolve(pool);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetNestedPositions_ovQP0() {
        ByteCode byteCode = new ByteCode(1);
        int[][] expected = {{1, 2}, {3, 4}};
        byteCode.setNestedPositions(expected);
        assertArrayEquals(expected, byteCode.getNestedPositions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode_dmcV0() {
    ByteCode byteCode = new ByteCode(1);
    int opcode = byteCode.getOpcode();
    assertEquals(1, opcode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasMultipleByteCodes_UAbQ0() {
    ByteCode byteCode = new ByteCode(1);
    boolean result = byteCode.hasMultipleByteCodes();
    assert (!result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetByteCodeIndex_XQlY0() {
    ByteCode byteCode = new ByteCode(1);
    byteCode.setByteCodeIndex(10);
    assertEquals(10, byteCode.getByteCodeIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNestedMustStartClassPool_yqyM0_fid1() {
        ByteCode byteCodeForm = new ByteCode(1);
        boolean result = byteCodeForm.nestedMustStartClassPool();
        assertFalse(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeNoArgByteCodeAlreadyCreated_NuLZ2_fid1() {
    ByteCode byteCode = ByteCode.getByteCode(0x00);
    ByteCode byteCode2 = ByteCode.getByteCode(0x00);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetName_RJuH0_fid1() {
    ByteCode byteCode = new ByteCode(1);
    String result = byteCode.getName();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_jCDd1() {
    ByteCode byteCode = new ByteCode(1);
    int length = byteCode.getLength();
    assertEquals(1, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_sYHD0_fid1() {
    ByteCode byteCode = new ByteCode(1);
    String result = byteCode.toString();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeIndex_blBB0_fid1() {
    ByteCode byteCode = new ByteCode(1);
    int result = byteCode.getByteCodeIndex();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_uaCf0_SGSx0() {
    ByteCode byteCode = new ByteCode(1);
    int result = byteCode.hashCode();
}
}