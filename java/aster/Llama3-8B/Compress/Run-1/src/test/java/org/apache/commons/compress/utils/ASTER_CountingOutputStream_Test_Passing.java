/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CountingOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_RfmQ0_WVvI0() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    CountingOutputStream cout = new CountingOutputStream(bos);
    byte[] b = "Hello, World!".getBytes();
    cout.write(b);
    byte[] result = bos.toByteArray();
    assert java.util.Arrays.equals(b, result);
    cout.count(b.length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesWritten_zSKp0_iEBR1() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    CountingOutputStream cout = new CountingOutputStream(bos);
    cout.write("Hello".getBytes());
    cout.write("World".getBytes());
    assertEquals(10, cout.getBytesWritten());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountMinusOne_McTs1_NJBc0() {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    CountingOutputStream countingOutputStream = new CountingOutputStream(bos);
    countingOutputStream.count(-1);
    assertEquals(0, countingOutputStream.getBytesWritten());
}
}