/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.examples;
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import org.apache.commons.compress.archivers.ArchiveOutputStream;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Archiver_Test_Failing {
Archiver archiver = new Archiver();
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate_MbcE0() {
        Archiver archiver = new Archiver();
        ArchiveOutputStream<?> target = null; // replace with actual implementation
        File directory = new File("path_to_your_directory");
        try {
            archiver.create(target, directory);
        } catch (IOException e) {
            fail("IOException was thrown");
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateIOException_kufz1() {
        Archiver archiver = new Archiver();
        ArchiveOutputStream<?> target = null; // replace with actual implementation
        File directory = null;
        try {
            archiver.create(target, directory);
            fail("IOException was not thrown");
        } catch (IOException e) {
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateIOException_fCyu1() {
        Archiver archiver = new Archiver();
        ArchiveOutputStream<?> target = null; // replace with actual implementation
        Path directory = null; // replace with actual implementation
        try {
            archiver.create(target, directory);
            fail("IOException was not thrown");
        } catch (IOException e) {
        }
    }
}