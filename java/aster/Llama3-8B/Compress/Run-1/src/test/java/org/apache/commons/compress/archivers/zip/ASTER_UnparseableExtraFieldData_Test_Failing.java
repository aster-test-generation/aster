/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnparseableExtraFieldData_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataInvalidInput_HReP1() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] buffer = new byte[10];
    int offset = 5;
    int length = 10;
    unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
    assertEquals(5, unparseableExtraFieldData.getCentralDirectoryData().length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_nIaw0_sxHE0() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] buffer = new byte[] {1, 2, 3, 4, 5};
    int offset = 0;
    int length = 5;
    unparseableExtraFieldData.parseFromLocalFileData(buffer, offset, length);
    ZipShort zipShort = unparseableExtraFieldData.getCentralDirectoryLength();
    byte[] bytes = ZipShort.getBytes(zipShort.getValue());
    assert Arrays.equals(bytes, buffer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_xXED0_QsOe0_fid3() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    ZipShort actual = unparseableExtraFieldData.getCentralDirectoryLength();
    byte[] expected = ZipShort.getBytes(actual.getValue());
    assertArrayEquals(new byte[0], expected);
}
}