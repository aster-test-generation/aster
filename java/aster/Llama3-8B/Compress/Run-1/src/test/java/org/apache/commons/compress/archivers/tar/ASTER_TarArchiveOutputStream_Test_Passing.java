/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarArchiveOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesWritten_qCEq0_WFJI1() {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    TarArchiveOutputStream taos = new TarArchiveOutputStream(bos);
    long bytesWritten = taos.getBytesWritten();
    org.junit.Assert.assertEquals(0, bytesWritten);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesWrittenBlock_rJHZ1_dZSW0() {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    TarArchiveOutputStream taos = new TarArchiveOutputStream(bos);
    long bytesWritten = taos.getBytesWritten();
    assert bytesWritten == 0;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesWrittenBlockEncoding_uYPL5_PDAy0() {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    TarArchiveOutputStream taos = new TarArchiveOutputStream(bos);
    int count = taos.getCount();
    assert count == 0;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCount_URrL0_GtDo0() {
    TarArchiveOutputStream tarArchiveOutputStream = new TarArchiveOutputStream(new java.io.ByteArrayOutputStream(), 1024);
    int result = tarArchiveOutputStream.getCount();
    org.junit.Assert.assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCount2_DYGF1_mdlQ0() {
    TarArchiveOutputStream tarArchiveOutputStream = new TarArchiveOutputStream(new java.io.ByteArrayOutputStream());
    int result = tarArchiveOutputStream.getCount();
    org.junit.Assert.assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCount3_kLaY2_tgPd0() {
    TarArchiveOutputStream tarArchiveOutputStream = new TarArchiveOutputStream(new java.io.ByteArrayOutputStream(), "UTF-8");
    int result = tarArchiveOutputStream.getCount();
    org.junit.Assert.assertEquals(0, result);
}
}