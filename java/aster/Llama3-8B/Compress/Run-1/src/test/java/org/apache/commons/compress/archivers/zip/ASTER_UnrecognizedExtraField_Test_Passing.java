/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnrecognizedExtraField_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHeaderId_PEDS0() {
        UnrecognizedExtraField uf = new UnrecognizedExtraField();
        ZipShort headerId = new ZipShort(new byte[2], 0);
        uf.setHeaderId(headerId);
        assertSame(headerId, uf.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataWithValidData_dEEx0() {
    UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
    byte[] data = new byte[] {1, 2, 3, 4, 5};
    int offset = 0;
    int length = 5;
    unrecognizedExtraField.parseFromCentralDirectoryData(data, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataWithInvalidData_MZxd1() {
    UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
    byte[] data = new byte[] {1, 2, 3};
    int offset = 0;
    int length = 5;
    unrecognizedExtraField.parseFromCentralDirectoryData(data, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseFromLocalFileData_QGne0() {
        UnrecognizedExtraField unrecogExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[] {1, 2, 3, 4, 5};
        int offset = 0;
        int length = 5;
        unrecogExtraField.parseFromLocalFileData(data, offset, length);
        byte[] expected = Arrays.copyOfRange(data, offset, offset + length);
        assertArrayEquals(expected, unrecogExtraField.getLocalFileDataData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLocalFileDataLength_LocalDataNull_VGbA1() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        ZipShort result = unrecognizedExtraField.getLocalFileDataLength();
        assertEquals(0, result.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCentralDirectoryData_luqR0_jQGd0_1() {
    UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
    byte[] data = new byte[10];
    System.arraycopy(new byte[10], 0, data, 0, 10);
    unrecognizedExtraField.setCentralDirectoryData(data);
    ZipShort zipShort = unrecognizedExtraField.getCentralDirectoryLength();
    byte[] bytes = zipShort.getBytes();
    assertEquals(10, zipShort.getValue());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCentralDirectoryData_luqR0_jQGd0_2() {
    UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
    byte[] data = new byte[10];
    System.arraycopy(new byte[10], 0, data, 0, 10);
    unrecognizedExtraField.setCentralDirectoryData(data);
    ZipShort zipShort = unrecognizedExtraField.getCentralDirectoryLength();
    byte[] bytes = zipShort.getBytes();
    assertEquals(2, bytes.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCentralDirectoryData_luqR0_jQGd0_5() {
    UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
    byte[] data = new byte[10];
    System.arraycopy(new byte[10], 0, data, 0, 10);
    unrecognizedExtraField.setCentralDirectoryData(data);
    ZipShort zipShort = unrecognizedExtraField.getCentralDirectoryLength();
    byte[] bytes = zipShort.getBytes();
    assertEquals(10, ZipShort.getValue(bytes));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCentralDirectoryData_luqR0_jQGd0_6() {
    UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
    byte[] data = new byte[10];
    System.arraycopy(new byte[10], 0, data, 0, 10);
    unrecognizedExtraField.setCentralDirectoryData(data);
    ZipShort zipShort = unrecognizedExtraField.getCentralDirectoryLength();
    byte[] bytes = zipShort.getBytes();
    assertEquals(10, ZipShort.getValue(bytes, 0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLocalFileDataLength_LocalDataNotNull_VDAq0_fid2() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] localData = new byte[0];
        ZipShort result = unrecognizedExtraField.getLocalFileDataLength();
        assertEquals(0, result.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCentralDirectoryData_luqR0_jQGd0_3_fid2() {
    UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
    byte[] data = new byte[10];
    System.arraycopy(new byte[10], 0, data, 0, 10);
    unrecognizedExtraField.setCentralDirectoryData(data);
    ZipShort zipShort = unrecognizedExtraField.getCentralDirectoryLength();
    byte[] bytes = zipShort.getBytes();
}
}