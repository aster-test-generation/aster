/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CLI_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithOneArgument_rSUJ1_MFSL0() {
    String[] args = {"file"};
    try {
        CLI.main(args);
        assertEquals("Usage: java -jar cli.jar [mode] [file]\n", System.out.toString());
    } catch (Exception e) {
        fail("Expected no exception, but got " + e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithTwoArguments_HzZr2_STfR0() {
    String[] args = {"file", "LIST"};
    try {
        CLI.main(args);
        assertEquals("LIST file", System.out.toString());
    } catch (Exception e) {
        fail("Expected no exception, but got " + e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithTwoArgumentsInvalidMode_jsUP3_PxmJ0() {
    String[] args = {"file", "InvalidMode"};
    try {
        CLI.main(args);
        assertEquals("Invalid mode: InvalidMode", System.err.toString());
    } catch (Exception e) {
        fail("Expected no exception, but got " + e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithTwoArgumentsNonFile_gcEH4_wUyI0() {
    String[] args = {"directory", "LIST"};
    try {
        CLI.main(args);
        assertEquals("directory doesn't exist or is a directory", System.err.toString());
    } catch (Exception e) {
        fail("Expected no exception, but got " + e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithNoArguments_LQOy0_fenH1() {
    String[] args = new String[0];
    try {
        CLI.main(args);
    } catch (Exception e) {
        fail("Exception was thrown");
    }
    assertEquals("Parameters: archive-name [list]", System.out.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithInvalidArgument_DjOj1_FKkQ0() {
    String[] args = new String[] {"invalid"};
    try {
        CLI.main(args);
    } catch (Exception e) {
        assertEquals("invalid doesn't exist or is a directory", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithValidArgument_gBVA2_IzlH0() {
    String[] args = new String[] {"valid"};
    try {
        CLI.main(args);
    } catch (Exception e) {
        fail("Exception should not be thrown");
    }
    assertEquals("Mode: unknown valid\nvalid ", System.out.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithInvalidMode_JRpx4_xaIf0() {
    String[] args = new String[] {"invalid", "mode"};
    try {
        CLI.main(args);
    } catch (Exception e) {
        assertEquals("Parameters: archive-name [list]", System.out.toString());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMainWithValidMode_cGYs5_DqcU0() {
    String[] args = new String[] {"valid", "mode"};
    try {
        CLI.main(args);
    } catch (Exception e) {
        fail("Unexpected exception: " + e.getMessage());
    }
    assertEquals("Mode: mode valid", System.out.toString());
}
}