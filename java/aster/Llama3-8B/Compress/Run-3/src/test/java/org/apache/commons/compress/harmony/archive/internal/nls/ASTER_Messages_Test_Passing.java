/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.archive.internal.nls;
import java.util.Locale;
import java.util.ResourceBundle;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Locale;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Messages_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetStringBundleNotNull_vDqN0() {
        String msg = "testMessage";
        String result = Messages.getString(msg);
        assertEquals(msg, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_kDtL1() {
        String result = Messages.getString("Hello {0}", "World");
        assertEquals("Hello World", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFormat1_VkQa0() {
    assertEquals("Hello {0}!", Messages.format("Hello {0}!", new Object[] {"World"}));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_BGwn0() {
        String result = Messages.getString("Hello, %d", 10);
        assertEquals("Hello, 10", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_GjLB1() {
        String result = Messages.getString("Hello {0} {1}", "John", "Doe");
        assertEquals("Hello John Doe", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetString_XHrj0() {
        String result = Messages.getString("Hello %s", 'a');
        assertEquals("Hello a", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetStringBundleNotNull_KQnu0() {
        String msg = "msg";
        Object[] args = new Object[]{"arg1", "arg2"};
        String result = Messages.getString(msg, args);
        assertEquals(msg, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocale_KcTU0() {
        Locale locale = Locale.US;
        String resource = "messages";
        ResourceBundle result = Messages.setLocale(locale, resource);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocaleNullResource_KONs1() {
        Locale locale = Locale.US;
        String resource = null;
        ResourceBundle result = Messages.setLocale(locale, resource);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocaleNullLocale_KzTn2() {
        Locale locale = null;
        String resource = "messages";
        ResourceBundle result = Messages.setLocale(locale, resource);
    }
}