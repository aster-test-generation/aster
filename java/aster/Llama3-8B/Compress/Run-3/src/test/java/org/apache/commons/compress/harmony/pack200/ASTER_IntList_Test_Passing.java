/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_IntList_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsEmptyWhenListIsEmpty_FxSb0() {
    IntList intList = new IntList();
    boolean result = intList.isEmpty();
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsEmptyWhenListIsNotEmpty_orbf1() {
    IntList intList = new IntList(1);
    boolean result = intList.isEmpty();
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAll_MaAO0() {
    IntList intList = new IntList();
    IntList list = new IntList();
    list.add(1);
    list.add(2);
    intList.addAll(list);
    assertEquals(2, intList.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAllLargeList_DagI1() {
    IntList intList = new IntList();
    IntList list = new IntList();
    for (int i = 0; i < 100; i++) {
        list.add(i);
    }
    intList.addAll(list);
    assertEquals(100, intList.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetWithinRange_WXAp0() {
    IntList list = new IntList(10);
    list.get(0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOutOfRange_YbUw1() {
    IntList list = new IntList(10);
    try {
        list.get(10);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToArray_jfDb0() {
        IntList intList = new IntList(10);
        intList.toArray();
        int[] result = intList.toArray();
        int[] expected = new int[]{1, 2, 3, 4, 5};
        assertArrayEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRemoveAtInvalidIndex_BvPA3() {
    IntList list = new IntList(10);
    list.add(1);
    list.add(2);
    list.add(3);
    try {
        list.remove(-1);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRemoveAtFirstIndexWhenListIsEmpty_lbTR5() {
    IntList list = new IntList();
    try {
        list.remove(0);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddWhenListIsNotFull_VRHt0() {
    IntList list = new IntList();
    list.add(10);
    assertTrue(list.add(20));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddWhenListIsFull_GHpX1() {
    IntList list = new IntList(1);
    list.add(10);
    assertTrue(list.add(20));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAtBeginning_Xioq0() {
    IntList list = new IntList();
    list.add(0, 10);
    assertEquals(10, list.get(0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAtEnd_boNw1() {
    IntList list = new IntList();
    list.add(list.size(), 20);
    assertEquals(20, list.get(list.size() - 1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddInMiddle_Qtct2() {
    IntList list = new IntList();
    list.add(1, 15);
    assertEquals(15, list.get(1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAtBeginningWithGrow_hWkt3() {
    IntList list = new IntList(1);
    list.add(0, 10);
    assertEquals(10, list.get(0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAtEndWithGrow_yEBx4() {
    IntList list = new IntList(1);
    list.add(list.size(), 20);
    assertEquals(20, list.get(list.size() - 1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddInMiddleWithGrow_Wuyp5() {
    IntList list = new IntList(2);
    list.add(1, 15);
    assertEquals(15, list.get(1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAtBeginningWithMultipleGrow_XZwr6() {
    IntList list = new IntList(1);
    for (int i = 0; i < 10; i++) {
        list.add(0, i);
    }
    assertEquals(9, list.get(0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAtEndWithMultipleGrow_ZqMA7() {
    IntList list = new IntList(1);
    for (int i = 0; i < 10; i++) {
        list.add(list.size(), i);
    }
    assertEquals(9, list.get(list.size() - 1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddInMiddleWithMultipleGrow_wjVY8() {
    IntList list = new IntList(2);
    for (int i = 0; i < 10; i++) {
        list.add(1, i);
    }
    assertEquals(4, list.get(1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAtBeginningWithIndexOutOfBoundsException_pCoL9() {
    IntList list = new IntList();
    try {
        list.add(-1, 10);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddAtEndWithIndexOutOfBoundsException_iZkP10() {
    IntList list = new IntList();
    try {
        list.add(list.size() + 1, 10);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddInMiddleWithIndexOutOfBoundsException_evbl11() {
    IntList list = new IntList();
    try {
        list.add(list.size(), 10);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddInMiddleWithGrow_myEV5() {
    IntList list = new IntList(1);
    list.add(1, 15);
    assertEquals(15, list.get(1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSize_MVtL0() {
    IntList list = new IntList(10);
    list.size();
    assertEquals(0, list.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAtEnd_jxBY2_qTjI0() {
    IntList list = new IntList(10);
    assertEquals(0, list.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRemoveAtFirstIndex_Veix0_JgKX0_1() {
    IntList list = new IntList(10);
    list.add(1);
    list.add(2);
    list.add(3);
    assertEquals(3, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRemoveAtFirstIndex_Veix0_JgKX0_2() {
    IntList list = new IntList(10);
    list.add(1);
    list.add(2);
    list.add(3);
    assertEquals(1, list.remove(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRemoveAtFirstIndex_Veix0_JgKX0_3() {
    IntList list = new IntList(10);
    list.add(1);
    list.add(2);
    list.add(3);
    assertEquals(2, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRemoveAtMiddleIndex_HhMp2_HxKi0() {
    IntList list = new IntList(10);
    list.add(1);
    list.add(2);
    list.add(3);
    list.add(4);
    assertEquals(4, list.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRemoveAtInvalidIndex2_ZghR4_cszs1() {
    IntList list = new IntList(10);
    list.add(1);
    list.add(2);
    list.add(3);
    try {
        list.size();
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIncrementWithinRange_qTyw0_JTLQ0() {
    IntList intList = new IntList(10);
    intList.increment(0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIncrementOutOfRange_dglp2_BpJi0() {
    IntList intList = new IntList(10);
    try {
        intList.size();
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClear_WaYH0_loeM0() {
    IntList list = new IntList(10);
    list.add(1);
    list.add(2);
    list.add(3);
    list.clear();
    assertEquals(0, list.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClearAlreadyEmpty_GIOA1_Seac0() {
    IntList list = new IntList();
    list.clear();
    assertEquals(0, list.size());
}
}