/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.zstandard;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ZstdCompressorInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMarkSupported_ePwY0() throws IOException {
        InputStream in = new java.io.ByteArrayInputStream(new byte[0]);
        ZstdCompressorInputStream compressorInputStream = new ZstdCompressorInputStream(in, null);
        boolean result = compressorInputStream.markSupported();
        assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMarkSupportedWithoutBufferPool_eZwU1() throws IOException {
        InputStream in = new java.io.ByteArrayInputStream(new byte[0]);
        ZstdCompressorInputStream compressorInputStream = new ZstdCompressorInputStream(in);
        boolean result = compressorInputStream.markSupported();
        assert result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCloseWithoutBufferPool_Jezz1() throws IOException {
        InputStream in = new java.io.ByteArrayInputStream(new byte[0]);
        ZstdCompressorInputStream compressorInputStream = new ZstdCompressorInputStream(in);
        compressorInputStream.close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_XJLC0_YagA0() throws IOException {
    java.io.ByteArrayInputStream in = new java.io.ByteArrayInputStream(new byte[0]);
    ZstdCompressorInputStream zstdCompressorInputStream = new ZstdCompressorInputStream(in);
    String result = zstdCompressorInputStream.toString();
    assertEquals("toString method should return the string representation of the input stream", in.toString(), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRead_aejO0_YPLp1() throws IOException {
    java.io.ByteArrayInputStream in = new java.io.ByteArrayInputStream(new byte[] {1, 2, 3});
    ZstdCompressorInputStream compressorInputStream = new ZstdCompressorInputStream(in);
    int result = compressorInputStream.read();
    assert result == 1;
}
}