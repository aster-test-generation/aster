/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.io.IOException;
import java.nio.ByteOrder;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BitInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBitsCached_dUyR0() {
        BitInputStream bis = new BitInputStream(new java.io.ByteArrayInputStream(new byte[0]), java.nio.ByteOrder.BIG_ENDIAN);
        assertEquals(0, bis.bitsCached());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBitsAvailable_FqUH0_Mboy0() throws IOException {
    java.io.ByteArrayInputStream in = new java.io.ByteArrayInputStream(new byte[0]);
    BitInputStream bitInputStream = new BitInputStream(in, ByteOrder.BIG_ENDIAN);
    assertEquals(0, bitInputStream.bitsAvailable());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesRead_WACx0_CbEd0() throws IOException {
    java.io.ByteArrayInputStream in = new java.io.ByteArrayInputStream(new byte[10]);
    BitInputStream bitInputStream = new BitInputStream(in, ByteOrder.BIG_ENDIAN);
    assertEquals(0, bitInputStream.getBytesRead());
}
}