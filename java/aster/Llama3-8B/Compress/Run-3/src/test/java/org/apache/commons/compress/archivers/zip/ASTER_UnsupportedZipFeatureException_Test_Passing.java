/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_UnsupportedZipFeatureException_Test_Passing {
@Mock
    private ZipArchiveEntry entry;
private UnsupportedZipFeatureException unsupportedZipFeatureException;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEntry3_kESQ2() {
        UnsupportedZipFeatureException exception = new UnsupportedZipFeatureException(ZipMethod.STORED, new ZipArchiveEntry());
        ZipArchiveEntry result = exception.getEntry();
        assertEquals(exception.getEntry(), result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetEntry_DyJA0() {
    UnsupportedZipFeatureException unsupportedZipFeatureException = new UnsupportedZipFeatureException(null);
    ZipArchiveEntry result = unsupportedZipFeatureException.getEntry();
    assertEquals(null, result);
}
}