/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.io.IOException;
import java.io.InputStream;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_IcBands_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetIcTuples_zArz0() {
        Segment segment = new Segment();
        IcBands icBands = new IcBands(segment);
        IcTuple[] expected = new IcTuple[0];
        IcTuple[] actual = icBands.getIcTuples();
        assertArrayEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRelevantIcTuples1_Zdho0_JFjo0() {
    IcBands icBands = new IcBands(new Segment()); 
    ClassConstantPool cp = new ClassConstantPool();
    String className = "className";
    IcTuple[] result = icBands.getRelevantIcTuples(className, cp);
    assert result.length == 0;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRead_cqzW0_SPSP0() throws IOException, Pack200Exception {
    IcBands icBands = new IcBands(new Segment());
    InputStream in = new java.io.ByteArrayInputStream(new byte[0]);
    icBands.read(in);
}
}