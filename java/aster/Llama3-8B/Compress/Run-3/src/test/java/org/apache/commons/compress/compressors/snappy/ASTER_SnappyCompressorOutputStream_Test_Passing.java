/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SnappyCompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFinishWithoutParameters_YIYb1() throws IOException {
        SnappyCompressorOutputStream compressorOutputStream = new SnappyCompressorOutputStream(new java.io.ByteArrayOutputStream(), 10L);
        compressorOutputStream.finish();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_biBn0_xgHL0() throws IOException {
    java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();
    SnappyCompressorOutputStream compressor = new SnappyCompressorOutputStream(os, 10);
    byte[] data = new byte[] {1, 2, 3, 4, 5};
    compressor.write(data, 0, 5);
    assert os.toByteArray().length == 5;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite2_ERbc1_HWoY0_1() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    SnappyCompressorOutputStream compressor = new SnappyCompressorOutputStream(bos, 0);
    compressor.write(0x34);
    assertEquals(1, bos.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite2_ERbc1_HWoY0_2() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    SnappyCompressorOutputStream compressor = new SnappyCompressorOutputStream(bos, 0);
    compressor.write(0x34);
    assertEquals((byte)0x34, bos.toByteArray()[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite3_basH2_ftdo0_1() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    SnappyCompressorOutputStream compressor = new SnappyCompressorOutputStream(bos, 0);
    compressor.write(0x56);
    assertEquals(1, bos.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite3_basH2_ftdo0_2() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    SnappyCompressorOutputStream compressor = new SnappyCompressorOutputStream(bos, 0);
    compressor.write(0x56);
    assertEquals((byte)0x56, bos.toByteArray()[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinishWithParameters_UMLP0_PvRe0() throws IOException {
    SnappyCompressorOutputStream compressorOutputStream = new SnappyCompressorOutputStream(new java.io.ByteArrayOutputStream(), 10L);
    compressorOutputStream.close();
}
}