/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SevenZFile_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMatchesSignatureLengthLessThanSevenZSignatureLength_bKTu0() {
        byte[] signature = new byte[5];
        boolean result = SevenZFile.matches(signature, 5);
        assertFalse(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInputStreamValidEntry_Vwnj0() throws IOException {
    SevenZFile sevenZFile = new SevenZFile(new File("path"), new char[]{'p', 'a', 's', 's', 'w', 'o', 'r', 'd'});
    SevenZArchiveEntry entry = new SevenZArchiveEntry();
    entry.setName("testEntry");
    InputStream inputStream = sevenZFile.getInputStream(entry);
    assertNotNull(inputStream);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInputStreamInvalidEntry_qosz1() throws IOException {
    SevenZFile sevenZFile = new SevenZFile(new File("path"), new char[]{'p', 'a', 's', 's', 'w', 'o', 'r', 'd'});
    SevenZArchiveEntry entry = new SevenZArchiveEntry();
    entry.setName("invalidEntry");
    try {
        sevenZFile.getInputStream(entry);
        fail("Expected IOException");
    } catch (IOException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInputStreamNullEntry_OMhQ2() throws IOException {
    SevenZFile sevenZFile = new SevenZFile(new File("path"), new char[]{'p', 'a', 's', 's', 'w', 'o', 'r', 'd'});
    SevenZArchiveEntry entry = null;
    try {
        sevenZFile.getInputStream(entry);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInputStreamEmptyEntry_xtqR3() throws IOException {
    SevenZFile sevenZFile = new SevenZFile(new File("path"), new char[]{'p', 'a', 's', 's', 'w', 'o', 'r', 'd'});
    SevenZArchiveEntry entry = new SevenZArchiveEntry();
    entry.setName("");
    InputStream inputStream = sevenZFile.getInputStream(entry);
    assertNotNull(inputStream);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetEntriesWithNoSevenZFileOptions_PSZE13_wyfx0() {
    try {
        SevenZFile sevenZFile = new SevenZFile(new File("test.7z"), "password".toCharArray(), null);
        sevenZFile.getDefaultName();
        sevenZFile.getEntries();
    } catch (IOException e) {
        fail("IOException was thrown");
    }
}
}