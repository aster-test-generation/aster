/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;
import java.io.IOException;
import java.io.InputStream;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SnappyCompressorInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSizeWithBlockSize_NPTN0() throws IOException {
        InputStream is = new java.io.ByteArrayInputStream(new byte[0]);
        SnappyCompressorInputStream compressorInputStream = new SnappyCompressorInputStream(is, 10);
        int size = compressorInputStream.getSize();
        assert size == 0;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSizeWithoutBlockSize_EgFn1() throws IOException {
        InputStream is = new java.io.ByteArrayInputStream(new byte[0]);
        SnappyCompressorInputStream compressorInputStream = new SnappyCompressorInputStream(is);
        int size = compressorInputStream.getSize();
        assert size == 0;
    }
}