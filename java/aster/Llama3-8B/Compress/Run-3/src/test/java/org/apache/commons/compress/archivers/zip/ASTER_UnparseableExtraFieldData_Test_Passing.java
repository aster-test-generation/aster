/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnparseableExtraFieldData_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataValidData_XqCi0() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] buffer = new byte[] {1, 2, 3, 4, 5};
    int offset = 0;
    int length = 5;
    unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
    assertEquals(5, unparseableExtraFieldData.getCentralDirectoryData().length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataInvalidData_RTcK1() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] buffer = new byte[] {1, 2, 3};
    int offset = 0;
    int length = 3;
    unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
    assertEquals(3, unparseableExtraFieldData.getCentralDirectoryData().length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryDataWhenCentralDirectoryDataIsNull_FVTU1() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] result = unparseableExtraFieldData.getCentralDirectoryData();
    byte[] localFileDataData = new byte[10];
    assert Arrays.equals(result, localFileDataData);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLocalFileDataLength_LocalFileDataIsNull_NGXZ0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        ZipShort result = unparseableExtraFieldData.getLocalFileDataLength();
        assertEquals(0, result.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength_LocalFileDataIsNotNull_wckI1_yrpF0() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    ZipShort localFileDataLength = unparseableExtraFieldData.getCentralDirectoryLength();
    assertEquals(0, localFileDataLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength_LocalFileDataLengthReturned_uhHh0_GRub0() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    ZipShort result = unparseableExtraFieldData.getCentralDirectoryLength();
    assertEquals(unparseableExtraFieldData.getLocalFileDataLength(), result.getValue());
}
}