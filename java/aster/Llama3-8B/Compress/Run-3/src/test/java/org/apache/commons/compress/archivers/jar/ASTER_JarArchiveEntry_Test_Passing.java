/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.jar;
import java.security.cert.Certificate;
import java.util.jar.Attributes;
import java.util.jar.JarEntry;
import java.util.zip.ZipEntry;
import java.util.zip.ZipException;
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JarArchiveEntry_Test_Passing {
@Mock
    private ZipEntry zipEntry;
@Mock
    private ZipArchiveEntry zipArchiveEntry;
@Mock
    private Attributes attributes;
private JarArchiveEntry jarArchiveEntry;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCertificates_OInx0() {
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test");
        Certificate[] certificates = jarArchiveEntry.getCertificates();
        assertNull(certificates);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetManifestAttributes_MGgS0() {
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("name");
        Attributes actual = jarArchiveEntry.getManifestAttributes();
        assertEquals(null, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetManifestAttributesFromZipEntry_TSdN1_gnBx0() {
    ZipEntry zipEntry = new ZipEntry("entry");
    try {
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry(zipEntry);
        Attributes actual = jarArchiveEntry.getManifestAttributes();
        assertEquals(null, actual);
    } catch (ZipException e) {
        fail("Unexpected ZipException");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetManifestAttributesFromJarEntry_hhCn3_Fylv0() {
    JarEntry jarEntry = new JarEntry("entry");
    try {
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry(jarEntry);
        Attributes actual = jarArchiveEntry.getManifestAttributes();
        assertEquals(null, actual);
    } catch (ZipException e) {
        fail("Unexpected ZipException");
    }
}
}