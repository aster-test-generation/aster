/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import java.io.DataOutputStream;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DeprecatedAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_Qttt0() {
        DeprecatedAttribute deprecatedAttribute = new DeprecatedAttribute();
        String result = deprecatedAttribute.toString();
        assertEquals("Deprecated Attribute", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_fhkY0() {
        DeprecatedAttribute deprecatedAttribute = new DeprecatedAttribute();
        int result = deprecatedAttribute.getLength();
        assertEquals(0, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWriteBody_UYVV0() throws IOException {
        DeprecatedAttribute deprecatedAttribute = new DeprecatedAttribute();
        DataOutputStream dataOutputStream = new DataOutputStream(new java.io.ByteArrayOutputStream());
        deprecatedAttribute.writeBody(dataOutputStream);
    }
}