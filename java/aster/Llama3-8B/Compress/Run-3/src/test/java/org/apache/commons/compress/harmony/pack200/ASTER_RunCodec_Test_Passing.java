/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RunCodec_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithTwoParams_ROVJ1_abMi0() {
    try {
        RunCodec runCodec = new RunCodec(1, new BHSDCodec(1, 2), new BHSDCodec(3, 4));
        assertEquals("RunCodec[k=1;aCodec=BHSDCodec[b=1;h=2];bCodec=BHSDCodec[b=3;h=4]]", runCodec.toString());
    } catch (Pack200Exception e) {
        fail("Should not throw Pack200Exception");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetK_SanE0_fuLg0() {
    try {
        RunCodec runCodec = new RunCodec(5, new BHSDCodec(1, 2), new BHSDCodec(3, 4));
        assertEquals(5, runCodec.getK());
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
}