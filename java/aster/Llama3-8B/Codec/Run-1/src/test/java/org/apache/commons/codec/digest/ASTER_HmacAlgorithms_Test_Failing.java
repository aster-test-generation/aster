/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_HmacAlgorithms_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_DaXF0_gFsn0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_MD5;
        String result = hmacAlgorithms.toString();
        assert result.equals("HMAC_MD5");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName1_mcIu1_gwsN0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_1;
        String result = hmacAlgorithms.toString();
        assert result.equals("HMAC_SHA_1");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName2_YnpO2_QMPw0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_224;
        String result = hmacAlgorithms.toString();
        assert result.equals("HMAC_SHA_224");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName3_vBUP3_GVth0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_256;
        String result = hmacAlgorithms.toString();
        assert result.equals("HMAC_SHA_256");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName4_lkiZ4_qDAS0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_384;
        String result = hmacAlgorithms.toString();
        assert result.equals("HMAC_SHA_384");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_Lehk0_wjuP0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_MD5;
        assertEquals(HmacAlgorithms.HMAC_MD5.name(), hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString1_AKWb1_LNXL0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_1;
        assertEquals(HmacAlgorithms.HMAC_SHA_1.name(), hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString2_SouO2_OAlx0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_224;
        assertEquals(HmacAlgorithms.HMAC_SHA_224.name(), hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString3_AVFU3_USbZ1() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_256;
        assertEquals("HMAC_SHA_256", hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString4_vJvD4_Rhpw0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_384;
        assertEquals(HmacAlgorithms.HMAC_SHA_384.name(), hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString5_kcxP5_FFFR0() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_SHA_512;
        assertEquals(HmacAlgorithms.HMAC_SHA_512.name(), hmacAlgorithms.toString());
    }
}