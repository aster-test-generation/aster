/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_DoubleMetaphone_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_DoubleMetaphone_qQGa4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "CIA";
        String result = doubleMetaphone.doubleMetaphone(value, false);
        assert(result.equals("IA"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_DoubleMetaphone_Negative_Xpoe5() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "ABC";
        String result = doubleMetaphone.doubleMetaphone(value, false);
        assert(result.equals("BC"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithPB_jbgE3() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("PPLble", false);
        assertEquals("PPL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JKWithFollowingNonVowelConsonantAndVowel_fUGf13() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("JK", doubleMetaphone.doubleMetaphone("JKaq", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JKKWithFollowingNonVowelConsonantAndNonVowelConsonant_agal14() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("JKK", doubleMetaphone.doubleMetaphone("JKKkq", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testX_kcVo0() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("X", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHM_QfOi1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HM", doubleMetaphone.doubleMetaphone("HM", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHK_ykzs2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HK", doubleMetaphone.doubleMetaphone("HK", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHLM_Vmgm3() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HLM", doubleMetaphone.doubleMetaphone("HLM", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHLS_xCqj4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HLS", doubleMetaphone.doubleMetaphone("HLS", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testConditionM0True_ryNh0() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "MUM";
        String result = doubleMetaphone.doubleMetaphone(value, false);
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testConditionM0False_TisR1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "UMB";
        String result = doubleMetaphone.doubleMetaphone(value, false);
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsValueIndex4_Angz0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "ILLINOIS";
        boolean result = doubleMetaphone.contains(value, 5, 4, "ILLO", "ILLA", "ALLE");
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsValueIndex5_KuOE1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "ILLINOIS";
        boolean result = doubleMetaphone.contains(value, 6, 4, "ILLO", "ILLA", "ALLE");
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsValueIndex6_iELt2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "ILLINOIS";
        boolean result = doubleMetaphone.contains(value, 7, 4, "ILLO", "ILLA", "ALLE");
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testConditionCH1_SWXG0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Vanchur";
        String expected = "VNXR";
        assertEquals(expected, doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testConditionCH1Sch_oRjf1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Schatz";
        String expected = "SXT";
        assertEquals(expected, doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testConditionCH1Orchid_HdXS2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Orchid";
        String expected = "RKDT";
        assertEquals(expected, doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testConditionCH1Space_qejB3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Hans Space";
        String expected = "HN SPS";
        assertEquals(expected, doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testConditionCH1End_NQbY4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Hans";
        String expected = "HN";
        assertEquals(expected, doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneMc_dEgh0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("McDonald", false);
        assertEquals("MCKNL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCaesar_dQgN0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KS", doubleMetaphone.doubleMetaphone("Caesar", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMcClelland_Kkpe1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("MKLND", doubleMetaphone.doubleMetaphone("McClelland", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleCC_mAez2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KK", doubleMetaphone.doubleMetaphone("Backpack", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleCCNotMc_YwwJ3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KK", doubleMetaphone.doubleMetaphone("Kuckuck", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCWithCIA_hIfC4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Focaccia", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCWithCZ_MUav5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("Czerny", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCWithCKCGCQ_Iwgv6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("K", doubleMetaphone.doubleMetaphone("Check", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCWithCIO_KBri8_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("Cio", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCWithCAndSpace_aacb9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("K", doubleMetaphone.doubleMetaphone("Mac Caffrey", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneCia_lJfi3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("Cia", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneFocus_OGKU5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("FX", doubleMetaphone.doubleMetaphone("Focus", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneMcGregor_vYjP6_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("MGR", doubleMetaphone.doubleMetaphone("McGregor", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneDoubleCC_nAfX7_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KK", doubleMetaphone.doubleMetaphone("Kockock", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_OgWx0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("BACHER", false);
        assertEquals("PACHER", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_FZLa1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("focaccia", false);
        assertEquals("FOX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_YpTa2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("CAESAR", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_hIAQ3() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Czerny", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_BFsi4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("CIA", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_nrXN8() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("CH", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleCC_qrVn1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Macclelland", false);
        assertEquals("MXL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCWithCIA_YZrX3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("focaccia", false);
        assertEquals("FX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCWithCQAndCE_EFdp9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("CQCE", false);
        assertEquals("KX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCWithCAndSpace_ABjm10_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("C MacGregor", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneL1_YxvA1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Lalla", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_McClelland_ttQj1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("McClelland", false);
        assertEquals("KL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_doubleCC_PrlE3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("bellocchio", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_accident_QCBl4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("accident", false);
        assertEquals("KS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_bacci_qpOr5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("bacci", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_MacCaffrey_dpnA6_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("MacCaffrey", false);
        assertEquals("MK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_MacGregor_sJIk7_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("MacGregor", false);
        assertEquals("MK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_noCC_HgwP8() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("hello", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithCaesar_aNux0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KSRS", doubleMetaphone.doubleMetaphone("CAESAR", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithDoubleCC_FNGP2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KLLND", doubleMetaphone.doubleMetaphone("McKelland", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithCIA_JsHh3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("focaccia", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithCH_iuEJ5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("K", doubleMetaphone.doubleMetaphone("church", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithCK_OKJk6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("K", doubleMetaphone.doubleMetaphone("check", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithCQG_OgCV12_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("K", doubleMetaphone.doubleMetaphone("CQG", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithCQGAlternate_HDYb13_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KX", doubleMetaphone.doubleMetaphone("CQG", true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_pQcr0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("bellocchio", false);
        assertEquals("BKX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_lgjc1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("bacchus", false);
        assertEquals("BKS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_NatZ2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("accident", false);
        assertEquals("AKSNT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_AYnP3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("accede", false);
        assertEquals("AKS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_TYfZ4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("succeed", false);
        assertEquals("SKD", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_dwjA5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Czerny", false);
        assertEquals("SXRN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_kHTC6_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("focaccia", false);
        assertEquals("FKS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithH_Mllw0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Phoebe", false);
        assertEquals("FEB", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithPH_oSSW1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Philip", false);
        assertEquals("FILIP", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithBP_vKUs2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Bobbie", false);
        assertEquals("BEB", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithPB_jbgE3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Pebble", false);
        assertEquals("Peb", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneIE_uggY0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("FIE", true);
        assertEquals("FI", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWR_iiEb0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Write", true);
        assertEquals("RiT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWRInMiddle_Jdmc1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Writers", true);
        assertEquals("RiTz", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneSCH_EZix2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Schenck", true);
        assertEquals("SxNK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWRAndSCH_RmVU3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("SchenckWrite", true);
        assertEquals("SxNKRT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithTH_qWbI0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("thomas", false);
        assertEquals("T0MAS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithVAN_fkia1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("van", false);
        assertEquals("AN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithVON_pIuD2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("von", false);
        assertEquals("ON", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithTAndD_hoDj4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Tend", false);
        assertEquals("T0ND", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithZo_ukSA0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Zoology", false);
        assertEquals("Z0L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithZi_JrSV1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Zi", false);
        assertEquals("Z", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithZa_iprS2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Za", false);
        assertEquals("Z", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithoutSlavoGermanic_tXcB4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Zo", true);
        assertEquals("Z", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG1_vcwS0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hannah", false);
        assertEquals("AN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG2_hrAt1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Nancy", false);
        assertEquals("NK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG3_aQEt2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Lily", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG4_BdDd3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knee", false);
        assertEquals("KN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG5_xZUF4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Yancy", false);
        assertEquals("JN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG6_sAYU5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Gery", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG7_GMtr6_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Danger", false);
        assertEquals("DNR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG8_dHFX7_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Ranger", false);
        assertEquals("RNR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG9_WaUz8_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Manger", false);
        assertEquals("MNR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG10_yoUx9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Aggie", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG11_MKaq10_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Vanity", false);
        assertEquals("VNT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG12_fsSX11_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Schie", false);
        assertEquals("SK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG13_btpU12_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Eiger", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG14_BtHb13_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Geyer", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG15_QmmL14() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hegy", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG16_UCpG15_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knee", true);
        assertEquals("KN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG17_OaZR16_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Yancy", true);
        assertEquals("JN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG1_GPvz0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Hanger";
        boolean slavoGermanic = false;
        assertEquals("HNJR", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG2_rALJ1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Nanger";
        boolean slavoGermanic = false;
        assertEquals("NNGR", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG3_ZkPJ2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Linger";
        boolean slavoGermanic = false;
        assertEquals("LNJR", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG4_XppZ3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Ginger";
        boolean slavoGermanic = false;
        assertEquals("JNJR", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG5_JMPi4_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knie";
        boolean slavoGermanic = true;
        assertEquals("KN", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG6_KtSN5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knie";
        boolean slavoGermanic = false;
        assertEquals("KN", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG7_XMjM6_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knead";
        boolean slavoGermanic = false;
        assertEquals("KNED", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG8_FnGq7_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knee";
        boolean slavoGermanic = false;
        assertEquals("KN", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG9_XADQ8_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knead";
        boolean slavoGermanic = true;
        assertEquals("KNED", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG10_aPLJ9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knee";
        boolean slavoGermanic = true;
        assertEquals("KN", doubleMetaphone.doubleMetaphone(value, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG11_zhOW10_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knie";
        boolean slavoGermanic = false;
        assertEquals("KN", doubleMetaphone.doubleMetaphone(value, true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG12_ifze11_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knie";
        boolean slavoGermanic = true;
        assertEquals("KN", doubleMetaphone.doubleMetaphone(value, true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG13_VZTz12_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knead";
        boolean slavoGermanic = false;
        assertEquals("KNED", doubleMetaphone.doubleMetaphone(value, true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG14_xlfn13_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knee";
        boolean slavoGermanic = false;
        assertEquals("KN", doubleMetaphone.doubleMetaphone(value, true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG15_PDUa14_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String value = "Knead";
        boolean slavoGermanic = true;
        assertEquals("KNED", doubleMetaphone.doubleMetaphone(value, true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Jose_ycHK0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HOSE", doubleMetaphone.doubleMetaphone("Jose", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SanJacinto_waJr1_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SNJKNT", doubleMetaphone.doubleMetaphone("San Jacinto", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JWithVowelBeforeAndAAfter_fQLk5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HA", doubleMetaphone.doubleMetaphone("Ja", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JWithVowelBeforeAndOAfter_WuPs6_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HO", doubleMetaphone.doubleMetaphone("Jo", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JWithFollowingJ_tNBw9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HH", doubleMetaphone.doubleMetaphone("JJ", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JWithFollowingNonVowelConsonant_gwLS10() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("J", doubleMetaphone.doubleMetaphone("Jk", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JWithFollowingNonVowelConsonantAndVowel_fUGf13() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("J", doubleMetaphone.doubleMetaphone("Jaq", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JWithFollowingNonVowelConsonantAndNonVowelConsonant_agal14() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("J", doubleMetaphone.doubleMetaphone("Jkq", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_S_index_1_TDPU2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("S", doubleMetaphone.doubleMetaphone("aS", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_KS_QAaP3() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KS", doubleMetaphone.doubleMetaphone("aux", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_KS_index_2_srNO4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KS", doubleMetaphone.doubleMetaphone("eau", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_KS_index_3_AYjh5() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KS", doubleMetaphone.doubleMetaphone("ou", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_KS_index_4_oDOa6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KS", doubleMetaphone.doubleMetaphone("auxx", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_KS_index_5_tWgg7() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("KS", doubleMetaphone.doubleMetaphone("eauu", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleGH1_HCNb0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("HUGH", false);
        assertEquals("HWG", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG2_ZuGi7_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("gy", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG3_ebrk8_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("german", false);
        assertEquals("KR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG4_nqTw9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("germany", false);
        assertEquals("KR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG5_fsZh10_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("germanic", false);
        assertEquals("KR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleG6_FVFO11_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("germanic", true);
        assertEquals("KRN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithISL_JYkE0_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("island", false);
        assertEquals("LN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithYSL_INto1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("ysle", false);
        assertEquals("SL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithSUGAR_LwxS2_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("sugar", false);
        assertEquals("XR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithSH_DCCN3_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("sheim", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithSIAN_NNPi4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("sian", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithSC_LPvK5_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("schermerhorn", false);
        assertEquals("XKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithHAndOOER_UusX6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("school", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithHAndEN_NfQu8_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("schenker", false);
        assertEquals("XK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithHAndNotVowel_jaRQ9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("hsiao", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleSWithHAndY_jJCr10() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("hoy", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSH_kcVo0() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SH", doubleMetaphone.doubleMetaphone("SH", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHEIM_QfOi1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HEIM", doubleMetaphone.doubleMetaphone("HEIM", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHOEK_ykzs2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HOEK", doubleMetaphone.doubleMetaphone("HOEK", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHOLM_Vmgm3() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HOLM", doubleMetaphone.doubleMetaphone("HOLM", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHOLZ_xCqj4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("HOLZ", doubleMetaphone.doubleMetaphone("HOLZ", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSIO_BzHZ5() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SIO", doubleMetaphone.doubleMetaphone("SIO", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSIA_BJQv6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SIA", doubleMetaphone.doubleMetaphone("SIA", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSIAN_ANTT7() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SIAN", doubleMetaphone.doubleMetaphone("SIAN", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSHwithZ_RFaH8_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("SHZ", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSIOwithZ_vrTJ9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("SIZ", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSIANwithZ_DhqP11_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("SIANZ", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAlternateSH_qKiv12_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SHX", doubleMetaphone.doubleMetaphone("SH", true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAlternateSIO_NagW13_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("SIO", true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAlternateSIA_zLGf14_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("SIA", true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAlternateSIAN_YZZn15_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("SX", doubleMetaphone.doubleMetaphone("SIAN", true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSHHEIM_UaXt1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("S", doubleMetaphone.doubleMetaphone("SHEIM", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSHHOEK_FrCB2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("S", doubleMetaphone.doubleMetaphone("SHOEK", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSHHOLM_wzCh3() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("S", doubleMetaphone.doubleMetaphone("SHOLM", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSHHOLZ_UdLk4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("S", doubleMetaphone.doubleMetaphone("SHOLZ", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSIAN_guRU7() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("S", doubleMetaphone.doubleMetaphone("SIAN", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ_twDE8() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("Z", doubleMetaphone.doubleMetaphone("Z", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ1_wuGt9_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z1", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ2_jGIz10_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z2", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ3_MUPw11_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z3", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ4_UUPT12_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z4", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ5_uxXQ13() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z5", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ6_vPVv14_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z6", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ7_Advo15_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z7", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ8_nuTG16_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z8", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ9_cglm17_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z9", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ10_HKWB18_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z10", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testZ11_GGap19_fid2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        assertEquals("X", doubleMetaphone.doubleMetaphone("Z11", false));
    }
}