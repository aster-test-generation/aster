/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Languages_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithValidResourceName_fGOs0() {
        final String languagesResourceName = "valid_resource_name";
        final Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithValidResourceNameAndEmptyLines_rhmB4() {
        final String languagesResourceName = "valid_resource_name";
        final Languages languages = Languages.getInstance(languagesResourceName);
        final Set<String> languagesSet = languages.getLanguages();
        assertEquals(0, languagesSet.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithValidResourceNameAndMultipleLines_Hsjh5() {
        final String languagesResourceName = "valid_resource_name";
        final Languages languages = Languages.getInstance(languagesResourceName);
        final Set<String> languagesSet = languages.getLanguages();
        assertEquals(1, languagesSet.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithEmptyResourceName_ObjE2_TAxK0() {
        final String languagesResourceName = "";
        try {
            Languages.getInstance(languagesResourceName);
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }
}