/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Languages_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithNullResourceName_NFTO3() {
        final String languagesResourceName = null;
        try {
            Languages.getInstance(languagesResourceName);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_Ashkenazi_Brzi0_yMrR1() {
        Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        Set<String> expected = languages.getLanguages();
        Set<String> actual = languages.getLanguages();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_Generic_jSsp1_RbKU0() {
        Languages languages = Languages.getInstance(NameType.GENERIC);
        Set<String> expected = languages.getLanguages();
        Set<String> actual = Languages.getInstance(NameType.GENERIC).getLanguages();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_Sephardic_bZBG2_yypL0() {
        Languages languages = Languages.getInstance(NameType.SEPHARDIC);
        assertEquals(languages.getLanguages(), languages.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithInvalidResourceName_QgQw1_MjUC0() {
        final String languagesResourceName = "invalid_resource_name";
        try {
            Languages languages = Languages.getInstance(languagesResourceName);
            fail("Expected IOException");
        } catch (Exception e) {
        }
    }
}