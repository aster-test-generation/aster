/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.nio.ByteBuffer;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Hex_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_oiPm0_1() throws EncoderException {
        Hex hex = new Hex();
        String str = "Hello";
        byte[] expected = str.getBytes(hex.getCharset());
        Object result = hex.encode(str);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeByteBuffer_ROOW1_1() throws EncoderException {
        Hex hex = new Hex();
        ByteBuffer byteBuffer = ByteBuffer.wrap(new byte[]{1, 2, 3});
        Object result = hex.encode(byteBuffer);
        byte[] expected = new byte[]{1, 2, 3};
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeByteArray_SBwp2_1() throws EncoderException {
        Hex hex = new Hex();
        byte[] byteArray = new byte[]{1, 2, 3};
        Object result = hex.encode(byteArray);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeByteBufferWithoutArray_kNIt4_1() throws EncoderException {
        Hex hex = new Hex();
        ByteBuffer byteBuffer = ByteBuffer.allocate(3);
        byteBuffer.put(new byte[]{1, 2, 3});
        byteBuffer.flip();
        Object result = hex.encode(byteBuffer);
        byte[] expected = new byte[]{1, 2, 3};
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_1() throws org.apache.commons.codec.DecoderException {
        assertEquals(0, Hex.toDigit('0', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_2() throws org.apache.commons.codec.DecoderException {
        assertEquals(1, Hex.toDigit('1', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_3() throws org.apache.commons.codec.DecoderException {
        assertEquals(2, Hex.toDigit('2', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_4() throws org.apache.commons.codec.DecoderException {
        assertEquals(3, Hex.toDigit('3', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_5() throws org.apache.commons.codec.DecoderException {
        assertEquals(4, Hex.toDigit('4', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_6() throws org.apache.commons.codec.DecoderException {
        assertEquals(5, Hex.toDigit('5', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_7() throws org.apache.commons.codec.DecoderException {
        assertEquals(6, Hex.toDigit('6', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_8() throws org.apache.commons.codec.DecoderException {
        assertEquals(7, Hex.toDigit('7', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_9() throws org.apache.commons.codec.DecoderException {
        assertEquals(8, Hex.toDigit('8', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_10() throws org.apache.commons.codec.DecoderException {
        assertEquals(9, Hex.toDigit('9', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_11() throws org.apache.commons.codec.DecoderException {
        assertEquals(10, Hex.toDigit('a', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_12() throws org.apache.commons.codec.DecoderException {
        assertEquals(11, Hex.toDigit('b', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_13() throws org.apache.commons.codec.DecoderException {
        assertEquals(12, Hex.toDigit('c', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_14() throws org.apache.commons.codec.DecoderException {
        assertEquals(13, Hex.toDigit('d', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_15() throws org.apache.commons.codec.DecoderException {
        assertEquals(14, Hex.toDigit('e', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_16() throws org.apache.commons.codec.DecoderException {
        assertEquals(15, Hex.toDigit('f', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0_17() throws org.apache.commons.codec.DecoderException {
        assertEquals(15, Hex.toDigit('F', 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigitValidHex_uNro0() throws org.apache.commons.codec.DecoderException {
        assertEquals(0, Hex.toDigit('0', 0));
        assertEquals(1, Hex.toDigit('1', 0));
        assertEquals(2, Hex.toDigit('2', 0));
        assertEquals(3, Hex.toDigit('3', 0));
        assertEquals(4, Hex.toDigit('4', 0));
        assertEquals(5, Hex.toDigit('5', 0));
        assertEquals(6, Hex.toDigit('6', 0));
        assertEquals(7, Hex.toDigit('7', 0));
        assertEquals(8, Hex.toDigit('8', 0));
        assertEquals(9, Hex.toDigit('9', 0));
        assertEquals(10, Hex.toDigit('a', 0));
        assertEquals(11, Hex.toDigit('b', 0));
        assertEquals(12, Hex.toDigit('c', 0));
        assertEquals(13, Hex.toDigit('d', 0));
        assertEquals(14, Hex.toDigit('e', 0));
        assertEquals(15, Hex.toDigit('f', 0));
        assertEquals(15, Hex.toDigit('F', 0));
    }
}