/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Crypt_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSha512CryptWithoutSalt_yWuq0() {
        byte[] keyBytes = new byte[16];
        String result = Crypt.crypt(keyBytes, null);
        assertEquals(Sha2Crypt.sha512Crypt(keyBytes), result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCrypt_wjEb0() {
        String key = "testKey";
        String result = Crypt.crypt(key);
        assertEquals("$6$gtGjqOJj$4PD5nxrlHf/QPQTI.0MYyAiMF1PtB8kN.pY8/3bcsnsRpdkAJ13auWiUYx9e7WsirnbL.dqgthAMqH0KPNRrD.", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCrypt_DtKt0_fid1() {
        byte[] keyBytes = new byte[0];
        String result = Crypt.crypt(keyBytes);
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCrypt_wjEb0_fid1() {
        String key = "testKey";
        String result = Crypt.crypt(key);
        assertEquals("Method body is not implemented", result);
    }
}