/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_XXHash32_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_FHgz0() {
        XXHash32 xxHash32 = new XXHash32();
        long result = xxHash32.getValue();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateEmpty_fkBL0_eRVr0() {
        XXHash32 xxHash32 = new XXHash32();
        xxHash32.update(new byte[0], 0, 0);
        assertEquals(0, xxHash32.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithBuffer_guxm1_WVbF0() {
        XXHash32 xxHash32 = new XXHash32();
        xxHash32.update(0);
        xxHash32.update(0);
        xxHash32.update(0);
        xxHash32.update(0);
        long result = xxHash32.getValue();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithStateUpdated_qXXZ2_Aomz0() {
        XXHash32 xxHash32 = new XXHash32(1);
        xxHash32.update(0);
        byte[] buffer = new byte[4];
        xxHash32.update(buffer, 0, 4);
        long result = xxHash32.getValue();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithStateNotUpdated_Nnzx3_EUPo0() {
        XXHash32 xxHash32 = new XXHash32(1);
        xxHash32.update(0);
        xxHash32.update(0);
        xxHash32.update(0);
        xxHash32.update(0);
        long result = xxHash32.getValue();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateEmpty_fkBL0_eRVr0_fid2() {
        XXHash32 xxHash32 = new XXHash32();
        xxHash32.update(new byte[0], 377942325, 377942325);
        assertEquals(0, xxHash32.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithStateNotUpdated_Nnzx3_EUPo2012518600() {
        XXHash32 xxHash32 = new XXHash32(1);
        xxHash32.update(2012518600);
        xxHash32.update(2012518600);
        xxHash32.update(2012518600);
        xxHash32.update(2012518600);
        long result = xxHash32.getValue();
        assertEquals(2012518600, result);
    }
}