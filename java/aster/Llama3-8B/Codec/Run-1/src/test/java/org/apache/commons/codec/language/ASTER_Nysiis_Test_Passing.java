/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Nysiis_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrictStrict_gZTv0() {
        Nysiis nysiis = new Nysiis(true);
        assertTrue(nysiis.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrictNotStrict_dDdu1() {
        Nysiis nysiis = new Nysiis(false);
        assertFalse(nysiis.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNonString_mxAF1() {
        Nysiis nysiis = new Nysiis();
        try {
            nysiis.encode(123);
            fail("Expected EncoderException");
        } catch (EncoderException e) {
            assertEquals("Parameter supplied to Nysiis encode is not of type java.lang.String", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis1_HIMS0_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Thomas");
        assertEquals("TAN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis2_OWEs1_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Katherine");
        assertEquals("CATARA", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis3_BxOF2_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Schmidt");
        assertEquals("SNAD", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis4_bSBP3_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Phelps");
        assertEquals("FALP", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis5_iBZA4_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Eve");
        assertEquals("EV", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis6_VNRf5_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Helen");
        assertEquals("HALAN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_mzQS6_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Walter");
        assertEquals("WALTAR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis2_JDCV1_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Smith");
        assertEquals("SNAT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis3_tKPW2_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("John");
        assertEquals("JAN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis5_cZqF4_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("William");
        assertEquals("WALAN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis6_AaHx5_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Elizabeth");
        assertEquals("ELASAB", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_EeSe6_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("James");
        assertEquals("JAN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis8_MyIq7_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Mary");
        assertEquals("MARY", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis9_ddxA8_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Robert");
        assertEquals("RABAD", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis10_IBjT9_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Richard");
        assertEquals("RACAD", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis11_sZTO10_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Michael");
        assertEquals("MACAL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis12_aLOQ11_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Charles");
        assertEquals("CARL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis13_rnCS12_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Christopher");
        assertEquals("CRASTA", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis14_wBYT13_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Alexander");
        assertEquals("ALAXAN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_RaVt0_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.encode("Hello");
        assertEquals("HAL", result);
    }
}