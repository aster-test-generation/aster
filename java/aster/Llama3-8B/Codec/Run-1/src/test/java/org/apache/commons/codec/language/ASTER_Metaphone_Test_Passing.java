/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Metaphone_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone1_hAIh0() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("K");
        Assertions.assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone2_cToO1() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("G");
        Assertions.assertEquals("G", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone3_ylTG2() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("P");
        Assertions.assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone4_UAJE3() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("A");
        Assertions.assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone5_LAhc4() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("E");
        Assertions.assertEquals("E", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone6_onBP5() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("I");
        Assertions.assertEquals("I", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone7_cqVR6() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("O");
        Assertions.assertEquals("O", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone8_xReE7() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("U");
        Assertions.assertEquals("U", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone9_VWVr8() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("B");
        Assertions.assertEquals("B", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone10_rGxK9() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("C");
        Assertions.assertEquals("C", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone11_DVRj10() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("D");
        Assertions.assertEquals("D", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone12_eBkU11() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("F");
        Assertions.assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone14_PQLQ13() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("H");
        Assertions.assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone15_ddPd14() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("J");
        Assertions.assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone17_PvmU16() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("L");
        Assertions.assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone18_lVvS17() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("M");
        Assertions.assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone19_zKFE18() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("N");
        Assertions.assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone21_faPe20() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("Q");
        Assertions.assertEquals("Q", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone1_gyJt0() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("K");
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone2_YAlr1() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("G");
        assertEquals("G", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone3_Agpi2() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("P");
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone4_eXcg3() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("A");
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone5_kVHN4() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("E");
        assertEquals("E", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone6_DurC5() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("I");
        assertEquals("I", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone7_Ffkk6() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("O");
        assertEquals("O", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone8_tjle7() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("U");
        assertEquals("U", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone9_uSos8() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("B");
        assertEquals("B", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone10_JYOr9() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("C");
        assertEquals("C", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone11_wbAp10() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("D");
        assertEquals("D", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone12_gYyE11() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("F");
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone14_sVHo13() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("H");
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone15_vAzl14() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("J");
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone17_kLvT16() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("L");
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone18_ISfh17() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("M");
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone19_Ciad18() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("N");
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone21_QDXE20() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("Q");
        assertEquals("Q", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone22_qopQ21() {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone1_LApN0() {
        Metaphone metaphone = new Metaphone();
        assertEquals("AFN", metaphone.metaphone("aphon"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone2_ocAB1() {
        Metaphone metaphone = new Metaphone();
        assertEquals("B", metaphone.metaphone("b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone3_tbDx2() {
        Metaphone metaphone = new Metaphone();
        assertEquals("C", metaphone.metaphone("c"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone4_UUTu3() {
        Metaphone metaphone = new Metaphone();
        assertEquals("D", metaphone.metaphone("d"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone5_COGm4() {
        Metaphone metaphone = new Metaphone();
        assertEquals("F", metaphone.metaphone("f"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone6_pmek5() {
        Metaphone metaphone = new Metaphone();
        assertEquals("G", metaphone.metaphone("g"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone7_atSa6() {
        Metaphone metaphone = new Metaphone();
        assertEquals("H", metaphone.metaphone("h"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone8_xAus7() {
        Metaphone metaphone = new Metaphone();
        assertEquals("J", metaphone.metaphone("j"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone9_ifdv8() {
        Metaphone metaphone = new Metaphone();
        assertEquals("K", metaphone.metaphone("k"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone10_HWQG9() {
        Metaphone metaphone = new Metaphone();
        assertEquals("L", metaphone.metaphone("l"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone11_SQpY10() {
        Metaphone metaphone = new Metaphone();
        assertEquals("M", metaphone.metaphone("m"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone12_NjDK11() {
        Metaphone metaphone = new Metaphone();
        assertEquals("N", metaphone.metaphone("n"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone13_MJGX12() {
        Metaphone metaphone = new Metaphone();
        assertEquals("P", metaphone.metaphone("p"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone14_gTVc13() {
        Metaphone metaphone = new Metaphone();
        assertEquals("Q", metaphone.metaphone("q"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone15_lpWo14() {
        Metaphone metaphone = new Metaphone();
        assertEquals("R", metaphone.metaphone("r"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone16_buTq15() {
        Metaphone metaphone = new Metaphone();
        assertEquals("S", metaphone.metaphone("s"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone17_MLcr16() {
        Metaphone metaphone = new Metaphone();
        assertEquals("T", metaphone.metaphone("t"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone18_SFSH17() {
        Metaphone metaphone = new Metaphone();
        assertEquals("V", metaphone.metaphone("v"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone19_rIIb18() {
        Metaphone metaphone = new Metaphone();
        assertEquals("W", metaphone.metaphone("w"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone20_Kcen19() {
        Metaphone metaphone = new Metaphone();
        assertEquals("X", metaphone.metaphone("x"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone21_xxsa20() {
        Metaphone metaphone = new Metaphone();
        assertEquals("Y", metaphone.metaphone("y"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone22_ZcIu21() {
        Metaphone metaphone = new Metaphone();
        assertEquals("Z", metaphone.metaphone("z"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone23_YOse22() {
        Metaphone metaphone = new Metaphone();
        assertEquals("AFN", metaphone.metaphone("aphone"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone3_KygX2() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("W");
        Assertions.assertEquals("W", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone4_KfFk3() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("X");
        Assertions.assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone17_OIIC16() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("R");
        Assertions.assertEquals("R", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone18_fdyH17() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("S");
        Assertions.assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone19_qJrC18() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("T");
        Assertions.assertEquals("T", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone20_Zbtc19() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.metaphone("V");
        Assertions.assertEquals("V", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLen_WQWF0() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(5);
        assertEquals(5, metaphone.getMaxCodeLen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsMetaphoneEqual_KXvZ0() {
        Metaphone metaphone = new Metaphone();
        assertTrue(metaphone.isMetaphoneEqual("hello", "hallo"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsMetaphoneNotEqual_efXL1() {
        Metaphone metaphone = new Metaphone();
        assertFalse(metaphone.isMetaphoneEqual("hello", "goodbye"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNonString_Ixrj1() {
        Metaphone metaphone = new Metaphone();
        try {
            metaphone.encode(new Object());
            fail("Expected encode to throw EncoderException for non-string input");
        } catch (EncoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jjKz0() {
        Metaphone metaphone = new Metaphone();
        String result = metaphone.encode("hello");
        assertEquals("HL", result);
    }
}