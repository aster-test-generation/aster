/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CharSequenceUtils_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatchesSameString_MUal0() throws Exception {
        assertTrue(CharSequenceUtils.regionMatches("Hello", true, 0, "Hello", 0, 5));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatchesDifferentString_DNmL1() throws Exception {
        assertFalse(CharSequenceUtils.regionMatches("Hello", true, 0, "World", 0, 5));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatchesSameStringIgnoreCase_cEhF2() throws Exception {
        assertTrue(CharSequenceUtils.regionMatches("Hello", true, 0, "hELLO", 0, 5));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatchesNullString_kikS4() throws Exception {
        assertFalse(CharSequenceUtils.regionMatches(null, true, 0, "Hello", 0, 5));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatchesNullSubstring_TIXP5() throws Exception {
        assertFalse(CharSequenceUtils.regionMatches("Hello", true, 0, null, 0, 5));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatchesEmptyString_wNOQ6() throws Exception {
        assertTrue(CharSequenceUtils.regionMatches("Hello", true, 0, "", 0, 0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatchesEmptySubstring_Xdvh7() throws Exception {
        assertTrue(CharSequenceUtils.regionMatches("Hello", true, 0, "Hello", 5, 0));
    }
}