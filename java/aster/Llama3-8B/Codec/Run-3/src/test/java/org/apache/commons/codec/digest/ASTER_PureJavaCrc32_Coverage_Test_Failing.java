/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PureJavaCrc32_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithNegativeOffset_eGGX11() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8}, -1, 8);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate_xoUR0_fuwG0() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(0);
        assertEquals(0, crc32.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate_xoUR998886100_fuwG998886100() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(998886100);
        assertEquals(998886100, crc32.hashCode());
    }
}