/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Nysiis_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_JEGO0() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("A");
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEVtoEV_Jikw0() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("EVE");
        assertEquals("EV", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQtoQ_qgFb2() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Q");
        assertEquals("Q", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testKtoC_qxIJ5() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("K");
        assertEquals("C", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testKtoN_BLag6() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("KN");
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSCHtoS_kzJd7() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("SCH");
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPtoF_wkKM8() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("PH");
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHtoPrev_gGks9() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("H");
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWtoPrev_zzZE10() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("W");
        assertEquals("W", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMultipleConversions_zvXH11() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("EVEQZM");
        assertEquals("EVAGSN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEdgeCases_xVBY12() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("AEIOU");
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEmptyString_xMNb13() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullString_yyxs14() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis(null);
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEVtoEV_fFsr0() {
        Nysiis nysiis = new Nysiis();
        String str = "EVE";
        String result = nysiis.nysiis(str);
        assertEquals("EV", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testVowelToA_VEdK1() {
        Nysiis nysiis = new Nysiis();
        String str = "AEIOU";
        String result = nysiis.nysiis(str);
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQtoQ_Ohqw2() {
        Nysiis nysiis = new Nysiis();
        String str = "Q";
        String result = nysiis.nysiis(str);
        assertEquals("Q", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testKtoC_ClgC5() {
        Nysiis nysiis = new Nysiis();
        String str = "K";
        String result = nysiis.nysiis(str);
        assertEquals("C", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testKNtoN_OIRn6() {
        Nysiis nysiis = new Nysiis();
        String str = "KN";
        String result = nysiis.nysiis(str);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSCHtoS_lyHB7() {
        Nysiis nysiis = new Nysiis();
        String str = "SCH";
        String result = nysiis.nysiis(str);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPtoF_WWld8() {
        Nysiis nysiis = new Nysiis();
        String str = "PH";
        String result = nysiis.nysiis(str);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHtoPreviousNonVowel_ZqhH9() {
        Nysiis nysiis = new Nysiis();
        String str = "H";
        String result = nysiis.nysiis(str);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNoTranscoding_XRpg12() {
        Nysiis nysiis = new Nysiis();
        String str = "ABC";
        String result = nysiis.nysiis(str);
        assertEquals("ABC", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMultipleTranscodings_NtIh13() {
        Nysiis nysiis = new Nysiis();
        String str = "SCHPH";
        String result = nysiis.nysiis(str);
        assertEquals("SF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLongString_NlSW14() {
        Nysiis nysiis = new Nysiis();
        String str = "SCHPHKNM";
        String result = nysiis.nysiis(str);
        assertEquals("SFN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEmptyString_nuvY15() {
        Nysiis nysiis = new Nysiis();
        String str = "";
        String result = nysiis.nysiis(str);
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullString_rjsT16() {
        Nysiis nysiis = new Nysiis();
        String str = null;
        String result = nysiis.nysiis(str);
        assertEquals(null, result);
    }
}