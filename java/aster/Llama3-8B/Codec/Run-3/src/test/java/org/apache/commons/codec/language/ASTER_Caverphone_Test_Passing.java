/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Caverphone_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCaverphoneEqual_jCyY0() throws Exception {
        Caverphone caverphone = new Caverphone();
        String str1 = "hello";
        String str2 = "hello";
        assertTrue(caverphone.isCaverphoneEqual(str1, str2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCaverphoneNotEqual_vdXf1() throws Exception {
        Caverphone caverphone = new Caverphone();
        String str1 = "hello";
        String str2 = "world";
        assertFalse(caverphone.isCaverphoneEqual(str1, str2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCaverphone_FvpI0() throws Exception {
        Caverphone caverphone = new Caverphone();
        String result = caverphone.caverphone("hello");
        assertEquals("K36H0L0E0R0", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_EWtb0() throws Exception {
        Caverphone caverphone = new Caverphone();
        String input = "test";
        Object result = caverphone.encode(input);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_hxog0() throws Exception {
        Caverphone caverphone = new Caverphone();
        String result = caverphone.encode("hello");
        assert result.equals("KHLLO");
    }
}