/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.CodecPolicy;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Base16_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_ContextNull_Dybv14() {
        Base16 base16 = new Base16();
        base16.encode(new byte[0], 0, 1, null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabet_KLbw0_fid1() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        byte octet = 0x7f; // 0x7f is a valid hexadecimal character
        assertTrue(base16.isInAlphabet(octet));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeTableLength_OVdZ2_LhtH0_fid3() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        byte octet = 0x7f; // 0x7f is a valid hexadecimal character
        assertTrue(base16.isInAlphabet(octet) && (octet & 0xff) < 16);
    }
}