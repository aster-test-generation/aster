/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DigestUtils_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSha_qbxL0() throws NoSuchAlgorithmException {
        DigestUtils digestUtils = new DigestUtils(MessageDigest.getInstance("SHA-1"));
        String data = "Test String";
        byte[] expected = digestUtils.sha(data);
        byte[] actual = MessageDigest.getInstance("SHA-1").digest(data.getBytes());
        assertArrayEquals(actual, expected);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testShaHex_lzNc0_fid2() throws NoSuchAlgorithmException {
        MessageDigest messageDigest = MessageDigest.getInstance("SHA-1");
        DigestUtils digestUtils = new DigestUtils(messageDigest);
        byte[] data = "Hello, World!".getBytes();
        String expected = "0a0a9f2a6772942557ab5355d76af442f8f65e01";
        String result = DigestUtils.shaHex(data);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testShaHex_epuY0_fid2() {
        String data = "Hello, World!";
        String expected = "0a0a9f2a6772942557ab5355d76af442f8f65e01";
        String result = DigestUtils.shaHex(data);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testShaHex_kMmA0_QpIb0_fid2() throws IOException {
        String expected = "87514101785630549e54861e7e3b772a0e86078e";
        byte[] data = "Test data".getBytes();
        String result = DigestUtils.shaHex(data);
        assertEquals(expected, result);
    }
}