/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.CodecPolicy;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Base16_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabet_KLbw0() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        byte octet = 0x7f; // 0x7f is a valid hexadecimal character
        assertFalse(base16.isInAlphabet(octet));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_ContextInvalid_aQvA15() {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeTableLength_OVdZ2_LhtH0() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        byte octet = 0x7f; // 0x7f is a valid hexadecimal character
        assertFalse(base16.isInAlphabet(octet) && (octet & 0xff) < 16);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsNotInAlphabet_PODd1_wfcq0() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        byte octet = (byte) 0x80; // 0x80 is not a valid hexadecimal character
        assertFalse(base16.isInAlphabet(octet));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeTableValueEqualMinusOne_VDYA5_JzDb0() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        byte octet = (byte) 0xff; // 0xff is not a valid hexadecimal character
        assertFalse(base16.isInAlphabet(octet));
    }
}