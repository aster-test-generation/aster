/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Soundex_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNonStringObject_ONiQ0() throws org.apache.commons.codec.EncoderException {
        Soundex soundex = new Soundex();
        try {
            soundex.encode(new Integer(1));
            fail("Expected EncoderException");
        } catch (EncoderException e) {
            assertEquals("Parameter supplied to Soundex encode is not of type java.lang.String", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeValidString_PDHH1() throws org.apache.commons.codec.EncoderException {
        Soundex soundex = new Soundex();
        String result = (String) soundex.encode("Smith");
        assertEquals("S530", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexValidInput_guKD0() {
        Soundex soundex = new Soundex("abcdefghijklmnopqrstuvwxyz");
        String result = soundex.soundex("John");
        assertEquals("Jon0", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexNullInput_VjVQ2() {
        Soundex soundex = new Soundex("abcdefghijklmnopqrstuvwxyz");
        assertEquals(null, soundex.soundex(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexEmptyInput_wlRo3() {
        Soundex soundex = new Soundex("abcdefghijklmnopqrstuvwxyz");
        assertEquals("", soundex.soundex(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexSpecialCaseHW_waso4() {
        Soundex soundex = new Soundex("abcdefghijklmnopqrstuvwxyz", true);
        String result = soundex.soundex("Helen");
        assertEquals("Hele", result);
    }
}