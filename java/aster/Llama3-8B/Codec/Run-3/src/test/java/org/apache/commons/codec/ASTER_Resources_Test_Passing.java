/**
 * Generated by Aster
 */
package org.apache.commons.codec;

import java.io.InputStream;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Resources_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInputStreamExistingResource_uGyQ0() throws Exception {
        InputStream inputStream = Resources.getInputStream("testResource.txt");
        assert inputStream != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInputStreamNonExistingResource_ZYJl1() throws Exception {
        try {
            Resources.getInputStream("nonExistingResource.txt");
            assert false;
        } catch (IllegalArgumentException e) {
            assert e.getMessage().equals("Unable to resolve required resource: nonExistingResource.txt");
        }
    }
}