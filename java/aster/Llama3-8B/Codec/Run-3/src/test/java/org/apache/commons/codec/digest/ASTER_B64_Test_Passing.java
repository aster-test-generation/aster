/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.security.SecureRandom;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_B64_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomSalt_xLLe0() throws Exception {
        Random random = new Random();
        String result = B64.getRandomSalt(10, random);
        assert result.length() == 10;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomSaltWithDifferentLength_bART1() throws Exception {
        Random random = new Random();
        String result = B64.getRandomSalt(20, random);
        assert result.length() == 20;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomSalt_NAoj1() throws Exception {
        SecureRandom random = new SecureRandom();
        String result = B64.getRandomSalt(10, random);
        assert result.length() > 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testB64from24bit1_SYtg0() throws Exception {
        StringBuilder buffer = new StringBuilder();
        B64.b64from24bit((byte) 0x01, (byte) 0x02, (byte) 0x03, 6, buffer);
        assertEquals("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", buffer.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testB64from24bit2_zkbM1() throws Exception {
        StringBuilder buffer = new StringBuilder();
        B64.b64from24bit((byte) 0x00, (byte) 0x00, (byte) 0x00, 6, buffer);
        assertEquals("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", buffer.toString());
    }
}