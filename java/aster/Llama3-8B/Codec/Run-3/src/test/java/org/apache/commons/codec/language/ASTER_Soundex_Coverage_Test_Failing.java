/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Soundex_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexInvalidInput_QXAI1() {
        Soundex soundex = new Soundex("abcdefghijklmnopqrstuvwxyz");
        assertThrows(IllegalArgumentException.class, () -> soundex.soundex("abc"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeValidString_PDHH1_fid2() throws org.apache.commons.codec.EncoderException {
        Soundex soundex = new Soundex();
        String result = (String) soundex.encode("Smith");
        assertEquals("S550", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexValidInput_guKD0_fid2() {
        Soundex soundex = new Soundex("abcdefghijklmnopqrstuvwxyz");
        String result = soundex.soundex("John");
        assertEquals("J000", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexSpecialCaseHW_waso4_fid2() {
        Soundex soundex = new Soundex("abcdefghijklmnopqrstuvwxyz", true);
        String result = soundex.soundex("Helen");
        assertEquals("H000", result);
    }
}