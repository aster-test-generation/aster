/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PureJavaCrc32_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate_RzAA0() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8}, 0, 8);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithOffset_jZhY1() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8}, 2, 6);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithLength_AdlT2() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8}, 0, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithRemainder1_Afvn3() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7}, 0, 7);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithRemainder2_mqZh4() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6}, 0, 6);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithRemainder3_bFpJ5() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4}, 0, 4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithRemainder4_zsVE6() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3}, 0, 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithRemainder5_xcDb7() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2}, 0, 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithRemainder6_IrsU8() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1}, 0, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithRemainder7_tduk9() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{}, 0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithNull_BMcr10() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(null, 0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithNegativeLength_sEEk12() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8}, 0, -1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithZeroLength_yGKZ13() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        crc32.update(new byte[]{1, 2, 3, 4, 5, 6, 7, 8}, 0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithLargeData_EXpA15() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        byte[] data = new byte[1024];
        crc32.update(data, 0, data.length);
    }
}