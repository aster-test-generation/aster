/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Nysiis_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_goCk0() {
        Nysiis nysiis = new Nysiis(true);
        assertTrue(nysiis.isStrict());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeNonString_GeNz1() {
    Nysiis nysiis = new Nysiis();
    try {
        nysiis.encode(123);
        fail("Expected EncoderException");
    } catch (EncoderException e) {
        assertEquals("Parameter supplied to Nysiis encode is not of type java.lang.String", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisNull_XxTL0() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis(null);
        assert result == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisEmpty_MQNw1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("");
        assert result.isEmpty();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisSingleCharacter_wFAe2() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("a");
        assert result.equals("A");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisThreeCharacters_xAUB4() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("abc");
        assert result.equals("ABC");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisFourCharacters_nHjH5() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("abcd");
        assert result.equals("ABCD");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrictFalse_gWRv1_fid1() {
        Nysiis nysiis = new Nysiis();
        assertTrue(nysiis.isStrict());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis1_ASAS0_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Thomas");
        assertEquals("TAN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis2_cNnc1_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Katherine");
        assertEquals("CATARA", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis3_blis2_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Schmidt");
        assertEquals("SNAD", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis4_noyS3_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Phelps");
        assertEquals("FALP", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis5_zUJh4_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Hansen");
        assertEquals("HANSAN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis6_dIny5_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Wagner");
        assertEquals("WAGNAR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_sOsT6_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Eisenhower");
        assertEquals("EASANA", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis8_NZCU7_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Keller");
        assertEquals("CALAR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis9_NUNw8_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Schwartz");
        assertEquals("SWART", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis10_oetn9_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Hoffman");
        assertEquals("HAFNAN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis11_tVtt10_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Wiley");
        assertEquals("WALY", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis12_KLSu11_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Elliott");
        assertEquals("ELAT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis13_JAls12_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Koch");
        assertEquals("CAC", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis14_Nysr13_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Hart");
        assertEquals("HAD", result);
    }
}