/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DoubleMetaphone_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCharAtWithinRange_wVMB0() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String value = "Hello";
    int index = 1;
    char expected = 'e';
    char actual = doubleMetaphone.charAt(value, index);
    assert actual == expected;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCharAtBeforeRange_XVvK1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String value = "Hello";
    int index = -1;
    char expected = Character.MIN_VALUE;
    char actual = doubleMetaphone.charAt(value, index);
    assert actual == expected;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCharAtAfterRange_pJJz2() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String value = "Hello";
    int index = 5;
    char expected = Character.MIN_VALUE;
    char actual = doubleMetaphone.charAt(value, index);
    assert actual == expected;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeValidString_drgt0() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        Object result = doubleMetaphone.encode("test");
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeInvalidParameter_zxIb1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        try {
            doubleMetaphone.encode(123);
            fail("Expected EncoderException");
        } catch (EncoderException e) {
            assertEquals("DoubleMetaphone encode parameter is not of type String", e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_sbmC7() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Harrison", false);
        Assertions.assertEquals("HRSN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_WiVQ10() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kramer", false);
        Assertions.assertEquals("KRMR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_LMSx12() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Mason", false);
        Assertions.assertEquals("MSN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone8_pGDP7() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Harrison", true);
    assertEquals("HRSN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone11_VpyB10() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Keller", true);
    assertEquals("KLR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone13_vfhP12() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Mason", true);
    assertEquals("MSN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_njGD6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Ciao", true);
        assertEquals("X", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_PxBc2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cia", false);
        assertEquals("S", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_IhtB1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Cherny", false);
    assertEquals("XRN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_fvrp2() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Caffrey", false);
    assertEquals("KFR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_rgXl8() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Chorus", false);
    assertEquals("KRS", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone10_ERfj9() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Khorus", false);
    assertEquals("KRS", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_eGIi11() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Khorus", true);
    assertEquals("KRS", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_fQQn8() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Ci", false);
    assertEquals("S", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone10_EVBm9() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Cio", false);
    assertEquals("S", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone11_NZyy10() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Cia", false);
    assertEquals("S", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_umch11() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("C", false);
    assertEquals("K", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone13_Wxgc12() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Cz", false);
    assertEquals("S", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_zNEX8() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("CIA", false);
        assertEquals("S", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_thiq10() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("CZ", false);
        assertEquals("S", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_xrCJ2() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("DT", true);
    assertEquals("T", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_axzY3() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("DD", true);
    assertEquals("T", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_BUHK4() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("T", true);
    assertEquals("T", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_WrGj6() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("B", true);
    assertEquals("P", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_lWJM8() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("F", true);
    assertEquals("F", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone11_pVxy10() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("H", true);
    assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_Wprz11() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("K", true);
    assertEquals("K", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone13_HoXD12() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("M", true);
    assertEquals("M", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsTrue_fHok0() {
        boolean result = DoubleMetaphone.contains("HelloWorld", 0, 5, "Hello");
        assert result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsFalse_cdGc1() {
        boolean result = DoubleMetaphone.contains("HelloWorld", 0, 5, "Goodbye");
        assert !result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsInvalidStartIndex_NPWx4() {
        boolean result = DoubleMetaphone.contains("HelloWorld", 10, 5, "Hello");
        assert !result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_kudW5() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Kan", false);
    assertEquals("KN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_RcTa6() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Ka", false);
    assertEquals("K", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone8_XBtT7() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("K", false);
    assertEquals("K", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_RhRe1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Harrison", false);
        assertEquals("HRSN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_MDbf2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hannah", false);
        assertEquals("HN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_OeSP3() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hole", false);
        assertEquals("HL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_wGHQ4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hole", true);
        assertEquals("HL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_OHJP6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("He", false);
        assertEquals("H", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_dAtc7() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hel", false);
        assertEquals("HL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_Mfnk11() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("He", true);
        assertEquals("H", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_fykE12() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hel", true);
        assertEquals("HL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_cPYR2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Jasper", false);
        assertEquals("JSPR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_vUSn4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Jenson", false);
        assertEquals("JNSN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_stXX5() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Jose", false);
        assertEquals("HS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_BThc6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("San", false);
        assertEquals("SN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_HxGR7() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("J", false);
        assertEquals("J", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_UBux10() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Q", false);
        assertEquals("K", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_QiJr0() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knecht", true);
        assertEquals("NKT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_leHM2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knick", true);
        assertEquals("NK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_dGPH3() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knick", false);
        assertEquals("NK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_kmFM4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knie", true);
        assertEquals("N", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_yUFL5() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knie", false);
        assertEquals("N", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_wVrK8() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Honey", false);
    assertEquals("HN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_jyOv1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Jose", true);
        assertEquals("HS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_YYbd2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("San", true);
        assertEquals("SN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_TUFa9() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hans", true);
        assertEquals("HNS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_SqCi10() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hans", false);
        assertEquals("HNS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_yfML5() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("schmidt", false);
        assertEquals("XMT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_Wgbu4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Koal", false);
        assertEquals("KL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_OXWS5() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Koal", true);
        assertEquals("KL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_iAzU6() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Ko", false);
        assertEquals("K", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_cReC7() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Ko", true);
        assertEquals("K", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_EKVZ9() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone(null, false);
        assertEquals(null, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_sMZh0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Arnow", true);
        assertEquals("ARNF", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_PRjD8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Arno", true);
        assertEquals("ARN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_QYUU9() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone(null, true);
        Assertions.assertEquals(null, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_bUtm10() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Arnow", true);
        Assertions.assertNotEquals("Arnow", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_Zmqi11() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Womo", true);
        Assertions.assertNotEquals("Womo", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_yrkV12() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Filipowicz", true);
        Assertions.assertNotEquals("Filipowicz", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMaxCodeLen_OuLz0_wyuG0() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    doubleMetaphone.setMaxCodeLen(5);
    assertEquals(5, ((DoubleMetaphone) doubleMetaphone).getMaxCodeLen());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxCodeLen_aFRQ4() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        int result = doubleMetaphone.getMaxCodeLen();
        assertEquals(4, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_HNMI0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Archer", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_WeEu1_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Baker", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_Ynoe2_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Carter", false);
    assertEquals("KRTR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_afBK3_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Davenport", false);
    assertEquals("TFNP", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_gOZo4_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Eisenhower", false);
    assertEquals("ASNR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_UiCS5_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Fischer", false);
    assertEquals("FXR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_bZWF6_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Graham", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_glHp8_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Johnson", false);
    assertEquals("JNSN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone10_dbGM9_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Kramer", false);
    assertEquals("KRMR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone11_BVRG10_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Lambert", false);
    assertEquals("LMPR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_RGpF11_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Mayer", false);
    assertEquals("MR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone13_ZCAf12_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Nelson", false);
    assertEquals("NLSN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_XYwA0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Archer", false);
        Assertions.assertEquals("ARXR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_ezhP1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Baker", false);
        Assertions.assertEquals("PKR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_IBPe2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Carter", false);
        Assertions.assertEquals("KRTR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_tCCA3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Dancer", false);
        Assertions.assertEquals("TNSR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_xywh4_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Eagle", false);
        Assertions.assertEquals("AKL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_mqGr5_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Fisher", false);
        Assertions.assertEquals("FXR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_Dezo6_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Gordon", false);
        Assertions.assertEquals("KRTN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_EErb8_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Ingram", false);
        Assertions.assertEquals("ANKR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_oToI9_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Jenkins", false);
        Assertions.assertEquals("JNKN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_wSvd11_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Lambert", false);
        Assertions.assertEquals("LMPR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_JrOf0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Baker", false);
    assertEquals("PKR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_aTeg1_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Baker", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_gobC3_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Baker", true);
    assertEquals("PKR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_VsWZ0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Archer", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_iqhx2_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Carter", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_lAUS3_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Davenport", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_toAg4_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Elder", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_oKkZ5_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Fisher", true);
    assertEquals("FXR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_rxgd6_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Graham", true);
    assertEquals("KRHM", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_oGjQ8_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Ingram", true);
    assertEquals("ANKR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone10_Beyb9_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Jenkins", true);
    assertEquals("ANKN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_VHLt11_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Lambert", true);
    assertEquals("LMPR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_DZII0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Cecilia", true);
        assertEquals("SSL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_AKZXK2() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Czech", true);
        assertEquals("XK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_DNxL3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Czech", false);
        assertEquals("SK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_Obiy4_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Chaos", true);
        assertEquals("XS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_CPpr5_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Chaos", false);
        assertEquals("XS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_bikU7_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Ciao", false);
        assertEquals("S", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_HOsg8_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Coca", true);
        assertEquals("KK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_PnCs9_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Coca", false);
        assertEquals("KK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_nOLd10_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Cock", true);
        assertEquals("KK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_zbnx11_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Cock", false);
        assertEquals("KK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_TjfM12_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Cocky", true);
        assertEquals("KK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone14_VTas13_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Cocky", false);
        assertEquals("KK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_ZILb0_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czech", false);
        assertEquals("SK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_pgtV1_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Focus", false);
        assertEquals("FKS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_FQRb4_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Clelland", false);
        assertEquals("KLLN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_DEwe5_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Caffrey", false);
        assertEquals("KFR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_rDcR6_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gregor", false);
        assertEquals("KRKR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_aETd7_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Chia", false);
        assertEquals("K", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_AbNr10_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Clelland", true);
        assertEquals("KLLN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_XZIo11_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Caffrey", true);
        assertEquals("KFR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_jlvr12_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gregor", true);
        assertEquals("KRKR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_ZzDR0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Michael", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_eijp3_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Gregor", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_jdrM4_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Czerny", false);
    assertEquals("SRN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_ttiM5_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Focaccia", false);
    assertEquals("FKX", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_rvYC6_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("McClelland", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone8_YCrd7_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Chemistry", false);
    assertEquals("KMST", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_qNqD1_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Chia", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_qoCb3_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Focaccia", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_TwFI5_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Caffrey", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_qdhB6_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Gregor", false);
    assertEquals("KRKR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone8_ALoi7_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Ch", false);
    assertEquals("K", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_jjBd0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("KTS", false);
        assertEquals("KTS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_Kwln1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("KTS", true);
        assertEquals("KTS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_WcXA2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kathryn", false);
        assertEquals("K0RN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_qGrQ3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kathryn", true);
        assertEquals("KTRN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_JwsD0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Bacci", false);
        assertEquals("PX", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_FTXb2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("focaccia", false);
        assertEquals("FKX", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_xcNK3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Mac Caffrey", false);
        assertEquals("MKFR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_oDnK4_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Mac Gregor", false);
        assertEquals("MKRK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_AbKh5_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("accident", false);
        assertEquals("AKST", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_RgrU6_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("bacci", false);
        assertEquals("PX", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_OSDC7_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("bellocchio", false);
        assertEquals("PLX", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_bzyB9_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("CH", false);
        assertEquals("K", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_YjzE12_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Clelland", false);
        assertEquals("KLLN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_AJfEc0() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Edge", true);
    assertEquals("AJ", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_AFqY1_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Edgar", true);
    assertEquals("ATKR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_bdau0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.encode("Kathryn");
        assertEquals("K0RN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_lXix0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Kangaroo", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_laPz1_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Kangarue", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_gCMb2_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Kangaru", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_cGwe3_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Kangar", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_UsIt4_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Kang", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_yqSx8_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Gangaroo", false);
    assertEquals("KNKR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone10_lVCH9_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Gangarue", false);
    assertEquals("KNKR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone11_oQja10_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Gangaru", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_fniB11_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Gangar", false);
    assertEquals("KNKR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone13_dXMg12_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Gang", false);
    assertEquals("KNK", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_lOBR0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("hello", false);
    assertEquals("HL", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_LHbh1_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("hello", true);
    assertEquals("HL", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_raMt2_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Helen", false);
    assertEquals("HLN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_EEWV4_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Holly", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_WADW5_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Holly", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_Vyhn6_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Hole", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone8_QsPr7_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Hole", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_hnLP8_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Holler", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone10_MAFk9_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Holler", true);
    assertEquals("HLR", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone11_AGdK10_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Hollow", false);
    assertEquals("HL", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_eeAu11_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Hollow", true);
    assertEquals("HLF", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_Rxxq0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Archer", false);
        assertEquals("ARXR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_yjSc0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Joseph", false);
        assertEquals("JSF", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_Ploe1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("San Jacinto", false);
        assertEquals("SNHS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_fwIF11_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("X", false);
        assertEquals("S", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_FGVA12_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("S", false);
        assertEquals("S", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_GzGQ0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kathryn", true);
        Assertions.assertEquals("KTRN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_YRpt1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kathryn", false);
        Assertions.assertEquals("K0RN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_nSnw2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Graham", true);
        Assertions.assertEquals("KRHM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_UJFS3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Graham", false);
        Assertions.assertEquals("KRHM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_IHNC4_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knecht", true);
        Assertions.assertEquals("NKT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_gvpG5_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knecht", false);
        Assertions.assertEquals("NKT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_KFwx6_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knick", true);
        Assertions.assertEquals("NK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_Cjfz7_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knick", false);
        Assertions.assertEquals("NK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_qSmJ8_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knie", true);
        Assertions.assertEquals("N", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_tpKM9_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knie", false);
        Assertions.assertEquals("N", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_Gsvu10_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebel", true);
        Assertions.assertEquals("NPL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_Xzql11_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebel", false);
        Assertions.assertEquals("NPL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_UgSG12_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebelmann", true);
        Assertions.assertEquals("NPLM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone14_uUbi13_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebelmann", false);
        Assertions.assertEquals("NPLM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_dDOD0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kolbe", false);
        assertEquals("KLP", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_ooFn1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kolbe", true);
        assertEquals("KLP", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_gqSO2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Lloyd", false);
        assertEquals("LT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_ejAB3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Lloyd", true);
        assertEquals("LT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_Jpjm4_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Llano", false);
        assertEquals("LN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_fxYB5_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Llano", true);
        assertEquals("LN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_pxBz6_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Llama", false);
        assertEquals("LM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_ribg7_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Llama", true);
        assertEquals("LM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_Zunm1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Knecht", false);
        assertEquals("NKT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_lMRW6_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebel", true);
        assertEquals("NPL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_zuCo7_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebel", false);
        assertEquals("NPL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_mtbn8_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebelmann", true);
        assertEquals("NPLM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_HNrD9_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebelmann", false);
        assertEquals("NPLM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_ZtnI10_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebelmanns", true);
        assertEquals("NPLM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_easq11_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebelmanns", false);
        assertEquals("NPLM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_zRpl12_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebelmannschaft", true);
        assertEquals("NPLM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone14_QVxh13_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Kniebelmannschaft", false);
        assertEquals("NPLM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_mrrn2_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Babel", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_mioa3_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Cabbage", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_vsOb4_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Dance", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_NXSw5_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Eagle", false);
    assertEquals("AKL", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_SqPh6_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Fable", false);
    assertEquals("FPL", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone8_togt7_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Gnome", false);
    assertEquals("NM", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone10_unpS9_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Igloo", false);
    assertEquals("AKL", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone11_GMMW10_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Jazz", false);
    assertEquals("JS", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_WQQd11_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Kite", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_QDiz0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("John", true);
        assertEquals("AN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_tGuo3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Jacinth", true);
        assertEquals("ASNT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_wKjL4_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Johannes", true);
        assertEquals("AHNS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_LFte5_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Johan", true);
        assertEquals("AHN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_mXAZ6_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Johan", false);
        assertEquals("JHN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_gsbs7_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Johanna", true);
        assertEquals("AHN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_VFTQ8_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Johanna", false);
        assertEquals("JHN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_Fsxs11_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hanna", true);
        assertEquals("HN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_kICs12_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Hanna", false);
        assertEquals("HN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_XkHi0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("smith", true);
        assertEquals("XMT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_dLaU1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("smith", false);
        assertEquals("SM0", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_UqlK2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("schmidt", true);
        assertEquals("SMT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_jqsQ4_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("snider", true);
        assertEquals("XNTR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_zHhN5_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("snider", false);
        assertEquals("SNTR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_BVbp6_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("resnais", true);
        assertEquals("RSNS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_LoNh7_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("resnais", false);
        assertEquals("RSN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_uvZP8_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("carlisle", true);
        assertEquals("KRLL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_wpGp9_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("carlisle", false);
        assertEquals("KRLL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_HMFo10_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("sugar", true);
        assertEquals("SKR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_GTKN11_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("sugar", false);
        assertEquals("XKR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_gvqy12_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("island", true);
        assertEquals("ALNT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone14_kTxi13_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("island", false);
        assertEquals("ALNT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_HJzT12_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("schermerhorn", true);
        assertEquals("SKRM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone14_hTdg13_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("schermerhorn", false);
        assertEquals("XRMR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_xSix0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("KTRN", true);
    assertEquals("KTRN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_zGoY0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Koala", false);
        assertEquals("KL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_EuPt1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Koalas", false);
        assertEquals("KLS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_MrZO2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Koala", true);
        assertEquals("KL", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_SkwL3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Koalas", true);
        assertEquals("KLS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_XsDu8_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("", false);
    assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_rZsC0_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thomas", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_bxXl1_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thames", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_jOPQ2_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Tion", true);
    assertEquals("XN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_YTMD3_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thia", true);
    assertEquals("T", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_hasK4_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Tch", true);
    assertEquals("X", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_ynTZ5_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Th", true);
    assertEquals("T", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone7_vJMo6_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thom", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone8_mbmT7_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thoma", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone9_vSUf8_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thomase", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone10_gXpo9_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thomasa", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone11_JLia10_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thomasa", false);
    assertEquals("TMS", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone12_Mjab11_fid1() {
    DoubleMetaphone dm = new DoubleMetaphone();
    String result = dm.doubleMetaphone("Thomasa", true);
    assertEquals("TMS", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_jDqF0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Archer", true);
        assertEquals("ARKR", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_ghXw2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Roderick", true);
        assertEquals("RTRK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_nlyk3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Roderick", false);
        assertEquals("RTRK", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_Iycq1_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wasserman", true);
        assertEquals("FSRM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_PBVX2_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Uomo", true);
        assertEquals("AM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_epok3_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Filipowicz", true);
        assertEquals("FLPF", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_yTGU4_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Arnow", false);
        assertEquals("ARN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_QHxN5_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wasserman", false);
        assertEquals("ASRM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_PDRG6_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Uomo", false);
        assertEquals("AM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_evRn7_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Filipowicz", false);
        assertEquals("FLPT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_nJzFS9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wass", true);
        assertEquals("FS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_pGNV1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("smiths", false);
        assertEquals("SM0S", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_IAxr2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("smithson", false);
        assertEquals("SM0S", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_WFrG3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("smithson", true);
        assertEquals("XMTS", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone1_eXrP0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Breaux", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_kmaK1_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Breaux", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone3_YvNp2_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Braun", true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone4_kkNm3_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Braun", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone5_aNFY4_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Braun", true);
    assertEquals("PRN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone6_EXPl5_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Braun", false);
    assertEquals("PRN", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_bDpZ0_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Arnow", true);
        Assertions.assertEquals("ARNF", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_MuFy1_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Wasserman", true);
        Assertions.assertEquals("FSRM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_HfEy2_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("WFM", true);
        Assertions.assertEquals("FM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_XgEB3_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("FLPF", true);
        Assertions.assertEquals("FLPF", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_tDSn4_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Arnow", false);
        Assertions.assertEquals("ARN", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_MCzW5_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("Wasserman", false);
        Assertions.assertEquals("ASRM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_LHMs6_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("WAM", false);
        Assertions.assertEquals("AM", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_kOMZ7_fid1() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("FLPT", false);
        Assertions.assertEquals("FLPT", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone2_dAub1_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Koalas", false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoubleMetaphone13_FtXH12_Dnqd0_fid1() {
    DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
    String result = doubleMetaphone.doubleMetaphone("Holly", false);
    assertEquals("HL", result);
}
}