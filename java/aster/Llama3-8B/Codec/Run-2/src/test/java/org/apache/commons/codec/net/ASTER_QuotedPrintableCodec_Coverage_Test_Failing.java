/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import java.io.UnsupportedEncodingException;
import org.apache.commons.codec.DecoderException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_QuotedPrintableCodec_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeSourceStrWithNonAsciiChars_UGgn3() throws java.io.UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String sourceStr = "Hello, ";
        String result = codec.encode(sourceStr, "UTF-8");
        assertEquals("Hello, =C3=A0", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeSourceStrWithNonAsciiCharsAndSpaces_vlpS4() throws java.io.UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String sourceStr = "Hello,  ";
        String result = codec.encode(sourceStr, "UTF-8");
        assertEquals("Hello, =C3=A0 =C3=A0", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeSourceStrWithNonAsciiCharsAndSpecialChars_EHnd5() throws java.io.UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String sourceStr = "Hello, !@#";
        String result = codec.encode(sourceStr, "UTF-8");
        assertEquals("Hello, =C3=A0 !@#", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableEscapeChar_XoiR3() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = new byte[] {(byte) 0x3D};
        byte[] expected = new byte[] {(byte) 0x3D};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableEscapeCharCR_dWaJ4() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = new byte[] {(byte) 0x3D, (byte) 0x0D};
        byte[] expected = new byte[] {(byte) 0x0D};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableEscapeCharLF_DlrZ5() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = new byte[] {(byte) 0x3D, (byte) 0x0A};
        byte[] expected = new byte[] {(byte) 0x0A};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableEscapeCharThreeDigits_EKMY7() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = new byte[] {(byte) 0x3D, (byte) 0x31, (byte) 0x32, (byte) 0x33};
        byte[] expected = new byte[] {(byte) 0x123};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableInvalidEscapeChar_gubs8() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = new byte[] {(byte) 0x3E};
        try {
            QuotedPrintableCodec.decodeQuotedPrintable(bytes);
            fail("DecoderException expected");
        } catch (DecoderException e) {
            assertEquals("Invalid quoted-printable encoding", e.getMessage());
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableInvalidEscapeCharTwoDigits_PaNp9() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = new byte[] {(byte) 0x3D, (byte) 0x31, (byte) 0x34};
        try {
            QuotedPrintableCodec.decodeQuotedPrintable(bytes);
            fail("DecoderException expected");
        } catch (DecoderException e) {
            assertEquals("Invalid quoted-printable encoding", e.getMessage());
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintableInvalidEscapeCharThreeDigits_liJe10() throws org.apache.commons.codec.DecoderException {
        byte[] bytes = new byte[] {(byte) 0x3D, (byte) 0x31, (byte) 0x32, (byte) 0x35};
        try {
            QuotedPrintableCodec.decodeQuotedPrintable(bytes);
            fail("DecoderException expected");
        } catch (DecoderException e) {
            assertEquals("Invalid quoted-printable encoding", e.getMessage());
        }
    }
}