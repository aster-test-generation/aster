/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PureJavaCrc32C_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate_WROQ0() {
        PureJavaCrc32C crc32C = new PureJavaCrc32C();
        byte[] b = new byte[8];
        b[0] = 1;
        b[1] = 2;
        b[2] = 3;
        b[3] = 4;
        b[4] = 5;
        b[5] = 6;
        b[6] = 7;
        b[7] = 8;
        crc32C.update(b, 0, 8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate1_OCVc1() {
        PureJavaCrc32C crc32C = new PureJavaCrc32C();
        byte[] b = new byte[8];
        b[0] = 1;
        b[1] = 2;
        b[2] = 3;
        b[3] = 4;
        b[4] = 5;
        b[5] = 6;
        b[6] = 7;
        b[7] = 8;
        crc32C.update(b, 0, 7);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate2_RrII2() {
        PureJavaCrc32C crc32C = new PureJavaCrc32C();
        byte[] b = new byte[8];
        b[0] = 1;
        b[1] = 2;
        b[2] = 3;
        b[3] = 4;
        b[4] = 5;
        b[5] = 6;
        b[6] = 7;
        b[7] = 8;
        crc32C.update(b, 0, 6);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate3_eVoR3() {
        PureJavaCrc32C crc32C = new PureJavaCrc32C();
        byte[] b = new byte[8];
        b[0] = 1;
        b[1] = 2;
        b[2] = 3;
        b[3] = 4;
        b[4] = 5;
        b[5] = 6;
        b[6] = 7;
        b[7] = 8;
        crc32C.update(b, 0, 5);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate4_OKyH4() {
        PureJavaCrc32C crc32C = new PureJavaCrc32C();
        byte[] b = new byte[8];
        b[0] = 1;
        b[1] = 2;
        b[2] = 3;
        b[3] = 4;
        b[4] = 5;
        b[5] = 6;
        b[6] = 7;
        b[7] = 8;
        crc32C.update(b, 0, 4);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate5_TKfI5() {
        PureJavaCrc32C crc32C = new PureJavaCrc32C();
        byte[] b = new byte[8];
        b[0] = 1;
        b[1] = 2;
        b[2] = 3;
        b[3] = 4;
        b[4] = 5;
        b[5] = 6;
        b[6] = 7;
        b[7] = 8;
        crc32C.update(b, 0, 3);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate6_rZTV6() {
        PureJavaCrc32C crc32C = new PureJavaCrc32C();
        byte[] b = new byte[8];
        b[0] = 1;
        b[1] = 2;
        b[2] = 3;
        b[3] = 4;
        b[4] = 5;
        b[5] = 6;
        b[6] = 7;
        b[7] = 8;
        crc32C.update(b, 0, 2);
    }
}