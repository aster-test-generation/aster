/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;
import org.apache.commons.codec.CodecPolicy;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Base16_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabet_VHhc0() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        byte octet = 0x7f;
        assertTrue(base16.isInAlphabet(octet));
}

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_ContextNull_OlGF14() {
        Base16 base16 = new Base16();
        try {
            base16.encode(new byte[10], 0, 10, null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }
}