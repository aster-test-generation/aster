/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;
import org.apache.commons.codec.CodecPolicy;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Base16_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabetStrict_GrvQ0() {
        Base16 base16 = new Base16(false, CodecPolicy.STRICT);
        byte octet = (byte) 0x61;
        assertTrue(base16.isInAlphabet(octet));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabetLenient_AMBx1() {
        Base16 base16 = new Base16(false, CodecPolicy.LENIENT);
        byte octet = (byte) 0x61;
        assertTrue(base16.isInAlphabet(octet));
    }
}