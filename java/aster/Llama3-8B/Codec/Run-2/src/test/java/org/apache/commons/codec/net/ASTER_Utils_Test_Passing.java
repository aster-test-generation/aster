/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Utils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit0_zlkv0() {
        assertEquals('0', Utils.hexDigit(0));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit1_GOEL1() {
        assertEquals('1', Utils.hexDigit(1));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit2_PStA2() {
        assertEquals('2', Utils.hexDigit(2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit3_RgPu3() {
        assertEquals('3', Utils.hexDigit(3));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit4_yheO4() {
        assertEquals('4', Utils.hexDigit(4));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit5_UWUp5() {
        assertEquals('5', Utils.hexDigit(5));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit6_TLKW6() {
        assertEquals('6', Utils.hexDigit(6));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit7_srjX7() {
        assertEquals('7', Utils.hexDigit(7));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit8_Muth8() {
        assertEquals('8', Utils.hexDigit(8));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit9_zywj9() {
        assertEquals('9', Utils.hexDigit(9));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit10_QoHc10() {
        assertEquals('A', Utils.hexDigit(10));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit11_KgZB11() {
        assertEquals('B', Utils.hexDigit(11));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit12_pGvA12() {
        assertEquals('C', Utils.hexDigit(12));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit13_XHML13() {
        assertEquals('D', Utils.hexDigit(13));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit14_Onbg14() {
        assertEquals('E', Utils.hexDigit(14));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit15_RNfA15() {
        assertEquals('F', Utils.hexDigit(15));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit16_ofaF16() {
        assertEquals('0', Utils.hexDigit(16));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit17_eXtr17() {
        assertEquals('1', Utils.hexDigit(17));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit18_GWoz18() {
        assertEquals('2', Utils.hexDigit(18));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHexDigit19_Dusu19() {
        assertEquals('3', Utils.hexDigit(19));
    }
}