/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_XXHash32_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue_pjHU0_kucn0() {
    XXHash32 xxHash32 = new XXHash32();
    byte[] buffer = new byte[4];
    buffer[0] = 1;
    buffer[1] = 2;
    buffer[2] = 3;
    buffer[3] = 4;
    xxHash32.reset();
    xxHash32.update(buffer, 0, 4);
    long result = xxHash32.getValue();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValueWithSingleByte_BRzF3_ACUP0() {
    XXHash32 xxHash32 = new XXHash32();
    byte[] buffer = new byte[1];
    buffer[0] = 1;
    xxHash32.reset();
    xxHash32.update(buffer, 0, 1);
    long result = xxHash32.getValue();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValueWithLimit_LRGg2_DYuJ0() {
    XXHash32 xxHash32 = new XXHash32();
    byte[] buffer = new byte[8];
    buffer[0] = 1;
    buffer[1] = 2;
    buffer[2] = 3;
    buffer[3] = 4;
    buffer[4] = 5;
    buffer[5] = 6;
    buffer[6] = 7;
    buffer[7] = 8;
    xxHash32.reset();
    xxHash32.update(buffer, 0, buffer.length);
    long result = xxHash32.getValue();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValueWithLimit_LRGg2_DYuJ0_fid2() {
    XXHash32 xxHash32 = new XXHash32();
    byte[] buffer = new byte[8];
    buffer[0] = 1;
    buffer[1] = 2;
    buffer[2] = 3;
    buffer[3] = 4;
    buffer[4] = 5;
    buffer[5] = 6;
    buffer[6] = 7;
    buffer[7] = 8;
    xxHash32.reset();
    xxHash32.update(buffer,339348840, buffer.length);
    long result = xxHash32.getValue();
    assertEquals(0, result);
}
}