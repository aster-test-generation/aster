/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;
import java.io.IOException;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TradeServletAction_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoLogout_StringResults_CAiy0() throws javax.servlet.ServletException, java.io.IOException {
        TradeServletAction action = new TradeServletAction();
        action.doLogout(null, null, null, "userID");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoWelcome_ktXw0_NXNS0() throws ServletException, IOException {
    TradeServletAction action = new TradeServletAction();
    ServletContext ctx = mock(ServletContext.class);
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse resp = mock(HttpServletResponse.class);
    String status = "Test Status";
    action.doLogin(ctx, req, resp, "userID", "passwd");
    verify(req).setAttribute("results", eq(status));
    verify(ctx, times(1)).getRequestDispatcher(TradeConfig.getPage(TradeConfig.WELCOME_PAGE));
    verify(ctx, times(1)).getRequestDispatcher(TradeConfig.getPage(TradeConfig.WELCOME_PAGE)).forward(req, resp);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoHomeSetAttributes_DBgc3_HZwu0() throws ServletException, IOException {
    TradeServletAction tradeServletAction = new TradeServletAction();
    ServletContext ctx = null;
    HttpServletRequest req = null;
    HttpServletResponse resp = null;
    String userID = "testUser";
    String results = "testResults";
    tradeServletAction.doLogin(ctx, req, resp, userID, results);
    assertEquals("testResults", req.getAttribute("results"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoHomeGeneralException_GSZM6_jWVX0() throws ServletException, IOException {
    TradeServletAction tradeServletAction = new TradeServletAction();
    ServletContext ctx = null;
    HttpServletRequest req = null;
    HttpServletResponse resp = null;
    String userID = "testUser";
    String results = "testResults";
    try {
        tradeServletAction.doHome(ctx, req, resp, userID, results);
        fail("Expected ServletException");
    } catch (ServletException e) {
        assertEquals("TradeServletAction.doHome(...) exception user = " + userID, e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoHomeRequestDispatch_qfvj7_yoaU0() throws ServletException, IOException {
    TradeServletAction tradeServletAction = new TradeServletAction();
    ServletContext ctx = null;
    HttpServletRequest req = null;
    HttpServletResponse resp = null;
    String userID = "testUser";
    String results = "testResults";
    tradeServletAction.doLogin(ctx, req, resp, userID, "testPasswd");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoHomeIllegalArgument_gqvH4_mlwf0() throws ServletException, IOException {
    TradeServletAction tradeServletAction = new TradeServletAction();
    ServletContext ctx = null;
    HttpServletRequest req = null;
    HttpServletResponse resp = null;
    String userID = "testUser";
    String results = "testResults";
    try {
        tradeServletAction.doLogin(ctx, req, resp, userID, "testPasswd");
        fail("Expected IllegalArgument Exception");
    } catch (IllegalStateException e) {
        req.setAttribute("results", results + "check userID = " + userID + " and that the database is populated");
        tradeServletAction.doHome(ctx, req, resp, userID, results);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoHomeFinderException_aOAd5_pKbJ0() throws ServletException, IOException {
    TradeServletAction tradeServletAction = new TradeServletAction();
    ServletContext ctx = null;
    HttpServletRequest req = null;
    HttpServletResponse resp = null;
    String userID = "testUser";
    String results = "testResults";
    try {
        tradeServletAction.doLogin(ctx, req, resp, userID, "testPasswd");
        fail("Expected ServletException");
    } catch (ServletException e) {
        req.setAttribute("results", results + "\nCould not find account for + " + userID);
        tradeServletAction.doHome(ctx, req, resp, userID, results);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testStringResults_CqVC0_SVwi0() throws javax.servlet.ServletException, java.io.IOException {
    TradeServletAction tradeServletAction = new TradeServletAction();
    tradeServletAction.doLogin(null, null, null, "userID", "password");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateAccountProfileException_Aywe9_fid1() throws javax.servlet.ServletException, java.io.IOException {
        TradeServletAction tradeServletAction = new TradeServletAction();
        try {
            tradeServletAction.doAccountUpdate(null, null, null, "userID", "password", "cpassword", "fullName", "address", "creditcard", "email");
            fail("Expected ServletException");
        } catch (ServletException e) {
            assertEquals("TradeServletAction.doAccountUpdate(...) exception user =userID", e.getMessage());
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPasswordLengthZero_DCfY3_BJJK0_fid1() throws javax.servlet.ServletException, java.io.IOException {
    TradeServletAction tradeServletAction = new TradeServletAction();
    try {
        tradeServletAction.doLogin(null, null, null, "userID", "");
    } catch (Exception e) {
        assertEquals("Could not find account for + userID", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFullNameLengthZero_EIQR4_nJKr0_fid1() throws javax.servlet.ServletException, java.io.IOException {
    TradeServletAction tradeServletAction = new TradeServletAction();
    try {
        tradeServletAction.doLogin(null, null, null, "userID", "password");
    } catch (Exception e) {
        assertEquals("Could not find account for + userID", e.getMessage());
    }
}
}