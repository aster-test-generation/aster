/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JsonMessage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_PSuk0() {
        JsonMessage jsonMessage = new JsonMessage();
        String result = jsonMessage.getValue();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetKey_zwVz0() {
        JsonMessage jsonMessage = new JsonMessage();
        String expected = "expectedKey";
        jsonMessage.setKey(expected);
        String actual = jsonMessage.getKey();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_PsiU0() {
        JsonMessage jsonMessage = new JsonMessage();
        jsonMessage.setValue("testValue");
        assertEquals("testValue", jsonMessage.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetKey_tVtj0() {
        JsonMessage jsonMessage = new JsonMessage();
        jsonMessage.setKey("testKey");
        assertEquals("testKey", jsonMessage.getKey());
    }
}