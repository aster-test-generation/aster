/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;
import java.util.Properties;
import javax.servlet.ServletContextEvent;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Properties;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.springframework.mock.web.MockServletContext;
public class Aster_TradeWebContextListener_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextDestroyedWithNullEvent_eAHC1() {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = null;
        listener.contextDestroyed(event);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_PublishQuotePriceChangeEnv_VDSK13() {
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_RuntimeModeProperty_rYBP0() {
        Properties prop = new Properties();
        prop.setProperty("runtimeMode", "0");
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(new MockServletContext());
        event.getServletContext().setAttribute("daytrader.properties", prop);
        listener.contextInitialized(event);
        assertEquals(0, TradeConfig.getRunTimeMode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_OrderProcessingModeProperty_gndY5_fid1() {
        Properties prop = new Properties();
        prop.setProperty("orderProcessingMode", "0");
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(new MockServletContext());
        event.getServletContext().setAttribute("daytrader.properties", prop);
        listener.contextInitialized(event);
        assertEquals(0, TradeConfig.getOrderProcessingMode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_MAX_USERSEnv_wpaN7_fid1() {
        System.setProperty("MAX_USERS", "15000");
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(new MockServletContext());
        listener.contextInitialized(event);
        assertEquals(15000, TradeConfig.getMAX_USERS());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_MAX_USERSProperty_SGVL8_fid1() {
        Properties prop = new Properties();
        prop.setProperty("maxUsers", "15000");
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(new MockServletContext());
        event.getServletContext().setAttribute("daytrader.properties", prop);
        listener.contextInitialized(event);
        assertEquals(15000, TradeConfig.getMAX_USERS());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_MAX_QUOTESEnv_nkfC10000() {
        System.setProperty("MAX_QUOTES", "10000");
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(new MockServletContext());
        listener.contextInitialized(event);
        assertEquals(10000, TradeConfig.getMAX_QUOTES());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_MAX_QUOTESProperty_aeVz11_fid1() {
        Properties prop = new Properties();
        prop.setProperty("maxQuotes", "10000");
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(new MockServletContext());
        event.getServletContext().setAttribute("daytrader.properties", prop);
        listener.contextInitialized(event);
        assertEquals(10000, TradeConfig.getMAX_QUOTES());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testContextInitialized_OrderProcessingMode_etDI3_TrMD0_fid1() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertEquals(TradeConfig.getOrderProcessingModeNames()[TradeConfig.getOrderProcessingMode()], "Sync");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testContextInitialized_PublishQuotePriceChange_EMTu12_wGnN0_fid1() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
}
}