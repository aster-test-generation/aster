/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.jaxrs;
import java.util.ArrayList;
import java.util.List;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_QuoteResource_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGet_NullSymbols_sEil1() {
        QuoteResource quoteResource = new QuoteResource();
        String symbols = null;
        try {
            quoteResource.quotesGet(symbols);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGet_ReturnListNotArrayList_hfAc7() {
        QuoteResource quoteResource = new QuoteResource();
        String symbols = "AAPL";
        List<QuoteDataBean> result = quoteResource.quotesGet(symbols);
        assertNotSame(ArrayList.class, result.getClass());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGet_MultipleSymbols_HGwO3() {
        QuoteResource quoteResource = new QuoteResource();
        String symbols = "AAPL,MSFT,GOOG";
        List<QuoteDataBean> result = quoteResource.quotesGet(symbols);
        assertEquals(3, result.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGet_ReturnListNotEmpty_mkpI8() {
        QuoteResource quoteResource = new QuoteResource();
        String symbols = "AAPL";
        List<QuoteDataBean> result = quoteResource.quotesGet(symbols);
        assertNotEquals(0, result.size());
}
}