/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet2Session2Entity_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_xTMT0() {
        PingServlet2Session2Entity pingServlet2Session2Entity = new PingServlet2Session2Entity();
        String expected = "web primitive, tests Servlet to Session to Entity EJB path";
        String actual = pingServlet2Session2Entity.getServletInfo();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_IGcl0_ztxK0() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2Session2Entity pingServlet2Session2Entity = new PingServlet2Session2Entity();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_KmgZ1_PuSs0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    PingServlet2Session2Entity pingServlet2Session2Entity = new PingServlet2Session2Entity();
    try {
        pingServlet2Session2Entity.doGet(req, res);
    } catch (Exception e) {
        fail("doGet should not throw any exception");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_vCWl2_LTlo0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    PingServlet2Session2Entity pingServlet2Session2Entity = new PingServlet2Session2Entity();
    try {
        pingServlet2Session2Entity.doGet(req, res);
        verify(req).getMethod();
    } catch (Exception e) {
        fail("doGet should not throw any exception");
    }
}

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testInitExceptionPrintStackTrace_Zlhe10_Aljg0() throws javax.servlet.ServletException {
    PingServlet2Session2Entity entity = new PingServlet2Session2Entity();
    entity.init(null);
    assertEquals(true, true);
}
}