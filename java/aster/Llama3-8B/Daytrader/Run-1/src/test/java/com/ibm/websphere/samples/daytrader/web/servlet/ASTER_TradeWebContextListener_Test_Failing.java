/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContextEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;

import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TradeWebContextListener_Test_Failing {
    TradeWebContextListener tradewebcontextlistener;
    ServletContextEvent servletcontextevent;
    Properties prop;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitializedRuntimeMode_eVsl1() {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(null);
        System.setProperty("RUNTIME_MODE", "1");
        listener.contextInitialized(event);
        System.out.print("Running in " + TradeConfig.getRunTimeModeNames()[TradeConfig.getRunTimeMode()] + " Mode");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitializedOrderProcessingMode_Uqoc2() {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(null);
        System.setProperty("ORDER_PROCESSING_MODE", "1");
        listener.contextInitialized(event);
        System.out.print("Running in " + TradeConfig.getOrderProcessingModeNames()[TradeConfig.getOrderProcessingMode()] + " Order Processing Mode");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitializedMaxUsers_zNQD3() {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(null);
        System.setProperty("MAX_USERS", "1");
        listener.contextInitialized(event);
        System.out.print("MAX_USERS = " + TradeConfig.getMAX_USERS() + " users");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitializedMaxQuotes_QpcA4() {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(null);
        System.setProperty("MAX_QUOTES", "1");
        listener.contextInitialized(event);
        System.out.print("MAX_QUOTES = " + TradeConfig.getMAX_QUOTES() + " quotes");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitializedWebInterface_yfuQ7() {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(null);
        System.setProperty("WEB_INTERFACE", "1");
        listener.contextInitialized(event);
        System.out.println("WebInterface: " + TradeConfig.getWebInterface());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitializedDisplayOrderAlerts_KmJI6_NBQz0() {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = new ServletContextEvent(null);
        System.setProperty("DISPLAY_ORDER_ALERTS", "true");
        listener.contextInitialized(event);
        System.out.println("DisplayOrderAlerts: " + TradeConfig.getDisplayOrderAlerts());
    }
}