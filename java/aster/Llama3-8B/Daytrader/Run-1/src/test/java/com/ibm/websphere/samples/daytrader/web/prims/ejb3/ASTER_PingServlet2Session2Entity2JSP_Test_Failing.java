/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;

import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2Entity2JSP_Test_Failing {
    PingServlet2Session2Entity2JSP pingservlet2session2entity2jsp;
    ServletConfig servletConfig;
    HttpServlet httpServlet;
    HttpServlet httpservlet;
    ServletConfig servletconfig;
    HttpServletRequest httpservletrequest;
    ServletContext servletcontext;
    HttpServletResponse httpservletresponse;
    private TradeServices tradeSLSBLocal;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_UaMa0() {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        String result = servlet.getServletInfo();
        assertEquals("web primitive, tests Servlet to Session to Entity EJB to JSP path", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_QYAD0() throws ServletException {
        httpServlet = mock(HttpServlet.class);
        servletConfig = mock(ServletConfig.class);
        pingservlet2session2entity2jsp = new PingServlet2Session2Entity2JSP();
        pingservlet2session2entity2jsp.init(servletConfig);
        verify(servletConfig).getServletContext();
        verify(servletConfig).getInitParameter("param1");
        verify(servletConfig).getInitParameter("param2");
        verify(pingservlet2session2entity2jsp, never()).init(servletConfig);
    }
}