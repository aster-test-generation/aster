/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XMLObject_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0011_BnIj0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0011();
        assert result != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0001_ByUN0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0001();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0005_Osaq0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0005();
        assertEquals("Your expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0004_jqEt0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0004();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0003_LOnE0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0003();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetX_nEpZ0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getX();
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0013_suEq0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0013();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0014_XuRt0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0014();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0016_GyCF0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0016();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0010_NgDm0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0010();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0012_qvdQ0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0012();
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0008_bIFx0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0008();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0007_hFmP0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0007();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0006_vcKw0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0006();
        assertEquals("Expected result", result);
    }
}