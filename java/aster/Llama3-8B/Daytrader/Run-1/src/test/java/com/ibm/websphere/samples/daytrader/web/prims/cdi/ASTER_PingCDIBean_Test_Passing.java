/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.spi.Bean;
import javax.enterprise.inject.spi.BeanManager;
import javax.naming.InitialContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;

import org.mockito.MockedConstruction;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingCDIBean_Test_Passing {
    private static int getBeanManagerHitCountJNDI = 0;
    PingCDIBean pingcdibean;
    InitialContext initialcontext;
    MockedConstruction<InitialContext> mockedInitialContext;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHello_ECEC0() {
        PingCDIBean bean = new PingCDIBean();
        int result = bean.hello();
        assertEquals(1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetBeanMangerViaJNDI() throws Exception {
        mockedInitialContext = mockConstruction(InitialContext.class);
        initialcontext = mock(InitialContext.class);
        pingcdibean = new PingCDIBean();
        // Mock the lookup method to return a BeanManager
        when(initialcontext.lookup("java:comp/BeanManager")).thenReturn(mock(BeanManager.class));
        // Mock the getBeans method to return a Set of Beans
        BeanManager beanManager = mock(BeanManager.class);
        Set<Bean<?>> beans = mock(Set.class);
        when(beanManager.getBeans(Object.class)).thenReturn(beans);
        // Call the method under test
        int result = pingcdibean.getBeanMangerViaJNDI();
        // Verify the method under test
        verify(initialcontext).lookup("java:comp/BeanManager");
        verify(beanManager).getBeans(Object.class);
        assertEquals(1, getBeanManagerHitCountJNDI);
    }
}