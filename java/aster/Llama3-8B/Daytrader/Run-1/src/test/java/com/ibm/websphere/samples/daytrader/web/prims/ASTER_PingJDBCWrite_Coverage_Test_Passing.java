/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingJDBCWrite_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_yEam0() {
        PingJDBCWrite pingJDBCWrite = new PingJDBCWrite();
        String expected = "Basic JDBC Write using a prepared statment makes use of TradeJDBC code.";
        String actual = pingJDBCWrite.getServletInfo();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_TIBV0_VtuZ0() throws javax.servlet.ServletException, java.io.IOException {
    PingJDBCWrite pingJDBCWrite = new PingJDBCWrite();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_gfFx1_lMnm0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    PingJDBCWrite pingJDBCWrite = new PingJDBCWrite();
    try {
        pingJDBCWrite.doGet(req, res);
    } catch (Exception e) {
        fail("doGet should not throw any exception");
    }
}
}