/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collection;
import java.util.concurrent.Future;
import com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean;
import com.ibm.websphere.samples.daytrader.entities.AccountDataBean;
import com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean;
import com.ibm.websphere.samples.daytrader.entities.HoldingDataBean;
import com.ibm.websphere.samples.daytrader.entities.OrderDataBean;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import com.ibm.websphere.samples.daytrader.util.FinancialUtils;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.Collection;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TradeDirect_Coverage_Test_Passing {
    private boolean inSession;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMarketSummaryIntervalZero_OOjg0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        MarketSummaryDataBean marketSummaryDataBean = tradeDirect.getMarketSummary();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderAsync_inSessionFalse_cgDQ0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.setInSession(false);
        Future<OrderDataBean> result = tradeDirect.completeOrderAsync(1, true);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderAsync_inSessionTrue_amna1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.setInSession(true);
        Future<OrderDataBean> result = tradeDirect.completeOrderAsync(1, true);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderAsync_submitOrder_wwTT2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.setInSession(false);
        Future<OrderDataBean> result = tradeDirect.completeOrderAsync(1, true);
        assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setInSession(boolean inSession) {
        this.inSession = inSession;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrderWithValidInput_VtBk0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.queueOrder(1, true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrderWithNullOrderID_MzXy1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.queueOrder(null, true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrderWithZeroOrderID_LwpA2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.queueOrder(0, true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrderWithNegativeOrderID_FPsk3() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.queueOrder(-1, true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrderWithTwoPhaseFalse_VftR4() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.queueOrder(1, false);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteNullSymbol_SdCq0() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.createQuote(null, "Company Name", BigDecimal.ZERO);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteNullCompanyName_yHWw1() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.createQuote("Symbol", null, BigDecimal.ZERO);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteNullPrice_oeXu2() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.createQuote("Symbol", "Company Name", null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteValidInput_tZVt3() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        QuoteDataBean quoteData = tradeDirect.createQuote("Symbol", "Company Name", BigDecimal.ONE);
        assertNotNull(quoteData);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteLogTrace_GqEF4() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.createQuote("Symbol", "Company Name", BigDecimal.ONE);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuotePriceScale_LuSI5() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        BigDecimal price = BigDecimal.ONE.setScale(FinancialUtils.SCALE, FinancialUtils.ROUND);
        assertEquals(price, price.setScale(FinancialUtils.SCALE, FinancialUtils.ROUND));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteVolume_Kfyv6() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        double volume = 100.0;
        QuoteDataBean quoteData = tradeDirect.createQuote("Symbol", "Company Name", BigDecimal.ONE);
        assertEquals(volume, quoteData.getVolume(), 0.0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteChange_jlQX7() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        double change = 10.0;
        QuoteDataBean quoteData = tradeDirect.createQuote("Symbol", "Company Name", BigDecimal.ONE);
        assertEquals(change, quoteData.getChange(), 0.0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteSetSymbol_CpIZ10() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String symbol = "Symbol";
        tradeDirect.createQuote(symbol, "Company Name", BigDecimal.ONE);
        assertEquals(symbol, ((QuoteDataBean) tradeDirect.createQuote(symbol, "Company Name", BigDecimal.ONE)).getSymbol());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteSetCompanyName_LsHB11() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String companyName = "Company Name";
        tradeDirect.createQuote("Symbol", companyName, BigDecimal.ONE);
        assertEquals(companyName, ((QuoteDataBean) tradeDirect.createQuote("Symbol", companyName, BigDecimal.ONE)).getCompanyName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteSetVolume_zwMj12() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        double volume = 100.0;
        tradeDirect.createQuote("Symbol", "Company Name", BigDecimal.ONE);
        assertEquals(volume, ((QuoteDataBean) tradeDirect.createQuote("Symbol", "Company Name", BigDecimal.ONE)).getVolume(), 0.0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteSetPrice_VHmI13() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        BigDecimal price = BigDecimal.ONE;
        tradeDirect.createQuote("Symbol", "Company Name", price);
        assertEquals(price, ((QuoteDataBean) tradeDirect.createQuote("Symbol", "Company Name", price)).getPrice());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuoteSetOpen_hoqu14() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        BigDecimal open = BigDecimal.ONE;
        tradeDirect.createQuote("Symbol", "Company Name", BigDecimal.ONE);
        assertEquals(open, ((QuoteDataBean) tradeDirect.createQuote("Symbol", "Company Name", BigDecimal.ONE)).getOpen());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHoldings_imww0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = tradeDirect.getHoldings("userID");
        assertNotNull(holdingDataBeans);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddToCollection_mIuf6() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = new ArrayList<HoldingDataBean>();
        HoldingDataBean holdingData = new HoldingDataBean();
        holdingDataBeans.add(holdingData);
        assertEquals(1, holdingDataBeans.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateOrderNullHoldingData_fRyw2() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountDataBean accountData = new AccountDataBean();
        QuoteDataBean quoteData = new QuoteDataBean("symbol");
        String orderType = "type";
        double quantity = 1.0;
        try {
            OrderDataBean orderData = tradeDirect.createOrder(accountData, quoteData, null, orderType, quantity);
            Assertions.assertNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Exception not expected");
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateQuotePriceVolumeInt_WhenUpdateQuotePriceVolumeReturnsException_ijlf10() throws Exception {
    QuoteDataBean quoteData = new QuoteDataBean();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterNullUserID_TcBa0() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String password = "password";
        String fullname = "fullname";
        String address = "address";
        String email = "email";
        String creditcard = "creditcard";
        BigDecimal openBalance = BigDecimal.ZERO;
        try {
            tradeDirect.register(null, password, fullname, address, email, creditcard, openBalance);
            Assertions.fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterNullPassword_vyue1() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "userID";
        String fullname = "fullname";
        String address = "address";
        String email = "email";
        String creditcard = "creditcard";
        BigDecimal openBalance = BigDecimal.ZERO;
        try {
            tradeDirect.register(userID, null, fullname, address, email, creditcard, openBalance);
            Assertions.fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterNullFullname_cOga2() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "userID";
        String password = "password";
        String address = "address";
        String email = "email";
        String creditcard = "creditcard";
        BigDecimal openBalance = BigDecimal.ZERO;
        try {
            tradeDirect.register(userID, password, null, address, email, creditcard, openBalance);
            Assertions.fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterNullAddress_MOZR3() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "userID";
        String password = "password";
        String fullname = "fullname";
        String email = "email";
        String creditcard = "creditcard";
        BigDecimal openBalance = BigDecimal.ZERO;
        try {
            tradeDirect.register(userID, password, fullname, null, email, creditcard, openBalance);
            Assertions.fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterNullEmail_dWHo4() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "userID";
        String password = "password";
        String fullname = "fullname";
        String address = "address";
        String creditcard = "creditcard";
        BigDecimal openBalance = BigDecimal.ZERO;
        try {
            tradeDirect.register(userID, password, fullname, address, null, creditcard, openBalance);
            Assertions.fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterNullCreditcard_uFAk5() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "userID";
        String password = "password";
        String fullname = "fullname";
        String address = "address";
        String email = "email";
        BigDecimal openBalance = BigDecimal.ZERO;
        try {
            tradeDirect.register(userID, password, fullname, address, email, null, openBalance);
            Assertions.fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterNullOpenBalance_XZcL6() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "userID";
        String password = "password";
        String fullname = "fullname";
        String address = "address";
        String email = "email";
        String creditcard = "creditcard";
        try {
            tradeDirect.register(userID, password, fullname, address, email, creditcard, null);
            Assertions.fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterValidInput_aWPm7() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "userID";
        String password = "password";
        String fullname = "fullname";
        String address = "address";
        String email = "email";
        String creditcard = "creditcard";
        BigDecimal openBalance = BigDecimal.ZERO;
        AccountDataBean accountData = tradeDirect.register(userID, password, fullname, address, email, creditcard, openBalance);
        Assertions.assertNotNull(accountData);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccountProfileData_NullAccountProfileData_KdKD0() throws java.lang.Exception {
        TradeDirect tradeDirect = new TradeDirect();
        AccountProfileDataBean accountProfileData = tradeDirect.getAccountProfileData(null);
        assertNull(accountProfileData);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithValidInput_voId0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        OrderDataBean orderData = tradeDirect.buy("userID", "symbol", 10.0, TradeConfig.SYNCH);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithInvalidUserID_rIFl1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy(null, "symbol", 10.0, TradeConfig.SYNCH);
            fail("Expected Exception");
        } catch (Exception e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithInvalidSymbol_kSLG2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", null, 10.0, TradeConfig.SYNCH);
            fail("Expected Exception");
        } catch (Exception e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithInvalidQuantity_JRyw3() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", "symbol", -10.0, TradeConfig.SYNCH);
            fail("Expected Exception");
        } catch (Exception e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithAsynchOrderProcessingMode_atGv4() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        OrderDataBean orderData = tradeDirect.buy("userID", "symbol", 10.0, TradeConfig.ASYNCH);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithAsynch2PhaseOrderProcessingMode_UuOo5() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        OrderDataBean orderData = tradeDirect.buy("userID", "symbol", 10.0, TradeConfig.ASYNCH_2PHASE);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithRollback_sKRu8() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", "symbol", 10.0, TradeConfig.ASYNCH_2PHASE);
            fail("Expected Exception");
        } catch (Exception e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithOrderProcessingModeInvalidValue_SytJ11() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", "symbol", 10.0, 100);
            fail("Expected Exception");
        } catch (Exception e) {
        }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyWithOrderDataBeanInvalidValue_NqCu13() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", "symbol", 10.0, TradeConfig.SYNCH);
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }
}