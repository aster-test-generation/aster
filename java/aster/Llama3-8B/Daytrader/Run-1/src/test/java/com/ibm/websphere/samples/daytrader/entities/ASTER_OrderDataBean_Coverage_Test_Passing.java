/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_OrderDataBean_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOpenOrderStatusOpen_frEv0() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderStatus("open");
        assertTrue(orderDataBean.isOpen());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOpenOrderStatusProcessing_dsXN1() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderStatus("processing");
        assertTrue(orderDataBean.isOpen());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOpenOrderStatusClosed_ZYCv2() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderStatus("closed");
        assertFalse(orderDataBean.isOpen());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOpenOrderStatusNull_JlPa3() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderStatus(null);
        assertFalse(orderDataBean.isOpen());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_WhenQuoteIsNull_ReturnsSymbol_sdYk0() {
        OrderDataBean orderDataBean = new OrderDataBean();
        String symbol = "ABC";
        orderDataBean.setSymbol(symbol);
        String result = orderDataBean.getSymbol();
        assertEquals(symbol, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_WhenQuoteIsNotNull_ReturnsQuoteSymbol_iOQD1() {
        OrderDataBean orderDataBean = new OrderDataBean();
        QuoteDataBean quote = new QuoteDataBean("ABC");
        orderDataBean.setQuote(quote);
        String result = orderDataBean.getSymbol();
        assertEquals("ABC", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_WhenQuoteIsNullAndSymbolIsNull_ReturnsNull_pjzs2() {
        OrderDataBean orderDataBean = new OrderDataBean();
        String result = orderDataBean.getSymbol();
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_WhenQuoteIsNotNullAndSymbolIsNotNull_ReturnsQuoteSymbol_eIvU3() {
        OrderDataBean orderDataBean = new OrderDataBean();
        QuoteDataBean quote = new QuoteDataBean("ABC");
        orderDataBean.setSymbol("DEF");
        orderDataBean.setQuote(quote);
        String result = orderDataBean.getSymbol();
        assertEquals("ABC", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSellSellOrderType_RcRj0() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderType("sell");
        assertTrue(orderDataBean.isSell());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSellBuyOrderType_ZQBl1() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderType("buy");
        assertFalse(orderDataBean.isSell());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSellNullOrderType_rwvN2() {
        OrderDataBean orderDataBean = new OrderDataBean();
        assertNull(orderDataBean.getOrderType());
        assertFalse(orderDataBean.isSell());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSellEmptyOrderType_RqZi3() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderType("");
        assertFalse(orderDataBean.isSell());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompletedCompleted_VnlP0() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderStatus("completed");
        assertTrue(orderDataBean.isCompleted());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompletedAlertCompleted_jyhG1() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderStatus("alertcompleted");
        assertTrue(orderDataBean.isCompleted());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompletedCancelled_WjEs2() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderStatus("cancelled");
        assertTrue(orderDataBean.isCompleted());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompletedNotCompleted_xSEQ3() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderStatus("open");
        assertFalse(orderDataBean.isCompleted());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompletedNullOrderStatus_zylx4() {
        OrderDataBean orderDataBean = new OrderDataBean();
        assertNull(orderDataBean.getOrderStatus());
        assertFalse(orderDataBean.isCompleted());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsBuyWhenOrderTypeIsBuy_vKlV0() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderType("buy");
        assertTrue(orderDataBean.isBuy());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsBuyWhenOrderTypeIsNotBuy_SDxr1() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderType("sell");
        assertFalse(orderDataBean.isBuy());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsBuyWhenOrderTypeIsNull_YrzG2() {
        OrderDataBean orderDataBean = new OrderDataBean();
        assertNull(orderDataBean.getOrderType());
        assertFalse(orderDataBean.isBuy());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsBuyWhenOrderTypeIsEmpty_nDDI3() {
        OrderDataBean orderDataBean = new OrderDataBean();
        orderDataBean.setOrderType("");
        assertFalse(orderDataBean.isBuy());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSellNullOrderType_rwvN2_1() {
        OrderDataBean orderDataBean = new OrderDataBean();
        assertNull(orderDataBean.getOrderType());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSellNullOrderType_rwvN2_2() {
        OrderDataBean orderDataBean = new OrderDataBean();
        assertFalse(orderDataBean.isSell());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompletedNullOrderStatus_zylx4_1() {
        OrderDataBean orderDataBean = new OrderDataBean();
        assertNull(orderDataBean.getOrderStatus());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCompletedNullOrderStatus_zylx4_2() {
        OrderDataBean orderDataBean = new OrderDataBean();
        assertFalse(orderDataBean.isCompleted());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsBuyWhenOrderTypeIsNull_YrzG2_2() {
        OrderDataBean orderDataBean = new OrderDataBean();
        assertFalse(orderDataBean.isBuy());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsOrderIDNull_jDGL0_QfTH1_1() {
    OrderDataBean order1 = new OrderDataBean();
    OrderDataBean order2 = new OrderDataBean();
    order1.setOrderID(null);
    assertEquals(null, order1.getOrderID());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsOrderIDNull_jDGL0_QfTH1_2() {
    OrderDataBean order1 = new OrderDataBean();
    OrderDataBean order2 = new OrderDataBean();
    order1.setOrderID(null);
    assertTrue(order1.equals(order2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsOrderIDDifferent_inMc1_WTys0() {
    OrderDataBean order1 = new OrderDataBean();
    OrderDataBean order2 = new OrderDataBean();
    order1.setOrderID(1);
    order2.setOrderID(2);
    assertFalse(order1.equals(order2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsOrderIDSame_LVva2_ZvAs0() {
    OrderDataBean order1 = new OrderDataBean();
    OrderDataBean order2 = new OrderDataBean();
    order1.setOrderID(1);
    order2.setOrderID(1);
    assertTrue(order1.equals(order2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsOrderIDNullAndDifferent_Twdu3_yLhJ0() {
    OrderDataBean order1 = new OrderDataBean();
    OrderDataBean order2 = new OrderDataBean();
    order1.setOrderID(null);
    order2.setOrderID(null);
    assertFalse(order1.equals(order2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsOrderIDDifferentAndSame_ZYFI5_AnEQ0() {
    OrderDataBean order1 = new OrderDataBean();
    OrderDataBean order2 = new OrderDataBean();
    order1.setOrderID(1);
    order2.setOrderID(null);
    assertFalse(order1.equals(order2));
}
}