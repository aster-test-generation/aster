/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.Iterator;
import java.util.concurrent.TimeUnit;
import javax.websocket.Session;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import static org.mockito.Mockito.*;

public class Aster_MarketSummaryWebSocket_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOnMarketSummarytUpdate_JcfZ0() {
        MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
        String event = "event";
        marketSummaryWebSocket.onMarketSummarytUpdate(event);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOnStockChange_OpenSession_FNOm0_ruvT0() {
        MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
        Session session = mock(Session.class);
        when(session.isOpen()).thenReturn(true);
        Iterator<Session> iterator = mock(Iterator.class);
        when(iterator.hasNext()).thenReturn(true).thenReturn(false);
        when(iterator.next()).thenReturn(session);
        marketSummaryWebSocket.onOpen(session, null);
        verify(session, times(1)).getAsyncRemote();
    }
}