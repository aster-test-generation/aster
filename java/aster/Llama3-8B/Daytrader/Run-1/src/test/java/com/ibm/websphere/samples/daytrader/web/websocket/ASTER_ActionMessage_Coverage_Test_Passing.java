/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ActionMessage_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingNullJsonText_MlQC0() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding(null);
        assertNull(actionMessage.getDecodedAction());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingEmptyJsonText_ftvE1() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("");
        assertNull(actionMessage.getDecodedAction());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingJsonTextWithoutAction_DOWR2() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("{\"key\":\"value\"}");
        assertNull(actionMessage.getDecodedAction());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingJsonTextWithoutActionKey_pNsN3() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("{\"key\":\"value\",\"action\":\"value\"}");
        assertNull(actionMessage.getDecodedAction());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingJsonTextWithAction_Mpox4() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("{\"key\":\"value\",\"action\":\"test\"}");
        assertEquals("test", actionMessage.getDecodedAction());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingJsonTextWithActionAndOtherKeys_PDoN5() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("{\"key\":\"value\",\"action\":\"test\",\"otherKey\":\"otherValue\"}");
        assertEquals("test", actionMessage.getDecodedAction());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingJsonTextWithMultipleActions_SKvH6() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("{\"key\":\"value\",\"action\":\"test1\",\"action\":\"test2\"}");
        assertEquals("test1", actionMessage.getDecodedAction());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingJsonTextWithNonStringAction_nSVV7() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("{\"key\":\"value\",\"action\":123}");
        assertNull(actionMessage.getDecodedAction());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingJsonTextWithNullAction_YcYJ8() {
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("{\"key\":\"value\",\"action\":null}");
        assertNull(actionMessage.getDecodedAction());
    }
}