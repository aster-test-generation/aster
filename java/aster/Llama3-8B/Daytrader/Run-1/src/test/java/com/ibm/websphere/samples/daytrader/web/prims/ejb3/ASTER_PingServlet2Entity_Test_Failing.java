/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;

import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Entity_Test_Failing {
    @Mock
    private ServletConfig config;
    private PingServlet2Entity pingservlet2entity;
    HttpServletRequest httprequest;
    HttpServletResponse httpservletresponse;
    private static String initTime;
    private static int hitCount;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_rrBI0() {
        PingServlet2Entity entity = new PingServlet2Entity();
        String result = entity.getServletInfo();
        assertEquals("web primitive, tests Servlet to Entity EJB path", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_FhSt0() throws ServletException {
        pingservlet2entity = new PingServlet2Entity();
        pingservlet2entity.init(config);
        Mockito.verify(config, Mockito.times(1)).getServletContext();
        Mockito.verify(config, Mockito.times(1)).getServletContext().getAttribute("javax.servlet.jsp.jstl.fmt.localizationContext");
    }
}