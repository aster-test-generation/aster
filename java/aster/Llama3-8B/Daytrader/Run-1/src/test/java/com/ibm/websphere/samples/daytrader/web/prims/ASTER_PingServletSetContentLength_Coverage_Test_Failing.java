/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletSetContentLength_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_gNDR0() throws ServletException {
        PingServletSetContentLength servlet = new PingServletSetContentLength();
        ServletConfig config = mock(ServletConfig.class);
        servlet.init(config);
        verify(config, times(1)).getServletContext();
        verify(config, times(1)).getInitParameter("param");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_Vfyf0() {
        PingServletSetContentLength servlet = new PingServletSetContentLength();
        String expected = "Basic dynamic HTML generation through a servlet, with contentLength set by contentLength parameter.";
        String actual = servlet.getServletInfo();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testInitSuperInit_cYZJ1_yyDp1() throws ServletException {
    PingServletSetContentLength servlet = new PingServletSetContentLength();
    ServletConfig config = mock(ServletConfig.class);
    servlet.init(config);
    verify(servlet, times(1)).init(config);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_SfhD0_KiNd0() throws javax.servlet.ServletException, java.io.IOException {
    PingServletSetContentLength pingServletSetContentLength = new PingServletSetContentLength();
}
}