/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TestJSONObject_Test_Failing {
    private TestJSONObject testJSONObject;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0001_qGpL0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0001();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0005_ulbT0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0005();
        assertEquals("Your expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0004_rOdA0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0004();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0003_cMNm0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0003();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0002_kQLp0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0002();
        assertEquals("Your expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0013_BpWt0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0013();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0014_Qilh0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0014();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0015_iGwi0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0015();
        assertEquals("Your expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0016_DxPQ0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0016();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0011_Dmuk0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0011();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0009_GrUk0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0009();
        assertEquals("Your expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0008_Gcdz0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0008();
        assertEquals("Your expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0007_mNQH0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0007();
        assertEquals("Expected result", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0006_fkrN0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0006();
        assertEquals("Your expected result", result);
    }
}