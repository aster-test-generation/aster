/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet2Session2Entity2JSP_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_IbqA0() throws ServletException {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        ServletConfig config = mock(ServletConfig.class);
        servlet.init(config);
        verify(config).getServletContext();
        verify(config).getInitParameter("param");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_iLHk0() {
        PingServlet2Session2Entity2JSP pingServlet2Session2Entity2JSP = new PingServlet2Session2Entity2JSP();
        String expected = "web primitive, tests Servlet to Session to Entity EJB to JSP path";
        String actual = pingServlet2Session2Entity2JSP.getServletInfo();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_zChF0() throws ServletException, IOException {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        servlet.doPost(req, res);
        verify(req).getMethod();
        verify(res).setStatus(200);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPostCallGet_RYjq1() throws ServletException, IOException {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        servlet.doPost(req, res);
        verify(req).getMethod();
        verify(res).setStatus(200);
        verify(servlet).doGet(req, res);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testInitSuperCall_sjvB1_IVSs0() throws ServletException {
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    ServletConfig config = mock(ServletConfig.class);
    servlet.init(config);
}
}