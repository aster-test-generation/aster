/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.ibm.websphere.samples.daytrader.util.Log;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet2Jsp_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_Erse0() throws ServletException, IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        servlet.doPost(request, response);
        verify(request).getRequestURI();
        verify(request).getParameter("param");
        verify(response).setStatus(200);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPostWithException_zWCP1() throws ServletException, IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        servlet.doPost(request, response);
        verify(request).getRequestURI();
        verify(request).getParameter("param");
        verify(response).setStatus(500);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_IsIK0_mqmJ0() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2Jsp pingServlet2Jsp = new PingServlet2Jsp();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletRequest requestMock = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    Log log = mock(Log.class);
}
}