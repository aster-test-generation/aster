/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TestJSONObject_Test_Passing {
    private TestJSONObject testJSONObject;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0014_NWTE1() {
        TestJSONObject jsonObject = new TestJSONObject();
        jsonObject.setProp0014("Test String");
        assertEquals("Test String", jsonObject.getProp0014());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0012_GudR0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0012("TestString");
        assertEquals("TestString", testJSONObject.getProp0012());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0013_nvaQ0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0013("TestProp0013");
        assertEquals("TestProp0013", testJSONObject.getProp0013());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0009_iPRK0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0009("TestProp0009");
        assertEquals("TestProp0009", testJSONObject.getProp0009());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0008_khAH0() {
        TestJSONObject jsonObject = new TestJSONObject();
        jsonObject.setProp0008("TestProp0008");
        assertEquals("TestProp0008", jsonObject.getProp0008());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0011_ivWb0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0011("testProp0011");
        assertEquals("testProp0011", testJSONObject.getProp0011());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0007_MYTY1() {
        TestJSONObject jsonObject = new TestJSONObject();
        jsonObject.setProp0007("TestString");
        assertEquals("TestString", jsonObject.getProp0007());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0010_CSxy0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0010("TestProp0010");
        assertEquals("TestProp0010", testJSONObject.getProp0010());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0006_rIBm1() {
        TestJSONObject obj = new TestJSONObject();
        obj.setProp0006("Test String");
        assertEquals("Test String", obj.getProp0006());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0004_HHpI0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0004("testProp0004");
        assertEquals("testProp0004", testJSONObject.getProp0004());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0005_atxp0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0005("testProp0005");
        assertEquals("testProp0005", testJSONObject.getProp0005());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0001_sHhX0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0001("testProp0001");
        assertEquals("testProp0001", testJSONObject.getProp0001());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0003_bbfU0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0003("TestProp0003");
        assertEquals("TestProp0003", testJSONObject.getProp0003());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0015_LMsL0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0015("TestProp0015");
        assertEquals("TestProp0015", testJSONObject.getProp0015());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0002_cTID0() {
        testJSONObject = new TestJSONObject();
        testJSONObject.setProp0002("TestProp0002");
        assertEquals("TestProp0002", testJSONObject.getProp0002());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0016_LxCa0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0016("testProp0016");
        assertEquals("testProp0016", testJSONObject.getProp0016());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0016_ENGK1() {
        TestJSONObject testJSONObject = new TestJSONObject();
        testJSONObject.setProp0016("prop0016");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0007(String prop0007) {
        TestJSONObject jsonObject = new TestJSONObject();
        jsonObject.setProp0016(prop0007);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0016_hanE1() {
        new TestJSONObject().setProp0016("prop0016");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0001_qGpL0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0001();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0005_ulbT0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0005();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0004_rOdA0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0004();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0003_cMNm0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0003();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0002_kQLp0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0002();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0013_BpWt0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0013();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0014_Qilh0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0014();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0015_iGwi0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0015();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0016_DxPQ0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0016();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0011_Dmuk0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0011();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0009_GrUk0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0009();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0008_Gcdz0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0008();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0007_mNQH0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0007();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0006_fkrN0_fid2() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0006();
        assertNull(result);
    }
}