/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TradeConfigJSF_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateConfig_RuntimeMode_kAts0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.updateConfig();
        assertEquals("RunTimeMode: RuntimeMode1", tradeConfigJSF.getResult());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateConfig_RuntimeModeNull_cmpa1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.updateConfig();
        assertEquals("RunTimeMode: RuntimeMode0", tradeConfigJSF.getResult());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateConfig_OrderProcessingModeNull_YTez3() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.updateConfig();
        assertEquals("OrderProcessingMode: OrderProcessingMode0", tradeConfigJSF.getResult());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateConfig_WebInterfaceNull_QYiy5() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.updateConfig();
        assertEquals("Web Interface: WebInterface0", tradeConfigJSF.getResult());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateConfig_WebInterface_BrhD4_gqIo0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    assertEquals("TradeBuildDB: **** Unable to check DB Product name, please check Database/AppServer configuration and retry ****<br/>", tradeConfigJSF.buildDatabaseTables());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateConfig_MAX_USERS_gTGE6_GuHp0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.buildDatabaseTables();
    assertEquals("Trade Users: 10", tradeConfigJSF.getResult());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateConfig_MAX_QUOTES_EUAY7_sbCX1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("Trade Quotes: 20", tradeConfigJSF.buildDatabaseTables());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateConfig_PrimIterations_oJtA9_TdoD0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setPrimIterations(40);
    tradeConfigJSF.updateConfig();
    assertEquals("Primitive Iterations: 40", tradeConfigJSF.getResult());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateConfig_MarketSummaryInterval_pNOi8_CYQK0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.buildDatabaseTables();
    assertEquals("TradeBuildDB: **** DayTrader Database Created, Check System.Out for any errors. ****<br/>", tradeConfigJSF.getResult());
}
}