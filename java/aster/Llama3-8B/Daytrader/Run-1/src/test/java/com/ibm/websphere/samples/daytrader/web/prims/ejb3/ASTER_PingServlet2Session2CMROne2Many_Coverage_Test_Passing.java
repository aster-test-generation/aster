/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet2Session2CMROne2Many_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_uVGS0() {
        PingServlet2Session2CMROne2Many pingServlet2Session2CMROne2Many = new PingServlet2Session2CMROne2Many();
        String result = pingServlet2Session2CMROne2Many.getServletInfo();
        assertEquals("web primitive, tests Servlet to Entity EJB path", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_sFiC0() throws ServletException, IOException {
        PingServlet2Session2CMROne2Many servlet = new PingServlet2Session2CMROne2Many();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        when(request.getMethod()).thenReturn("POST");
        servlet.doPost(request, response);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPostWithGet_kWPy1() throws ServletException, IOException {
        PingServlet2Session2CMROne2Many servlet = new PingServlet2Session2CMROne2Many();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        when(request.getMethod()).thenReturn("POST");
        servlet.doPost(request, response);
        verify(request, times(1)).getMethod();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_hpFS0_JXwt0() throws javax.servlet.ServletException {
    PingServlet2Session2CMROne2Many servlet = new PingServlet2Session2CMROne2Many();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testInitCallsSuperInit_hmEo1_fiDL0() throws ServletException {
    PingServlet2Session2CMROne2Many servlet = new PingServlet2Session2CMROne2Many();
    ServletConfig config = mock(ServletConfig.class);
    servlet.init(config);
    verify(config).getServletContext();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testInitThrowsServletException_cNdd4_kWuZ0() throws ServletException {
    PingServlet2Session2CMROne2Many servlet = new PingServlet2Session2CMROne2Many();
    ServletConfig config = mock(ServletConfig.class);
    when(config.getServletContext()).thenThrow(new ServletException("Test exception"));
    try {
        servlet.init(config);
        fail("ServletException was not thrown");
    } catch (ServletException e) {
        assertEquals("Test exception", e.getMessage());
    }
}
}