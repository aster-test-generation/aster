/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JSFLoginFilter_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRequestIsNull_KiKR2_egbA0() throws ServletException, IOException {
    JSFLoginFilter filter = new JSFLoginFilter();
    filter.doFilter(null, null, null);
    assertEquals(null, ((HttpServletRequest)null).getRequestURI());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRequestIsNotNull_CWyD3_xSTE0() throws ServletException, IOException {
    ServletRequest request = mock(ServletRequest.class);
    JSFLoginFilter filter = new JSFLoginFilter();
    filter.doFilter(request, null, null);
    assertNotNull(request);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testResponseIsNotNull_dHAf5_TCTv0() throws ServletException, IOException {
    ServletResponse response = mock(ServletResponse.class);
    JSFLoginFilter filter = new JSFLoginFilter();
    filter.doFilter(null, response, null);
    assertNotNull(response);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSessionIsNull_eFWe6_gGse0() throws ServletException, IOException {
    JSFLoginFilter filter = new JSFLoginFilter();
    filter.doFilter(null, null, null);
    assertEquals(null, ((HttpServletRequest)null).getSession());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testURLContainsQuote_ZVGp13_MrZM0() throws ServletException, IOException {
    JSFLoginFilter filter = new JSFLoginFilter();
    filter.doFilter(null, null, null);
    HttpServletRequest request = mock(HttpServletRequest.class);
    when(request.getServletPath()).thenReturn("quote");
    HttpServletResponse response = mock(HttpServletResponse.class);
    filter.doFilter(request, response, null);
    verify(response).sendRedirect("welcome.faces");
}
}