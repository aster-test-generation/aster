/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean;
import com.ibm.websphere.samples.daytrader.entities.*;
import com.ibm.websphere.samples.daytrader.util.Log;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.math.BigDecimal;
import java.sql.*;
import java.util.concurrent.TimeUnit;
import javax.enterprise.concurrent.ManagedExecutorService;
import javax.sql.DataSource;
import javax.transaction.UserTransaction;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TradeDirect_Test_Passing {
    TradeDirect tradedirect;
    Connection connection;
    DataSource datasource;
    Statement statement;
    @Mock
    private MarketSummaryDataBean marketSummaryDataBean;
    @Mock
    private PreparedStatement preparedstatement;
    @Mock
    private ResultSet resultset;
    @Mock
    private TradeConfig tradeConfig;
    private TradeDirect tradeDirect;
    private static String getAllQuotesSQL = "select * from quoteejb q";
    private boolean inSession = false;
    OrderDataBean orderDataBean;
    private static String getQuoteSQL = "select * from quoteejb q where q.symbol=?";
    AccountDataBean accountDataBean;
    @Mock
    private PreparedStatement preparedStatement;
    @Mock
    private ResultSet resultSet;
    @Mock
    private DataSource dataSource;
    @Mock
    private AccountDataBean accountData;
    @Mock
    private QuoteDataBean quoteData;
    @Mock
    private HoldingDataBean holdingData;
    @Mock
    private QuoteDataBean quoteDataBean;
    @Mock
    private KeySequenceDirect keySequenceDirect;
    @Mock
    private Log log;
    AccountProfileDataBean accountProfileDataBean;
    private UserTransaction txn;
    private ManagedExecutorService mes;
    private static String getTSIASQL = "select SUM(price)/count(*) as TSIA from quoteejb q ";
    private static String getTSIAQuotesOrderByChangeSQL = "select * from quoteejb q order by q.change1";
    private static String getOpenTSIASQL = "select SUM(open1)/count(*) as openTSIA from quoteejb q ";
    private static BigDecimal ZERO = new BigDecimal(0.0);
    private static String getTSIATotalVolumeSQL = "select SUM(volume) as totalVolume from quoteejb q ";
    private static long nextMarketSummary = System.currentTimeMillis();
    private static final Integer marketSummaryLock = new Integer(0);
    private static MarketSummaryDataBean cachedMSDB = MarketSummaryDataBean.getRandomInstance();
    private static final String logoutSQL = "update accountejb set logoutcount=logoutcount+1 " + "where profile_userid=?";
    private static final String loginSQL = "update accountejb set lastLogin=?, logincount=logincount+1 " + "where profile_userid=?";

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderException_FmWf2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.completeOrder(new Integer(1), false);
            Assertions.fail("Expected Exception");
        } catch (Exception e) {
            Assertions.assertNotNull(e);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderFailure_OGLp1() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.completeOrder(null, true);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderRollback_FbUi2() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.completeOrder(1, false);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetQuoteException_aumv2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.getQuote("symbol");
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellNullUserID_SuEB1() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell(null, 1, TradeConfig.SYNCH);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellNullHoldingID_rRFv2() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("user1", null, TradeConfig.SYNCH);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellInvalidOrderProcessingMode_GTlH3() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("user1", 1, -1);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellAccountDataNotFound_ftEU4() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("user1", 1, TradeConfig.SYNCH);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellOrderProcessingModeZero_dSwy12() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("user1", 1, 0);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellNullUserID_qNkY1() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell(null, 1, TradeConfig.SYNCH);
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellNullHoldingID_ezgJ2() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("userID", null, TradeConfig.SYNCH);
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellInvalidOrderProcessingMode_HQSB3() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("userID", 1, 5);
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellAccountDataNull_gQQD4() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("userID", 1, TradeConfig.SYNCH);
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellNullUserID_YyvX1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell(null, 1, TradeConfig.SYNCH);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellNullHoldingID_cQEc2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("user1", null, TradeConfig.SYNCH);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellAccountDataNull_VgRJ4() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("user1", 1, TradeConfig.SYNCH);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSellOrderDataRolledBack_xMwQ11() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.sell("user1", 1, TradeConfig.ASYNCH_2PHASE);
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHoldingsException_GTGF1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "testUser";
        try {
            tradeDirect.getHoldings(userID);
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOrderCompleted_TtVX0() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.orderCompleted("testUser", 1);
            fail("Expected Exception");
        } catch (Exception e) {
            assertEquals("TradeDirect:orderCompleted method not supported", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImpl_BxUy0() {
        TradeDirect tradeDirect = new TradeDirect();
        int result = tradeDirect.getImpl();
        assertEquals(TradeConfig.DIRECT, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyZeroQuantity_Jzpd3() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", "symbol", 0.0, TradeConfig.SYNCH);
            Assertions.fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyNegativeQuantity_INMO4() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", "symbol", -10.0, TradeConfig.SYNCH);
            Assertions.fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyInvalidOrderProcessingMode_eqTV5() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", "symbol", 10.0, 5);
            Assertions.fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClosedOrdersException_aPMZ1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        String userID = "testUser";
        try {
            tradeDirect.getClosedOrders(userID);
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRecreateDBTablesFailure_sWqu1_bbTO0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Object[] sqlBuffer = new Object[]{"CREATE TABLE", "DROP TABLE", "Invalid SQL"};
        java.io.PrintWriter out = new java.io.PrintWriter(new java.io.File("test.out"));
        boolean result = tradeDirect.recreateDBTables(sqlBuffer, out);
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRecreateDBTablesSuccess_wACi0_izlT0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Object[] sqlBuffer = new Object[]{"CREATE TABLE", "DROP TABLE"};
        java.io.PrintWriter out = new java.io.PrintWriter(System.out);
        assertFalse(tradeDirect.recreateDBTables(sqlBuffer, out));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderError_JNxP2_aDNv0() {
        TradeDirect tradeDirect = new TradeDirect();
        OrderDataBean orderData = OrderDataBean.getRandomInstance();
        orderData.setOrderType("buy");
        orderData.setQuantity(10.0);
        orderData.setPrice(new BigDecimal(100.0));
        orderData.setSymbol("ABC");
        orderData.setOrderID(1);
        AccountDataBean accountData = AccountDataBean.getRandomInstance();
        orderData.setAccount(accountData);
        QuoteDataBean quoteData = QuoteDataBean.getRandomInstance();
        orderData.setQuote(quoteData);
        try {
            tradeDirect.completeOrder(orderData.getOrderID(), true);
            fail("Expected exception to be thrown");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderError_TnBY2_FGha0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        OrderDataBean orderData = new OrderDataBean();
        orderData.setOrderID(1);
        orderData.setOrderType("buy");
        orderData.setSymbol("symbol");
        orderData.setQuantity(10.0);
        orderData.setPrice(new BigDecimal("10.0"));
        AccountDataBean accountData = new AccountDataBean(); // create an instance of AccountDataBean
        orderData.setAccount(accountData); // set the account data
        try {
            tradeDirect.completeOrder(orderData.getOrderID(), true);
            fail("Expected exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderError_Tjug2_RsEP0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        OrderDataBean orderData = new OrderDataBean();
        orderData.setOrderID(1);
        orderData.setOrderType("buy");
        orderData.setSymbol("ABC");
        orderData.setQuantity(10.0);
        orderData.setPrice(new BigDecimal("10.0"));
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/daytrader", "root", "password");
            tradeDirect.completeOrder(orderData.getOrderID(), true);
            Assertions.fail("Expected exception");
        } catch (Exception e) {
            Assertions.assertTrue(true);
        } finally {
            if (conn != null) {
                conn.close();
            }
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyInvalidQuote_Lbab7_TWPH0() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            MarketSummaryDataBean marketSummaryData = tradeDirect.getMarketSummaryInternal();
            Assertions.assertNotNull(marketSummaryData);
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyInvalidHolding_oYxI8_ftyy0() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.getMarketSummaryInternal();
            Assertions.fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterNull_LDir1_KaFH0() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.getMarketSummaryInternal();
            fail("Expected Exception");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyNullUserID_GkdA1_WjuL0() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.getMarketSummaryInternal();
            Assertions.fail("Expected NullPointerException");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuyException_RXpm9() {
        TradeDirect tradeDirect = new TradeDirect();
        try {
            tradeDirect.buy("userID", "symbol", 10.0, TradeConfig.SYNCH);
            throw new Exception("Test Exception");
        } catch (Exception e) {
        }
    }
}