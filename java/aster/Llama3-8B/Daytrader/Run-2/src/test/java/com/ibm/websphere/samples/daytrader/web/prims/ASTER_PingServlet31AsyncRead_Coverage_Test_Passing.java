/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet31AsyncRead_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_elIJ0_RvDH1() throws ServletException, IOException {
    PingServlet31AsyncRead pingServlet31AsyncRead = new PingServlet31AsyncRead();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testInit_SuperInitCalled_fKqe1_lUbK0() throws ServletException {
    PingServlet31AsyncRead pingServlet31AsyncRead = new PingServlet31AsyncRead();
    ServletConfig servletConfig = mock(ServletConfig.class);
    pingServlet31AsyncRead.init(servletConfig);
    verify(servletConfig).getServletContext();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGetPost_xOQY2_OOvv0() throws ServletException, IOException {
    PingServlet31AsyncRead pingServlet31AsyncRead = new PingServlet31AsyncRead();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    when(request.getMethod()).thenReturn("GET");
    pingServlet31AsyncRead.doGet(request, response);
    verify(response).setStatus(HttpServletResponse.SC_OK);
    verify(response).sendRedirect("http://localhost:8080/yourServletURL");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostContentType_bMuc1_MdkS0() throws ServletException, IOException {
    PingServlet31AsyncRead pingServlet31AsyncRead = new PingServlet31AsyncRead();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    when(request.getMethod()).thenReturn("POST");
    pingServlet31AsyncRead.doGet(request, response);
    verify(response, times(1)).setContentType(anyString());
}
}