/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XMLObject_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0001_boPV0() {
        XMLObject xmlObject = new XMLObject();
        String actual = xmlObject.getProp0001();
        String expected = "";
        assertNull(expected);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0004_XSya0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0004();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0003_zzPu0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0003();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0002_qjwz0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0002();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetX_EHhg0() {
        XMLObject xmlObject = new XMLObject();
        String x = xmlObject.getX();
        assertNotNull(x);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0016_DqKw0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0016();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0010_vzpp0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0010();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0009_CJkL0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0009();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0004WithDifferentCombinations_ecSh5_ZbJv0_2() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0004("example");
        xmlObject.setProp0004(String.valueOf(123));
        xmlObject.setProp0004(null);
        xmlObject.setProp0004("");
        assertNull(xmlObject.getProp0004());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0001_boPV0_fid1() {
        XMLObject xmlObject = new XMLObject();
        String actual = xmlObject.getProp0001();
        String expected = "";
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0005_twXf0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0005();
        assertEquals("Expected result", "Actual result");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0002BranchCoverage_VMFX2_2_fid1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0002();
        if (result != null) {
        } else {
        }
        assertFalse(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0014_QMvw0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0014();
        assertEquals("Expected result", "expected value", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0014_emptyString_gciO1() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0014("");
        String result = xmlObject.getProp0014();
        assertEquals("Expected result", "", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0014_null_eUIW2_fid1() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0014(null);
        String result = xmlObject.getProp0014();
        assertEquals("Expected result", null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0014_normalString_PaBH4() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0014("normal string");
        String result = xmlObject.getProp0014();
        assertEquals("Expected result", "normal string", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0015_Bqkx0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0015();
        assertEquals("Expected value", "Actual value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0012_YMmp0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0012();
        assertEquals("Expected result", "Actual result");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0004WithDifferentLengths_ihhY3_1_fid1() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0004("short");
        xmlObject.setProp0004("medium");
        xmlObject.setProp0004("longer");
        assertEquals("short", xmlObject.getProp0004());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0004WithDifferentLengths_ihhY3_2_fid1() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0004("short");
        xmlObject.setProp0004("medium");
        xmlObject.setProp0004("longer");
        assertEquals("medium", xmlObject.getProp0004());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0009_zUMT1_2() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0009();
        assertEquals("expected value", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0008_gWDo0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0008();
        assertEquals("Expected result", "Actual result");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0007_ASFQ0() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0007();
        assertEquals("Expected result", "Actual result");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0004WithDifferentDataTypes_jTNy4_UETb0_1() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0004(Integer.toString(123));
        xmlObject.setProp0004(Double.toString(3.14));
        xmlObject.setProp0004(Boolean.toString(true));
        xmlObject.setProp0004(Double.toString(3.14));
        assertEquals("123", xmlObject.getProp0004());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0004WithDifferentDataTypes_jTNy4_UETb0_3() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0004(Integer.toString(123));
        xmlObject.setProp0004(Double.toString(3.14));
        xmlObject.setProp0004(Boolean.toString(true));
        xmlObject.setProp0004(Double.toString(3.14));
        assertEquals("true", xmlObject.getProp0004());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProp0004WithDifferentCombinations_ecSh5_ZbJv0_1() {
        XMLObject xmlObject = new XMLObject();
        xmlObject.setProp0004("example");
        xmlObject.setProp0004(String.valueOf(123));
        xmlObject.setProp0004(null);
        xmlObject.setProp0004("");
        assertEquals("123", xmlObject.getProp0004());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0002BranchCoverage_VMFX2() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0002();
        if (result != null) {
            assertTrue(true);
        } else {
            assertFalse(true);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetProp0009_zUMT1() {
        XMLObject xmlObject = new XMLObject();
        String result = xmlObject.getProp0009();
        assertNotNull(result);
        assertEquals("expected value", result);
    }
}