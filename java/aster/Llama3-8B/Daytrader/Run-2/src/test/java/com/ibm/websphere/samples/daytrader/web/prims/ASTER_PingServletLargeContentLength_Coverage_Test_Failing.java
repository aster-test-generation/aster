/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletLargeContentLength_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_Iqgp0() {
        PingServletLargeContentLength pingServletLargeContentLength = new PingServletLargeContentLength();
        String expected = "Basic dynamic HTML generation through a servlet, with contentLength set by contentLength parameter.";
        String actual = pingServletLargeContentLength.getServletInfo();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_SfvA0_kEuS0() throws javax.servlet.ServletException, java.io.IOException {
    PingServletLargeContentLength pingServletLargeContentLength = new PingServletLargeContentLength();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPost_hUxN1_thuW0() throws ServletException, IOException {
    PingServletLargeContentLength pingServletLargeContentLength = new PingServletLargeContentLength();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getContentLengthLong()).thenReturn(1024L);
    pingServletLargeContentLength.doGet(req, res);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostWithNegativeLength_Jfeq2_UgoK0() throws ServletException, IOException {
    PingServletLargeContentLength pingServletLargeContentLength = new PingServletLargeContentLength();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getContentLengthLong()).thenReturn(-1024L);
    pingServletLargeContentLength.doGet(req, res);
}
}