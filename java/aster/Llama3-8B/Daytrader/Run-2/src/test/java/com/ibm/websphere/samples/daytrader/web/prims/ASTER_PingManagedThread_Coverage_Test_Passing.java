/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.AsyncContext;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingManagedThread_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_ConfigPassed_Bcub3() throws ServletException {
        PingManagedThread pingManagedThread = new PingManagedThread();
        ServletConfig config = mock(ServletConfig.class);
        pingManagedThread.init(config);
        verify(config).getServletContext();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testInit_SuperInitCalled_pBEr0_klmp0() throws ServletException {
    PingManagedThread pingManagedThread = new PingManagedThread();
    pingManagedThread.init(null);
    assertEquals(true, true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_NHUX0_xzYU0() throws javax.servlet.ServletException, java.io.IOException {
    PingManagedThread pingManagedThread = new PingManagedThread();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    when(request.startAsync()).thenReturn(mock(AsyncContext.class));
    when(response.getOutputStream()).thenReturn(mock(ServletOutputStream.class));
    pingManagedThread.doGet(request, response);
}
}