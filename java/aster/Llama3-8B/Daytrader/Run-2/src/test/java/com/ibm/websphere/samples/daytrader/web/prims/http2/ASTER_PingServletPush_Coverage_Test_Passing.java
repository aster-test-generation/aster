/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.http2;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.PushBuilder;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletPush_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_ConfigPassed_Aomb3() throws javax.servlet.ServletException {
        ServletConfig config = mock(ServletConfig.class);
        PingServletPush servlet = new PingServletPush();
        servlet.init(config);
        verify(config).getServletContext();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPrintWriter_BIIK6_QddG0() throws ServletException, IOException {
    PrintWriter printWriter = mock(PrintWriter.class);
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PingServletPush pingServletPush = new PingServletPush();
    when(request.newPushBuilder()).thenReturn(mock(PushBuilder.class));
    when(response.getWriter()).thenReturn(printWriter);
    pingServletPush.doGet(request, response);
    verify(printWriter, times(1)).write(eq("<html><head><title>Ping Servlet HTTP/2</title></head>"));
    verify(printWriter, times(1)).write(eq("<body><HR><BR><FONT size=\"+2\" color=\"#000066\">Ping Servlet HTTP/2<BR></FONT><FONT size=\"+1\" color=\"#000066\">Init time : "));
    verify(printWriter, times(1)).write(eq("</FONT>  <B>Hit Count: "));
    verify(printWriter, times(1)).write(eq("</B><br>"));
    verify(printWriter, times(1)).write(eq("<img src='images/graph.gif'>"));
    verify(printWriter, times(1)).write(eq("</body></html>"));
}
}