/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.Instance;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_MarketSummaryWebSocket_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOnMarketSummarytUpdate_OPDe0() {
        MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
        String event = "event";
        marketSummaryWebSocket.onMarketSummarytUpdate(event);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSendMarketSummaryUpdateMarketSummary_eQHn0_uRSm0() {
        TradeServices services = mock(TradeServices.class);
        MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket((Instance<TradeServices>) services);
        ActionMessage actionMessage = new ActionMessage();
        actionMessage.doDecoding("updateMarketSummary");
        marketSummaryWebSocket.sendMarketSummary(actionMessage, null);
    }
}