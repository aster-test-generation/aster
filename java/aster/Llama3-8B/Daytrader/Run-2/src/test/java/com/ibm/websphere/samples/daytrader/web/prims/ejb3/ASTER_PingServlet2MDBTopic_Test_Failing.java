/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import java.util.concurrent.TimeUnit;
import javax.jms.ConnectionFactory;
import javax.jms.Topic;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2MDBTopic_Test_Failing {
    private static String initTime;
    private static int hitCount;
    PingServlet2MDBTopic pingServlet2MdbTopic;
    HttpServlet httpServlet;
    @Mock
    HttpServletResponse httpServletResponse;
    PingServlet2MDBTopic pingServlet2MDBTopic;
    private ConnectionFactory topicConnectionFactory;
    private Topic tradeStreamerTopic;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testServletInfo_InwB0() {
        PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
        String expected = "web primitive, configured with trade runtime configs, tests Servlet to Session EJB path";
        String actual = servlet.getServletInfo();
        assertEquals(expected, actual);
    }
}