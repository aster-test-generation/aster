/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.beanval;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletBeanValSimple1_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_qzWG0() {
        PingServletBeanValSimple1 pingServletBeanValSimple1 = new PingServletBeanValSimple1();
        String expected = "Basic dynamic HTML generation through a servlet";
        String actual = pingServletBeanValSimple1.getServletInfo();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_Edvi0_lzLc0() throws javax.servlet.ServletException, java.io.IOException {
    PingServletBeanValSimple1 pingServletBeanValSimple1 = new PingServletBeanValSimple1();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_vHKo1_yMdY0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getMethod()).thenReturn("GET");
    PingServletBeanValSimple1 pingServletBeanValSimple1 = new PingServletBeanValSimple1();
    pingServletBeanValSimple1.doGet(req, res);
    verify(req).getMethod();
    verify(res).setStatus(HttpServletResponse.SC_OK);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostDoGet_jtgR2_MoTC0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getMethod()).thenReturn("POST");
    PingServletBeanValSimple1 pingServletBeanValSimple1 = new PingServletBeanValSimple1();
    pingServletBeanValSimple1.doGet(req, res);
    verify(req, times(1)).getMethod();
    verify(res, times(1)).setStatus(HttpServletResponse.SC_OK);
    verify(res, times(1)).getOutputStream();
    verify(res, times(1)).getWriter();
}
}