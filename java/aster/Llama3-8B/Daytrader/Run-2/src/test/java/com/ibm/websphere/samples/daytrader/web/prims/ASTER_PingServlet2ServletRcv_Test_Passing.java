/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2ServletRcv_Test_Passing {
    private static String initTime = null;
    @Mock
    private ServletConfig servletConfig;
    @InjectMocks
    private PingServlet2ServletRcv pingservlet2servletrcv;
    @Mock
    HttpServlet httpservlet;
    @Mock
    HttpServletRequest httpservletrequest;
    @Mock
    HttpServletResponse httpservletresponse;
    @Mock
    private PingBean pingBean;
    @Mock
    private HttpServletRequest httpServletRequest;
    @Mock
    private HttpServletResponse httpServletResponse;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoPost() throws Exception {
        MockitoAnnotations.initMocks(this);
        pingservlet2servletrcv = new PingServlet2ServletRcv();
        // Given
        when(httpservletrequest.getMethod()).thenReturn("POST");
        when(httpservletrequest.getParameter("param")).thenReturn("value");
        // When
        pingservlet2servletrcv.doPost(httpservletrequest, httpservletresponse);
        // Then
        verify(httpservletresponse, times(1)).sendRedirect(Mockito.anyString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_ChVR0() throws ServletException, IOException {
        PingServlet2ServletRcv pingServlet2ServletRcv = new PingServlet2ServletRcv();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        PrintWriter writer = mock(PrintWriter.class);
        when(res.getWriter()).thenReturn(writer);
        pingServlet2ServletRcv.doPost(req, res);
        verify(writer).println("Hello, World!");
        verify(writer).flush();
    }
}