/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingSession1_Test_Passing {
    private static String initTime;
    private static int hitCount;
    private static int count;
    @Mock
    private ServletConfig config;
    @InjectMocks
    private PingSession1 pingsession1;
    HttpServlet httpservlet;
    HttpServletRequest httpservletrequest;
    HttpSession httpsession;
    HttpServletResponse httpservletresponse;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoPost() throws Exception {
        httpservlet = mock(HttpServlet.class);
        httpservletrequest = mock(HttpServletRequest.class);
        httpsession = mock(HttpSession.class);
        httpservletresponse = mock(HttpServletResponse.class);
        pingsession1 = new PingSession1();
        when(httpservletrequest.getSession(any())).thenReturn(httpsession);
        when(httpservletrequest.getMethod()).thenReturn("POST");
        pingsession1.doPost(httpservletrequest, httpservletresponse);
        verify(httpservletresponse, times(1)).sendRedirect(anyString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_FHvN0() throws ServletException, IOException {
        PingSession1 pingSession1 = new PingSession1();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        when(request.getMethod()).thenReturn("POST");
        when(request.getParameter("param")).thenReturn("value");
        pingSession1.doPost(request, response);
        verify(request).getMethod();
        verify(request).getParameter("param");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_uIfq0() {
        PingSession1 pingSession1 = new PingSession1();
        String result = pingSession1.getServletInfo();
        assertEquals("HTTP Session Key: Tests management of a read only unique id", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoGet_fGAU0() throws Exception {
        HttpServlet httpservlet = mock(HttpServlet.class);
        HttpServletRequest httpservletrequest = mock(HttpServletRequest.class);
        HttpSession httpsession = mock(HttpSession.class);
        HttpServletResponse httpservletresponse = mock(HttpServletResponse.class);
        PingSession1 pingsession1 = new PingSession1();
        String initTime = "2022-01-01 00:00:00";
        int hitCount = 0;
        int count = 0;
        when(httpservletrequest.getSession(any())).thenReturn(httpsession);
        when(httpsession.getAttribute("sessiontest.counter")).thenReturn(null);
        when(httpsession.getAttribute("sessiontest.counter")).thenReturn(new Integer(count++));
        PrintWriter printWriter = mock(PrintWriter.class);
        when(httpservletresponse.getWriter()).thenReturn(printWriter);
        pingsession1.doGet(httpservletrequest, httpservletresponse);
        verify(httpservletresponse).setContentType("text/html");
        verify(httpservletresponse).setHeader("SessionKeyTest-SessionID", "SessionID:1");
        verify(httpservletresponse, times(1)).getWriter();
        verify(httpservletresponse).sendError(500, "PingSession1.doGet(...): error.");
        verify(printWriter).println(anyString());
        verify(printWriter).flush();
        verify(printWriter).close();
    }
}