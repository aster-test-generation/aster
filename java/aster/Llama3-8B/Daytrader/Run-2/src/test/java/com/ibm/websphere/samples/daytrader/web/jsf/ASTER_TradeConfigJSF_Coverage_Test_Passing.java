/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;
import com.ibm.websphere.samples.daytrader.util.Log;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TradeConfigJSF_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPopulateDatabase_BuildDB_Succeeds_ATaW0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String result = tradeConfigJSF.populateDatabase();
        assertEquals("database", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testResetTrade_Constructors_ijOy0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        assertNotNull(tradeConfigJSF);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuildDatabaseTables_DbProductNameNull_xxHV0() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        String result = tradeConfigJSF.buildDatabaseTables();
        assertEquals("database", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateConfig_PublishQuotePriceChange_KKiK7_rNwo0_2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.buildDatabaseTables();
    assertEquals("database", tradeConfigJSF.buildDatabaseTables());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBuildDatabaseTables_DbProductNameOracle_LbED3_MAGb1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String dbProductName = "Oracle";
    String result = tradeConfigJSF.buildDatabaseTables();
    assertEquals("database", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBuildDatabaseTables_DbProductNameOther_mnPm4_vDfb1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String dbProductName = "Other";
    String result = tradeConfigJSF.buildDatabaseTables();
    assertEquals("database", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testResetTrade_Exception_aaSz8_fid1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        try {
            tradeConfigJSF.resetTrade();
            fail("Expected exception");
        } catch (Exception e) {
    assertNull(e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testResetTrade_Log_Error_YdXV10_fid1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        try {
            tradeConfigJSF.resetTrade();
            fail("Expected exception");
        } catch (Exception e) {
    assertNull(e.getMessage());
            Log.error(e, "result");
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateConfig_RuntimeMode_ZAis0_fid1() {
        TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
        tradeConfigJSF.updateConfig();
        assertEquals("DayTrader Configuration Updated", tradeConfigJSF.getResult());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdateConfig_PublishQuotePriceChange_KKiK7_rNwo0_1_fid1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.buildDatabaseTables();
    assertEquals(true, tradeConfigJSF.buildDatabaseTables().equals("database"));}
}