/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TradeAppServlet_Test_Passing {
    TradeAppServlet tradeappservlet;
    HttpServlet httpServlet;
    ServletConfig servletConfig;
    @Mock
    HttpServlet httpservlet;
    @Mock
    ServletConfig servletconfig;
    @Mock
    HttpServletResponse httpservletresponse;
    @Mock
    HttpServletRequest httpservletrequest;
    @Mock
    HttpSession httpsession;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_pNGE0() throws ServletException, IOException {
        TradeAppServlet tradeAppServlet = new TradeAppServlet();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        when(request.getMethod()).thenReturn("POST");
        tradeAppServlet.doPost(request, response);
        verify(request).getMethod();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_PsyY0() {
        TradeAppServlet servlet = new TradeAppServlet();
        String result = servlet.getServletInfo();
        assertEquals("TradeAppServlet provides the standard web interface to Trade", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_IVFR0_cPoT0() throws ServletException, IOException {
        TradeAppServlet servlet = new TradeAppServlet();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        servlet.performTask(request, response);
        verify(request).getParameter("action");
        verify(response, never()).getWriter();
    }
}