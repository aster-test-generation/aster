/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletCDIBeanManagerViaJNDI_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitSuperInit_ZlZW0() throws javax.servlet.ServletException {
        PingServletCDIBeanManagerViaJNDI beanManager = new PingServletCDIBeanManagerViaJNDI();
        beanManager.init(null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setup_mQpO0_IXvY0() throws java.io.IOException {
    PingServletCDIBeanManagerViaJNDI pingServletCDIBeanManagerViaJNDI = new PingServletCDIBeanManagerViaJNDI();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFlushWriter_xjzc5_owat0() throws IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PingServletCDIBeanManagerViaJNDI pingServletCDIBeanManagerViaJNDI = new PingServletCDIBeanManagerViaJNDI();
    PrintWriter writer = response.getWriter();
    pingServletCDIBeanManagerViaJNDI.doGet(request, response);
    verify(writer, times(1)).flush();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCloseWriter_ZgfI6_LQZg0() throws IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PingServletCDIBeanManagerViaJNDI pingServletCDIBeanManagerViaJNDI = new PingServletCDIBeanManagerViaJNDI();
    PrintWriter writer = response.getWriter();
    pingServletCDIBeanManagerViaJNDI.doGet(request, response);
    verify(writer, times(1)).close();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGetWithNullRequest_QJXX9_CwSp0() throws java.io.IOException {
    HttpServletRequest request = null;
    HttpServletResponse response = mock(HttpServletResponse.class);
    try {
        PingServletCDIBeanManagerViaJNDI pingServletCDIBeanManagerViaJNDI = new PingServletCDIBeanManagerViaJNDI();
        pingServletCDIBeanManagerViaJNDI.doGet(request, response);
        fail("Expected exception");
    } catch (NullPointerException e) {
        assertEquals("request cannot be null", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGetWithNullResponse_xbUc10_Nwya0() throws java.io.IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = null;
    try {
        PingServletCDIBeanManagerViaJNDI pingServletCDIBeanManagerViaJNDI = new PingServletCDIBeanManagerViaJNDI();
        pingServletCDIBeanManagerViaJNDI.doGet(request, response);
        fail("Expected exception");
    } catch (NullPointerException e) {
        assertEquals("response cannot be null", e.getMessage());
    }
}
}