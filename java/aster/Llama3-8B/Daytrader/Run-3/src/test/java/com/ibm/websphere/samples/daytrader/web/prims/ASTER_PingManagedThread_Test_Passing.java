/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import javax.enterprise.concurrent.ManagedThreadFactory;
import javax.servlet.ServletConfig;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingManagedThread_Test_Passing {
private static int hitCount;
private static String initTime;
@Mock
    private ServletConfig servletConfig;
@InjectMocks
    private PingManagedThread pingmanagedthread;
HttpServletRequest httpservletrequest;
HttpServletResponse httpservletresponse;
ServletOutputStream servletoutputstream;
HttpServlet httpservlet;
private ManagedThreadFactory managedThreadFactory;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_ZTLm0() {
        PingManagedThread pingManagedThread = new PingManagedThread();
        String result = pingManagedThread.getServletInfo();
        assertEquals("Tests a ManagedThread asynchronous servlet", result);
    }
}