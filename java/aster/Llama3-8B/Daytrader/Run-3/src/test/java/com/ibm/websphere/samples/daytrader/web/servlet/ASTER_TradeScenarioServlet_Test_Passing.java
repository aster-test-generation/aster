/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;
import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TradeScenarioServlet_Test_Passing {
TradeScenarioServlet tradescenarioservlet;
HttpServlet httpservlet;
ServletConfig servletconfig;
HttpServletResponse httpservletresponse;
HttpServletRequest httpservletrequest;
HttpSession httpsession;
ServletContext servletcontext;
private static String tasPathPrefix = "/app?action=";
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testPerformTask_hAction_SWYZ0() throws ServletException, IOException {
    HttpServletResponse httpservletresponse = mock(HttpServletResponse.class);
    HttpServletRequest httpservletrequest = mock(HttpServletRequest.class);
    ServletConfig servletconfig = mock(ServletConfig.class);
    HttpSession httpsession = mock(HttpSession.class);
    ServletContext servletcontext = mock(ServletContext.class);
    TradeScenarioServlet tradescenarioservlet = new TradeScenarioServlet();
    when(httpservletrequest.getParameter("action")).thenReturn("h");
    tradescenarioservlet.performTask(httpservletrequest, httpservletresponse);
    verify(httpservletresponse).setContentType("text/html");
    verify(servletcontext).getRequestDispatcher(tasPathPrefix + "home").include(httpservletrequest, httpservletresponse);
}
}