/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingJDBCRead_Test_Passing {
private static String initTime;
private static int hitCount;
@Mock
    private ServletConfig servletConfig;
@Mock
    private HttpServlet httpServlet;
private PingJDBCRead pingjdbcread;
HttpServletResponse httpservletresponse;
HttpServletRequest httprequest;
HttpServlet httpservlet;
@Mock
    private QuoteDataBean quoteData;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoPost() throws Exception{
        httpservletresponse = mock(HttpServletResponse.class);
        httprequest = mock(HttpServletRequest.class);
        httpservlet = mock(HttpServlet.class);
        pingjdbcread = new PingJDBCRead();
        // Given
        when(httprequest.getMethod()).thenReturn("POST");
        // When
        pingjdbcread.doPost(httprequest, httpservletresponse);
        // Then
        verify(httpservletresponse, times(1)).sendRedirect(anyString());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_vtfg0() {
        PingJDBCRead pingJDBCRead = new PingJDBCRead();
        String expected = "Basic JDBC Read using a prepared statment, makes use of TradeJDBC class";
        String actual = pingJDBCRead.getServletInfo();
        assertEquals(expected, actual);
    }
}