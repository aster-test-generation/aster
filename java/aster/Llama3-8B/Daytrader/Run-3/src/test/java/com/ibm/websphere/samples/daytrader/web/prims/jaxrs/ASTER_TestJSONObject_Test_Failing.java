/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TestJSONObject_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0005_VfqU0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0005();
        assertEquals("Expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0004_qlIZ0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0004();
        assertEquals("Expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0003_wZWN0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0003();
        assertEquals("Your expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0002_SjyK0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0002();
        assertEquals("Expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0014_CIOz0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0014();
        assertEquals("Your expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0015_JoLW0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0015();
        assertEquals("Your expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0010_EdXj0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0010();
        assertEquals("Expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0016_HPZA0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0016();
        assertEquals("Expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0011_KeqB0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0011();
        assertEquals("Expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0012_ehnC0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0012();
        assertEquals("Your expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0008_IAap0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0008();
        assertEquals("Your expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0006_KnES0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0006();
        assertEquals("Your expected result", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProp0007_ctXt0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        String result = testJSONObject.getProp0007();
        assertEquals("Expected result", result);
    }
}