/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.beans;
import java.math.BigDecimal;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_MarketSummaryDataBean_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_EJmv0_1() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Market Summary at: "));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_EJmv0_2() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("TSIA:100"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_EJmv0_3() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("openTSIA:200"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_EJmv0_4() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("volume:300"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_EJmv0_5() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Gainers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_EJmv0_6() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Losers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_aazn1_1() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Market Summary at: "));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_aazn1_2() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("TSIA:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_aazn1_3() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("openTSIA:200"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_aazn1_4() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("volume:300"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_aazn1_5() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Gainers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_aazn1_6() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Losers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_ZqgJ2_1() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Market Summary at: "));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_ZqgJ2_2() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("TSIA:100"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_ZqgJ2_3() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("openTSIA:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_ZqgJ2_4() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("volume:300"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_ZqgJ2_5() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Gainers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_ZqgJ2_6() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Losers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_Oikt3_1() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Market Summary at: "));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_Oikt3_2() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("TSIA:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_Oikt3_3() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("openTSIA:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_Oikt3_4() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("volume:300"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_Oikt3_5() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Gainers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeNotNull_topGainersNotNull_topLosersNotNull_Oikt3_6() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Losers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeIsNull_topGainersNotNull_topLosersNotNull_TtFX4_1() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Market Summary at: "));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeIsNull_topGainersNotNull_topLosersNotNull_TtFX4_2() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("TSIA:100"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeIsNull_topGainersNotNull_topLosersNotNull_TtFX4_3() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("openTSIA:200"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeIsNull_topGainersNotNull_topLosersNotNull_TtFX4_4() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("volume:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeIsNull_topGainersNotNull_topLosersNotNull_TtFX4_5() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Gainers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeIsNull_topGainersNotNull_topLosersNotNull_TtFX4_6() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Losers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeIsNull_topGainersNotNull_topLosersNotNull_jvEu5_1() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Market Summary at: "));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeIsNull_topGainersNotNull_topLosersNotNull_jvEu5_2() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("TSIA:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeIsNull_topGainersNotNull_topLosersNotNull_jvEu5_3() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("openTSIA:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeIsNull_topGainersNotNull_topLosersNotNull_jvEu5_4() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("volume:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeIsNull_topGainersNotNull_topLosersNotNull_jvEu5_5() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Gainers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIAIsNull_openTSIAIsNull_volumeIsNull_topGainersNotNull_topLosersNotNull_jvEu5_6() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Current Top Losers:"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_TSIANotNull_openTSIANotNull_volumeNotNull_topGainersNotNull_topLosersNotNull_EJmv0() {
        MarketSummaryDataBean bean = new MarketSummaryDataBean();
        bean.setTSIA(BigDecimal.valueOf(100));
        bean.setOpenTSIA(BigDecimal.valueOf(200));
        bean.setVolume(300);
        bean.setTopGainers(Arrays.asList(new QuoteDataBean()));
        bean.setTopLosers(Arrays.asList(new QuoteDataBean()));
        String result = bean.toHTML();
        Assertions.assertTrue(result.contains("Market Summary at: "));
        Assertions.assertTrue(result.contains("TSIA:100"));
        Assertions.assertTrue(result.contains("openTSIA:200"));
        Assertions.assertTrue(result.contains("volume:300"));
        Assertions.assertTrue(result.contains("Current Top Gainers:"));
        Assertions.assertTrue(result.contains("Current Top Losers:"));
}
}