/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;
import java.math.BigDecimal;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FinancialUtils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testComputeGainPercentPositive_PSFB0() {
    BigDecimal currentBalance = new BigDecimal("100.0");
    BigDecimal openBalance = new BigDecimal("50.0");
    BigDecimal result = FinancialUtils.computeGainPercent(currentBalance, openBalance);
    assertEquals(new BigDecimal("100.0"), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testComputeGainPercentZero_fgei1() {
    BigDecimal currentBalance = new BigDecimal("0.0");
    BigDecimal openBalance = new BigDecimal("50.0");
    BigDecimal result = FinancialUtils.computeGainPercent(currentBalance, openBalance);
    assertEquals(FinancialUtils.ZERO, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintGainPercentHTMLGainLessThanZero_dudx0() {
        String result = FinancialUtils.printGainPercentHTML(BigDecimal.valueOf(-10.0));
        assertEquals("(<B><FONT color=\"#ff0000\">-10.0%</FONT></B>)<IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintGainPercentHTMLGainGreaterThanZero_DSNt1() {
        String result = FinancialUtils.printGainPercentHTML(BigDecimal.valueOf(10.0));
        assertEquals("(<B><FONT color=\"#009900\">+10.0%</FONT></B>)<IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", result);
    }
}