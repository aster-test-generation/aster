/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServletLargeContentLength_Test_Failing {
PingServletLargeContentLength pingservletlargecontentlength;
ServletConfig servletConfig;
HttpServlet httpServlet;
HttpServletRequest httpservletrequest;
HttpServletResponse httpservletresponse;
HttpServlet httpservlet;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoGet() throws Exception {
        httpservlet = mock(HttpServlet.class);
        httpservletrequest = mock(HttpServletRequest.class);
        pingservletlargecontentlength = new PingServletLargeContentLength();
        // Arrange
        when(httpservletrequest.getMethod()).thenReturn("GET");
        when(httpservletrequest.getParameter("param")).thenReturn("value");
        // Act
        pingservletlargecontentlength.doGet(httpservletrequest, mock(HttpServletResponse.class));
        // Assert
        verify(httpservletrequest, times(1)).getParameter("param");
        verify(httpservletrequest, times(1)).getMethod();
        verify(pingservletlargecontentlength, times(1)).doPost(httpservletrequest, any(HttpServletResponse.class));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_bPXV0() {
        PingServletLargeContentLength pingServletLargeContentLength = new PingServletLargeContentLength();
        String result = pingServletLargeContentLength.getServletInfo();
        assertEquals("Basic dynamic HTML generation through a servlet, with contentLength set by contentLength parameter.", result);
    }
}