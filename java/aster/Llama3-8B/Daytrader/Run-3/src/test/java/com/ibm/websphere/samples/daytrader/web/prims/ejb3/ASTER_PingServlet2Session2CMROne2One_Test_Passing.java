/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean;
import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2CMROne2One_Test_Passing {
private static int hitCount;
private static String initTime;
@Mock
    private ServletConfig servletConfig;
@InjectMocks
    private PingServlet2Session2CMROne2One pingservlet2session2cmrone2one;
HttpServletResponse httpservletresponse;
HttpServletRequest httprequest;
private TradeServices tradeSLSBLocal;
@Mock
    private HttpServletRequest httpServletRequest;
@Mock
    private HttpServletResponse httpServletResponse;
@Mock
    private TradeConfig tradeConfig;
@Mock
    private AccountProfileDataBean accountProfileDataBean;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoPost() throws ServletException, IOException {
        httprequest = mock(HttpServletRequest.class);
        httpservletresponse = mock(HttpServletResponse.class);
        pingservlet2session2cmrone2one = new PingServlet2Session2CMROne2One();
        // Given
        when(httprequest.getMethod()).thenReturn("POST");
        // When
        pingservlet2session2cmrone2one.doPost(httprequest, httpservletresponse);
        // Then
        verify(httpservletresponse, times(1)).sendRedirect(any(String.class));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_Iucd0() {
        PingServlet2Session2CMROne2One servlet = new PingServlet2Session2CMROne2One();
        String result = servlet.getServletInfo();
        assertEquals("web primitive, tests Servlet to Entity EJB path", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testInit_qfcm0_1() throws ServletException {
    MockitoAnnotations.initMocks(this);
    pingservlet2session2cmrone2one.init(servletConfig);
    Mockito.verify(servletConfig).getInitParameter("param");
    assertEquals(0, hitCount);}
}