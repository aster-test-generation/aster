/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Date;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AccountProfileDataBean_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCreditCard_OLQk0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String creditCard = accountProfileDataBean.getCreditCard();
        assertEquals("creditCard", creditCard);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_GLFV0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String expected = "\n\tAccount Profile Data for userID:userID\n\t\t   passwd:password\n\t\t   fullName:fullName\n\t\t    address:address\n\t\t      email:email\n\t\t creditCard:creditCard";
        assertEquals(expected, accountProfileDataBean.toString());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetEmail_kFIv0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        accountProfileDataBean.setEmail("newEmail");
        assertEquals("newEmail", accountProfileDataBean.getEmail());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsSameObject_NFmH0() {
    AccountProfileDataBean bean1 = new AccountProfileDataBean("user1", "pass1", "full1", "add1", "email1", "credit1");
    boolean result = bean1.equals(bean1);
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsDifferentClass_xvrM1() {
    AccountProfileDataBean bean1 = new AccountProfileDataBean("user1", "pass1", "full1", "add1", "email1", "credit1");
    Object obj = new Object();
    boolean result = bean1.equals(obj);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsNull_DKka2() {
    AccountProfileDataBean bean1 = new AccountProfileDataBean("user1", "pass1", "full1", "add1", "email1", "credit1");
    boolean result = bean1.equals(null);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsDifferentObject_IOVK3() {
    AccountProfileDataBean bean1 = new AccountProfileDataBean("user1", "pass1", "full1", "add1", "email1", "credit1");
    AccountProfileDataBean bean2 = new AccountProfileDataBean("user2", "pass2", "full2", "add2", "email2", "credit2");
    boolean result = bean1.equals(bean2);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAccount_nSQo0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        AccountDataBean accountDataBean = new AccountDataBean(1, 1, 1, new java.util.Date(), new java.util.Date(), new java.math.BigDecimal("10.0"), new java.math.BigDecimal("10.0"), "profileID");
        accountProfileDataBean.setAccount(accountDataBean);
        assertEquals(accountDataBean, accountProfileDataBean.getAccount());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetUserID_VIMr1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setUserID("testUser");
        assertEquals("testUser", accountProfileDataBean.getUserID());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmail_IxzR0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "testEmail", "creditCard");
        String email = accountProfileDataBean.getEmail();
        assertEquals("testEmail", email);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserID_FNNf0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("testID", "testPassword", "testFullName", "testAddress", "testEmail", "testCreditCard");
        String userID = accountProfileDataBean.getUserID();
        assertEquals("testID", userID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFullNameNull_GpkV1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
    accountProfileDataBean.setFullName(null);
    assertEquals(null, accountProfileDataBean.getFullName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_WithNullFields_COjV1() {
    AccountProfileDataBean bean = new AccountProfileDataBean(null, "password", "John Doe", "123 Main St", "john.doe@example.com", "1234-5678-9012-3456");
    int result = bean.hashCode();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddress_efSx0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String actual = accountProfileDataBean.getAddress();
        assertEquals("address", actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPassword_DsYc0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String password = accountProfileDataBean.getPassword();
        assertEquals("password", password);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreditCard_BIlr1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
    accountProfileDataBean.setCreditCard("newCreditCard");
    assertEquals("newCreditCard", accountProfileDataBean.getCreditCard());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPassword_mujr0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        String password = "testPassword";
        accountProfileDataBean.setPassword(password);
        assertEquals(password, accountProfileDataBean.getPassword());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAddress_DZzW0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        accountProfileDataBean.setAddress("New Address");
        assertEquals("New Address", accountProfileDataBean.getAddress());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFullName_cLpB0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        String fullName = accountProfileDataBean.getFullName();
        assertEquals("fullName", fullName);
    }
}