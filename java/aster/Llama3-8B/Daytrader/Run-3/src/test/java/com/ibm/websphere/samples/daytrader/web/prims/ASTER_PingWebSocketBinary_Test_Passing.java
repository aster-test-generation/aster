/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.websocket.EndpointConfig;
import javax.websocket.Session;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingWebSocketBinary_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOnError_nONx0() {
        PingWebSocketBinary pingWebSocketBinary = new PingWebSocketBinary();
        Throwable throwable = new IOException("Test IOException");
        pingWebSocketBinary.onError(throwable);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testOnErrorTimeoutException_ybKo1_QnqB0() {
    PingWebSocketBinary pingWebSocketBinary = new PingWebSocketBinary();
    java.util.concurrent.TimeoutException throwable = new java.util.concurrent.TimeoutException();
    pingWebSocketBinary.onError(throwable);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testOnClose_OpenSession_QqIv0_lEHA1() {
    PingWebSocketBinary pingWebSocketBinary = new PingWebSocketBinary();
    Session session = mock(Session.class);
    when(session.isOpen()).thenReturn(true);
    pingWebSocketBinary.onOpen(session, mock(EndpointConfig.class));
}
}