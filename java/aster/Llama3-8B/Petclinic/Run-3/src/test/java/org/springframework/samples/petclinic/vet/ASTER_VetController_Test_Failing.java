/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.vet;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_VetController_Test_Failing {

	VetRepository vetRepository;

	VetController vetController;

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void showResourcesVetListTest_cMZU5_uAQu0() {
		VetRepository vetRepository = mock(VetRepository.class);
		VetController vetController = new VetController(vetRepository);
		Vets vets = vetController.showResourcesVetList();
		assertEquals(5, vets.getVetList().size());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void showResourcesVetListTest_bgdx6_Oske0() {
		VetRepository vetRepository = mock(VetRepository.class);
		VetController vetController = new VetController(vetRepository);
		Vets vets = vetController.showResourcesVetList();
		assertEquals(6, vets.getVetList().size());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void showResourcesVetListTest_HuVi8_dTcT0() {
		VetRepository vetRepository = mock(VetRepository.class);
		VetController vetController = new VetController(vetRepository);
		Vets vets = vetController.showResourcesVetList();
		assertEquals(8, vets.getVetList().size());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void showResourcesVetListTest_YGNS7_kyZl0() {
		VetRepository vetRepository = mock(VetRepository.class);
		VetController vetController = new VetController(vetRepository);
		Vets vets = vetController.showResourcesVetList();
		assertEquals(7, vets.getVetList().size());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void showResourcesVetListTest_xvxt2_tbAP0() {
		VetRepository vetRepository = mock(VetRepository.class);
		VetController vetController = new VetController(vetRepository);
		Vets vets = vetController.showResourcesVetList();
		assertEquals(2, vets.getVetList().size());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void showResourcesVetListTest_IZXh3_lFam0() {
		VetRepository vetRepository = mock(VetRepository.class);
		VetController vetController = new VetController(vetRepository);
		Vets vets = vetController.showResourcesVetList();
		assertEquals(3, vets.getVetList().size());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void showResourcesVetListTest_yhjV4_LyTw0() {
		VetRepository vetRepository = mock(VetRepository.class);
		VetController vetController = new VetController(vetRepository);
		Vets vets = vetController.showResourcesVetList();
		assertEquals(4, vets.getVetList().size());
	}

}