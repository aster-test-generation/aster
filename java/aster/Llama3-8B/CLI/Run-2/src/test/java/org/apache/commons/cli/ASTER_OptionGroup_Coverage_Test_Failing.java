/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionGroup_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_SingleOptionWithOpt_CJWm1() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option("a", "Description A"));
        String result = optionGroup.toString();
        assertEquals("[-a, Description A]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_SingleOptionWithoutOpt_KJeE2() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option(null, "Description B"));
        String result = optionGroup.toString();
        assertEquals("[--Description B]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_MultipleOptionsWithOpt_ylqf3() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option("a", "Description A"));
        optionGroup.getOptions().add(new Option("b", "Description B"));
        String result = optionGroup.toString();
        assertEquals("[-a, Description A, -b, Description B]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_MultipleOptionsWithoutOpt_RGzl4() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option(null, "Description C"));
        optionGroup.getOptions().add(new Option(null, "Description D"));
        String result = optionGroup.toString();
        assertEquals("[--Description C, --Description D]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_MixedOptions_ApUG5() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option("a", "Description A"));
        optionGroup.getOptions().add(new Option(null, "Description B"));
        optionGroup.getOptions().add(new Option("c", "Description C"));
        String result = optionGroup.toString();
        assertEquals("[-a, Description A, --Description B, -c, Description C]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_OptionsWithDescriptions_XkSV6() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option("a", "Description A"));
        optionGroup.getOptions().add(new Option(null, "Description B with spaces"));
        String result = optionGroup.toString();
        assertEquals("[-a, Description A, --Description B with spaces]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_OptionsWithNoDescriptionsAndNoOptWithSpaces_OvRs11() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option(null, "Description with spaces"));
        optionGroup.getOptions().add(new Option(null, "Description with spaces 2"));
        String result = optionGroup.toString();
        assertEquals("[--Description with spaces, --Description with spaces 2]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_OptionsWithNoDescriptionsAndNoOpt_AvBz10_klPW0() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option("", "", false, null));
        optionGroup.getOptions().add(new Option("", "", false, null));
        String result = optionGroup.toString();
        assertEquals("[--, --]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_OptionsWithoutDescriptions_fHyv7_Jdzz0() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = Option.builder("a").build();
        optionGroup.getOptions().add(option);
        optionGroup.getOptions().add(Option.builder("b").build());
        String result = optionGroup.toString();
        assertEquals("[-a, --]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_OptionsWithMultipleDescriptions_srQq8_dsmb0() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().add(new Option("a", true, "Description A"));
        optionGroup.getOptions().add(new Option("b", false, "Description B"));
        String result = optionGroup.toString();
        assertEquals("[-a, --, Description A, --Description B]", result);
    }
}