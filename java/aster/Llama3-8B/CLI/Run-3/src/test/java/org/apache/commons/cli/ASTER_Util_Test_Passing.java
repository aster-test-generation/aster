/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Util_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingHyphensEmptyString_dnaO0() throws Exception {
        String result = Util.stripLeadingHyphens("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingHyphensNullString_kWcQ1() throws Exception {
        String result = Util.stripLeadingHyphens(null);
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingHyphensSingleHyphen_JaWz2() throws Exception {
        String result = Util.stripLeadingHyphens("-");
        assertEquals("-", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingHyphensDoubleHyphens_XlUT3() throws Exception {
        String result = Util.stripLeadingHyphens("--hello");
        assertEquals("hello", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingAndTrailingQuotes_EmptyString_ReturnsEmptyString_iiuW0() throws Exception {
        assertEquals("", Util.stripLeadingAndTrailingQuotes(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingAndTrailingQuotes_StringWithoutQuotes_ReturnsSameString_svFn1() throws Exception {
        assertEquals("hello", Util.stripLeadingAndTrailingQuotes("hello"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingAndTrailingQuotes_StringWithLeadingQuotes_ReturnsStringWithoutLeadingQuotes_IxrZ2() throws Exception {
        assertEquals("hello", Util.stripLeadingAndTrailingQuotes("\"hello"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingAndTrailingQuotes_StringWithTrailingQuotes_ReturnsStringWithoutTrailingQuotes_lDqL3() throws Exception {
        assertEquals("hello", Util.stripLeadingAndTrailingQuotes("hello\""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingAndTrailingQuotes_StringWithLeadingAndTrailingQuotes_ReturnsStringWithoutQuotes_dccB4() throws Exception {
        assertEquals("hello", Util.stripLeadingAndTrailingQuotes("\"hello\""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStripLeadingAndTrailingQuotes_StringWithQuotesInMiddle_ReturnsSameString_zhUA5() throws Exception {
        assertEquals("\"hello\"world\"", Util.stripLeadingAndTrailingQuotes("\"hello\"world\""));
    }
}