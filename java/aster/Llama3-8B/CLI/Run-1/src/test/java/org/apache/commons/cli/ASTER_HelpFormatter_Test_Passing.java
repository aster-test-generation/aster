/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.io.PrintWriter;
import java.util.Comparator;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_HelpFormatter_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDescPadding_ZHTg1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        int result = helpFormatter.getDescPadding();
        assertEquals(3, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptPrefix_gRSS1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String result = helpFormatter.getOptPrefix();
        assertEquals("-", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetWidth_uiHa1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setWidth(10);
        assertEquals(10, helpFormatter.defaultWidth);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos1_Cqva0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "Hello";
        int width = 5;
        int startPos = 0;
        int result = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(-1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos3_NHJp2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "Hello";
        int width = 6;
        int startPos = 0;
        int result = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(-1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos5_rWOo4() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String text = "Hello";
        int width = 5;
        int startPos = 5;
        int result = helpFormatter.findWrapPos(text, width, startPos);
        assertEquals(-1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetArgName_HFrS1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setArgName("test");
        assertEquals("test", helpFormatter.getArgName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLeftPadding_xPGt1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setLeftPadding(5);
        assertEquals(5, helpFormatter.defaultLeftPad);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelp_JFjr0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        helpFormatter.printHelp("cmdLineSyntax", options, true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePadding_lMFU1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String result = helpFormatter.createPadding(5);
        assertEquals("     ", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithRequiredOptions_LPyq1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addRequiredOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        helpFormatter.printHelp(80, "cmdLineSyntax", "header", options, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithFooter_QZAl3() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        helpFormatter.printHelp(80, "cmdLineSyntax", "header", options, "footer with description");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithWidth_CYiv4() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        helpFormatter.printHelp(100, "cmdLineSyntax", "header", options, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithCmdLineSyntax_JgQD5() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        helpFormatter.printHelp(80, "cmdLineSyntax with description", "header", options, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithHeader_wKOf6() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        helpFormatter.printHelp(80, "cmdLineSyntax", "header with description", options, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithFooterAndHeaderAndCmdLineSyntax_mikd8() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        helpFormatter.printHelp(80, "cmdLineSyntax with description", "header with description", options, "footer with description");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithFooterAndHeaderAndCmdLineSyntaxAndWidth_uwwo9() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        helpFormatter.printHelp(100, "cmdLineSyntax with description", "header with description", options, "footer with description");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRenderOptionsSingleOption_Ijrx2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        StringBuffer sb = new StringBuffer();
        int width = 10;
        int leftPad = 2;
        int descPad = 4;
        Options options = new Options();
        options.addOption(new Option("o", "opt", true, "description"));
        helpFormatter.renderOptions(sb, width, options, leftPad, descPad);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRenderOptionsMultipleOptions_uvtb3() {
        HelpFormatter helpFormatter = new HelpFormatter();
        StringBuffer sb = new StringBuffer();
        int width = 10;
        int leftPad = 2;
        int descPad = 4;
        Options options = new Options();
        options.addOption(new Option("o", "opt", true, "description"));
        options.addOption(new Option("p", "popt", true, "description"));
        helpFormatter.renderOptions(sb, width, options, leftPad, descPad);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRenderOptionsOptionWithNoDescription_MFJk10() {
        HelpFormatter helpFormatter = new HelpFormatter();
        StringBuffer sb = new StringBuffer();
        int width = 10;
        int leftPad = 2;
        int descPad = 4;
        Options options = new Options();
        options.addOption(new Option("o", "opt", true, ""));
        helpFormatter.renderOptions(sb, width, options, leftPad, descPad);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRenderOptionsOptionWithNullDescription_UdIC11() {
        HelpFormatter helpFormatter = new HelpFormatter();
        StringBuffer sb = new StringBuffer();
        int width = 10;
        int leftPad = 2;
        int descPad = 4;
        Options options = new Options();
        options.addOption(new Option("o", "opt", true, null));
        helpFormatter.renderOptions(sb, width, options, leftPad, descPad);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLongOptSeparator_nOJV1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setLongOptSeparator("=");
        assertEquals("=", helpFormatter.getLongOptSeparator());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetNewLine_FJjb1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setNewLine("abc");
        assertEquals("abc", helpFormatter.getNewLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSyntaxPrefix_cguc1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String result = helpFormatter.getSyntaxPrefix();
        assertEquals("usage: ", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelp_PXrD0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        options.addOption("b", "beta", false, "Beta option");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        boolean autoUsage = true;
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer, autoUsage);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithNoOptions_IPzh2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        boolean autoUsage = true;
        helpFormatter.printHelp(cmdLineSyntax, header, new Options(), footer, autoUsage);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithFooter_NkaU3() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        boolean autoUsage = true;
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer, autoUsage);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithNoFooter_gbiv5() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        boolean autoUsage = true;
        helpFormatter.printHelp(cmdLineSyntax, header, options, "", autoUsage);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithNoHeader_aThA6() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        String cmdLineSyntax = "cmdLineSyntax";
        String footer = "Footer";
        boolean autoUsage = true;
        helpFormatter.printHelp(cmdLineSyntax, "", options, footer, autoUsage);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithNoOptionsAndFooter_BZey8() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        boolean autoUsage = true;
        helpFormatter.printHelp(cmdLineSyntax, header, new Options(), "", autoUsage);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithNoOptionsAndHeader_cYam9() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        String cmdLineSyntax = "cmdLineSyntax";
        String footer = "Footer";
        boolean autoUsage = true;
        helpFormatter.printHelp(cmdLineSyntax, "", options, footer, autoUsage);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithNoOptionsAndNoFooter_GoeY11() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        boolean autoUsage = true;
        helpFormatter.printHelp(cmdLineSyntax, header, options, "", autoUsage);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNewLine_aTyW0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String actual = helpFormatter.getNewLine();
        assertEquals("\n", actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintOptions_XpKg0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("o", "opt", true, "Option description");
        options.addOption("a", "another", false, "Another option description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printOptions(pw, 80, options, 2, 4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintOptionsWithRequiredOptions_cBPJ1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addRequiredOption("o", "opt", true, "Option description");
        options.addOption("a", "another", false, "Another option description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printOptions(pw, 80, options, 2, 4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintOptionsWithOptionGroup_xgBo2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        OptionGroup group = new OptionGroup();
        group.addOption(new Option("o", "opt", true, "Option description"));
        group.addOption(new Option("a", "another", false, "Another option description"));
        options.addOptionGroup(group);
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printOptions(pw, 80, options, 2, 4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintOptionsWithNoOptions_QOOq3() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printOptions(pw, 80, options, 2, 4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetWidth_oXwo74() {
        HelpFormatter helpFormatter = new HelpFormatter();
        int result = helpFormatter.getWidth();
        assertEquals(74, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLongOptPrefix_cEcJ0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setLongOptPrefix("testPrefix");
        assertEquals("testPrefix", helpFormatter.defaultLongOptPrefix);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetArgName_CYGn0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String result = helpFormatter.getArgName();
        assertEquals("arg", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionComparator_QIdL0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Comparator<Option> comparator = helpFormatter.getOptionComparator();
        assertEquals(comparator, helpFormatter.getOptionComparator());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOptPrefix_sqNq1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setOptPrefix("testPrefix");
        assertEquals("testPrefix", helpFormatter.getOptPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetDescPadding_YVaJ1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setDescPadding(5);
        assertEquals(5, helpFormatter.defaultDescPad);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLeftPadding_yZyr1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        int result = helpFormatter.getLeftPadding();
        assertEquals(1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLongOptPrefix_hfxC0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String result = helpFormatter.getLongOptPrefix();
        assertEquals("--", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRtrimNull_Ciug0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String result = helpFormatter.rtrim(null);
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRtrimEmptyString_GIDy1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        String result = helpFormatter.rtrim("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSyntaxPrefix_qZgu0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setSyntaxPrefix("prefix");
        assertEquals("prefix", helpFormatter.defaultSyntaxPrefix);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelp_FBIm0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        options.addOption("b", "beta", false, "Beta option");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithOptionGroup_uguf2() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.addOption(new Option("a", "alpha", true, "Alpha option"));
        optionGroup.addOption(new Option("b", "beta", false, "Beta option"));
        options.addOptionGroup(optionGroup);
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithRequiredOptions_WDgP3() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addRequiredOption("a", "alpha", true, "Alpha option");
        options.addOption("b", "beta", false, "Beta option");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithDescription_DpXH4() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option with description");
        options.addOption("b", "beta", false, "Beta option with description");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithFooter_kEQf5() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        options.addOption("b", "beta", false, "Beta option");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer with description";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithHeader_iwiv6() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        options.addOption("b", "beta", false, "Beta option");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header with description";
        String footer = "Footer";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithCmdLineSyntax_RfUb7() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        options.addOption("b", "beta", false, "Beta option");
        String cmdLineSyntax = "cmdLineSyntax with description";
        String header = "Header";
        String footer = "Footer";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithMultipleOptions_Wrow8() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "alpha", true, "Alpha option");
        options.addOption("b", "beta", false, "Beta option");
        options.addOption("c", "gamma", true, "Gamma option");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithRequiredOptionDescription_dNtI11() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addRequiredOption("a", "alpha", true, "Alpha option with description");
        options.addOption("b", "beta", false, "Beta option with description");
        String cmdLineSyntax = "cmdLineSyntax";
        String header = "Header";
        String footer = "Footer";
        helpFormatter.printHelp(cmdLineSyntax, header, options, footer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithRequiredOptions_wAAd1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addRequiredOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 80, "cmdLineSyntax", "header", options, 2, 4, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithFooter_qrJT3() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 80, "cmdLineSyntax", "header", options, 2, 4, "footer message");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithWidth_SLoe4() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 100, "cmdLineSyntax", "header", options, 2, 4, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithHeader_OkRj5() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 80, "cmdLineSyntax", "header message", options, 2, 4, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithCmdLineSyntax_Kwbd6() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 80, "cmdLineSyntax message", "header", options, 2, 4, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithLeftPad_afCK7() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 80, "cmdLineSyntax", "header", options, 3, 4, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithDescPad_BVrE8() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 80, "cmdLineSyntax", "header", options, 2, 5, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithFooterAndWidth_DGHi9() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 100, "cmdLineSyntax", "header", options, 2, 4, "footer message");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelp_slfE0_uoBx0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.addOption(new Option("c", "c", true, "c option"));
        options.addOptionGroup(optionGroup);
        helpFormatter.printHelp("test", options);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithFooterAndHeaderAndCmdLineSyntaxAndWidthAndOptionsAndOptionGroupAndFooter_HYHq12_guUI0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a option");
        options.addOption("b", "b", false, "b option");
        OptionGroup group = new OptionGroup();
        group.addOption(new Option("c", "c", true, "c option"));
        group.addOption(new Option("d", "d", true, "d option"));
        group.addOption(new Option("e", "e", true, "e option"));
        options.addOptionGroup(group);
        helpFormatter.printHelp(100, "cmdLineSyntax with description", "header with description", options, "footer with description and footer description");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBuilder_SWvr1_FgjS1() {
        HelpFormatter helpFormatter = new HelpFormatter();
        assertEquals(HelpFormatter.class, helpFormatter.getClass());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelp_Pyvu0_ByaN0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption("a", "a", true, "a description");
        options.addOption("b", "b", false, "b description");
        OptionGroup group = new OptionGroup();
        group.addOption(new Option("c", "c", true, "c description"));
        group.addOption(new Option("d", "d", false, "d description"));
        group.addOption(new Option("e", "e", true, "e description"));
        options.addOptionGroup(group);
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 80, "cmdLineSyntax", "header", options, 2, 4, "footer");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintHelpWithOptionGroup_VXje2_TUPC0() {
        HelpFormatter helpFormatter = new HelpFormatter();
        Options options = new Options();
        options.addOption(new Option("a", "a", true, "a description"));
        options.addOption(new Option("b", "b", false, "b description"));
        OptionGroup group = new OptionGroup();
        group.addOption(new Option("c", "c", true, "c description"));
        group.addOption(new Option("d", "d", false, "d description"));
        options.addOptionGroup(group);
        PrintWriter pw = new PrintWriter(System.out);
        helpFormatter.printHelp(pw, 80, "cmdLineSyntax", "header", options, 2, 4, "footer");
    }
}