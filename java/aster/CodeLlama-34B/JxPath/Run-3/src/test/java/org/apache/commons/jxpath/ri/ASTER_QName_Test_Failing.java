/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QName_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode2_ncMU1() {
        QName qName = new QName("prefix", "localName");
        int expected = "prefix".hashCode() + "localName".hashCode();
        int actual = qName.hashCode();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentObject_uiwn1_fid2() {
        QName qname1 = new QName("prefix", "localName");
        QName qname2 = new QName("prefix", "localName");
        assertFalse(qname1.equals(qname2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SamePrefix_XwhY5_fid2() {
        QName qname1 = new QName("prefix", "localName");
        QName qname2 = new QName("prefix", "differentLocalName");
        assertTrue(qname1.equals(qname2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameLocalName_mbcI7_fid2() {
        QName qname1 = new QName("prefix", "localName");
        QName qname2 = new QName("differentPrefix", "localName");
        assertTrue(qname1.equals(qname2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName1_MxFg0_fid2() {
        QName qName = new QName("prefix", "localName");
        String name = qName.getName();
        assertEquals("prefix:localName", name);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrefix3_nULC2_fid2() {
        QName qName = new QName("localName");
        assertEquals("", qName.getPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithNullQualifiedName_kwMs2_fid2() {
        QName qName = new QName(null);
        String expected = null;
        String actual = qName.toString();
        assertEquals(expected, actual);
    }
}