/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.jsp.PageContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockPageContext;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PageContextHandler_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_PageScope_hHty0_1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.PAGE_SCOPE);
        for (String propertyName : propertyNames) {
        }
        assertNotNull(propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_PageScope_hHty0_2() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.PAGE_SCOPE);
        for (String propertyName : propertyNames) {
        }
        assertTrue(propertyNames.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_RequestScope_QvaX1_1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.REQUEST_SCOPE);
        for (String propertyName : propertyNames) {
        }
        assertNotNull(propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_RequestScope_QvaX1_2() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.REQUEST_SCOPE);
        for (String propertyName : propertyNames) {
        }
        assertTrue(propertyNames.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_SessionScope_FhuB2_1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.SESSION_SCOPE);
        for (String propertyName : propertyNames) {
        }
        assertNotNull(propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_SessionScope_FhuB2_2() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.SESSION_SCOPE);
        for (String propertyName : propertyNames) {
        }
        assertTrue(propertyNames.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_ApplicationScope_hkiC3_1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.APPLICATION_SCOPE);
        for (String propertyName : propertyNames) {
        }
        assertNotNull(propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_ApplicationScope_hkiC3_2() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.APPLICATION_SCOPE);
        for (String propertyName : propertyNames) {
        }
        assertTrue(propertyNames.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_InvalidScope_BYnT4_1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(-1);
        assertNotNull(propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_InvalidScope_BYnT4_2() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(-1);
        assertTrue(propertyNames.length == 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithNullPageContext_zagc1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        Object pageContext = null;
        String property = "property";
        Object expected = null;
        Object actual = pageContextHandler.getProperty(pageContext, property);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullPageContext_TzHF1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        PageContext pageContext = null;
        String property = "property";
        Object value = new Object();
        pageContextHandler.setProperty(pageContext, property, value);
        assertNull(pageContext.getAttribute(property, PageContext.PAGE_SCOPE));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProperty_JmVT0_shHr0() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        PageContext pageContext = new MockPageContext();
        String property = "property";
        Object expected = pageContext.getAttribute(property);
        Object actual = pageContextHandler.getProperty(pageContext, property);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithNonExistentProperty_QplQ3_LEwV0() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        PageContext pageContext = new MockPageContext();
        String property = "nonExistentProperty";
        Object expected = null;
        Object actual = pageContextHandler.getProperty(pageContext, property);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithExistentProperty_gHxi4_wQYY0() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        PageContext pageContext = new MockPageContext();
        String property = "property";
        Object value = new Object();
        pageContext.setAttribute(property, value, PageContext.PAGE_SCOPE);
        Object expected = value;
        Object actual = pageContextHandler.getProperty(pageContext, property);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_PageScope_hHty0_1_fid1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.PAGE_SCOPE);
        for (String propertyName : propertyNames) {
            assertNotNull(propertyName);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_PageScope_hHty0_2_fid1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.PAGE_SCOPE);
        for (String propertyName : propertyNames) {
            assertNotNull(propertyName);
        }
        assertTrue(propertyNames.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_PageScope_hHty0() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.PAGE_SCOPE);
        assertNotNull(propertyNames);
        assertTrue(propertyNames.length > 0);
        for (String propertyName : propertyNames) {
            assertNotNull(propertyName);
            assertFalse(propertyName.isEmpty());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_RequestScope_QvaX1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.REQUEST_SCOPE);
        assertNotNull(propertyNames);
        assertTrue(propertyNames.length > 0);
        for (String propertyName : propertyNames) {
            assertNotNull(propertyName);
            assertFalse(propertyName.isEmpty());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_SessionScope_FhuB2() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.SESSION_SCOPE);
        assertNotNull(propertyNames);
        assertTrue(propertyNames.length > 0);
        for (String propertyName : propertyNames) {
            assertNotNull(propertyName);
            assertFalse(propertyName.isEmpty());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_ApplicationScope_hkiC3() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(PageContext.APPLICATION_SCOPE);
        assertNotNull(propertyNames);
        assertTrue(propertyNames.length > 0);
        for (String propertyName : propertyNames) {
            assertNotNull(propertyName);
            assertFalse(propertyName.isEmpty());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_InvalidScope_BYnT4() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        String[] propertyNames = pageContextHandler.getPropertyNames(-1);
        assertNotNull(propertyNames);
        assertTrue(propertyNames.length == 0);
    }
}