/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CollectionPointerFactory_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithCollection_AEXG0_1() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("test");
        Collection<String> collection = new ArrayList<>();
        collection.add("test1");
        collection.add("test2");
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, collection, Locale.ENGLISH);
        assertNotNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithCollection_AEXG0_2() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("test");
        Collection<String> collection = new ArrayList<>();
        collection.add("test1");
        collection.add("test2");
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, collection, Locale.ENGLISH);
        assertEquals(collection, nodePointer.getNodeValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithCollection_AEXG0_4() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("test");
        Collection<String> collection = new ArrayList<>();
        collection.add("test1");
        collection.add("test2");
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, collection, Locale.ENGLISH);
        assertEquals(Locale.ENGLISH, nodePointer.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNonCollection_ZGHm1() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("test");
        Object bean = new Object();
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, bean, Locale.ENGLISH);
        assertNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_JPdI0_DzIx0() {
        CollectionPointerFactory factory = new CollectionPointerFactory();
        int order = factory.getOrder();
        assertEquals(CollectionPointerFactory.COLLECTION_POINTER_FACTORY_ORDER, order);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_NullBean_WwWA4_CTGo0() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        NodePointer parent = new DOMNodePointer(null, new Locale("en"), "id");
        QName name = new QName("name");
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(parent, name, null);
        assertNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithCollection_AEXG0_3_fid1() {
        CollectionPointerFactory collectionPointerFactory = new CollectionPointerFactory();
        QName name = new QName("test");
        Collection<String> collection = new ArrayList<>();
        collection.add("test1");
        collection.add("test2");
        NodePointer nodePointer = collectionPointerFactory.createNodePointer(name, collection, Locale.ENGLISH);
    }
}