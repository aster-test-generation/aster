/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.DynamicPropertyHandler;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynamicPointer_Test_Failing {
    DynamicPointer dynamicpointer;
    private Object bean;
    private QName name;
    private DynamicPropertyHandler handler;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullName_PKLF3() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName(null), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertFalse(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAttributeIteratorWithNullParent_TzBP5() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = new Locale("en");
        DynamicPointer dynamicPointer = new DynamicPointer(null, name, bean, handler);
        NodeIterator iterator = dynamicPointer.attributeIterator(name);
        assertNull(iterator);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAttributeIteratorWithNullBean_gbBp3_lvTD0() {
        QName name = new QName("name");
        PageContextHandler handler = new PageContextHandler();
        Locale locale = new Locale("en");
        DOMNodePointer parent = new DOMNodePointer(null, locale);
        DynamicPointer dynamicPointer = new DynamicPointer(parent, name, null, handler);
        NodeIterator iterator = dynamicPointer.attributeIterator(name);
        assertNull(iterator);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullParent_PVAu2_fid1() {
        DynamicPointer dynamicPointer = new DynamicPointer(null, new QName("name"), new Object(), new PageContextHandler());
        assertFalse(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullBean_krRR4_fid1() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), null, new PageContextHandler(), Locale.ENGLISH);
        assertFalse(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullHandler_Iaio5_fid1() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), null, Locale.ENGLISH);
        assertFalse(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullLocale_AWcp6_fid1() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), null);
        assertFalse(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValue1_Ipem0_fid1() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        Object baseValue = dynamicPointer.getBaseValue();
        assertEquals(new Object(), baseValue);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisLeaf_fid1() throws Exception {
        dynamicpointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), new Locale("en"));
        assertTrue(dynamicpointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_AtomicValue_XJhJ1_fid1() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertTrue(dynamicPointer.isLeaf());
    }
}