/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_NameAttributeTest_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_String_ARUH0() {
        NameAttributeTest test = new NameAttributeTest(new Constant("string"), new Constant("value"));
        assertTrue(test.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_Number_VfZB1() {
        NameAttributeTest test = new NameAttributeTest(new Constant(1), new Constant(2));
        assertTrue(test.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_Null_ODDr2() {
        NameAttributeTest test = new NameAttributeTest(null, null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_EmptyString_lDWB3() {
        NameAttributeTest test = new NameAttributeTest(new Constant(""), new Constant(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_EmptyNumber_aNfi4() {
        NameAttributeTest test = new NameAttributeTest(new Constant(0), new Constant(0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_InvalidString_QukW5() {
        NameAttributeTest test = new NameAttributeTest(new Constant("invalid"), new Constant("value"));
        assertTrue(test.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_InvalidNumber_ybWU6() {
        NameAttributeTest test = new NameAttributeTest(new Constant(1), new Constant(0));
        assertTrue(test.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_NullNamePath_hlPk7() {
        NameAttributeTest test = new NameAttributeTest(null, new Constant("value"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_NullNameValue_Quse8() {
        NameAttributeTest test = new NameAttributeTest(new Constant("string"), null);
        assertTrue(test.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_InvalidNameValue_eaFl10() {
        NameAttributeTest test = new NameAttributeTest(new Constant("string"), new Constant("invalid"));
        assertTrue(test.computeContextDependent());
    }
}