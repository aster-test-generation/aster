/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.w3c.dom.Node;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DOMPointerFactory_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithQNameAndNonNode_yhJi1() {
        DOMPointerFactory factory = new DOMPointerFactory();
        QName name = new QName("test");
        Object bean = new Object();
        NodePointer pointer = factory.createNodePointer(name, bean, Locale.ENGLISH);
        assertNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrderWithNullFactory_iJrD2() {
        DOMPointerFactory factory = null;
        try {
            factory.getOrder();
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithQNameAndNode_QlhG0_EkhO0_1() {
        DOMPointerFactory factory = new DOMPointerFactory();
        QName name = new QName("test");
        Node node = Mockito.mock(Node.class);
        NodePointer pointer = factory.createNodePointer(name, node, Locale.ENGLISH);
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithQNameAndNode_QlhG0_EkhO0_2() {
        DOMPointerFactory factory = new DOMPointerFactory();
        QName name = new QName("test");
        Node node = Mockito.mock(Node.class);
        NodePointer pointer = factory.createNodePointer(name, node, Locale.ENGLISH);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithQNameAndNode_QlhG0_EkhO0_3() {
        DOMPointerFactory factory = new DOMPointerFactory();
        QName name = new QName("test");
        Node node = Mockito.mock(Node.class);
        NodePointer pointer = factory.createNodePointer(name, node, Locale.ENGLISH);
        assertEquals(node, pointer.getNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithQNameAndNode_QlhG0_EkhO0_4() {
        DOMPointerFactory factory = new DOMPointerFactory();
        QName name = new QName("test");
        Node node = Mockito.mock(Node.class);
        NodePointer pointer = factory.createNodePointer(name, node, Locale.ENGLISH);
        assertEquals(Locale.ENGLISH, pointer.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean_irRf4_RIxO0() {
        DOMPointerFactory factory = new DOMPointerFactory();
        NodePointer parent = new DOMNodePointer(null, new Locale("en"), "id");
        QName name = new QName("name");
        NodePointer pointer = factory.createNodePointer(parent, name, null);
        assertNull(pointer);
    }
}