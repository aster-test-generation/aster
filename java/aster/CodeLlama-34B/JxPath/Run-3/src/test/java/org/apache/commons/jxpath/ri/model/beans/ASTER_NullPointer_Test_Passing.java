/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.servlet.KeywordVariables;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullPointer_Test_Passing {
    private String id;
    private QName name;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameObject_SNgy0() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        assertTrue(nullPointer.equals(nullPointer));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentObject_pDjY1() {
        NullPointer nullPointer1 = new NullPointer(new Locale("en"), "id");
        NullPointer nullPointer2 = new NullPointer(new Locale("en"), "id");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_Null_gBLe2() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        assertFalse(nullPointer.equals(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentClass_Bdch3() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        assertFalse(nullPointer.equals(new Object()));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameName_thQU4() {
        NullPointer nullPointer1 = new NullPointer(new Locale("en"), "id");
        NullPointer nullPointer2 = new NullPointer(new Locale("en"), "id");
        assertTrue(nullPointer1.equals(nullPointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollection_vAty0() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        assertFalse(nullPointer.isCollection());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_NullName_aOtA0() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        assertEquals(0, nullPointer.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_NonNullName_VQaY1() {
        QName name = new QName("prefix", "localName");
        NullPointer nullPointer = new NullPointer(name, new Locale("en"));
        assertEquals(name.hashCode(), nullPointer.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer_bDhJ0_1() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer_bDhJ0_2() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerInvalid_ZGYC2_2() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentLocale_IPAH3_1() {
        NullPointer nullPointer = new NullPointer(new Locale("fr", "FR"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentLocale_IPAH3_2() {
        NullPointer nullPointer = new NullPointer(new Locale("fr", "FR"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentId_Icxg4_1() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id2");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentId_Icxg4_2() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id2");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentQName_hmbi5_1() {
        NullPointer nullPointer = new NullPointer(new QName("prefix", "localName"), new Locale("en", "US"));
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentQName_hmbi5_2() {
        NullPointer nullPointer = new NullPointer(new QName("prefix", "localName"), new Locale("en", "US"));
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithId_iJen0() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        assertEquals("id(id)", nullPointer.asPath());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_jMOI0() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        int length = nullPointer.getLength();
        assertEquals(0, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValue1_BYQi0() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        Object baseValue = nullPointer.getBaseValue();
        assertNull(baseValue);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValue3_fikN2() {
        KeywordVariables variables = new KeywordVariables("keyword", new Object());
        VariablePointer variablePointer = new VariablePointer(variables, new QName("name"));
        NullPointer nullPointer = new NullPointer(variablePointer, new QName("name"));
        Object baseValue = nullPointer.getBaseValue();
        assertNull(baseValue);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsActual_SNvW0() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        assertFalse(nullPointer.isActual());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsActualWithName_jHRb2() {
        QName name = new QName("name");
        NullPointer nullPointer = new NullPointer(name, new Locale("en"));
        assertFalse(nullPointer.isActual());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_ncNr0() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        assertTrue(nullPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafWithName_NmtH2() {
        QName name = new QName("name");
        NullPointer nullPointer = new NullPointer(name, new Locale("en"));
        assertTrue(nullPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafWithVariablePointer_CadZ4() {
        VariablePointer variablePointer = new VariablePointer(new QName("name"));
        NullPointer nullPointer = new NullPointer(variablePointer, new QName("name"));
        assertTrue(nullPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentKeywordVariables_RxSG8_eQFv0_1() {
        NullPointer nullPointer = new NullPointer(new QName("keyword"), new Locale("en", "US"));
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentKeywordVariables_RxSG8_eQFv0_2() {
        NullPointer nullPointer = new NullPointer(new QName("keyword"), new Locale("en", "US"));
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithKeywordVariables_YrMv2_QdIE0() {
        KeywordVariables variables = new KeywordVariables("keyword", new Object());
        NullPointer nullPointer = new NullPointer(new QName("name"), new Locale("en", "US"));
        int length = nullPointer.getLength();
        assertEquals(0, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafWithNodeAndLocale_KTtW6_YYKn0() {
        Locale locale = new Locale("en");
        NullPointer nullPointer = new NullPointer(locale, "id");
        assertTrue(nullPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointer_bDhJ0() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentLocale_IPAH3() {
        NullPointer nullPointer = new NullPointer(new Locale("fr", "FR"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentId_Icxg4() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id2");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerDifferentQName_hmbi5() {
        NullPointer nullPointer = new NullPointer(new QName("prefix", "localName"), new Locale("en", "US"));
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
        assertTrue(propertyPointer instanceof NullPropertyPointer);
    }
}