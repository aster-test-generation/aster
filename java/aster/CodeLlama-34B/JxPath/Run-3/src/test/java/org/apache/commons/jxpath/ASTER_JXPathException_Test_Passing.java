/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathException_Test_Passing {
    public void testGetException_NoArgs_DVnr0() {
        JXPathException exception = new JXPathException();
        assertNull(exception.getException());
    }

    public void testGetException_StringArg_TNvl1() {
        JXPathException exception = new JXPathException("message");
        assertNotNull(exception.getException());
        assertEquals("message", exception.getException().getMessage());
    }

    public void testGetException_StringArgAndThrowable_ERJo2() {
        JXPathException exception = new JXPathException("message", new Throwable());
        assertNotNull(exception.getException());
        assertEquals("message", exception.getException().getMessage());
        assertNotNull(exception.getException().getCause());
    }

    public void testGetException_ThrowableArg_fOUY3() {
        JXPathException exception = new JXPathException(new Throwable());
        assertNotNull(exception.getException());
        assertNotNull(exception.getException().getCause());
    }

    public void testGetException_NullArg_atll4() {
    }

    public void testGetException_EmptyStringArg_wDuH5() {
        JXPathException exception = new JXPathException("");
        assertNotNull(exception.getException());
        assertEquals("", exception.getException().getMessage());
    }

    public void testGetException_NullThrowableArg_atJv6() {
        JXPathException exception = new JXPathException(null, new Throwable());
        assertNotNull(exception.getException());
        assertNull(exception.getException().getCause());
    }

    public void testGetException_NullStringArgAndThrowable_kPqb7() {
        JXPathException exception = new JXPathException(null, new Throwable());
        assertNotNull(exception.getException());
        assertNull(exception.getException().getMessage());
        assertNotNull(exception.getException().getCause());
    }

    public void testGetException_NullStringArgAndNullThrowable_fgoA8() {
        JXPathException exception = new JXPathException(null, null);
        assertNull(exception.getException());
    }

    public void testGetException_EmptyStringArgAndThrowable_paFI9() {
        JXPathException exception = new JXPathException("", new Throwable());
        assertNotNull(exception.getException());
        assertEquals("", exception.getException().getMessage());
        assertNotNull(exception.getException().getCause());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause_NoCause_FhEY0() {
        JXPathException exception = new JXPathException();
        Throwable cause = exception.getCause();
        Assertions.assertNull(cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause_WithCause_jOzU1_1() {
        JXPathException exception = new JXPathException("Test exception", new Exception());
        Throwable cause = exception.getCause();
        Assertions.assertNotNull(cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause_WithCauseAndMessage_Otdo2_1() {
        JXPathException exception = new JXPathException("Test exception", new Exception("Test cause"));
        Throwable cause = exception.getCause();
        Assertions.assertNotNull(cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause_WithCauseAndMessage_Otdo2_2() {
        JXPathException exception = new JXPathException("Test exception", new Exception("Test cause"));
        Throwable cause = exception.getCause();
        Assertions.assertEquals("Test cause", cause.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause_WithCauseAndNoMessage_SRLG3_1() {
        JXPathException exception = new JXPathException(new Exception());
        Throwable cause = exception.getCause();
        Assertions.assertNotNull(cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause_WithCauseAndNoMessage_SRLG3_2() {
        JXPathException exception = new JXPathException(new Exception());
        Throwable cause = exception.getCause();
        Assertions.assertNull(cause.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause_WithNoCauseAndMessage_JnQM4() {
        JXPathException exception = new JXPathException("Test exception");
        Throwable cause = exception.getCause();
        Assertions.assertNull(cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMessage1_eknR0() {
        JXPathException exception = new JXPathException("Test message");
        String message = exception.getMessage();
        assertEquals("Test message", message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMessage2_phjC1() {
        JXPathException exception = new JXPathException();
        String message = exception.getMessage();
        assertNull(message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMessage3_fUHG2() {
        JXPathException exception = new JXPathException("Test message", new Exception());
        String message = exception.getMessage();
        assertEquals("Test message; java.lang.Exception", message);
    }
}