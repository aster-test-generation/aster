/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.beans.PropertyDescriptor;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathBasicBeanInfo_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsAtomic_True_OLzb0() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, true);
        assertTrue(beanInfo.isAtomic());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsAtomic_False_IFjZ1() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, false);
        assertFalse(beanInfo.isAtomic());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsAtomic_DynamicPropertyHandlerClass_qkRn2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, DynamicPropertyHandler.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDynamicPropertyHandlerClass_1_pHtS0() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, false);
        assertEquals(null, beanInfo.getDynamicPropertyHandlerClass());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDynamicPropertyHandlerClass_2_LnwZ1() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, true);
        assertEquals(null, beanInfo.getDynamicPropertyHandlerClass());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDynamicPropertyHandlerClass_3_eGFC2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, Integer.class);
        assertEquals(Integer.class, beanInfo.getDynamicPropertyHandlerClass());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptors1_UXgW0() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class, true);
        PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
        assertEquals(0, propertyDescriptors.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptors2_PTzO1() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class);
        PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
        assertEquals(0, propertyDescriptors.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptors3_moqh2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class, Object.class);
        PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
        assertEquals(0, propertyDescriptors.length);
    }
}