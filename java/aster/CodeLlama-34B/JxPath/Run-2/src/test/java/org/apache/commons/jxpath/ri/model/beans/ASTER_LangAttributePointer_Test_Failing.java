/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.servlet.KeywordVariables;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_LangAttributePointer_Test_Failing {
    private LangAttributePointer langAttributePointer;
    LangAttributePointer langattributepointer;
    @Mock
    DOMNodePointer parent;
    @Mock
    Locale locale;
    @Mock
    KeywordVariables variables;
    @Mock
    QName name;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode1_lyXp0() {
        QName qName = new QName("qualifiedName");
        VariablePointer variablePointer = new VariablePointer(qName);
        DOMNodePointer domNodePointer = new DOMNodePointer(variablePointer, null);
        LangAttributePointer langAttributePointer = new LangAttributePointer(domNodePointer);
        Object immediateNode = langAttributePointer.getImmediateNode();
        assertEquals(immediateNode, domNodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode2_imIm1() {
        QName qName = new QName("prefix", "localName");
        VariablePointer variablePointer = new VariablePointer(qName);
        KeywordVariables keywordVariables = new KeywordVariables("keyword", null);
        DOMNodePointer domNodePointer = new DOMNodePointer(variablePointer, null);
        LangAttributePointer langAttributePointer = new LangAttributePointer(domNodePointer);
        Object immediateNode = langAttributePointer.getImmediateNode();
        assertEquals(immediateNode, domNodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetBaseValue() throws Exception {
        MockitoAnnotations.initMocks(this);
        when(parent.getLocale()).thenReturn(locale);
        when(locale.toString()).thenReturn("en-US");
        assertEquals("en-US", langattributepointer.getBaseValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode1_lyXp0_fid2() {
        QName qName = new QName("qualifiedName");
        VariablePointer variablePointer = new VariablePointer(qName);
        DOMNodePointer domNodePointer = new DOMNodePointer(variablePointer, null);
        LangAttributePointer langAttributePointer = new LangAttributePointer(domNodePointer);
        Object immediateNode = langAttributePointer.getImmediateNode();
        assertEquals(immediateNode, variablePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode2_imIm1_fid2() {
        QName qName = new QName("prefix", "localName");
        VariablePointer variablePointer = new VariablePointer(qName);
        KeywordVariables keywordVariables = new KeywordVariables("keyword", null);
        DOMNodePointer domNodePointer = new DOMNodePointer(variablePointer, null);
        LangAttributePointer langAttributePointer = new LangAttributePointer(domNodePointer);
        Object immediateNode = langAttributePointer.getImmediateNode();
        assertEquals(immediateNode, variablePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithNull_uviv7_fid2() {
        LangAttributePointer langAttributePointer = new LangAttributePointer(null);
        QName name = langAttributePointer.getName();
        assertNull(name);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithNullNode_YVDm10() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, new Locale("en"), "123");
        LangAttributePointer langAttributePointer = new LangAttributePointer(domNodePointer);
        QName name = langAttributePointer.getName();
        assertNull(name);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithNullDOMNodePointer_mHJf3_fid2() {
        QName qName = new QName("prefix", "localName");
        VariablePointer variablePointer = new VariablePointer(qName);
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        DOMNodePointer domNodePointer = null;
        LangAttributePointer langAttributePointer = new LangAttributePointer(domNodePointer);
        int result = langAttributePointer.getLength();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithEmptyString_hBmp8_ZzSX0_fid2() {
        LangAttributePointer langAttributePointer = new LangAttributePointer(new DOMNodePointer(null, null, null));
        QName name = langAttributePointer.getName();
        assertNull(name);
    }
}