/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ExpressionPath_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithNullExpression_vwgk6() {
        ExpressionPath expressionPath = new ExpressionPath(null, null, null);
        String result = expressionPath.toString();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_predicateIsContextDependent_CfhF1() {
        ExpressionPath expressionPath = new ExpressionPath(null, new Expression[]{new Constant("contextDependent")}, null);
        assertTrue(expressionPath.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_expressionIsNull_UJlG3() {
        ExpressionPath expressionPath = new ExpressionPath(null, null, null);
        assertFalse(expressionPath.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithPredicates_FeLy3_fid1() {
        ExpressionPath expressionPath = new ExpressionPath(new Constant("test"), new Expression[]{new Constant("predicate1"), new Constant("predicate2")}, null);
        String result = expressionPath.toString();
        assertEquals("test[predicate1][predicate2]", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithNullExpression_vwgk6_fid1() {
        ExpressionPath expressionPath = new ExpressionPath(null, null, null);
        String result = expressionPath.toString();
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithNullPredicatesAndSteps_tTaX7() {
        ExpressionPath expressionPath = new ExpressionPath(new Constant("test"), null, null);
        String result = expressionPath.toString();
        assertEquals("test", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_expressionIsContextDependent_CaiN0_fid1() {
        ExpressionPath expressionPath = new ExpressionPath(new Constant("contextDependent"), null, null);
        assertTrue(expressionPath.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithExpressionPath_mMnZ1_gtpo0_fid2() {
        ExpressionPath expressionPath = new ExpressionPath(new Constant(""), null, null);
        String result = expressionPath.toString();
        assertEquals("(ExpressionPath)", result);
    }
}