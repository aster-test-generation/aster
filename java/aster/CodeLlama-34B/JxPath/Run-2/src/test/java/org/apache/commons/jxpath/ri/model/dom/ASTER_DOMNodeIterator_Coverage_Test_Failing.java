/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DOMNodeIterator_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointerWhenPositionIsZero_EDGX0_VZxE0() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NodeTypeTest nodeTest = new NodeTypeTest(0);
        boolean reverse = false;
        DOMNodePointer startWith = null;
        DOMNodeIterator iterator = new DOMNodeIterator(parent, nodeTest, reverse, startWith);
        iterator.setPosition(0);
        NodePointer actual = iterator.getNodePointer();
        assertNull(actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointerWhenPositionIsNotZero_DOSx1_LeMj0() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NodeTypeTest nodeTest = new NodeTypeTest(0);
        boolean reverse = false;
        DOMNodePointer startWith = null;
        DOMNodeIterator iterator = new DOMNodeIterator(parent, nodeTest, reverse, startWith);
        iterator.setPosition(1);
        NodePointer actual = iterator.getNodePointer();
        assertNotNull(actual);
    }
}