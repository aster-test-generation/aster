/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullPointer_Test_Failing {
    private String id;
    private QName name;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_bxVP0_1() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        QName name = nullPointer.getName();
        assertEquals("en", name.getPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_bxVP0_2() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        QName name = nullPointer.getName();
        assertEquals("id", name.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameInvalidInputs_mDhH1_1() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        QName name = nullPointer.getName();
        assertNotEquals("fr", name.getPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameInvalidInputs_mDhH1_2() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        QName name = nullPointer.getName();
        assertNotEquals("id1", name.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentObject_pDjY1_fid1() {
        NullPointer nullPointer1 = new NullPointer(new Locale("en"), "id");
        NullPointer nullPointer2 = new NullPointer(new Locale("en"), "id");
        assertFalse(nullPointer1.equals(nullPointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerInvalid_ZGYC2_2_fid1() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertFalse(propertyPointer instanceof NullPropertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChild_oOnu0() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        JXPathContext context = JXPathContext.newContext(nullPointer);
        QName name = new QName("name");
        int index = 0;
        Object value = new Object();
        NodePointer nodePointer = nullPointer.createChild(context, name, index, value);
        assertNotNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameNullInputs_lrom2_irPy0_1() {
        NullPointer nullPointer = new NullPointer(Locale.getDefault(), "");
        QName name = nullPointer.getName();
        assertNull(name.getPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameNullInputs_lrom2_irPy0_2() {
        NullPointer nullPointer = new NullPointer(Locale.getDefault(), "");
        QName name = nullPointer.getName();
        assertNull(name.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerNull_QkJu1_TBOO0() {
        NullPointer nullPointer = new NullPointer(Locale.getDefault(), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNull(propertyPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_bxVP0() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        QName name = nullPointer.getName();
        assertEquals("en", name.getPrefix());
        assertEquals("id", name.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameInvalidInputs_mDhH1() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        QName name = nullPointer.getName();
        assertNotEquals("fr", name.getPrefix());
        assertNotEquals("id1", name.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyPointerInvalid_ZGYC2() {
        NullPointer nullPointer = new NullPointer(new Locale("en", "US"), "id");
        PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
        assertNotNull(propertyPointer);
        assertFalse(propertyPointer instanceof NullPropertyPointer);
    }
}