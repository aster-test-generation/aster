/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.NodeSet;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_RootContext_Test_Failing {
    private JXPathContextReferenceImpl jxpathContext;
    private NodePointer pointer;
    RootContext rootcontext;
    private static int MAX_REGISTER = 4;
    private int availableRegister = 0;
    private Object[] registers;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithNullJXPathContextAndPointer_epJH3() {
        RootContext rootContext = new RootContext(null, null);
        String expected = "RootContext:null";
        String actual = rootContext.toString();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetConstantContext() throws Exception {
        rootcontext = new RootContext(jxpathContext, pointer);
        rootcontext = new RootContext(jxpathContext, pointer);
        NodePointer nodePointer = mock(NodePointer.class);
        NodeSet nodeSet = mock(NodeSet.class);
        Object constant = mock(Object.class);
        EvalContext evalContext = rootcontext.getConstantContext(constant);
        // TODO: Add assertions
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRootContextWithNullJXPathContext_OyYN1_NRkt0() {
        JXPathContextReferenceImpl jxpathContext = null;
        DOMNodePointer pointer = new DOMNodePointer(null, null, null);
        RootContext rootContext = new RootContext(jxpathContext, pointer);
        RootContext actualRootContext = rootContext.getRootContext();
        assertEquals(rootContext, actualRootContext);
    }
}