/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.DynamicPropertyHandler;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynamicPointer_Test_Passing {
    DynamicPointer dynamicpointer;
    private Object bean;
    private QName name;
    private DynamicPropertyHandler handler;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisDynamicPropertyDeclarationSupported() throws Exception {
        dynamicpointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), new Locale("en"));
        assertTrue(dynamicpointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupported_tmdN0() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertTrue(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullParent_PVAu2() {
        DynamicPointer dynamicPointer = new DynamicPointer(null, new QName("name"), new Object(), new PageContextHandler());
        assertTrue(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullBean_krRR4() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), null, new PageContextHandler(), Locale.ENGLISH);
        assertTrue(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullHandler_Iaio5() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), null, Locale.ENGLISH);
        assertTrue(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDynamicPropertyDeclarationSupportedWithNullLocale_AWcp6() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), null);
        assertTrue(dynamicPointer.isDynamicPropertyDeclarationSupported());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameObject_eCDM0() {
        DynamicPointer pointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertTrue(pointer.equals(pointer));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentObject_xktJ1() {
        DynamicPointer pointer1 = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        DynamicPointer pointer2 = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertFalse(pointer1.equals(pointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentName_yGQy3() {
        DynamicPointer pointer1 = new DynamicPointer(new QName("name1"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        DynamicPointer pointer2 = new DynamicPointer(new QName("name2"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertFalse(pointer1.equals(pointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NullName_wAzV4() {
        DynamicPointer pointer1 = new DynamicPointer(null, new Object(), new PageContextHandler(), Locale.ENGLISH);
        DynamicPointer pointer2 = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertFalse(pointer1.equals(pointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NullBean_WpiH5() {
        DynamicPointer pointer1 = new DynamicPointer(new QName("name"), null, new PageContextHandler(), Locale.ENGLISH);
        DynamicPointer pointer2 = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertFalse(pointer1.equals(pointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NullHandler_qfth6() {
        DynamicPointer pointer1 = new DynamicPointer(new QName("name"), new Object(), null, Locale.ENGLISH);
        DynamicPointer pointer2 = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertFalse(pointer1.equals(pointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NullLocale_vgpJ7() {
        DynamicPointer pointer1 = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), null);
        DynamicPointer pointer2 = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertFalse(pointer1.equals(pointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollection_LJsM0() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = Locale.ENGLISH;
        DynamicPointer pointer = new DynamicPointer(name, bean, handler, locale);
        assertFalse(pointer.isCollection());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollectionWithNullParent_Agvh2() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = Locale.ENGLISH;
        DynamicPointer pointer = new DynamicPointer(null, name, bean, handler);
        assertFalse(pointer.isCollection());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollectionWithNullName_iQDH3() {
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = Locale.ENGLISH;
        DynamicPointer pointer = new DynamicPointer(null, bean, handler, locale);
        assertFalse(pointer.isCollection());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollectionWithNullBean_VBNT4() {
        QName name = new QName("name");
        PageContextHandler handler = new PageContextHandler();
        Locale locale = Locale.ENGLISH;
        DynamicPointer pointer = new DynamicPointer(name, null, handler, locale);
        assertFalse(pointer.isCollection());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollectionWithNullHandler_hNkm5() {
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        DynamicPointer pointer = new DynamicPointer(name, bean, null, locale);
        assertFalse(pointer.isCollection());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAttributeIterator_oXPi0_1() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = new Locale("en");
        DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
        NodeIterator iterator = dynamicPointer.attributeIterator(name);
        assertNotNull(iterator);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAttributeIterator_oXPi0_2() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = new Locale("en");
        DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
        NodeIterator iterator = dynamicPointer.attributeIterator(name);
        assertTrue(iterator instanceof DynamicAttributeIterator);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_azZZ0() {
        QName qName = new QName("name");
        DynamicPointer dynamicPointer = new DynamicPointer(qName, null, null, null);
        QName actualName = dynamicPointer.getName();
        assertEquals(qName, actualName);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithHandler_TpDT2() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        QName qName = new QName("name");
        DynamicPointer dynamicPointer = new DynamicPointer(qName, null, pageContextHandler, null);
        QName actualName = dynamicPointer.getName();
        assertEquals(qName, actualName);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNameWithLocale_pAxh3() {
        Locale locale = Locale.US;
        QName qName = new QName("name");
        DynamicPointer dynamicPointer = new DynamicPointer(qName, null, null, locale);
        QName actualName = dynamicPointer.getName();
        assertEquals(qName, actualName);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testasPath() throws Exception {
        dynamicpointer = new DynamicPointer(Mockito.mock(QName.class), Mockito.mock(Object.class), Mockito.mock(PageContextHandler.class), Mockito.mock(Locale.class));
        assertEquals("/", dynamicpointer.asPath());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_TQZe0() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        int length = dynamicPointer.getLength();
        assertEquals(1, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithNullParent_ARcE3() {
        DynamicPointer dynamicPointer = new DynamicPointer(null, new QName("name"), new Object(), new PageContextHandler());
        int length = dynamicPointer.getLength();
        assertEquals(1, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithNullKeywordVariables_llQw4() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), null, Locale.ENGLISH);
        int length = dynamicPointer.getLength();
        assertEquals(1, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithNullLocale_ruxG5() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), null);
        int length = dynamicPointer.getLength();
        assertEquals(1, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithNullName_IZef6() {
        DynamicPointer dynamicPointer = new DynamicPointer(null, new Object(), new PageContextHandler(), Locale.ENGLISH);
        int length = dynamicPointer.getLength();
        assertEquals(1, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithNullObject_ORhI7() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), null, new PageContextHandler(), Locale.ENGLISH);
        int length = dynamicPointer.getLength();
        assertEquals(1, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithNullNode_MwDD9() {
        DOMNodePointer parent = new DOMNodePointer(null, Locale.ENGLISH);
        DynamicPointer dynamicPointer = new DynamicPointer(parent, new QName("name"), new Object(), new PageContextHandler());
        int length = dynamicPointer.getLength();
        assertEquals(1, length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValue1_Ipem0() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        Object baseValue = dynamicPointer.getBaseValue();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisLeaf() throws Exception {
        dynamicpointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), new Locale("en"));
        assertFalse(dynamicpointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_AtomicValue_XJhJ1() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertFalse(dynamicPointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_nullName_sPmq0_kaNz1() {
        DynamicPointer dynamicPointer = new DynamicPointer(null, new Object(), new PageContextHandler(), Locale.ENGLISH);
        assertEquals(System.identityHashCode(dynamicPointer.getNode()), dynamicPointer.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithoutParent_mHve1_eJVn0() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = Locale.getDefault();
        DOMNodePointer parent = null;
        DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
        String path = dynamicPointer.asPath();
        assertEquals("/", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAttributeIterator_oXPi0() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = new Locale("en");
        DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
        NodeIterator iterator = dynamicPointer.attributeIterator(name);
        assertNotNull(iterator);
        assertTrue(iterator instanceof DynamicAttributeIterator);
    }
}