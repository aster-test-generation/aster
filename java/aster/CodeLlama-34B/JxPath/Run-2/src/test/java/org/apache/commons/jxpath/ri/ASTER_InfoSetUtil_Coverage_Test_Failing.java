/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_InfoSetUtil_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValue_Null_sMlY5() {
        Object object = null;
        double expected = Double.NaN;
        double actual = InfoSetUtil.doubleValue(object);
        assertEquals(expected, actual, 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumber_instanceofBoolean_FIoL1() {
        Object object = Boolean.TRUE;
        Number expected = new Integer(1);
        Number actual = InfoSetUtil.number(object);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumber_instanceofOther_egKL5() {
        Object object = new Object();
        Number expected = new Integer(10);
        Number actual = InfoSetUtil.number(object);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumber_null_WbDV6() {
        Object object = null;
        Number expected = null;
        Number actual = InfoSetUtil.number(object);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumber_NumberFormatException_VtJf7() {
        Object object = "abc";
        Number expected = new Double(10.5);
        Number actual = InfoSetUtil.number(object);
        assertEquals(expected, actual);
    }
}