/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NamespacePointer_Test_Passing {
    private String namespaceURI;
    private String prefix;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithoutParentAndPrefix_vtcX2() {
        NamespacePointer namespace = new NamespacePointer(null, "ns");
        String path = namespace.asPath();
        assertEquals("namespace::ns", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithoutParentAndPrefixAndNamespaceURI_DWWM3() {
        NamespacePointer namespace = new NamespacePointer(null, "ns", "http://example.com");
        String path = namespace.asPath();
        assertEquals("namespace::ns", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLengthWithNullParent_NiRq2() {
        NamespacePointer namespace = new NamespacePointer(null, "prefix");
        assertEquals(1, namespace.getLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValueWithNullInput_SZrd1() {
        NamespacePointer namespacePointer = new NamespacePointer(null, "prefix");
        Object result = namespacePointer.getBaseValue();
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNodeWithNullNodeTest_XPdT0_RTwP0() {
        NamespacePointer namespacePointer = new NamespacePointer(new DOMNodePointer(null, Locale.ENGLISH, "id"), "prefix");
        assertTrue(namespacePointer.testNode(null));
    }
}