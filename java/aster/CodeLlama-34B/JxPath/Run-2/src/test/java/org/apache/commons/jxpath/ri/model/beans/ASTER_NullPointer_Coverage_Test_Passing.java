/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_NullPointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameObject_yTHW0() {
        NullPointer nullPointer = new NullPointer(new QName("name"), new Locale("en"));
        assertTrue(nullPointer.equals(nullPointer));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NullName_IUpy2() {
        NullPointer nullPointer = new NullPointer(null, new Locale("en"));
        assertFalse(nullPointer.equals(new NullPointer(new QName("name"), new Locale("en"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NonNullName_euRQ3() {
        NullPointer nullPointer = new NullPointer(new QName("name"), new Locale("en"));
        assertTrue(nullPointer.equals(new NullPointer(new QName("name"), new Locale("en"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentName_McJX4() {
        NullPointer nullPointer = new NullPointer(new QName("name1"), new Locale("en"));
        assertFalse(nullPointer.equals(new NullPointer(new QName("name2"), new Locale("en"))));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentObject_dsfk1_fid2() {
        NullPointer nullPointer1 = new NullPointer(new QName("name"), new Locale("en"));
        NullPointer nullPointer2 = new NullPointer(new QName("name"), new Locale("en"));
        assertTrue(nullPointer1.equals(nullPointer2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithParentNull_fsKT0_bMQS0_fid2() {
        NullPointer nullPointer = new NullPointer(Locale.getDefault(), "root");
        try {
            nullPointer.createPath(null, null);
            fail("Expected UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            assertEquals("Cannot create the root object: id(root)", e.getMessage());
        }
    }
}