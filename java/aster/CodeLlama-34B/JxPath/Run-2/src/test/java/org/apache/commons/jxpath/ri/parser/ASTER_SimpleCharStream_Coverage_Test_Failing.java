/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleCharStream_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn6_FWXX5_DDLT0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 0, 0, 0);
        stream.adjustBeginLineColumn(1, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff1_DcqX0_SDuK0() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImage1_nIxD0_awLY0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.InputStreamReader(new java.io.ByteArrayInputStream(new byte[0])), 1, 1);
        stream.bufpos = 10;
        stream.tokenBegin = 5;
        stream.bufsize = 20;
        String image = stream.GetImage();
        assertEquals("string", image);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff2_WbNv1_vGoh0() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.maxNextCharInd = 0;
        stream.available = 0;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff3_QLNL2_PHTW0() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff5_oMEx4_syMO0() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.tokenBegin = -1;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff4_gbhb3_ZzVX1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.tokenBegin = 10;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff8_cEMy7_Youg0() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 25;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff10_RMVF9_hmvd0() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 45;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff7_niDp6_GKYC1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 15;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff11_SynM10_OfXw0() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 55;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn_rbgU0_zmnR0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{1, 2, 3}), 1, 1, 3);
        int column = stream.getColumn();
        assertEquals(1, column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff9_nJzX8_JhKp1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 35;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff12_gtRO11_vBzR0() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 65;
        stream.FillBuff();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLine_mANq0_lHaM0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1);
        int line = stream.getLine();
        assertEquals(1, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLineWithDifferentBufferSize_WVbl1_pFQw0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 10);
        int line = stream.getLine();
        assertEquals(1, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLineWithDifferentStartColumn_bgYz3_tBVy0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 2, 1);
        int line = stream.getLine();
        assertEquals(1, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLineWithDifferentStartLine_fePR2_iMFY0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 2, 1, 1);
        int line = stream.getLine();
        assertEquals(2, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLineWithDifferentReader_PozK5_QaIw0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1);
        int line = stream.getLine();
        assertEquals(1, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuff_withBufferSize_XJFj2_jHEm0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 0, 0, 1024);
        stream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuff_wrapAround_IrEW0_uKeT0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 0, 0);
        stream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuff_withInputStream_vOWx4_iPQi0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0);
        stream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuff_withInputStream_withBufferSize_dUIP6_zNWV0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 1024);
        stream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuff_withReader_zvrw8_zYYL0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        stream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsLF_kJIH0_TIVP0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\n'}), 1, 1);
        stream.UpdateLineColumn('\n');
        assertEquals(2, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsLF_kJIH0_TIVP0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\n'}), 1, 1);
        stream.UpdateLineColumn('\n');
        assertEquals(1, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_BpfC1_WaLk0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r'}), 1, 1);
        stream.UpdateLineColumn('\r');
        assertEquals(2, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_BpfC1_WaLk0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r'}), 1, 1);
        stream.UpdateLineColumn('\r');
        assertEquals(1, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_cIsLF_uYGN2_ukHP0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r', '\n'}), 1, 1);
        stream.UpdateLineColumn('\r');
        stream.UpdateLineColumn('\n');
        assertEquals(3, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_cIsLF_uYGN2_ukHP0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r', '\n'}), 1, 1);
        stream.UpdateLineColumn('\r');
        stream.UpdateLineColumn('\n');
        assertEquals(1, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_cIsTAB_HIuq4_BcrL0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\t'}), 1, 1);
        stream.UpdateLineColumn('\t');
        assertEquals(1, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_cIsTAB_HIuq4_BcrL0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\t'}), 1, 1);
        stream.UpdateLineColumn('\t');
        assertEquals(9, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_cIsNotLF_hRLx3_avvu0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r', 'a'}), 1, 1);
        stream.UpdateLineColumn('\r');
        stream.UpdateLineColumn('a');
        assertEquals(2, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_cIsNotLF_hRLx3_avvu0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r', 'a'}), 1, 1);
        stream.UpdateLineColumn('\r');
        stream.UpdateLineColumn('a');
        assertEquals(2, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_cIsNotTAB_lhAO5_bUEx0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'a'}), 1, 1);
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_cIsNotTAB_lhAO5_bUEx0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'a'}), 1, 1);
        stream.UpdateLineColumn('a');
        assertEquals(2, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_cIsNull_RCDW9_ZuuS0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\0'}), 1, 1);
        stream.UpdateLineColumn('\0');
        assertEquals(1, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_cIsNull_RCDW9_ZuuS0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\0'}), 1, 1);
        stream.UpdateLineColumn('\0');
        assertEquals(1, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn6_FWXX5_DDLT0_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 0, 0, 0);
        stream.adjustBeginLineColumn(1, 1);
        assertEquals(1, stream.getBeginLine());
        assertEquals(1, stream.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff2_WbNv1_vGoh0_fid1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.maxNextCharInd = 0;
        stream.available = 0;
        stream.FillBuff();
        assertEquals(0, stream.available);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff3_QLNL2_PHTW0_fid1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.FillBuff();
        assertEquals(10, stream.available);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff4_gbhb3_ZzVX1_fid1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.tokenBegin = 10;
        stream.FillBuff();
        assertEquals(10, stream.tokenBegin);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff8_cEMy7_Youg0_fid1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 25;
        stream.FillBuff();
        assertEquals(10, stream.available);
        assertEquals(25, stream.tokenBegin);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff7_niDp6_GKYC1_fid1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 15;
        stream.FillBuff();
        assertEquals(10, stream.available);
        assertEquals(15, stream.tokenBegin);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff11_SynM10_OfXw0_fid1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 55;
        stream.FillBuff();
        assertEquals(10, stream.available);
        assertEquals(55, stream.tokenBegin);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetColumn_rbgU0_zmnR0_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{1, 2, 3}), 1, 1, 3);
        int column = stream.getColumn();
        assertEquals(3, column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff9_nJzX8_JhKp1_fid1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 35;
        stream.FillBuff();
        assertEquals(10, stream.available);
        assertEquals(35, stream.tokenBegin);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFillBuff12_gtRO11_vBzR0_fid1() throws Exception {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        stream.available = 10;
        stream.tokenBegin = 65;
        stream.FillBuff();
        assertEquals(10, stream.available);
        assertEquals(65, stream.tokenBegin);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLine_mANq0_lHaM0_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1);
        int line = stream.getLine();
        assertEquals(0, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLineWithDifferentBufferSize_WVbl1_pFQw0_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 10);
        int line = stream.getLine();
        assertEquals(0, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLineWithDifferentStartLine_fePR2_iMFY0_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 2, 1, 1);
        int line = stream.getLine();
        assertEquals(1, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLineWithDifferentReader_PozK5_QaIw0_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1);
        int line = stream.getLine();
        assertEquals(0, line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_BpfC1_WaLk0_1_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r'}), 1, 1);
        stream.UpdateLineColumn('\r');
        assertEquals(1, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_BpfC1_WaLk0_2_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r'}), 1, 1);
        stream.UpdateLineColumn('\r');
        assertEquals(2, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_cIsNotLF_hRLx3_avvu0_1_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r', 'a'}), 1, 1);
        stream.UpdateLineColumn('\r');
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_prevCharIsCR_cIsNotLF_hRLx3_avvu0_2_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\r', 'a'}), 1, 1);
        stream.UpdateLineColumn('\r');
        stream.UpdateLineColumn('a');
        assertEquals(1, stream.column);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_cIsNull_RCDW9_ZuuS0_1_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\0'}), 1, 1);
        stream.UpdateLineColumn('\0');
        assertEquals(0, stream.line);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateLineColumn_cIsNull_RCDW9_ZuuS0_2_fid1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{'\0'}), 1, 1);
        stream.UpdateLineColumn('\0');
        assertEquals(0, stream.column);
    }
}