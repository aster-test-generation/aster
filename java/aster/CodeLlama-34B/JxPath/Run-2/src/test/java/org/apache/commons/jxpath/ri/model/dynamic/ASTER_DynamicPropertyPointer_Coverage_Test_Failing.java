/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DynamicPropertyPointer_Coverage_Test_Failing {
    private PageContextHandler mockPageContextHandler;
    private Object value;
    private String[] names;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_nullNode_nFxi3() {
        DynamicPropertyPointer dpp = new DynamicPropertyPointer(null, new PageContextHandler());
        dpp.setIndex(1);
        Object value = dpp.getImmediateNode();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath1_wccx0() {
        DynamicPropertyPointer dpp = new DynamicPropertyPointer(null, null);
        String result = dpp.asPath();
        assertNotNull(result);
        assertTrue(result.startsWith("/"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath2_BIiZ1() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        DynamicPropertyPointer dpp = new DynamicPropertyPointer(parent, null);
        String result = dpp.asPath();
        assertNotNull(result);
        assertTrue(result.startsWith("/"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath9_xcgk8() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        DynamicPropertyPointer dpp = new DynamicPropertyPointer(parent, null);
        String result = dpp.asPath();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath1_wccx0_1() {
        DynamicPropertyPointer dpp = new DynamicPropertyPointer(null, null);
        String result = dpp.asPath();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath1_wccx0_2() {
        DynamicPropertyPointer dpp = new DynamicPropertyPointer(null, null);
        String result = dpp.asPath();
        assertTrue(result.startsWith("/"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath2_BIiZ1_1() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        DynamicPropertyPointer dpp = new DynamicPropertyPointer(parent, null);
        String result = dpp.asPath();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath2_BIiZ1_2() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        DynamicPropertyPointer dpp = new DynamicPropertyPointer(parent, null);
        String result = dpp.asPath();
        assertTrue(result.startsWith("/"));
    }
}