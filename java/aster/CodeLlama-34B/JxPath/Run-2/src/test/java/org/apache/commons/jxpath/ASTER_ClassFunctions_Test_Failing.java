/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.functions.ConstructorFunction;
import org.apache.commons.jxpath.functions.MethodFunction;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ClassFunctions_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNonNullNamespace_CKZI1() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "new", new Object[0]);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNullName_FgPc2() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, null);
        Function function = classFunctions.getFunction(null, null, new Object[0]);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNonNullName_Fmtw3_fid1() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, null);
        Function function = classFunctions.getFunction("new", null, new Object[0]);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNonNullParameters_qxte5_fid1() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, null);
        Function function = classFunctions.getFunction("new", "new", new Object[0]);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithConstructor_wmxn6_fid1() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, null);
        Function function = classFunctions.getFunction("new", "new", new Object[0]);
        assertTrue(function instanceof ConstructorFunction);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithMethod_Yejo7_fid1() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, null);
        Function function = classFunctions.getFunction("new", "new", new Object[0]);
        assertTrue(function instanceof MethodFunction);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespaces_empty_bpfp0_fid1() {
        ClassFunctions classFunctions = new ClassFunctions(null, null);
        Set<String> usedNamespaces = classFunctions.getUsedNamespaces();
        assertTrue(usedNamespaces.isEmpty());
    }
}