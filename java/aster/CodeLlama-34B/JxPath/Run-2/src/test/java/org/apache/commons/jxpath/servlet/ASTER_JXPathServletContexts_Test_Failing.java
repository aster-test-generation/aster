/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContext;
import javax.servlet.ServletRequest;
import javax.servlet.http.HttpSession;
import javax.servlet.jsp.PageContext;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathContextFactory;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockPageContext;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JXPathServletContexts_Test_Failing {
    private static JXPathContextFactory factory;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithNullServletContext_rAqE0() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSessionContextWithNullSession_azCt0() {
        HttpSession session = null;
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = JXPathServletContexts.getSessionContext(session, servletContext);
        assertNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSessionContextWithNullServletContext_LreA1() {
        HttpSession session = mock(HttpSession.class);
        ServletContext servletContext = null;
        JXPathContext context = JXPathServletContexts.getSessionContext(session, servletContext);
        assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSessionContextWithValidSessionAndServletContext_AFzj2_2() {
        HttpSession session = mock(HttpSession.class);
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = JXPathServletContexts.getSessionContext(session, servletContext);
        assertEquals(context.getParentContext(), JXPathServletContexts.getApplicationContext(servletContext));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSessionContextWithValidSessionAndServletContext_AFzj2_3() {
        HttpSession session = mock(HttpSession.class);
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = JXPathServletContexts.getSessionContext(session, servletContext);
        assertEquals(context.getVariables(), new KeywordVariables(Constants.SESSION_SCOPE, new HttpSessionAndServletContext(session, servletContext)));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRequestContextWithNullServletRequest_OPhD2() {
        ServletRequest request = null;
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
        assertNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRequestContextWithNullServletRequestAndServletContext_nvaL4() {
        ServletRequest request = null;
        ServletContext servletContext = null;
        JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
        assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPageContextWithPageContext_ZwNk0_KMJq0_1() {
        PageContext pageContext = new MockPageContext();
        JXPathContext context = JXPathServletContexts.getPageContext(pageContext);
        assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPageContextWithPageContext_ZwNk0_KMJq0_2() {
        PageContext pageContext = new MockPageContext();
        JXPathContext context = JXPathServletContexts.getPageContext(pageContext);
        assertEquals(context.getParentContext(), pageContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPageContextWithPageContext_ZwNk0_KMJq0_3() {
        PageContext pageContext = new MockPageContext();
        JXPathContext context = JXPathServletContexts.getPageContext(pageContext);
        assertEquals(context.getVariables(), new KeywordVariables(Constants.PAGE_SCOPE, new PageScopeContext(pageContext)));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithNullServletContext_rAqE0_fid1() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        assertNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSessionContextWithNullServletContext_LreA1_fid1() {
        HttpSession session = mock(HttpSession.class);
        ServletContext servletContext = null;
        JXPathContext context = JXPathServletContexts.getSessionContext(session, servletContext);
        assertNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSessionContextWithValidSessionAndServletContext_AFzj2() {
        HttpSession session = mock(HttpSession.class);
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = JXPathServletContexts.getSessionContext(session, servletContext);
        assertNotNull(context);
        assertEquals(context.getParentContext(), JXPathServletContexts.getApplicationContext(servletContext));
        assertEquals(context.getVariables(), new KeywordVariables(Constants.SESSION_SCOPE, new HttpSessionAndServletContext(session, servletContext)));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRequestContextWithNullServletContext_FJob3_fid1() {
        ServletRequest request = mock(ServletRequest.class);
        ServletContext servletContext = null;
        JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
        assertNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRequestContextWithNullServletRequestAndServletContext_nvaL4_fid1() {
        ServletRequest request = null;
        ServletContext servletContext = null;
        JXPathContext context = JXPathServletContexts.getRequestContext(request, servletContext);
        assertNull(context);
    }
}