/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.Compiler;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.Step;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_SimplePathInterpreter_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNullPointer1_qtJw0() throws Exception {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step[] steps = mock(Step[].class);
        int currentStep = 0;
        when(steps.length).thenReturn(currentStep);
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertEquals(parent, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNullPointer2_tNzB1() throws Exception {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step[] steps = mock(Step[].class);
        int currentStep = 1;
        when(steps.length).thenReturn(currentStep);
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertNotEquals(parent, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNullPointer4_JrNN3() throws Exception {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step[] steps = mock(Step[].class);
        int currentStep = 1;
        when(steps.length).thenReturn(currentStep);
        when(parent.getValuePointer()).thenReturn(parent);
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertEquals(parent, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNullPointer5_kVMT4() throws Exception {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step[] steps = mock(Step[].class);
        int currentStep = 1;
        when(steps.length).thenReturn(currentStep);
        when(parent.getValuePointer()).thenReturn(parent);
        when(steps[currentStep].getAxis()).thenReturn(Compiler.AXIS_CHILD);
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertNotEquals(parent, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNullPointer6_wbKT5() throws Exception {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step[] steps = mock(Step[].class);
        int currentStep = 1;
        when(steps.length).thenReturn(currentStep);
        when(parent.getValuePointer()).thenReturn(parent);
        when(steps[currentStep].getAxis()).thenReturn(Compiler.AXIS_CHILD);
        when(steps[currentStep].getNodeTest()).thenReturn(mock(NodeNameTest.class));
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertNotEquals(parent, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNullPointer1_qtJw0_fid1() throws Exception {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step[] steps = new Step[0];
        int currentStep = 0;
        when(steps.length).thenReturn(currentStep);
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertEquals(parent, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNullPointer5_kVMT4_fid1() throws Exception {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step step = mock(Step.class);
        when(step.getAxis()).thenReturn(Compiler.AXIS_CHILD);
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, new Step[]{step}, 0);
        assertNotEquals(parent, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNullPointer6_wbKT5_fid1() throws Exception {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step[] steps = new Step[1];
        int currentStep = 0;
        when(steps[currentStep].getAxis()).thenReturn(Compiler.AXIS_CHILD);
        when(steps[currentStep].getNodeTest()).thenReturn(mock(NodeNameTest.class));
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertNotEquals(parent, result);
    }
}