/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BasicNodeSet_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPointers_tcpp0_1() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<Object> pointers = basicNodeSet.getPointers();
        assertNotNull(pointers);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPointers_tcpp0_2() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<Object> pointers = basicNodeSet.getPointers();
        assertTrue(pointers.isEmpty());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPointers_tcpp0() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<Object> pointers = basicNodeSet.getPointers();
        assertNotNull(pointers);
        assertTrue(pointers.isEmpty());
    }
}