/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BasicNodeSet_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPointers_NonEmpty_QggH2_fid2() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<String> pointers = basicNodeSet.getPointers();
        assertFalse(pointers.isEmpty());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPointers_Immutable_fsMh4_fid2() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<String> pointers = basicNodeSet.getPointers();
        assertFalse(pointers.getClass().getName().contains("Unmodifiable"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPointers_ReturnType_SCLf5_fid2() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<String> pointers = basicNodeSet.getPointers();
        assertEquals(List.class, pointers.getClass());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdd_NullPointer_cxpx1_fid2() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        Pointer pointer = null;
        basicNodeSet.add(pointer);
        assertFalse(basicNodeSet.getPointers().contains(pointer));
    }
}