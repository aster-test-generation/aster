/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ParseException_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes1_dNUP0() {
        ParseException pe = new ParseException();
        String str = "Hello World!";
        String expected = "Hello World!";
        String actual = pe.add_escapes(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes2_RFZX1() {
        ParseException pe = new ParseException();
        String str = "Hello\nWorld!";
        String expected = "Hello\\nWorld!";
        String actual = pe.add_escapes(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes3_kXAn2() {
        ParseException pe = new ParseException();
        String str = "Hello\tWorld!";
        String expected = "Hello\\tWorld!";
        String actual = pe.add_escapes(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMessage1_Oola0() {
        ParseException pe = new ParseException("message");
        String message = pe.getMessage();
    }
}