/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_HttpSessionHandler_Coverage_Test_Failing {
    private HttpSession session;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_withNullBean_cBmf6() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HashSet<String> set = new HashSet<>();
        Object bean = null;
        handler.collectPropertyNames(set, bean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_withNonHttpSessionAndServletContextBean_Wgtq7() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HashSet<String> set = new HashSet<>();
        Object bean = new Object();
        handler.collectPropertyNames(set, bean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_withServletContext_wRAf0_flDi0() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HashSet<String> set = new HashSet<>();
        Object bean = new HttpSessionAndServletContext(null, null);
        handler.collectPropertyNames(set, bean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_withNullSession_tisv2_xqdX0() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HashSet<String> set = new HashSet<>();
        Object bean = new HttpSessionAndServletContext(null, null);
        HttpSession session = null;
        handler.collectPropertyNames(set, bean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullSession_YzxR0_oOJF0() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HttpSessionAndServletContext handle = mock(HttpSessionAndServletContext.class);
        when(handle.getSession()).thenReturn(null);
        handler.setProperty(handle, "property", "value");
        assertEquals("value", handle.getSession().getAttribute("property"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullSessionAndNullValue_rtry6_VzOq0() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HttpSessionAndServletContext handle = mock(HttpSessionAndServletContext.class);
        when(handle.getSession()).thenReturn(null);
        handler.setProperty(handle, "property", null);
        assertNull(handle.getSession().getAttribute("property"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithNullSession_sYLW0_KsDN0() {
        HttpSessionAndServletContext handle = mock(HttpSessionAndServletContext.class);
        when(handle.getSession()).thenReturn(null);
        HttpSessionHandler handler = new HttpSessionHandler();
        Object result = handler.getProperty(handle, "property");
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullValue_wEbX3_FDlF0() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HttpSession session = mock(HttpSession.class);
        when(session.getAttributeNames()).thenReturn(null);
        handler.setProperty(session, "property", null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullSessionAndNullProperty_qVus5_iMUs0() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HttpSessionAndServletContext handle = mock(HttpSessionAndServletContext.class);
        when(handle.getSession()).thenReturn(null);
        handler.setProperty(handle, null, "value");
        assertEquals(null, handler.getProperty(handle, null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_withServletContext_wRAf0_flDi0_fid2() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HashSet<String> set = new HashSet<>();
        Object bean = new HttpSessionAndServletContext(null, null);
        handler.collectPropertyNames(set, bean);
        assertEquals(0, set.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_withNullSession_tisv2_xqdX0_fid2() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HashSet<String> set = new HashSet<>();
        Object bean = new HttpSessionAndServletContext(null, null);
        HttpSession session = null;
        handler.collectPropertyNames(set, session);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullSessionAndNullValue_rtry6_VzOq0_fid2() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HttpSessionAndServletContext handle = mock(HttpSessionAndServletContext.class);
        when(handle.getSession()).thenReturn(null);
        handler.setProperty(handle, "property", null);
        assertNull(handle.getSession());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullValue_wEbX3_FDlF0_fid2() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HttpSession session = mock(HttpSession.class);
        when(session.getAttributeNames()).thenReturn(null);
        handler.setProperty(session, "property", null);
        assertNull(session.getAttribute("property"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullSessionAndNullProperty_qVus5_iMUs0_fid2() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HttpSessionAndServletContext handle = mock(HttpSessionAndServletContext.class);
        when(handle.getSession()).thenReturn(null);
        handler.setProperty(handle, null, "value");
        assertNull(handler.getProperty(handle, null));
    }
}