/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynamicPointer_Test_Failing {
    DynamicPointer dynamicpointer;
    private Object bean;
    private QName name;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodeIteratorWithNullProperty_tevo1_fid1() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = Locale.getDefault();
        DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
        NodeIterator nodeIterator = dynamicPointer.createNodeIterator(null, true, null);
        assertNull(nodeIterator);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithoutParent_mGYD1_fid1() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = Locale.getDefault();
        DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
        String path = dynamicPointer.asPath();
        assertEquals("/name", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_atomicValue_patC1_fid1() {
        QName name = new QName("name");
        Object bean = new Object();
        PageContextHandler handler = new PageContextHandler();
        Locale locale = Locale.getDefault();
        DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
        assertTrue(dynamicPointer.isLeaf());
    }
}