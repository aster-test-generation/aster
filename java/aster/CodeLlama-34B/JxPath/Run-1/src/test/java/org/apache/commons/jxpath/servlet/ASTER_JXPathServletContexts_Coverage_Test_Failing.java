/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.apache.commons.jxpath.JXPathContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_JXPathServletContexts_Coverage_Test_Failing {
    private HttpServletRequest httpServletRequest;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContext_rasM0() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithExistingContext_acZy1_1() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        JXPathContext existingContext = servletContexts.getApplicationContext(null);
        assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithExistingContext_acZy1_2() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        JXPathContext existingContext = servletContexts.getApplicationContext(null);
        assertEquals(context, existingContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithNullServletContext_NXtz2() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        assertNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithValidServletContext_qtuy4_2() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        assertTrue(context instanceof JXPathContext);
    }

    @Test
    public void testGetRequestContext_znfy0_2() {
        JXPathServletContexts contexts = new JXPathServletContexts();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpSession session = mock(HttpSession.class);
        ServletContext servletContext = mock(ServletContext.class);
        when(request.getSession(false)).thenReturn(session);
        when(session.getServletContext()).thenReturn(servletContext);
        JXPathContext context = contexts.getRequestContext(request, servletContext);
        assertEquals(servletContext, context.getContextBean());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithExistingContext_acZy1() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        assertNotNull(context);
        JXPathContext existingContext = servletContexts.getApplicationContext(null);
        assertEquals(context, existingContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithValidServletContext_qtuy4() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        assertNotNull(context);
        assertTrue(context instanceof JXPathContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetApplicationContextWithDifferentServletContext_nSjT5() {
        JXPathServletContexts servletContexts = new JXPathServletContexts();
        JXPathContext context = servletContexts.getApplicationContext(null);
        assertNotNull(context);
        JXPathContext differentContext = servletContexts.getApplicationContext(null);
        assertNotEquals(context, differentContext);
    }
}