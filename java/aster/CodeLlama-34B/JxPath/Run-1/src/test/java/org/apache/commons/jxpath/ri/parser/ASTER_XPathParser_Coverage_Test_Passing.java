/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.Compiler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XPathParser_Coverage_Test_Passing {
    private XPathParser parser;
    private int[] jj_la1 = new int[39];
    private Compiler compiler;
    private int jj_gen;
    XPathParser xpathparser;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAbsoluteLocationPath_mUjj1() throws Exception {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testVariableReference_PTgO1() throws ParseException {
        Object result = parser.VariableReference();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPredicate3_yaHZ2_bCgZ0() throws ParseException {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]))));
        Object result = parser.Predicate();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNCName_Without_CoreFunctions_OR_wFPX1_MeOg1() throws ParseException {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("OR"));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        String result = parser.NCName_Without_CoreFunctions();
        assertEquals("OR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQName1_QEcH0_sGVQ0() throws ParseException {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        Object result = parser.QName();
        assertNotNull(result);
    }
}