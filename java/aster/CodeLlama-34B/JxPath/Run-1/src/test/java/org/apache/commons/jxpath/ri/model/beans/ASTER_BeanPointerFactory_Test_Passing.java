/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPointerFactory_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_Pfzw0() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(name, np.getName());
        assertEquals(bean, np.getNode());
        assertEquals(locale, np.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullName_OQTG1() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = null;
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertNull(np.getName());
        assertEquals(bean, np.getNode());
        assertEquals(locale, np.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullLocale_xjef3() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = null;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(name, np.getName());
        assertEquals(bean, np.getNode());
        assertNull(np.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullNameAndLocale_fcqU5() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = null;
        Object bean = new Object();
        Locale locale = null;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertNull(np.getName());
        assertEquals(bean, np.getNode());
        assertNull(np.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_Pfzw0_1() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(name, np.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_Pfzw0_2() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(bean, np.getNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_Pfzw0_3() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(locale, np.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullName_OQTG1_1() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = null;
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertNull(np.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullName_OQTG1_2() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = null;
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(bean, np.getNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullName_OQTG1_3() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = null;
        Object bean = new Object();
        Locale locale = Locale.ENGLISH;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(locale, np.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullLocale_xjef3_1() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = null;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(name, np.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullLocale_xjef3_2() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = null;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(bean, np.getNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullLocale_xjef3_3() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = new QName("name");
        Object bean = new Object();
        Locale locale = null;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertNull(np.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullNameAndLocale_fcqU5_1() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = null;
        Object bean = new Object();
        Locale locale = null;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertNull(np.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullNameAndLocale_fcqU5_2() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = null;
        Object bean = new Object();
        Locale locale = null;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertEquals(bean, np.getNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullNameAndLocale_fcqU5_3() {
        BeanPointerFactory bpf = new BeanPointerFactory();
        QName name = null;
        Object bean = new Object();
        Locale locale = null;
        NodePointer np = bpf.createNodePointer(name, bean, locale);
        assertNull(np.getLocale());
    }
}