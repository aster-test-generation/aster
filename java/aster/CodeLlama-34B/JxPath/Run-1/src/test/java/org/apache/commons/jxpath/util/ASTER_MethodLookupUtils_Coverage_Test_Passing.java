/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_MethodLookupUtils_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupConstructorWithNoMatch_ZTxt3() {
        Object[] parameters = new Object[]{1};
        Constructor constructor = MethodLookupUtils.lookupConstructor(MethodLookupUtils.class, parameters);
        assertNull(constructor);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupConstructorWithAmbiguous_LalA4() {
        Object[] parameters = new Object[]{"test"};
        Constructor constructor = MethodLookupUtils.lookupConstructor(MethodLookupUtils.class, parameters);
        assertNull(constructor);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupConstructorWithNullParameters_MLuf0_1() throws NoSuchMethodException, SecurityException {
        Class<?> targetClass = MethodLookupUtils.class;
        Object[] parameters = null;
        Constructor<?> constructor = MethodLookupUtils.lookupConstructor(targetClass, parameters);
        assertNotNull(constructor);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupConstructorWithNullParameters_MLuf0_2() throws NoSuchMethodException, SecurityException {
        Class<?> targetClass = MethodLookupUtils.class;
        Object[] parameters = null;
        Constructor<?> constructor = MethodLookupUtils.lookupConstructor(targetClass, parameters);
        assertEquals(targetClass, constructor.getDeclaringClass());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupConstructorWithNullParameters_MLuf0_3() throws NoSuchMethodException, SecurityException {
        Class<?> targetClass = MethodLookupUtils.class;
        Object[] parameters = null;
        Constructor<?> constructor = MethodLookupUtils.lookupConstructor(targetClass, parameters);
        assertEquals(0, constructor.getParameterCount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupConstructorWithNoMatch_GEUr3() throws NoSuchMethodException, SecurityException {
        Class<?> targetClass = MethodLookupUtils.class;
        Object[] parameters = new Object[]{"hello", "world"};
        Constructor<?> constructor = MethodLookupUtils.lookupConstructor(targetClass, parameters);
        assertNull(constructor);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupConstructorWithAmbiguousMatch_zImY4() throws NoSuchMethodException, SecurityException {
        Class<?> targetClass = MethodLookupUtils.class;
        Object[] parameters = new Object[]{"hello", 123};
        Constructor<?> constructor = MethodLookupUtils.lookupConstructor(targetClass, parameters);
        assertNull(constructor);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupStaticMethod_NoSuchMethodException_KNAp3() {
        Class targetClass = MethodLookupUtils.class;
        String name = "lookupStaticMethod";
        Object[] parameters = new Object[0];
        Method method = MethodLookupUtils.lookupStaticMethod(targetClass, name, parameters);
        assertNull(method);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod_parametersNull_gENJ0() {
        Class targetClass = MethodLookupUtils.class;
        String name = "lookupMethod";
        Object[] parameters = null;
        Method method = MethodLookupUtils.lookupMethod(targetClass, name, parameters);
        assertNull(method);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod_parametersLengthLessThanOne_xPOB1() {
        Class targetClass = MethodLookupUtils.class;
        String name = "lookupMethod";
        Object[] parameters = new Object[0];
        Method method = MethodLookupUtils.lookupMethod(targetClass, name, parameters);
        assertNull(method);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod_parametersFirstElementNull_ipuV2() {
        Class targetClass = MethodLookupUtils.class;
        String name = "lookupMethod";
        Object[] parameters = new Object[]{null};
        Method method = MethodLookupUtils.lookupMethod(targetClass, name, parameters);
        assertNull(method);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupMethod_matchTypeNoMatch_aqiW3() {
        Class targetClass = MethodLookupUtils.class;
        String name = "lookupMethod";
        Object[] parameters = new Object[]{"test"};
        Method method = MethodLookupUtils.lookupMethod(targetClass, name, parameters);
        assertNull(method);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLookupConstructorWithNullParameters_MLuf0() throws NoSuchMethodException, SecurityException {
        Class<?> targetClass = MethodLookupUtils.class;
        Object[] parameters = null;
        Constructor<?> constructor = MethodLookupUtils.lookupConstructor(targetClass, parameters);
        assertNotNull(constructor);
        assertEquals(targetClass, constructor.getDeclaringClass());
        assertEquals(0, constructor.getParameterCount());
    }
}