/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.springframework.mock.web.MockServletContext;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ServletContextHandler_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_empty_gDUi0() {
        ServletContextHandler handler = new ServletContextHandler();
        String[] propertyNames = handler.getPropertyNames(null);
        assertEquals(0, propertyNames.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_invalidContext_dnmi4() {
        ServletContextHandler handler = new ServletContextHandler();
        String[] propertyNames = handler.getPropertyNames("invalid");
        assertEquals(0, propertyNames.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_validContext_hcjm5() {
        ServletContextHandler handler = new ServletContextHandler();
        String[] propertyNames = handler.getPropertyNames("valid");
        assertEquals(0, propertyNames.length);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithNullContext_cPoy1() {
        ServletContextHandler contextHandler = new ServletContextHandler();
        ServletContext context = null;
        String property = "property";
        Object result = contextHandler.getProperty(context, property);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithNullContextAndProperty_JjjF7() {
        ServletContextHandler contextHandler = new ServletContextHandler();
        ServletContext context = null;
        String property = null;
        Object result = contextHandler.getProperty(context, property);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithNullContextAndNonExistentProperty_lSUP8() {
        ServletContextHandler contextHandler = new ServletContextHandler();
        ServletContext context = null;
        String property = "nonExistentProperty";
        Object result = contextHandler.getProperty(context, property);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithNullContextAndInvalidProperty_eKVM9() {
        ServletContextHandler contextHandler = new ServletContextHandler();
        ServletContext context = null;
        String property = "invalidProperty";
        Object result = contextHandler.getProperty(context, property);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullContext_Bdxa1() {
        ServletContextHandler handler = new ServletContextHandler();
        ServletContext context = null;
        String property = "property";
        Object value = new Object();
        try {
            handler.setProperty(context, property, value);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_Null_GJKL2() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        HashSet<String> set = new HashSet<>();
        servletContextHandler.collectPropertyNames(set, null);
        assertEquals(0, set.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProperty_oWeD0_ynot0() {
        ServletContextHandler contextHandler = new ServletContextHandler();
        MockServletContext context = new MockServletContext();
        String property = "property";
        Object value = new Object();
        context.setAttribute(property, value);
        Object result = contextHandler.getProperty(context, property);
        assertEquals(value, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithDifferentTypes_rCFl5_ZiVc0_1() {
        ServletContextHandler contextHandler = new ServletContextHandler();
        ServletContext context = new MockServletContext();
        String property = "property";
        Object value1 = new Object();
        Object value2 = new Object();
        context.setAttribute(property, value1);
        Object result = contextHandler.getProperty(context, property);
        context.setAttribute(property, value2);
        result = contextHandler.getProperty(context, property);
        assertEquals(value1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyWithDifferentTypes_rCFl5_ZiVc0_2() {
        ServletContextHandler contextHandler = new ServletContextHandler();
        ServletContext context = new MockServletContext();
        String property = "property";
        Object value1 = new Object();
        Object value2 = new Object();
        context.setAttribute(property, value1);
        Object result = contextHandler.getProperty(context, property);
        context.setAttribute(property, value2);
        result = contextHandler.getProperty(context, property);
        assertEquals(value2, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullProperty_pruO2_mljj0() {
        ServletContextHandler handler = new ServletContextHandler();
        ServletContext context = null;
        String property = null;
        Object value = new Object();
        try {
            handler.setProperty(context, property, value);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullValue_ZrPj3_oAwF0() {
        ServletContextHandler handler = new ServletContextHandler();
        ServletContext context = null;
        String property = "property";
        Object value = null;
        try {
            handler.setProperty(context, property, value);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_HttpSessionAndServletContext_Srkv0_KFta0() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        HttpSessionAndServletContext httpSessionAndServletContext = new HttpSessionAndServletContext(null, null);
        HashSet<String> set = new HashSet<>();
        servletContextHandler.collectPropertyNames(set, httpSessionAndServletContext);
        assertEquals(1, set.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames_ServletContext_sMmq1_debF0() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        MockServletContext servletContext = new MockServletContext();
        HashSet<String> set = new HashSet<>();
        servletContextHandler.collectPropertyNames(set, servletContext);
        assertEquals(0, set.size());
    }
}