/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleCharStream_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit1_Ffhc0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        stream.ReInit(new java.io.StringReader(""), 1, 1, 4096);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit2_Ddml1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        stream.ReInit(new java.io.StringReader(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImage1_iQCp0_KyCl0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 0, 0, 0);
        String image = scs.GetImage();
        assertEquals("", image);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn1_keHT0_YOnG0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""), 0, 0);
        simpleCharStream.adjustBeginLineColumn(0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn2_FIYj1_RWNX0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0, 0);
        simpleCharStream.adjustBeginLineColumn(0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn4_TxwG3_QaJL0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
        simpleCharStream.adjustBeginLineColumn(0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn3_DvHU2_ORZR1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 0, 0);
        simpleCharStream.adjustBeginLineColumn(0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn5_KuXO4_TQZw0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""));
        simpleCharStream.adjustBeginLineColumn(0, 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone1_QjMb0_tqnf0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
        stream.Done();
        assertNull(stream.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone1_QjMb0_tqnf0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
        stream.Done();
        assertNull(stream.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone1_QjMb0_tqnf0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
        stream.Done();
        assertNull(stream.bufcolumn);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone2_IOYd1_wuru0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
        stream.Done();
        assertNull(stream.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone2_IOYd1_wuru0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
        stream.Done();
        assertNull(stream.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone2_IOYd1_wuru0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
        stream.Done();
        assertNull(stream.bufcolumn);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone3_JiEN2_WbJl0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1);
        stream.Done();
        assertNull(stream.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone3_JiEN2_WbJl0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1);
        stream.Done();
        assertNull(stream.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone3_JiEN2_WbJl0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1);
        stream.Done();
        assertNull(stream.bufcolumn);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone4_PAYo3_JLFC0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        stream.Done();
        assertNull(stream.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone4_PAYo3_JLFC0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        stream.Done();
        assertNull(stream.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone4_PAYo3_JLFC0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        stream.Done();
        assertNull(stream.bufcolumn);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone5_rEyH4_mjmE0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1);
        stream.Done();
        assertNull(stream.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone5_rEyH4_mjmE0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1);
        stream.Done();
        assertNull(stream.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone5_rEyH4_mjmE0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1);
        stream.Done();
        assertNull(stream.bufcolumn);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuff_noWrapAround_AbxQ1_FUWm0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""));
        simpleCharStream.ExpandBuff(false);
    }
}