/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.Iterator;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathCompiledExpression_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemovePathWithException_ujFB1() {
        JXPathCompiledExpression jxPathCompiledExpression = new JXPathCompiledExpression("xpath", new Constant("expression"));
        JXPathContextReferenceImpl context = new JXPathContextReferenceImpl(null, null);
        try {
            jxPathCompiledExpression.removePath(context);
            fail("Expected exception not thrown");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveAllWithInvalidContext_lRQt1() {
        JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("expression"));
        JXPathContext context = null;
        try {
            expression.removeAll(context);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue1_Apbc0() {
        JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
        JXPathContext context = new JXPathContextReferenceImpl(null, null);
        Object value = expression.getValue(context, null);
        assertNotNull(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue2_dmIn1() {
        JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
        JXPathContext context = new JXPathContextReferenceImpl(null, null);
        Object value = expression.getValue(context, Object.class);
        assertNotNull(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithJXPathContextReferenceImpl_kBUV0() {
        JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("expression"));
        JXPathContextReferenceImpl context = new JXPathContextReferenceImpl(null, null);
        Object value = expression.getValue(context);
        assertNotNull(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIterateWithJXPathContextReferenceImpl_rpZc0() {
        JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("expression"));
        JXPathContextReferenceImpl context = new JXPathContextReferenceImpl(null, null);
        Iterator iterator = expression.iterate(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIteratePointersWithNullContext_twoN1_fid1() {
        JXPathCompiledExpression expression = new JXPathCompiledExpression("//book", new Constant("book"));
        JXPathContext context = null;
        try {
            expression.iteratePointers(context);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }
}