/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CoreOperationSubtract_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_RlMJ0() {
        CoreOperationSubtract cos = new CoreOperationSubtract(new Constant("1"), new Constant("2"));
        assertEquals("-", cos.getSymbol());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSymmetric_RQzl0() {
        Constant arg1 = new Constant("1");
        Constant arg2 = new Constant("2");
        CoreOperationSubtract coreOperationSubtract = new CoreOperationSubtract(arg1, arg2);
        assertFalse(coreOperationSubtract.isSymmetric());
    }
}