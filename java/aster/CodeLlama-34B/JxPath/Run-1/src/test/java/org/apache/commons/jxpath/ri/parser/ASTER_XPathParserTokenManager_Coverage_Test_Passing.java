/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XPathParserTokenManager_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void methodUnderTest(String input) {
        switch (input) {
            case "A":
                break;
            case "B":
                break;
            case "C":
                break;
            default:
                break;
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMethodUnderTest_A_eKAR3() {
        String input = "A";
        methodUnderTest(input);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMethodUnderTest_B_WEOY4() {
        String input = "B";
        methodUnderTest(input);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMethodUnderTest_C_zQer5() {
        String input = "C";
        methodUnderTest(input);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMethodUnderTest_randomInput_IlUL7() {
        String input = "random input";
        methodUnderTest(input);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMethodUnderTest_nullInput_GDAu8() {
        String input = null;
        methodUnderTest(input);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken14_hoSW13() {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken1_tOlo0_MudJ0() {
        XPathParserTokenManager xpathParserTokenManager = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        assertEquals(xpathParserTokenManager.jjmatchedPos, 0);
    }
}