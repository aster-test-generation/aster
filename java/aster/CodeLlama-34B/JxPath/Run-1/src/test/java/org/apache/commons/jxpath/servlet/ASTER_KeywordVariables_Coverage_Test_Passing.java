/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_KeywordVariables_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariable_afyO0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        assertTrue(keywordVariables.isDeclaredVariable("keyword"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariable_IGhE0() {
        KeywordVariables kv = new KeywordVariables("keyword", "object");
        assertThrows(UnsupportedOperationException.class, () -> kv.declareVariable("variable", "value"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUndeclareVariable_zIhR0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        try {
            keywordVariables.undeclareVariable("variable");
        } catch (UnsupportedOperationException e) {
            assertEquals("Cannot undeclare keyword variables.", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVariable_Wruy0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        Object variable = keywordVariables.getVariable("variable");
        assertNull(variable);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVariableWithDeclaredVariable_MMjC1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        Object variable = keywordVariables.getVariable("keyword");
        assertNotNull(variable);
    }
}