/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathException_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause1_kYpW0() {
        JXPathException exception = new JXPathException("Test exception");
        Throwable cause = exception.getCause();
        assertEquals(exception, cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause2_sqww1() {
        JXPathException exception = new JXPathException();
        Throwable cause = exception.getCause();
        assertNull(cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause3_RDxG2() {
        JXPathException exception = new JXPathException("Test exception", new Throwable());
        Throwable cause = exception.getCause();
        assertNotNull(cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCause4_kYhP3() {
        JXPathException exception = new JXPathException(new Throwable());
        Throwable cause = exception.getCause();
        assertNotNull(cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetException1_VsRD0() {
        JXPathException exception = new JXPathException("Test exception");
        Throwable actualException = exception.getException();
        assertEquals(actualException, exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetException2_oHjr1() {
        JXPathException exception = new JXPathException();
        Throwable actualException = exception.getException();
        assertNull(actualException);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetException3_CYlY2() {
        Throwable cause = new Throwable("Test cause");
        JXPathException exception = new JXPathException("Test exception", cause);
        Throwable actualException = exception.getException();
        assertEquals(actualException, cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetException4_ffcc3() {
        Throwable cause = new Throwable("Test cause");
        JXPathException exception = new JXPathException(cause);
        Throwable actualException = exception.getException();
        assertEquals(actualException, cause);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMessage1_AkqQ0() {
        JXPathException exception = new JXPathException("Test message");
        String message = exception.getMessage();
        assertEquals("Test message", message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMessage2_qKGy1() {
        JXPathException exception = new JXPathException(new Exception("Test exception"));
        String message = exception.getMessage();
        assertEquals("Test exception", message);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMessage3_PeoD2() {
        JXPathException exception = new JXPathException("Test message", new Exception("Test exception"));
        String message = exception.getMessage();
        assertEquals("Test message; Test exception", message);
    }
}