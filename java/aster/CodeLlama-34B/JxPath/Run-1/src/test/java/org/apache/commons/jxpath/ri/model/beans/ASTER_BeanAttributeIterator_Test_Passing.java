/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanAttributeIterator_Test_Passing {
    private NodePointer parent;
    private int position = 0;
    private boolean includeXmlLang;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPositionInvalid_ytli1() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("bean"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("attribute"));
        assertEquals(0, iterator.getPosition());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPositionNonEmpty_TmZX4() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("bean"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("attribute"));
        iterator.setPosition(1);
        assertEquals(1, iterator.getPosition());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPositionGreaterThan1_HBxm5() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("bean"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("attribute"));
        iterator.setPosition(2);
        assertEquals(2, iterator.getPosition());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPositionLessThan1_mbLh6() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("bean"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("attribute"));
        iterator.setPosition(0);
        assertEquals(0, iterator.getPosition());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPositionEqualToNegative1_MyYZ9() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("bean"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("attribute"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition2_fvYr1() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("name"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("name"));
        boolean result = iterator.setPosition(2);
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition3_Emmo2() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("name"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("name"));
        boolean result = iterator.setPosition(3);
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition4_ZcNm3() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("name"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("name"));
        boolean result = iterator.setPosition(4);
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_excludeXmlLang_VoDW1() {
        BeanPointer parent = new BeanPointer(new QName("parent"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH);
        BeanAttributeIterator iterator = new BeanAttributeIterator(parent, new QName("name"));
        NodePointer nodePointer = iterator.getNodePointer();
        assertFalse(nodePointer instanceof LangAttributePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition1_zGJa0_fid1() {
        BeanAttributeIterator iterator = new BeanAttributeIterator(new BeanPointer(new QName("name"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.ENGLISH), new QName("name"));
        boolean result = iterator.setPosition(1);
    }
}