/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBeanInfo;
import org.apache.commons.jxpath.JXPathIntrospector;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.util.ValueUtils;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

public class Aster_DynamicPointerFactory_Coverage_Test_Passing {
    NodePointer parent = new DOMNodePointer(null, null, null);
    private ValueUtils valueUtils;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_returnNull_rFpW6() {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_beanIsNotNull_ceTX1_fLFb0() {
        DynamicPointerFactory factory = new DynamicPointerFactory();
        NodePointer parent = new DOMNodePointer(null, null, null);
        QName name = new QName("test");
        Object bean = new Object();
        NodePointer result = factory.createNodePointer(parent, name, bean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_beanIsDynamic_Vbcc2_lXSM0() {
        DynamicPointerFactory factory = new DynamicPointerFactory();
        NodePointer parent = new DOMNodePointer(null, null, null);
        QName name = new QName("test");
        Object bean = new Object();
        JXPathBeanInfo bi = JXPathIntrospector.getBeanInfo(bean.getClass());
        when(bi.isDynamic()).thenReturn(true);
        NodePointer result = factory.createNodePointer(parent, name, bean);
        assertNotNull(result);
    }
}