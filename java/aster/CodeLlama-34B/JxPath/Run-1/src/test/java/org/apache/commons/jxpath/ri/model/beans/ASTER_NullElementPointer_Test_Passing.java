/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullElementPointer_Test_Passing {
    NullElementPointer nullelementpointer;
    private String name;
    private String email;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisCollection() throws Exception {
        nullelementpointer = new NullElementPointer(mock(DOMNodePointer.class), 0);
        assertFalse(nullelementpointer.isCollection());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetImmediateNode() throws Exception {
        nullelementpointer = new NullElementPointer(Mockito.mock(DOMNodePointer.class), 0);
        assertNull(nullelementpointer.getImmediateNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetLength() throws Exception {
        nullelementpointer = new NullElementPointer(mock(DOMNodePointer.class), 0);
        nullelementpointer = new NullElementPointer(mock(DOMNodePointer.class), 0);
        nullelementpointer = new NullElementPointer(mock(DOMNodePointer.class), 0);
        nullelementpointer = new NullElementPointer(mock(DOMNodePointer.class), 0);
        nullelementpointer = new NullElementPointer(mock(DOMNodePointer.class), 0);
        nullelementpointer = new NullElementPointer(mock(DOMNodePointer.class), 0);
        assertEquals(0, nullelementpointer.getLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisActual() throws Exception {
        nullelementpointer = new NullElementPointer(mock(DOMNodePointer.class), 0);
        assertFalse(nullelementpointer.isActual());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisLeaf() throws Exception {
        nullelementpointer = new NullElementPointer(Mockito.mock(DOMNodePointer.class), 0);
        Assertions.assertTrue(nullelementpointer.isLeaf());
    }
}