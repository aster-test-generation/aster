/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CoreOperationAdd_Coverage_Test_Passing {
    private static final int ADD_PRECEDENCE = 1;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_ineO0() {
        CoreOperationAdd add = new CoreOperationAdd(new Expression[0]);
        assertEquals("+", add.getSymbol());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSymmetric_XuUl0() {
        CoreOperationAdd coreOperationAdd = new CoreOperationAdd(new Expression[0]);
        assertTrue(coreOperationAdd.isSymmetric());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrecedence_WHkn0_clKj0() {
        CoreOperationAdd add = new CoreOperationAdd(new Expression[0]);
        int result = add.getPrecedence();
    }
}