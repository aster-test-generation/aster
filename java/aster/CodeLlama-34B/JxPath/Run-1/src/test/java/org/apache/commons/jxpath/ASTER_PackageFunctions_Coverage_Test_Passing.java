/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PackageFunctions_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespaces_sXFW0_1() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Set<String> usedNamespaces = packageFunctions.getUsedNamespaces();
        assertEquals(1, usedNamespaces.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespaces_sXFW0_2() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Set<String> usedNamespaces = packageFunctions.getUsedNamespaces();
        assertTrue(usedNamespaces.contains("namespace"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction1_tsLO0() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", null);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction2_TNYN1() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[0]);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction3_ypLn2() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction4_WjsW3() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction5_MoEE4() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction6_XEnp5() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction7_qsDX6() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction8_pcpv7() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction9_trmV8() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction10_tged9() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", "", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction11_hVmm10() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", "", "", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction12_WZmd11() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", "", "", "", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction13_lPDP12() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", "", "", "", "", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction14_hORW13() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", "", "", "", "", "", "", "", ""});
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction15_WkGK14() {
        PackageFunctions packageFunctions = new PackageFunctions("", "");
        Function function = packageFunctions.getFunction("", "", new Object[]{"", "", "", "", "", "", "", "", "", "", "", "", ""});
        assertNull(function);
    }
}