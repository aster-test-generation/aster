/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ClassFunctions_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespaces_Ymsz0_1() {
        ClassFunctions classFunctions = new ClassFunctions(null, "namespace");
        Set<String> usedNamespaces = classFunctions.getUsedNamespaces();
        assertEquals(1, usedNamespaces.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespaces_Ymsz0_2() {
        ClassFunctions classFunctions = new ClassFunctions(null, "namespace");
        Set<String> usedNamespaces = classFunctions.getUsedNamespaces();
        assertTrue(usedNamespaces.contains("namespace"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction1_KRNu0() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "name", new Object[0]);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction2_Gzio1() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "name", null);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction3_Vmag2() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "new", new Object[0]);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction4_jlTm3() {
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "namespace");
        Function function = classFunctions.getFunction("namespace", "new", null);
        assertNull(function);
    }
}