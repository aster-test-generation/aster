/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_BeanPointer_Coverage_Test_Failing {
    private Object mockObject;

    @Test
    public void testHashCode_noOA0() {
        QName name = mock(QName.class);
        when(name.hashCode()).thenReturn(123);
        BeanPointer beanPointer = new BeanPointer(name, null, null, null);
        assertEquals(123, beanPointer.hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentParent_AoLZ2_fid1() {
        DOMNodePointer parent1 = new DOMNodePointer(null, null, null);
        DOMNodePointer parent2 = new DOMNodePointer(null, null, null);
        BeanPointer beanPointer1 = new BeanPointer(parent1, null, null, null);
        BeanPointer beanPointer2 = new BeanPointer(parent2, null, null, null);
        assertFalse(beanPointer1.equals(beanPointer2));
    }
}