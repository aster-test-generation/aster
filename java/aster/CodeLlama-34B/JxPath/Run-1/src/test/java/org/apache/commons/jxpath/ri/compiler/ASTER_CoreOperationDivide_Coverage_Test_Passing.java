/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CoreOperationDivide_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_szJi0() {
        CoreOperationDivide coreOperationDivide = new CoreOperationDivide(new Constant("1"), new Constant("2"));
        String symbol = coreOperationDivide.getSymbol();
        assertEquals("div", symbol);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSymmetric_nhvi0() {
        CoreOperationDivide coreOperationDivide = new CoreOperationDivide(new Constant("2"), new Constant("3"));
        assertFalse(coreOperationDivide.isSymmetric());
    }
}