/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletRequest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ServletRequestHandler_Coverage_Test_Failing {
    private ServletRequest request;
    private ServletRequestHandler servletRequestHandler;
    private ServletRequest mockServletRequest;
    private ServletRequestAndContext handle;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProperty_withNullBean_JFMp0() {
        ServletRequestHandler servletRequestHandler = new ServletRequestHandler();
        assertNull(servletRequestHandler.getProperty(null, "property"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProperty_withNonServletRequestAndContextBean_rLJz1() {
        ServletRequestHandler servletRequestHandler = new ServletRequestHandler();
        assertNull(servletRequestHandler.getProperty(new Object(), "property"));
    }

    @Test
    public void testCollectPropertyNames_wuxS0_1() {
        ServletRequestHandler servletRequestHandler = new ServletRequestHandler();
        HashSet<String> set = new HashSet<>();
        ServletRequestAndContext handle = new ServletRequestAndContext(mockServletRequest, null);
        servletRequestHandler.collectPropertyNames(set, handle);
        assertEquals(2, set.size());
    }

    @Test
    public void testCollectPropertyNames_wuxS0_2() {
        ServletRequestHandler servletRequestHandler = new ServletRequestHandler();
        HashSet<String> set = new HashSet<>();
        ServletRequestAndContext handle = new ServletRequestAndContext(mockServletRequest, null);
        servletRequestHandler.collectPropertyNames(set, handle);
        assertTrue(set.contains("attributeName"));
    }

    @Test
    public void testCollectPropertyNames_wuxS0_3() {
        ServletRequestHandler servletRequestHandler = new ServletRequestHandler();
        HashSet<String> set = new HashSet<>();
        ServletRequestAndContext handle = new ServletRequestAndContext(mockServletRequest, null);
        servletRequestHandler.collectPropertyNames(set, handle);
        assertTrue(set.contains("parameterName"));
    }
}