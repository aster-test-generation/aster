/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BasicVariables_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariable_qEcq0() {
        BasicVariables basicVariables = new BasicVariables();
        basicVariables.declareVariable("varName", "value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariableWithNullValue_DlTe1() {
        BasicVariables basicVariables = new BasicVariables();
        basicVariables.declareVariable("varName", null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariable_FdqL0_fid1() {
        BasicVariables basicVariables = new BasicVariables();
        assertFalse(basicVariables.isDeclaredVariable("varName"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_LpPx0_fid1() {
        BasicVariables basicVariables = new BasicVariables();
        String expected = "{}";
        String actual = basicVariables.toString();
        assertEquals(expected, actual);
    }
}