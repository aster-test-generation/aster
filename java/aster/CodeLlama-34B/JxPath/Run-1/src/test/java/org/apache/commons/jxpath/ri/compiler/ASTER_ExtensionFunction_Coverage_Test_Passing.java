/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ExtensionFunction_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeContextDependent_POgb0() {
        QName functionName = new QName("myFunction");
        Expression[] args = new Expression[0];
        ExtensionFunction function = new ExtensionFunction(functionName, args);
        assertTrue(function.computeContextDependent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString1_fECg0() {
        QName functionName = new QName("testFunction");
        Expression[] args = new Expression[0];
        ExtensionFunction extensionFunction = new ExtensionFunction(functionName, args);
        String expected = "testFunction()";
        assertEquals(expected, extensionFunction.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcomputeValue_jhgT1() throws Exception {
    }
}