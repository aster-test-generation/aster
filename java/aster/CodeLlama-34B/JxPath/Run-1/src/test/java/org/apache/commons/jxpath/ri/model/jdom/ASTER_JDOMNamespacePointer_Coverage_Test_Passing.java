/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JDOMNamespacePointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithoutParent_rwXT2() {
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(null, "prefix");
        String path = pointer.asPath();
        assertEquals("namespace::prefix", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithoutParentAndNamespaceURI_WSrC5() {
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(null, "prefix", "namespaceURI");
        String path = pointer.asPath();
        assertEquals("namespace::prefix", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNullPrefix_PboF6() {
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(null, null, "namespaceURI");
        String path = pointer.asPath();
        assertEquals("namespace::null", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNullNamespaceURI_xmtE7() {
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(null, "prefix", null);
        String path = pointer.asPath();
        assertEquals("namespace::prefix", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNullPrefixAndNamespaceURI_oohg8() {
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(null, null, null);
        String path = pointer.asPath();
        assertEquals("namespace::null", path);
    }
}