/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_VariablePointerFactory_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNonVariableContextWrapper_dYiX1() {
        VariablePointerFactory factory = new VariablePointerFactory();
        QName name = new QName("name");
        Object object = new Object();
        Locale locale = Locale.getDefault();
        NodePointer pointer = factory.createNodePointer(name, object, locale);
        assertNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullObject_MHee3() {
        VariablePointerFactory factory = new VariablePointerFactory();
        QName name = new QName("name");
        Object object = null;
        Locale locale = Locale.getDefault();
        NodePointer pointer = factory.createNodePointer(name, object, locale);
        assertNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_LMDR0_WpFz0() {
        VariablePointerFactory factory = new VariablePointerFactory();
        int order = factory.getOrder();
        assertEquals(VariablePointerFactory.VARIABLE_POINTER_FACTORY_ORDER, order);
    }
}