/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SampleVoyages_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_voyageNumberNull_SluC0() throws Exception {
    VoyageNumber voyageNumber = null;
    Voyage voyage = SampleVoyages.lookup(voyageNumber);
    assertNull(voyage);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_voyageNumberNotNull_pLim1() throws Exception {
    VoyageNumber voyageNumber = new VoyageNumber("12345");
    Voyage voyage = SampleVoyages.lookup(voyageNumber);
    assertNotNull(voyage);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_voyageNumberNotInMap_QzZs2() throws Exception {
    VoyageNumber voyageNumber = new VoyageNumber("12345");
    Voyage voyage = SampleVoyages.lookup(voyageNumber);
    assertNull(voyage);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAll_dkzC0_1() throws Exception {
    List<Voyage> allVoyages = SampleVoyages.getAll();
    for (Voyage voyage : allVoyages) {
    }
    assertEquals(10, allVoyages.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAllWithEmptyList_iolQ1() throws Exception {
    List<Voyage> allVoyages = SampleVoyages.getAll();
    assertEquals(0, allVoyages.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAllWithOneVoyage_xiLE2_1() throws Exception {
    List<Voyage> allVoyages = SampleVoyages.getAll();
    Voyage voyage = allVoyages.get(0);
    assertEquals(1, allVoyages.size());
  }
}