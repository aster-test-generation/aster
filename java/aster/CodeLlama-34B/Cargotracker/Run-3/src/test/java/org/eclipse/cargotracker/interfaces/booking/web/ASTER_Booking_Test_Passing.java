/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Booking_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocode_Caxj0() throws Exception {
    Booking booking = new Booking();
    String destinationUnlocode = booking.getDestinationUnlocode();
    assertEquals("DEST", destinationUnlocode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithNull_fsuf1() throws Exception {
    Booking booking = new Booking();
    String destinationUnlocode = booking.getDestinationUnlocode();
    assertNull(destinationUnlocode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDuration_RVKI0() throws Exception {
    Booking booking = new Booking();
    long duration = booking.getDuration();
    assertEquals(0, duration);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginName_ihJP0_1() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNotNull(originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginName_ihJP0_2() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertEquals("Origin Name", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithNull_AvQv1() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNull(originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithEmptyString_JRKs2() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertEquals("", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithNonEmptyString_rRdL3() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNotEquals("Origin Name", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithInvalidInput_koFX4() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNotEquals("Invalid Input", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithInvalidOriginName_myfS8() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNotEquals("Invalid Origin Name", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithNonEmptyDestinationName_zqVk11() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNotEquals("Destination Name", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithInvalidDestinationName_hKCG12() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNotEquals("Invalid Destination Name", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithNonEmptyDepartureDate_NKKg15() throws Exception {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNotEquals("Departure Date", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode_uzHg0() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode("");
    assertEquals("", booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithValidUnlocode_iqHL1() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode("DEHAM");
    assertEquals("DEHAM", booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithInvalidUnlocode_raYd2() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode("INVALID");
    assertEquals(null, booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithNullUnlocode_GMsG3() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode(null);
    assertEquals(null, booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithValidUnlocodeAndName_Kssp5_2() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode("DEHAM");
    assertEquals("Hamburg", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithInvalidUnlocodeAndName_szWJ6_2() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode("INVALID");
    assertEquals(null, booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithNullUnlocodeAndName_cQfK7_2() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode(null);
    assertEquals(null, booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithEmptyUnlocodeAndName_KVhl8_2() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode("");
    assertEquals("", booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithValidUnlocodeAndInvalidName_TArK9_2() throws Exception {
    Booking booking = new Booking();
    booking.setOriginUnlocode("DEHAM");
    assertEquals(null, booking.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_Aliz0() throws Exception {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("ABC");
    assertEquals("ABC", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithNull_VuTS1() throws Exception {
    Booking booking = new Booking();
    booking.setDestinationUnlocode(null);
    assertNull(booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithEmptyString_csjT2() throws Exception {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("");
    assertEquals("", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithInvalidUnlocode_fwgG3() throws Exception {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("INVALID");
    assertNull(booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithDifferentCase_xTyX5() throws Exception {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("AbC");
    assertEquals("ABC", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithSpecialCharacters_Pilc7() throws Exception {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("ABC123");
    assertEquals("ABC123", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithMultipleLocations_mYjM8() throws Exception {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("ABC");
    booking.setDestinationUnlocode("DEF");
    assertEquals("ABC", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadline_lSkL0() throws Exception {
    Booking booking = new Booking();
    LocalDate arrivalDeadline = booking.getArrivalDeadline();
    assertEquals(LocalDate.of(2023, 3, 14), arrivalDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetToday_cjLZ0() throws Exception {
    Booking booking = new Booking();
    LocalDate today = booking.getToday();
    assertEquals(LocalDate.now(), today);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationName_ZmOr0() throws Exception {
    Booking booking = new Booking();
    String destinationName = booking.getDestinationName();
    assertEquals("Destination name should be empty", "", destinationName);
  }
}