/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Coordinates_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLongitude_pDaS0() throws Exception {
    Coordinates coordinates = new Coordinates(37.7749, -122.4194);
    double longitude = coordinates.getLongitude();
    assertEquals(37.7749, longitude, 0.0001);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLatitude_Mejx0() throws Exception {
    Coordinates coordinates = new Coordinates(37.7749, -122.4194);
    double latitude = coordinates.getLatitude();
    assertEquals(37.7749, latitude, 0.0001);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLatitudeWithZeroLatitude_FPED1() throws Exception {
    Coordinates coordinates = new Coordinates(0.0, -122.4194);
    double latitude = coordinates.getLatitude();
    assertEquals(0.0, latitude, 0.0001);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLatitudeWithNegativeLatitude_wpHY2() throws Exception {
    Coordinates coordinates = new Coordinates(-37.7749, -122.4194);
    double latitude = coordinates.getLatitude();
    assertEquals(-37.7749, latitude, 0.0001);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLatitudeWithMaxLatitude_WaRb3() throws Exception {
    Coordinates coordinates = new Coordinates(90.0, -122.4194);
    double latitude = coordinates.getLatitude();
    assertEquals(90.0, latitude, 0.0001);
  }
}