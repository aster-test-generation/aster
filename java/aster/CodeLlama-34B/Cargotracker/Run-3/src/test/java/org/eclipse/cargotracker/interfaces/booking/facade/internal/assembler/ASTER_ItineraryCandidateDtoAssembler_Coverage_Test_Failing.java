/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.domain.model.location.LocationRepository;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.RouteCandidate;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ItineraryCandidateDtoAssembler_Coverage_Test_Failing {
  private LocationRepository locationRepository;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFromDTO_EmptyLegs_iGvV0_OaHE0_1() {
    RouteCandidate routeCandidateDTO = new RouteCandidate(new ArrayList<>());
    ItineraryCandidateDtoAssembler assembler = new ItineraryCandidateDtoAssembler();
    Itinerary itinerary = assembler.fromDTO(routeCandidateDTO, null, null);
    assertNull(itinerary);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFromDTO_EmptyLegs_iGvV0_OaHE0_1_fid1() {
    RouteCandidate routeCandidateDTO = new RouteCandidate(new ArrayList<>());
    ItineraryCandidateDtoAssembler assembler = new ItineraryCandidateDtoAssembler();
    Itinerary itinerary = assembler.fromDTO(routeCandidateDTO, null, null);
    assertNotNull(itinerary);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFromDTO_EmptyLegs_iGvV0_OaHE0_2_fid1() {
    RouteCandidate routeCandidateDTO = new RouteCandidate(new ArrayList<>());
    ItineraryCandidateDtoAssembler assembler = new ItineraryCandidateDtoAssembler();
    Itinerary itinerary = assembler.fromDTO(routeCandidateDTO, null, null);
    assertEquals(0, itinerary.getLegs().size());
  }
}