/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.Location;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ChangeDestination_Test_Passing {
  public void testGetCargo_Zhka0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertNotNull(cargoRoute);
  }

  public void testGetCargoFinalDestinationName_cxzi1() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Final Destination Name", cargoRoute.getFinalDestinationName());
  }

  public void testGetCargoFinalDestination_JRJd2() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Final Destination", cargoRoute.getFinalDestination());
  }

  public void testGetCargoTrackingId_lHYt3() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Tracking ID", cargoRoute.getTrackingId());
  }

  public void testGetCargoFinalDestinationCode_qGfc4() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Final Destination Code", cargoRoute.getFinalDestinationCode());
  }

  public void testGetCargoOriginCode_lHFW5() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Origin Code", cargoRoute.getOriginCode());
  }

  public void testGetCargoNextLocation_uRWY6() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Next Location", cargoRoute.getNextLocation());
  }

  public void testGetCargoOriginName_alJO7() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Origin Name", cargoRoute.getOriginName());
  }

  public void testGetCargoOrigin_ODuu8() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Origin", cargoRoute.getOrigin());
  }

  public void testGetCargoArrivalDeadline_WzrB9() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("Arrival Deadline", cargoRoute.getArrivalDeadline());
  }

  public void testSetTrackingId_BURI0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "1234567890";
    changeDestination.setTrackingId(trackingId);
    assertEquals(trackingId, changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithNull_OUCv1() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = null;
    changeDestination.setTrackingId(trackingId);
    assertNull(changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithEmptyString_umuy2() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "";
    changeDestination.setTrackingId(trackingId);
    assertEquals(trackingId, changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithInvalidString_SoCw3() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "invalid";
    changeDestination.setTrackingId(trackingId);
    assertEquals(trackingId, changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithValidString_zYOP4() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "1234567890";
    changeDestination.setTrackingId(trackingId);
    assertEquals(trackingId, changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithDifferentString_zEcb5() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "1234567890";
    changeDestination.setTrackingId(trackingId);
    assertNotEquals("9876543210", changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithSameString_Vhhy6() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "1234567890";
    changeDestination.setTrackingId(trackingId);
    assertEquals(trackingId, changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithDifferentLengthString_VFPW7() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "1234567890";
    changeDestination.setTrackingId(trackingId);
    assertNotEquals("12345678901234567890", changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithSameLengthString_usZn8() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "1234567890";
    changeDestination.setTrackingId(trackingId);
    assertEquals(trackingId, changeDestination.getTrackingId());
  }

  public void testSetTrackingIdWithDifferentCharactersString_EutZ9() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = "1234567890";
    changeDestination.setTrackingId(trackingId);
    assertNotEquals("abcdefghij", changeDestination.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_fQeR0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("ABC");
    assertEquals("ABC", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithNull_yHQG1() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode(null);
    assertNull(changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithEmptyString_Ncbw2() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("");
    assertEquals("", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithInvalidString_nAdx3() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("123");
    assertEquals("123", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithDifferentCase_NpoE5() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("abc");
    assertEquals("abc", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithSpecialCharacters_VTkp7() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("ABC123");
    assertEquals("ABC123", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithMultipleSpecialCharacters_IkvM8() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("ABC123!@#$%^&*()_+");
    assertEquals("ABC123!@#$%^&*()_+", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithMaxLength_akfm9() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
    assertEquals("ABCDEFGHIJKLMNOPQRSTUVWXYZ", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithMinLength_UkoT10() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("A");
    assertEquals("A", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithLengthGreaterThanMax_bUlE12() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPotentialDestinations_emptyLocations_yREo0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    List<Location> destinations = changeDestination.getPotentialDestinations();
    assertTrue(destinations.isEmpty());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_Null_KMGC0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    assertNull(changeDestination.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_Empty_dFjY1() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setTrackingId("");
    assertEquals("", changeDestination.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_NonEmpty_QvdC2() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setTrackingId("1234567890");
    assertEquals("1234567890", changeDestination.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_Invalid_jGEo3() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setTrackingId("invalid");
    assertNull(changeDestination.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_NullWithNull_gDPp4() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setTrackingId(null);
    assertNull(changeDestination.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_EmptyWithNull_oKRZ8() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setTrackingId(null);
    assertEquals("", changeDestination.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLocations_empty_gPvW0() throws Exception {
    ChangeDestination cd = new ChangeDestination();
    List<Location> locations = cd.getLocations();
    assertTrue(locations.isEmpty());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLocations_null_teOf2() throws Exception {
    ChangeDestination cd = new ChangeDestination();
    List<Location> locations = cd.getLocations();
    assertNull(locations);
  }
}