/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.handling;

import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.eclipse.cargotracker.domain.model.voyage.VoyageNumber;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HandlingEventFactory_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateHandlingEvent_NullCargo_SAAg0() throws org.eclipse.cargotracker.domain.model.handling.CannotCreateHandlingEventException {
    HandlingEventFactory factory = new HandlingEventFactory();
    LocalDateTime registrationTime = LocalDateTime.now();
    LocalDateTime completionTime = LocalDateTime.now();
    TrackingId trackingId = new TrackingId("123456789");
    VoyageNumber voyageNumber = new VoyageNumber("V1");
    UnLocode unlocode = new UnLocode("CNHKG");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
      HandlingEvent event = factory.createHandlingEvent(registrationTime, completionTime, trackingId, voyageNumber, unlocode, type);
      assertNull(event.getCargo());
    } catch (CannotCreateHandlingEventException e) {
      fail("Exception should not be thrown");
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateHandlingEvent_NullVoyage_eGbm1() throws org.eclipse.cargotracker.domain.model.handling.CannotCreateHandlingEventException {
    HandlingEventFactory factory = new HandlingEventFactory();
    LocalDateTime registrationTime = LocalDateTime.now();
    LocalDateTime completionTime = LocalDateTime.now();
    TrackingId trackingId = new TrackingId("123456789");
    VoyageNumber voyageNumber = new VoyageNumber("V1");
    UnLocode unlocode = new UnLocode("CNHKG");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
      HandlingEvent event = factory.createHandlingEvent(registrationTime, completionTime, trackingId, voyageNumber, unlocode, type);
      assertNull(event.getVoyage());
    } catch (CannotCreateHandlingEventException e) {
      fail("Exception should not be thrown");
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateHandlingEvent_NullLocation_kqiw2() throws org.eclipse.cargotracker.domain.model.handling.CannotCreateHandlingEventException {
    HandlingEventFactory factory = new HandlingEventFactory();
    LocalDateTime registrationTime = LocalDateTime.now();
    LocalDateTime completionTime = LocalDateTime.now();
    TrackingId trackingId = new TrackingId("123456789");
    VoyageNumber voyageNumber = new VoyageNumber("V1");
    UnLocode unlocode = new UnLocode("CNHKG");
    HandlingEvent.Type type = HandlingEvent.Type.LOAD;
    try {
      HandlingEvent event = factory.createHandlingEvent(registrationTime, completionTime, trackingId, voyageNumber, unlocode, type);
      assertNull(event.getLocation());
    } catch (CannotCreateHandlingEventException e) {
      fail("Exception should not be thrown");
    }
  }
}