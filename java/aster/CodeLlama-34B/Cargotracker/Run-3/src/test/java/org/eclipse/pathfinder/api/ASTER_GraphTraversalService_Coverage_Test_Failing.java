/**
 * Generated by Aster
 */
package org.eclipse.pathfinder.api;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_GraphTraversalService_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPath_zuRF0() {
    GraphTraversalService service = new GraphTraversalService();
    List<String> allLocations = new ArrayList<>();
    allLocations.add("A");
    allLocations.add("B");
    allLocations.add("C");
    allLocations.add("D");
    allLocations.add("E");
    allLocations.add("F");
    allLocations.add("G");
    allLocations.add("H");
    allLocations.add("I");
    allLocations.add("J");
    allLocations.add("K");
    allLocations.add("L");
    allLocations.add("M");
    allLocations.add("N");
    allLocations.add("O");
    allLocations.add("P");
    allLocations.add("Q");
    allLocations.add("R");
    allLocations.add("S");
    allLocations.add("T");
    allLocations.add("U");
    allLocations.add("V");
    allLocations.add("W");
    allLocations.add("X");
    allLocations.add("Y");
    allLocations.add("Z");
    List<TransitPath> candidates = service.findShortestPath("A", "Z", "2023-02-28T15:15:15");
    assertEquals(1, candidates.size());
  }
}