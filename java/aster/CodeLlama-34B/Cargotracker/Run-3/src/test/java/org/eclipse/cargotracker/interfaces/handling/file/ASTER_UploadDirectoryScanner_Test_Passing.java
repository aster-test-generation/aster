/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.file;

import jakarta.batch.operations.JobOperator;
import jakarta.batch.runtime.BatchRuntime;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_UploadDirectoryScanner_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testProcessFiles_XpKM0() throws Exception {
    UploadDirectoryScanner uploadDirectoryScanner = new UploadDirectoryScanner();
    JobOperator jobOperator = BatchRuntime.getJobOperator();
    jobOperator.start("EventFilesProcessorJob", null);
    assertTrue(jobOperator.getJobNames().contains("EventFilesProcessorJob"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testProcessFilesWithInvalidJobName_WziW1() throws Exception {
    UploadDirectoryScanner uploadDirectoryScanner = new UploadDirectoryScanner();
    JobOperator jobOperator = BatchRuntime.getJobOperator();
    jobOperator.start("InvalidJobName", null);
    assertFalse(jobOperator.getJobNames().contains("InvalidJobName"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testProcessFilesWithNullJobName_TbFs2() throws Exception {
    UploadDirectoryScanner uploadDirectoryScanner = new UploadDirectoryScanner();
    JobOperator jobOperator = BatchRuntime.getJobOperator();
    jobOperator.start(null, null);
    assertFalse(jobOperator.getJobNames().contains(null));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testProcessFilesWithEmptyJobName_jRVj3() throws Exception {
    UploadDirectoryScanner uploadDirectoryScanner = new UploadDirectoryScanner();
    JobOperator jobOperator = BatchRuntime.getJobOperator();
    jobOperator.start("", null);
    assertFalse(jobOperator.getJobNames().contains(""));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testProcessFilesWithNullJobOperator_ZhwU7() throws Exception {
    UploadDirectoryScanner uploadDirectoryScanner = new UploadDirectoryScanner();
    JobOperator jobOperator = null;
    try {
      jobOperator.start("EventFilesProcessorJob", null);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
      assertTrue(e.getMessage().contains("JobOperator is null"));
    }
  }
}