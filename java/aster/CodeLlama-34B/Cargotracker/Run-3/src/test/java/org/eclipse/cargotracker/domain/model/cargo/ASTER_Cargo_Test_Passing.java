/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import jakarta.persistence.Embedded;
import jakarta.validation.constraints.NotNull;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Cargo_Test_Passing {
  private TrackingId trackingId;
  private RouteSpecification routeSpecification;
  @Embedded
  @NotNull
  private Delivery delivery;
  @Embedded
  @NotNull
  private Itinerary itinerary;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_withNullRouteSpecification_PTqH4() throws Exception {
    TrackingId trackingId = new TrackingId("ABC123");
    RouteSpecification routeSpecification = null;
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    assertEquals("ABC123", cargo.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_withNullTrackingIdAndRouteSpecification_DevV5() throws Exception {
    TrackingId trackingId = null;
    RouteSpecification routeSpecification = null;
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    assertEquals("null", cargo.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingIdWithNullRouteSpecification_HYkJ2() throws Exception {
    Cargo cargo = new Cargo(new TrackingId("123456789"), null);
    assertEquals("123456789", cargo.getTrackingId().getIdString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingIdWithNullRouteSpecificationAndTrackingId_xazr3() throws Exception {
    Cargo cargo = new Cargo(null, null);
    assertNull(cargo.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingIdWithEmptyRouteSpecification_eQWp5() throws Exception {
    Cargo cargo = new Cargo(new TrackingId("123456789"), new RouteSpecification(null, null, null));
    assertEquals("123456789", cargo.getTrackingId().getIdString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingIdWithEmptyRouteSpecificationAndTrackingId_mBfQ6() throws Exception {
    Cargo cargo = new Cargo(new TrackingId(""), new RouteSpecification(null, null, null));
    assertEquals("", cargo.getTrackingId().getIdString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingIdWithNullRouteSpecificationAndEmptyTrackingId_BPJN7() throws Exception {
    Cargo cargo = new Cargo(new TrackingId(""), null);
    assertEquals("", cargo.getTrackingId().getIdString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginWithNullRouteSpecification_OsbN2() throws Exception {
    Cargo cargo = new Cargo(new TrackingId("12345"), null);
    assertEquals(null, cargo.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginWithNullArrivalDeadline_sIeT7() throws Exception {
    Cargo cargo = new Cargo(new TrackingId("12345"), new RouteSpecification(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("CA"), "Los Angeles"), null));
    assertEquals(new Location(new UnLocode("US"), "New York"), cargo.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginWithNullRouteSpecificationAndNullTrackingId_FikX8() throws Exception {
    Cargo cargo = new Cargo(null, null);
    assertEquals(null, cargo.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDeliveryWithNullRouteSpecification_CqzX2() throws Exception {
    Cargo cargo = new Cargo(new TrackingId("12345"), null);
    Delivery delivery = cargo.getDelivery();
    assertNull(delivery);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDeliveryWithNullArrivalDeadline_MaZM5() throws Exception {
    Cargo cargo = new Cargo(new TrackingId("12345"), new RouteSpecification(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("CN"), "Shanghai"), null));
    Delivery delivery = cargo.getDelivery();
    assertNull(delivery);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDeliveryWithInvalidRouteSpecification_VsET7() throws Exception {
    Cargo cargo = new Cargo(new TrackingId("12345"), new RouteSpecification(null, null, null));
    Delivery delivery = cargo.getDelivery();
    assertNull(delivery);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrigin_Gthz0() throws Exception {
    Cargo cargo = new Cargo();
    Location origin = new Location(new UnLocode("USCHI"), "Chicago");
    cargo.setOrigin(origin);
    assertEquals(origin, cargo.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginWithNull_MAEV1() throws Exception {
    Cargo cargo = new Cargo();
    cargo.setOrigin(null);
    assertNull(cargo.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginWithDifferentLocation_XksJ2() throws Exception {
    Cargo cargo = new Cargo();
    Location origin = new Location(new UnLocode("USNYC"), "New York");
    cargo.setOrigin(origin);
    assertNotEquals(origin, cargo.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginWithDifferentUnLocode_JAQQ4() throws Exception {
    Cargo cargo = new Cargo();
    Location origin = new Location(new UnLocode("USNYC"), "Chicago");
    cargo.setOrigin(origin);
    assertNotEquals(origin, cargo.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginWithDifferentName_SAhs6() throws Exception {
    Cargo cargo = new Cargo();
    Location origin = new Location(new UnLocode("USCHI"), "New York");
    cargo.setOrigin(origin);
    assertNotEquals(origin, cargo.getOrigin());
  }
}