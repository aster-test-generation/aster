/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.file;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_EventFilesCheckpoint_Test_Passing {
  public void testSetFilePointer_aMaM0() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    eventFilesCheckpoint.setFilePointer(100L);
    assertEquals(100L, eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithNegativeValue_QVpJ1() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    eventFilesCheckpoint.setFilePointer(-100L);
    assertEquals(-100L, eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithZeroValue_Hhwc2() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    eventFilesCheckpoint.setFilePointer(0L);
    assertEquals(0L, eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithMaxValue_Mzdo3() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    eventFilesCheckpoint.setFilePointer(Long.MAX_VALUE);
    assertEquals(Long.MAX_VALUE, eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithMinValue_mcCk4() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    eventFilesCheckpoint.setFilePointer(Long.MIN_VALUE);
    assertEquals(Long.MIN_VALUE, eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithNull_CpED5() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    assertNull(eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithInvalidValue_foxD6() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    assertNull(eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithEmptyString_Pqgm7() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    assertNull(eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithBlankString_TtWY8() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    assertNull(eventFilesCheckpoint.getFilePointer());
  }

  public void testSetFilePointerWithInvalidObject_VFLS9() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    assertNull(eventFilesCheckpoint.getFilePointer());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFilePointer_Wewj0() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    long filePointer = eventFilesCheckpoint.getFilePointer();
    assertEquals(0, filePointer);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFilePointerWithNonZeroFilePointer_xvax1() throws Exception {
    EventFilesCheckpoint eventFilesCheckpoint = new EventFilesCheckpoint();
    eventFilesCheckpoint.setFilePointer(10);
    long filePointer = eventFilesCheckpoint.getFilePointer();
    assertEquals(10, filePointer);
  }
}