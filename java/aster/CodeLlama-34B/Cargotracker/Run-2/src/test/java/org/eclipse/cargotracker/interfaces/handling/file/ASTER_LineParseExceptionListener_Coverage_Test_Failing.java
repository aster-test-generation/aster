/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.file;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_LineParseExceptionListener_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnSkipReadItem_ExceptionIsNotEventLineParseException_ncgj3() throws java.lang.Exception {
    LineParseExceptionListener listener = new LineParseExceptionListener();
    Exception e = new Exception("Test exception");
    listener.onSkipReadItem(e);
    EventLineParseException parseException = (EventLineParseException) e;
    assertNull(parseException);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnSkipReadItem_ExceptionIsEventLineParseException_mLbu2_zkZQ0() throws java.lang.Exception {
    LineParseExceptionListener listener = new LineParseExceptionListener();
    Exception e = new EventLineParseException("Test exception", null, null);
    listener.onSkipReadItem(e);
    EventLineParseException parseException = (EventLineParseException) e;
    assertNotNull(parseException.getMessage());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnSkipReadItem_ExceptionIsEventLineParseException_mLbu2_zkZQ0_fid1() throws java.lang.Exception {
    LineParseExceptionListener listener = new LineParseExceptionListener();
    Exception e = new EventLineParseException("Test exception", null, null);
    listener.onSkipReadItem(e);
    EventLineParseException parseException = (EventLineParseException) e;
    assertNotNull(parseException);
  }
}