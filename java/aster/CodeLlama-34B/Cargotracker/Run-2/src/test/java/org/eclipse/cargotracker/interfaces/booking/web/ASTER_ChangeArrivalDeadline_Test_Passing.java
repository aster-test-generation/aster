/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ChangeArrivalDeadline_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetTrackingId_UZrA0() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId("12345");
    assertEquals("12345", changeArrivalDeadline.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetTrackingIdWithNull_EgJN1() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId(null);
    assertNull(changeArrivalDeadline.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetTrackingIdWithEmptyString_gKat2() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId("");
    assertEquals("", changeArrivalDeadline.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetTrackingIdWithInvalidString_orQi3() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId("invalid");
    assertEquals("invalid", changeArrivalDeadline.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLoadWithInvalidTrackingId_monv1_ehhQ0_1() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId("invalid_tracking_id");
    assertNull(changeArrivalDeadline.getCargo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLoadWithInvalidTrackingId_monv1_ehhQ0_2() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId("invalid_tracking_id");
    assertNull(changeArrivalDeadline.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLoadWithNullTrackingId_boxA2_eCaF0_1() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId(null);
    assertNull(changeArrivalDeadline.getCargo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLoadWithNullTrackingId_boxA2_eCaF0_2() {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId(null);
    assertNull(changeArrivalDeadline.getArrivalDeadline());
  }
}