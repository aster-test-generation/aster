/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.file;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

public class Aster_EventItemWriter_Coverage_Test_Failing {
  private Properties properties;
  private File archiveDirectory;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItemsWithEmptyList_NsDR2() throws Exception {
    EventItemWriter writer = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    writer.writeItems(items);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItemsWithNullList_yWqO3() throws Exception {
    EventItemWriter writer = new EventItemWriter();
    writer.writeItems(null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteItemsWithInvalidItem_kHCs4() throws Exception {
    EventItemWriter writer = new EventItemWriter();
    List<Object> items = new ArrayList<>();
    items.add(new Object());
    writer.writeItems(items);
  }

  @Test
  public void testOpen_archiveDirectoryDoesNotExist_Ddbk1_GiWx0() throws Exception {
    EventItemWriter writer = new EventItemWriter();
    when(archiveDirectory.exists()).thenReturn(false);
    writer.open(null);
    verify(archiveDirectory).mkdirs();
  }
}