/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TrackingId_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetIdString_withNullId_wsMJ2() {
    TrackingId trackingId = new TrackingId(null);
    String idString = trackingId.getIdString();
    assertNull(idString);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetIdString_withInvalidId_tpNG4() {
    TrackingId trackingId = new TrackingId("invalid_id");
    String idString = trackingId.getIdString();
    assertNull(idString);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_withoutId_vAMJ1() {
    TrackingId trackingId = new TrackingId();
    assertEquals("", trackingId.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_withNullId_BUYb2() {
    TrackingId trackingId = new TrackingId(null);
    assertEquals("", trackingId.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_withInvalidId_JLcR6() {
    TrackingId trackingId = new TrackingId("invalid");
    assertEquals("", trackingId.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_withNullObject_RhBn7() {
    TrackingId trackingId = null;
    assertEquals("", trackingId.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_NullId_xJYX1() {
    TrackingId trackingId = new TrackingId(null);
    int expectedHashCode = 0;
    int actualHashCode = trackingId.hashCode();
    assertEquals(expectedHashCode, actualHashCode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetIdString_withNullId_wsMJ2_fid1() {
    TrackingId trackingId = new TrackingId();
    String idString = trackingId.getIdString();
    assertNotNull(idString);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_NullId_xJYX1_fid1() {
    TrackingId trackingId = new TrackingId();
    int expectedHashCode = 0;
    int actualHashCode = trackingId.hashCode();
    assertEquals(expectedHashCode, actualHashCode);
  }
}