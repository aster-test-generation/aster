/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Booking_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocode_Null_wOQb1() {
    Booking booking = new Booking();
    String destinationUnlocode = booking.getDestinationUnlocode();
    assertNull(destinationUnlocode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetArrivalDeadline_dYMs0() {
    Booking booking = new Booking();
    LocalDate arrivalDeadline = LocalDate.of(2022, 12, 25);
    booking.setArrivalDeadline(arrivalDeadline);
    assertEquals(arrivalDeadline, booking.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetArrivalDeadlineWithNull_AqSP1() {
    Booking booking = new Booking();
    booking.setArrivalDeadline(null);
    assertNull(booking.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetArrivalDeadlineWithInvalidDate_stNu2() {
    Booking booking = new Booking();
    LocalDate arrivalDeadline = LocalDate.of(2022, 12, 25);
    booking.setArrivalDeadline(arrivalDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetReturnValue_isXl0() {
    Booking booking = new Booking();
    String returnValue = booking.getReturnValue();
    assertEquals("/admin/dashboard.xhtml", returnValue);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetReturnValueWithNullBooking_SiEs1() {
    Booking booking = null;
    String returnValue = null;
    assertNull(returnValue);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadlineWithNull_qhGf1() {
    Booking booking = new Booking();
    LocalDate arrivalDeadline = booking.getArrivalDeadline();
    assertNull(arrivalDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadlineWithPastDate_bqiD2() {
    Booking booking = new Booking();
    LocalDate pastDate = LocalDate.now().minusDays(1);
    booking.setArrivalDeadline(pastDate);
    LocalDate arrivalDeadline = booking.getArrivalDeadline();
    assertEquals(pastDate, arrivalDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadlineWithFutureDate_aikq3() {
    Booking booking = new Booking();
    LocalDate futureDate = LocalDate.now().plusDays(1);
    booking.setArrivalDeadline(futureDate);
    LocalDate arrivalDeadline = booking.getArrivalDeadline();
    assertEquals(futureDate, arrivalDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithNull_yHyZ2() {
    Booking booking = new Booking();
    String originUnlocode = booking.getOriginUnlocode();
    assertNull(originUnlocode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithInvalidString_SmJu4() {
    Booking booking = new Booking();
    String originUnlocode = booking.getOriginUnlocode();
    assertNotEquals("ABC", originUnlocode);
  }
}