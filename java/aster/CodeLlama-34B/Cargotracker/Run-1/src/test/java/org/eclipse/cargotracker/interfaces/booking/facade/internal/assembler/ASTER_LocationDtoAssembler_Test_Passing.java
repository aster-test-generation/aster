/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_LocationDtoAssembler_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDto_SIMf0_UyhT0_1() {
    LocationDtoAssembler assembler = new LocationDtoAssembler();
    org.eclipse.cargotracker.domain.model.location.Location location = new org.eclipse.cargotracker.domain.model.location.Location(new UnLocode("USCHI"), "Chicago");
    org.eclipse.cargotracker.interfaces.booking.facade.dto.Location dto = assembler.toDto(location);
    assertEquals("USCHI", dto.getUnLocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDto_SIMf0_UyhT0_2() {
    LocationDtoAssembler assembler = new LocationDtoAssembler();
    org.eclipse.cargotracker.domain.model.location.Location location = new org.eclipse.cargotracker.domain.model.location.Location(new UnLocode("USCHI"), "Chicago");
    org.eclipse.cargotracker.interfaces.booking.facade.dto.Location dto = assembler.toDto(location);
    assertEquals("Chicago", dto.getName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDtoListWithEmptyList_Qbpe1_SYNp0() {
    LocationDtoAssembler locationDtoAssembler = new LocationDtoAssembler();
    List<org.eclipse.cargotracker.domain.model.location.Location> locations = new ArrayList<>();
    List<org.eclipse.cargotracker.interfaces.booking.facade.dto.Location> dtoList = locationDtoAssembler.toDtoList(locations);
    assertEquals(0, dtoList.size());
  }
}