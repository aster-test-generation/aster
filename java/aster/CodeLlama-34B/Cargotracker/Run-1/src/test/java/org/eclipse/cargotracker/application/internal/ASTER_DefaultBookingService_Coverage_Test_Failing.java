/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.internal;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingService_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRequestPossibleRoutesForCargo_NullTrackingId_teJA0() {
    DefaultBookingService service = new DefaultBookingService();
    List<Itinerary> itineraries = service.requestPossibleRoutesForCargo(null);
    assertEquals(0, itineraries.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRequestPossibleRoutesForCargo_NonExistentCargo_AcEB1() {
    DefaultBookingService service = new DefaultBookingService();
    TrackingId trackingId = new TrackingId("12345");
    List<Itinerary> itineraries = service.requestPossibleRoutesForCargo(trackingId);
    assertEquals(0, itineraries.size());
  }
}