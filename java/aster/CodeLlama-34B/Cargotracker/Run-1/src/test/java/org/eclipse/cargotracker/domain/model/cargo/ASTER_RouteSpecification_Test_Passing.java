/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_RouteSpecification_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadline_TDYB0_sLnc0() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("USLAX"), "Los Angeles"), new Location(new UnLocode("USNYC"), "New York"), LocalDate.of(2022, 12, 25));
    assertEquals(LocalDate.of(2022, 12, 25), routeSpecification.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestination_PdCX0_zLWl1_2() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLAX"), "Los Angeles"), LocalDate.now());
    Location destination = routeSpecification.getDestination();
    assertEquals(new Location(new UnLocode("USLAX"), "Los Angeles"), destination);
  }
}