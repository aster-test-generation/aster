/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import jakarta.inject.Inject;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoStatus;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CargoStatusDtoAssembler_Test_Failing {
  @Inject
  private TrackingEventsDtoAssembler assembler;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDtoWithNullCargo_rKsz3() {
    CargoStatusDtoAssembler assembler = new CargoStatusDtoAssembler();
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoStatus cargoStatus = assembler.toDto(null, handlingEvents);
    assertNull(cargoStatus);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDtoWithNullCargoAndHandlingEvents_tvvM4() {
    CargoStatusDtoAssembler assembler = new CargoStatusDtoAssembler();
    CargoStatus cargoStatus = assembler.toDto(null, Collections.emptyList());
    assertNotNull(cargoStatus);
    assertEquals(0, cargoStatus.getEvents().size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDtoWithNullCargoAndHandlingEvents_tvvM4_fid1() {
    CargoStatusDtoAssembler assembler = new CargoStatusDtoAssembler();
    CargoStatus cargoStatus = assembler.toDto(null, null);
    assertNull(cargoStatus);
  }
}