/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.file;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.handling.HandlingEventRegistrationAttempt;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_EventItemReader_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testReadItem_lYLE0_1() throws Exception {
    EventItemReader reader = new EventItemReader();
    Object result = reader.readItem();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testReadItem_lYLE0_2() throws Exception {
    EventItemReader reader = new EventItemReader();
    Object result = reader.readItem();
    assertTrue(result instanceof HandlingEventRegistrationAttempt);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testReadItemWithValidLine_EXeX7_iMWZ0_1() throws Exception {
    EventItemReader reader = new EventItemReader();
    reader.open(null);
    Object result = reader.readItem();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testReadItemWithValidLine_EXeX7_iMWZ0_2() throws Exception {
    EventItemReader reader = new EventItemReader();
    reader.open(null);
    Object result = reader.readItem();
    assertTrue(result instanceof HandlingEventRegistrationAttempt);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testReadItemWithEmptyFile_AgAu2_mkFp0() throws Exception {
    EventItemReader reader = new EventItemReader();
    reader.open(null);
    Object result = reader.readItem();
    assertNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testReadItem_lYLE0() throws Exception {
    EventItemReader reader = new EventItemReader();
    Object result = reader.readItem();
    assertNotNull(result);
    assertTrue(result instanceof HandlingEventRegistrationAttempt);
  }
}