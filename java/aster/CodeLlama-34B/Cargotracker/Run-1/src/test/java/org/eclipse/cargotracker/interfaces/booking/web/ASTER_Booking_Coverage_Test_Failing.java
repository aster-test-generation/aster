/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.BookingServiceFacade;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.verify;

public class Aster_Booking_Coverage_Test_Failing {
  private BookingServiceFacade bookingServiceFacade;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_Locations_bPIQ0() {
    Booking booking = new Booking();
    booking.init();
    verify(bookingServiceFacade).listShippingLocations();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_Today_LvrV1() {
    Booking booking = new Booking();
    booking.init();
    assertEquals(LocalDate.now(), booking.getToday());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode_keqr0() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("ABC");
    assertEquals("ABC", booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithNull_hGYc1() {
    Booking booking = new Booking();
    booking.setOriginUnlocode(null);
    assertEquals(null, booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithEmptyString_aPVI2() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("");
    assertEquals("", booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocodeWithInvalidUnlocode_UqlI3() {
    Booking booking = new Booking();
    booking.setOriginUnlocode("INVALID");
    assertEquals(null, booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_cfsk0() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("DEST123");
    assertEquals("DEST123", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithFilter_WBoM1_2() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("DEST123");
    assertEquals("Destination Name", booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDeadlineUpdated_Duration_qNmk0_mjWx0() {
    Booking booking = new Booking();
    booking.deadlineUpdated();
    assertEquals(10, booking.getDuration());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDeadlineUpdated_BookableTrue_eJfv1_eQWK0() {
    Booking booking = new Booking();
    booking.deadlineUpdated();
    assertTrue(booking.isBookable());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDeadlineUpdated_BookableFalse_Rkph2_cspc0() {
    Booking booking = new Booking();
    booking.deadlineUpdated();
    assertFalse(booking.isBookable());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithFilter_WBoM1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("DEST123");
    assertEquals("DEST123", booking.getDestinationUnlocode());
    assertEquals("Destination Name", booking.getDestinationName());
  }
}