/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_RouteSpecification_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginSameOriginAndDestination_Njrb1_zLPE0() {
    Location origin = new Location(new UnLocode("USNYC"), "New York");
    RouteSpecification routeSpecification = new RouteSpecification(origin, origin, LocalDate.of(2023, 1, 1));
    assertEquals(origin, routeSpecification.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testgetArrivalDeadline_HDKP0() throws Exception {
    UnLocode unLocode = new UnLocode("USCHI");
    Location origin = new Location(unLocode, "Chicago");
    Location destination = new Location(unLocode, "New York");
    LocalDate arrivalDeadline = LocalDate.now();
    RouteSpecification routespecification = new RouteSpecification(origin, destination, arrivalDeadline);
    assertEquals(arrivalDeadline, routespecification.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadlineWithInvalidArrivalDeadline_CKGb2_CByC1() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("USLAX"), "New York"), new Location(new UnLocode("CALOS"), "Los Angeles"), LocalDate.of(2022, 12, 25));
    assertNull(routeSpecification.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_DifferentOrigin_ajfU2_xEvo0() {
    RouteSpecification routeSpecification1 = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLAX"), "Los Angeles"), LocalDate.of(2022, 12, 25));
    RouteSpecification routeSpecification2 = new RouteSpecification(new Location(new UnLocode("USLAX"), "Los Angeles"), new Location(new UnLocode("USLAX"), "Los Angeles"), LocalDate.of(2022, 12, 25));
    assertTrue(routeSpecification1.equals(routeSpecification2));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestination_PdCX0_zLWl1_1() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLA"), "Los Angeles"), LocalDate.now());
    Location destination = routeSpecification.getDestination();
    routeSpecification = new RouteSpecification(null, null, null);
    destination = routeSpecification.getDestination();
    routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLA"), "Los Angeles"), LocalDate.now());
    destination = routeSpecification.getDestination();
    assertEquals(new Location(new UnLocode("USLA"), "Los Angeles"), destination);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestination_PdCX0_zLWl1_3() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLAX"), "Los Angeles"), LocalDate.now());
    Location destination = routeSpecification.getDestination();
    routeSpecification = new RouteSpecification(null, null, null);
    destination = routeSpecification.getDestination();
    routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLAX"), "Los Angeles"), LocalDate.now());
    destination = routeSpecification.getDestination();
    assertEquals(new Location(new UnLocode("USLAX"), "Los Angeles"), destination);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testhashCode_RnJh0() throws Exception {
    UnLocode unLocode = new UnLocode("CNHKG");
    Location origin = new Location(unLocode, "Hong Kong");
    Location destination = new Location(unLocode, "Shanghai");
    LocalDate arrivalDeadline = LocalDate.of(2022, 12, 25);
    RouteSpecification routespecification = new RouteSpecification(origin, destination, arrivalDeadline);
    int hashCode = routespecification.hashCode();
    assertEquals(hashCode, new HashCodeBuilder().append(origin).append(destination).append(arrivalDeadline).toHashCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNullOrigin_RqWp2_QmLw0() {
    Location destination = new Location(new UnLocode("USLAX"), "Los Angeles");
    LocalDate arrivalDeadline = LocalDate.of(2023, 1, 1);
    RouteSpecification routeSpecification = new RouteSpecification(null, destination, arrivalDeadline);
    assertNull(routeSpecification.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testgetArrivalDeadline_HDKP0_fid3() throws Exception {
    UnLocode unLocode = new UnLocode("");
    Location origin = new Location(unLocode, "");
    Location destination = new Location(unLocode, "");
    LocalDate arrivalDeadline = LocalDate.now();
    RouteSpecification routespecification = new RouteSpecification(origin, destination, arrivalDeadline);
    assertEquals(arrivalDeadline, routespecification.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadline_TDYB0_sLnc0_fid3() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("CA"), "Los Angeles"), LocalDate.of(2022, 12, 25));
    assertEquals(LocalDate.of(2022, 12, 25), routeSpecification.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadlineWithInvalidArrivalDeadline_CKGb2_CByC1_fid3() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("CA"), "Los Angeles"), LocalDate.of(2022, 12, 25));
    assertNull(routeSpecification.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_DifferentOrigin_ajfU2_xEvo0_fid3() {
    RouteSpecification routeSpecification1 = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLA"), "Los Angeles"), LocalDate.of(2022, 12, 25));
    RouteSpecification routeSpecification2 = new RouteSpecification(new Location(new UnLocode("USLA"), "Los Angeles"), new Location(new UnLocode("USLA"), "Los Angeles"), LocalDate.of(2022, 12, 25));
    assertFalse(routeSpecification1.equals(routeSpecification2));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestination_PdCX0_zLWl1_2_fid3() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLA"), "Los Angeles"), LocalDate.now());
    Location destination = routeSpecification.getDestination();
    routeSpecification = new RouteSpecification(null, null, null);
    destination = routeSpecification.getDestination();
    routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLA"), "Los Angeles"), LocalDate.now());
    destination = routeSpecification.getDestination();
    assertNull(destination);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestination_PdCX0_zLWl1_3_fid3() {
    RouteSpecification routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLA"), "Los Angeles"), LocalDate.now());
    Location destination = routeSpecification.getDestination();
    routeSpecification = new RouteSpecification(null, null, null);
    destination = routeSpecification.getDestination();
    routeSpecification = new RouteSpecification(new Location(new UnLocode("USNYC"), "New York"), new Location(new UnLocode("USLA"), "Los Angeles"), LocalDate.now());
    destination = routeSpecification.getDestination();
    assertNotEquals(new Location(new UnLocode("USLA"), "Los Angeles"), destination);
  }
}