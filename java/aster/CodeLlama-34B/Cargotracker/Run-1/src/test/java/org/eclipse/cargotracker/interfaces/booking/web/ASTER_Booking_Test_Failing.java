/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Booking_Test_Failing {
  private Booking booking;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocode_omYJ0() {
    Booking booking = new Booking();
    String expected = "DESTINATION_UNLOCODE";
    String actual = booking.getDestinationUnlocode();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithEmptyString_nJlQ2() {
    Booking booking = new Booking();
    String expected = "";
    String actual = booking.getDestinationUnlocode();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithValidUnlocode_DfnH4() {
    Booking booking = new Booking();
    String expected = "VALID_UNLOCODE";
    String actual = booking.getDestinationUnlocode();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithDifferentCasing_EJgb5() {
    Booking booking = new Booking();
    String expected = "DeStInAtIoN_UnLoCoDe";
    String actual = booking.getDestinationUnlocode();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithSpecialCharacters_xekf7() {
    Booking booking = new Booking();
    String expected = "DeStInAtIoN_UnLoCoDe!@#$%^&*()_+";
    String actual = booking.getDestinationUnlocode();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithMultipleUnlocodes_oIFu8() {
    Booking booking = new Booking();
    String expected = "DeStInAtIoN_UnLoCoDe1, DeStInAtIoN_UnLoCoDe2";
    String actual = booking.getDestinationUnlocode();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetReturnValueWithNull_MZEt1() {
    Booking booking = new Booking();
    String returnValue = booking.getReturnValue();
    assertEquals(null, returnValue);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_cjxp0_1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("ABC");
    assertEquals("ABC", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithInvalidUnlocode_dvRi1_1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("XYZ");
    assertEquals("XYZ", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithInvalidUnlocode_dvRi1_2() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("XYZ");
    assertEquals("XYZ", booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithNullUnlocode_wgHO2_1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode(null);
    assertNull(booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithNullUnlocode_wgHO2_2() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode(null);
    assertNull(booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithEmptyUnlocode_CWNS3_1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("");
    assertEquals("", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithEmptyUnlocode_CWNS3_2() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("");
    assertEquals("", booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithNullLocation_idZn6_1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode(null);
    assertEquals("", booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithDifferentObjects_GNBv10_1() {
    Booking booking1 = new Booking();
    Booking booking2 = new Booking();
    String expected = "ABC";
    String actual = booking1.getOriginUnlocode();
    expected = "DEF";
    actual = booking2.getOriginUnlocode();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocode_omYJ0_fid1() {
    Booking booking = new Booking();
    String expected = "DESTINATION_UNLOCODE";
    String actual = booking.getDestinationUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithEmptyString_nJlQ2_fid1() {
    Booking booking = new Booking();
    String expected = "";
    String actual = booking.getDestinationUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithValidUnlocode_DfnH4_fid1() {
    Booking booking = new Booking();
    String expected = "VALID_UNLOCODE";
    String actual = booking.getDestinationUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithDifferentCasing_EJgb5_fid1() {
    Booking booking = new Booking();
    String expected = "DeStInAtIoN_UnLoCoDe";
    String actual = booking.getDestinationUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithSpecialCharacters_xekf7_fid1() {
    Booking booking = new Booking();
    String expected = "DeStInAtIoN_UnLoCoDe!@#$%^&*()_+";
    String actual = booking.getDestinationUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithMultipleUnlocodes_oIFu8_fid1() {
    Booking booking = new Booking();
    String expected = "DeStInAtIoN_UnLoCoDe1, DeStInAtIoN_UnLoCoDe2";
    String actual = booking.getDestinationUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDuration_1_jjMq0_fid1() {
    Booking booking = new Booking();
    long duration = booking.getDuration();
    assertEquals(0, duration);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginName_mvXz0_fid1() {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertEquals("Origin Name", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithEmptyString_fCqT2_fid1() {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertEquals("", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithValidString_bqPC3_fid1() {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertEquals("New York", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetReturnValueWithNull_MZEt1_fid1() {
    Booking booking = new Booking();
    String returnValue = booking.getReturnValue();
    assertNull(returnValue);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetReturnValueWithEmptyString_feht2() {
    Booking booking = new Booking();
    String returnValue = booking.getReturnValue();
    assertEquals("", returnValue);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_cjxp0_2_fid1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("ABC");
    assertEquals("ABC", booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithInvalidUnlocode_dvRi1_2_fid1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("XYZ");
    assertEquals(null, booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithNullUnlocode_wgHO2_1_fid1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode(null);
    assertEquals(null, booking.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithNullUnlocode_wgHO2_2_fid1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode(null);
    assertEquals(null, booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithEmptyUnlocode_CWNS3_2_fid1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("");
    assertEquals(null, booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadline_jOTU0() {
    Booking booking = new Booking();
    LocalDate arrivalDeadline = booking.getArrivalDeadline();
    assertEquals(LocalDate.of(2022, 12, 25), arrivalDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithDifferentObjects_GNBv10_1_fid1() {
    Booking booking1 = new Booking();
    Booking booking2 = new Booking();
    String expected = "ABC";
    String actual = booking1.getOriginUnlocode();
    expected = "DEF";
    actual = booking2.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithNullObject_VTTz11() {
    Booking booking = null;
    String expected = null;
    String actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithValidObject_kRwq13() {
    Booking booking = new Booking();
    String expected = "ABC";
    String actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetToday_Ihfd0() {
    Booking booking = new Booking();
    LocalDate today = booking.getToday();
    assertEquals(LocalDate.now(), today);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationName_tjzd0_1() {
    Booking booking = new Booking();
    String destinationName = booking.getDestinationName();
    assertNotNull(destinationName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationName_tjzd0_2() {
    Booking booking = new Booking();
    String destinationName = booking.getDestinationName();
    assertEquals("New York", destinationName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationNameWithEmptyString_zkfu2() {
    Booking booking = new Booking();
    String destinationName = booking.getDestinationName();
    assertEquals("", destinationName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationNameWithDifferentCasing_NGVT5() {
    Booking booking = new Booking();
    String destinationName = booking.getDestinationName();
    assertEquals("new york", destinationName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDuration_2_MyOP1_FVgM0() {
    Booking booking = new Booking();
    booking.init();
    long duration = booking.getDuration();
    assertEquals(1000, duration);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_cjxp0() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("ABC");
    assertEquals("ABC", booking.getDestinationUnlocode());
    assertEquals("ABC", booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithInvalidUnlocode_dvRi1() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("XYZ");
    assertEquals("XYZ", booking.getDestinationUnlocode());
    assertEquals(null, booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithNullUnlocode_wgHO2() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode(null);
    assertEquals(null, booking.getDestinationUnlocode());
    assertEquals(null, booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocodeWithEmptyUnlocode_CWNS3() {
    Booking booking = new Booking();
    booking.setDestinationUnlocode("");
    assertEquals("", booking.getDestinationUnlocode());
    assertEquals(null, booking.getDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocode_CtUE1() {
    String expected = "ABC";
    String actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithNull_QxVS2() {
    String expected = null;
    String actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithEmptyString_dvoV3() {
    String expected = "";
    String actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithInvalidString_bvao4() {
    String expected = "INVALID";
    String actual = booking.getOriginUnlocode();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithDifferentCase_xFqT6() {
    String expected = "abc";
    String actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithSpecialCharacters_Rtav8() {
    String expected = "ABC!@#$%^&*()_+";
    String actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithMultipleCalls_ZxJj9() {
    String expected = "ABC";
    String actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
    expected = "DEF";
    actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
    expected = "GHI";
    actual = booking.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithDifferentObjects_GNBv10() {
    Booking booking1 = new Booking();
    Booking booking2 = new Booking();
    String expected = "ABC";
    String actual = booking1.getOriginUnlocode();
    assertEquals(expected, actual);
    expected = "DEF";
    actual = booking2.getOriginUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationName_tjzd0() {
    Booking booking = new Booking();
    String destinationName = booking.getDestinationName();
    assertNotNull(destinationName);
    assertEquals("New York", destinationName);
  }
}