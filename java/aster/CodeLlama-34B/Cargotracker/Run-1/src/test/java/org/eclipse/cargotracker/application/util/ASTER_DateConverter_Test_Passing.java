/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.util;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DateConverter_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithDifferentTimeZoneAndLocale_Ncrw8() {
    LocalDateTime dateTime = LocalDateTime.of(2023, 3, 15, 10, 30, 0);
    String expected = "2023-03-15T10:30:00";
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDateTime_NullInput_ThrowsNullPointerException_bcQl2() {
    String datetime = null;
    assertThrows(NullPointerException.class, () -> DateConverter.toDateTime(datetime));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_neXl0_fid2() {
    LocalDateTime dateTime = LocalDateTime.of(2023, 3, 15, 10, 30, 0);
    String expected = "3/15/2023 10:30 AM";
    String actual = DateConverter.toString(dateTime);
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_LocalDate_aLJA0_fid2() {
    LocalDate date = LocalDate.of(2022, 10, 15);
    String expected = "10/15/2022";
    String actual = DateConverter.toString(date);
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_LocalDateTime_gfkK1_fid2() {
    LocalDateTime dateTime = LocalDateTime.of(2022, 10, 15, 12, 0, 0);
    String expected = "2022-10-15T12:00:00";
    String actual = DateConverter.toString(dateTime);
  }
}