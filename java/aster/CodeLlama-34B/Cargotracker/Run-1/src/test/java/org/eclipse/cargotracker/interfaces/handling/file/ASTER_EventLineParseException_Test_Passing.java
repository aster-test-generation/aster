/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.file;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_EventLineParseException_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLine_DKgQ0() {
    EventLineParseException exception = new EventLineParseException("message", "line");
    assertEquals("line", exception.getLine());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLineWithCause_MSOD1() {
    Throwable cause = new Throwable("cause");
    EventLineParseException exception = new EventLineParseException("message", cause, "line");
    assertEquals("line", exception.getLine());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLineWithNullLine_ayZc2() {
    EventLineParseException exception = new EventLineParseException("message", null);
    assertNull(exception.getLine());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLineWithEmptyLine_EoQW3() {
    EventLineParseException exception = new EventLineParseException("message", "");
    assertEquals("", exception.getLine());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLineWithNullCause_cNKz6() {
    EventLineParseException exception = new EventLineParseException("message", null, "line");
    assertEquals("line", exception.getLine());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLineWithNullLineAndNullCause_dems7() {
    EventLineParseException exception = new EventLineParseException("message", null, null);
    assertNull(exception.getLine());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLineWithNonStringLine_AObZ5_yOlJ0() {
    EventLineParseException exception = new EventLineParseException("message", "123");
    assertEquals("123", exception.getLine());
  }
}