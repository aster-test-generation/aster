/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.internal;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingService_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignCargoToRouteWithNullCargo_CZTn3_Eutc0_1() {
    DefaultBookingService bookingService = new DefaultBookingService();
    Itinerary itinerary = new Itinerary();
    TrackingId trackingId = new TrackingId();
    Cargo cargo = null;
    bookingService.assignCargoToRoute(itinerary, trackingId);
    assertEquals(itinerary, cargo.getItinerary());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignCargoToRouteWithNullCargo_CZTn3_Eutc0_2() {
    DefaultBookingService bookingService = new DefaultBookingService();
    Itinerary itinerary = new Itinerary();
    TrackingId trackingId = new TrackingId();
    Cargo cargo = null;
    bookingService.assignCargoToRoute(itinerary, trackingId);
    assertEquals(trackingId, cargo.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignCargoToRouteWithNullCargo_CZTn3_Eutc0_1_fid1() {
    DefaultBookingService bookingService = new DefaultBookingService();
    Itinerary itinerary = new Itinerary();
    TrackingId trackingId = new TrackingId();
    Cargo cargo = null;
    bookingService.assignCargoToRoute(itinerary, trackingId);
    assertNull(cargo.getItinerary());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignCargoToRouteWithNullCargo_CZTn3_Eutc0_2_fid1() {
    DefaultBookingService bookingService = new DefaultBookingService();
    Itinerary itinerary = new Itinerary();
    TrackingId trackingId = new TrackingId();
    Cargo cargo = null;
    bookingService.assignCargoToRoute(itinerary, trackingId);
    assertNull(cargo);
  }
}