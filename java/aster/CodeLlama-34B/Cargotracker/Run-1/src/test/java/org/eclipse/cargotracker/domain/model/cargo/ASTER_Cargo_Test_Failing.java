/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import jakarta.persistence.Embedded;
import jakarta.validation.constraints.NotNull;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_Cargo_Test_Failing {
  private TrackingId trackingId;
  private RouteSpecification routeSpecification;
  @Embedded
  @NotNull
  private Itinerary itinerary;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithNullRouteSpecification_DwLG2() {
    TrackingId trackingId = new TrackingId("ABC123");
    RouteSpecification routeSpecification = null;
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    String expected = "Cargo(trackingId=ABC123, routeSpecification=null)";
    assertEquals(expected, cargo.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithNullTrackingIdAndRouteSpecification_GYvx3() {
    TrackingId trackingId = null;
    RouteSpecification routeSpecification = null;
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    String expected = "Cargo(trackingId=null, routeSpecification=null)";
    assertEquals(expected, cargo.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteSpecificationWithNullRouteSpecification_Reli2() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), null);
    RouteSpecification routeSpecification = cargo.getRouteSpecification();
    assertNull(routeSpecification);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCodeWithNullRouteSpecification_ByTf2() {
    TrackingId trackingId = new TrackingId("123456789");
    RouteSpecification routeSpecification = null;
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    int expectedHashCode = trackingId.hashCode();
    int actualHashCode = cargo.hashCode();
    assertEquals(expectedHashCode, actualHashCode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCodeWithNullTrackingIdAndRouteSpecification_dIaS3() {
    TrackingId trackingId = null;
    RouteSpecification routeSpecification = null;
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    int expectedHashCode = 0;
    int actualHashCode = cargo.hashCode();
    assertEquals(expectedHashCode, actualHashCode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginWithNullRouteSpecification_GmwC2() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), null);
    Location origin = cargo.getOrigin();
    assertNull(origin);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginWithNullArrivalDeadline_VfpS5() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), new RouteSpecification(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("CA"), "Los Angeles"), null));
    Location origin = cargo.getOrigin();
    assertNull(origin);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetItinerary_nullItineraryAndNullRouteSpecification_FFOP2() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), null);
    Itinerary itinerary = cargo.getItinerary();
    assertEquals(Itinerary.EMPTY_ITINERARY, itinerary);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteSpecificationWithNullArrivalDeadline_dYsI5_NCmq0_1() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), new RouteSpecification(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("CA"), "Los Angeles"), null));
    RouteSpecification routeSpecification = cargo.getRouteSpecification();
    assertEquals(new Location(new UnLocode("US"), "New York"), routeSpecification.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteSpecificationWithNullArrivalDeadline_dYsI5_NCmq0_2() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), new RouteSpecification(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("CA"), "Los Angeles"), null));
    RouteSpecification routeSpecification = cargo.getRouteSpecification();
    assertEquals(new Location(new UnLocode("CA"), "Los Angeles"), routeSpecification.getDestination());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteSpecificationWithNullArrivalDeadline_dYsI5_NCmq0_3() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), new RouteSpecification(new Location(new UnLocode("US"), "New York"), new Location(new UnLocode("CA"), "Los Angeles"), null));
    RouteSpecification routeSpecification = cargo.getRouteSpecification();
    assertNull(routeSpecification.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteSpecificationWithNullArrivalDeadline_dYsI5_NCmq0_1_fid1() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), new RouteSpecification(new Location(new UnLocode("USLAX"), "Los Angeles"), new Location(new UnLocode("USNYC"), "New York"), null));
    RouteSpecification routeSpecification = cargo.getRouteSpecification();
    assertEquals(new Location(new UnLocode("USNYC"), "New York"), routeSpecification.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteSpecificationWithNullArrivalDeadline_dYsI5_NCmq0_2_fid1() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), new RouteSpecification(new Location(new UnLocode("USLAX"), "Los Angeles"), new Location(new UnLocode("CA"), "Los Angeles"), null));
    RouteSpecification routeSpecification = cargo.getRouteSpecification();
    assertEquals(new Location(new UnLocode("CA"), "Los Angeles"), routeSpecification.getDestination());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteSpecificationWithNullArrivalDeadline_dYsI5_NCmq0_3_fid1() {
    Cargo cargo = new Cargo(new TrackingId("123456789"), new RouteSpecification(new Location(new UnLocode("USLAX"), "New York"), new Location(new UnLocode("CALOS"), "Los Angeles"), null));
    RouteSpecification routeSpecification = cargo.getRouteSpecification();
    assertNull(routeSpecification.getArrivalDeadline());
  }
}