/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Booking_Test_Passing {
  private Booking booking;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithNull_UyUI1() {
    Booking booking = new Booking();
    String expected = null;
    String actual = booking.getDestinationUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithInvalidUnlocode_CFiX3() {
    Booking booking = new Booking();
    String expected = "INVALID_UNLOCODE";
    String actual = booking.getDestinationUnlocode();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithNoUnlocodes_Xcnh9() {
    Booking booking = new Booking();
    String expected = "";
    String actual = booking.getDestinationUnlocode();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocodeWithInvalidDestination_uDlJ12() {
    Booking booking = new Booking();
    String expected = "INVALID_DESTINATION";
    String actual = booking.getDestinationUnlocode();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetArrivalDeadline_sbWd0() {
    Booking booking = new Booking();
    LocalDate arrivalDeadline = LocalDate.of(2022, 12, 25);
    booking.setArrivalDeadline(arrivalDeadline);
    assertEquals(arrivalDeadline, booking.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetArrivalDeadlineWithNull_lGMj1() {
    Booking booking = new Booking();
    booking.setArrivalDeadline(null);
    assertNull(booking.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDuration_1_jjMq0() {
    Booking booking = new Booking();
    long duration = booking.getDuration();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginName_mvXz0() {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNull(originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithInvalidString_PCZz4() {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
    assertNotEquals("Los Angeles", originName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginNameWithDifferentLanguage_xuYF9() {
    Booking booking = new Booking();
    String originName = booking.getOriginName();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetReturnValue_ooxc0() {
    Booking booking = new Booking();
    String returnValue = booking.getReturnValue();
    assertEquals("/admin/dashboard.xhtml", returnValue);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetArrivalDeadlineWithDifferentArrivalDeadline_AOnP1() {
    Booking booking = new Booking();
    booking.setArrivalDeadline(LocalDate.of(2023, 1, 1));
    LocalDate arrivalDeadline = booking.getArrivalDeadline();
    assertEquals(LocalDate.of(2023, 1, 1), arrivalDeadline);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOriginUnlocodeWithInvalidObject_IaPU12() {
    Booking booking = new Booking();
    String expected = "INVALID";
    String actual = booking.getOriginUnlocode();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationNameWithNull_SMAB1() {
    Booking booking = new Booking();
    String destinationName = booking.getDestinationName();
    assertNull(destinationName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationNameWithInvalidInput_HAle3() {
    Booking booking = new Booking();
    String destinationName = booking.getDestinationName();
    assertNotEquals("New York", destinationName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void register(String originUnlocode, String destinationUnlocode, Date arrivalDeadline) {
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_gIuK0() {
    booking = new Booking();
  }
}