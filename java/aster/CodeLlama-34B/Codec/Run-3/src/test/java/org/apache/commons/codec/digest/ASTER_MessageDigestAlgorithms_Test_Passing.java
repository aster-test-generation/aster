/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_MessageDigestAlgorithms_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_1() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals(13, algorithms.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_2() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("MD2", algorithms[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_3() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("MD5", algorithms[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_4() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA-1", algorithms[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_5() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA-224", algorithms[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_6() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA-256", algorithms[4]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_7() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA-384", algorithms[5]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_8() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA-512", algorithms[6]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_9() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA-512/224", algorithms[7]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_10() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA-512/256", algorithms[8]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_11() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA3-224", algorithms[9]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_12() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA3-256", algorithms[10]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_13() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA3-384", algorithms[11]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testValues_ksiy0_14() throws Exception {
    String[] algorithms = MessageDigestAlgorithms.values();
    assertEquals("SHA3-512", algorithms[12]);}
}