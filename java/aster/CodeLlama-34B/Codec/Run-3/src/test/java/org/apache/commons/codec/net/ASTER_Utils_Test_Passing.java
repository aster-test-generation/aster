/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Utils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDigit16_ValidDigit_WpfB0() throws Exception {
    byte b = 48; // '0'
    int expected = 0;
    int actual = Utils.digit16(b);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_0_vKeS0() throws Exception {
    assertEquals('0', Utils.hexDigit(0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_1_SJZt1() throws Exception {
    assertEquals('1', Utils.hexDigit(1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_2_qLnv2() throws Exception {
    assertEquals('2', Utils.hexDigit(2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_3_lWxF3() throws Exception {
    assertEquals('3', Utils.hexDigit(3));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_4_svwI4() throws Exception {
    assertEquals('4', Utils.hexDigit(4));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_5_adXF5() throws Exception {
    assertEquals('5', Utils.hexDigit(5));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_6_EjVr6() throws Exception {
    assertEquals('6', Utils.hexDigit(6));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_7_qnef7() throws Exception {
    assertEquals('7', Utils.hexDigit(7));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_8_LvlM8() throws Exception {
    assertEquals('8', Utils.hexDigit(8));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_9_IAqe9() throws Exception {
    assertEquals('9', Utils.hexDigit(9));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_10_yxCf10() throws Exception {
    assertEquals('A', Utils.hexDigit(10));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_11_OWoV11() throws Exception {
    assertEquals('B', Utils.hexDigit(11));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_12_LbQt12() throws Exception {
    assertEquals('C', Utils.hexDigit(12));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_13_mjSE13() throws Exception {
    assertEquals('D', Utils.hexDigit(13));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_14_ccpZ14() throws Exception {
    assertEquals('E', Utils.hexDigit(14));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_15_grfP15() throws Exception {
    assertEquals('F', Utils.hexDigit(15));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_16_QZAF16() throws Exception {
    assertEquals('G', Utils.hexDigit(16));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_17_sNNk17() throws Exception {
    assertEquals('H', Utils.hexDigit(17));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_18_Seom18() throws Exception {
    assertEquals('I', Utils.hexDigit(18));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_19_MMUN19() throws Exception {
    assertEquals('J', Utils.hexDigit(19));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_20_HNCF20() throws Exception {
    assertEquals('K', Utils.hexDigit(20));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_21_KUev21() throws Exception {
    assertEquals('L', Utils.hexDigit(21));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_22_GazA22() throws Exception {
    assertEquals('M', Utils.hexDigit(22));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_23_nJxO23() throws Exception {
    assertEquals('N', Utils.hexDigit(23));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_24_cmBB24() throws Exception {
    assertEquals('O', Utils.hexDigit(24));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_25_GbRe25() throws Exception {
    assertEquals('P', Utils.hexDigit(25));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_26_qnPA26() throws Exception {
    assertEquals('Q', Utils.hexDigit(26));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_27_YINf27() throws Exception {
    assertEquals('R', Utils.hexDigit(27));
}
}