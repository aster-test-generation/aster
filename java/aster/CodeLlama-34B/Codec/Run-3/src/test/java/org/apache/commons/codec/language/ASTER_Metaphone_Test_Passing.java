/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Metaphone_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_String_XTAO0() throws EncoderException {
    Metaphone metaphone = new Metaphone();
    String input = "hello";
    String expectedOutput = "HL";
    String actualOutput = metaphone.encode(input);
    assertEquals(expectedOutput, actualOutput);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_NonString_aetz1() throws EncoderException {
    Metaphone metaphone = new Metaphone();
    Object input = new Object();
    try {
        metaphone.encode(input);
        fail("Expected EncoderException to be thrown");
    } catch (EncoderException e) {
        assertEquals("Parameter supplied to Metaphone encode is not of type java.lang.String", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLen_ymMT0() throws Exception {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(10);
        assertEquals(10, metaphone.getMaxCodeLen());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLenWithNegativeValue_pzJB1() throws Exception {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(-1);
        assertEquals(0, metaphone.getMaxCodeLen());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLenWithZeroValue_VOql2() throws Exception {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(0);
        assertEquals(0, metaphone.getMaxCodeLen());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLenWithLargeValue_Pcpw3() throws Exception {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(1000);
        assertEquals(1000, metaphone.getMaxCodeLen());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMaxCodeLen_xike0() throws Exception {
    Metaphone metaphone = new Metaphone();
    int maxCodeLen = metaphone.getMaxCodeLen();
    assertEquals(10, maxCodeLen);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_EmptyString_ptes0() throws Exception {
    Metaphone metaphone = new Metaphone();
    String result = metaphone.encode("");
    assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_SingleCharacter_SzRp1() throws Exception {
    Metaphone metaphone = new Metaphone();
    String result = metaphone.encode("a");
    assertEquals("A", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_MultipleCharacters_XFKR2() throws Exception {
    Metaphone metaphone = new Metaphone();
    String result = metaphone.encode("abc");
    assertEquals("ABC", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_SpecialCharacters_hcti3() throws Exception {
    Metaphone metaphone = new Metaphone();
    String result = metaphone.encode("$%^&*()");
    assertEquals("$%^&*()", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_NullString_KYbB4() throws Exception {
    Metaphone metaphone = new Metaphone();
    String result = metaphone.encode(null);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_NullStringWithSpaces_EvVM9() throws Exception {
    Metaphone metaphone = new Metaphone();
    String result = metaphone.encode("  ");
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_EqualStrings_djcI0() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = "hello";
    String str2 = "hello";
    assertTrue(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_DifferentStrings_OUPP1() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = "hello";
    String str2 = "world";
    assertFalse(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_NullString_zogK2() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = null;
    String str2 = "hello";
    assertFalse(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_EmptyString_efnG3() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = "";
    String str2 = "hello";
    assertFalse(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_DifferentLengths_pRfP4() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = "hello";
    String str2 = "hello world";
    assertFalse(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_DifferentCases_iCXe5() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = "hello";
    String str2 = "Hello";
    assertTrue(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_DifferentAccents_sjev6() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = "hello";
    String str2 = "hllo";
    assertTrue(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_DifferentSpecialCharacters_GmbC7() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = "hello";
    String str2 = "hllo!";
    assertTrue(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsMetaphoneEqual_DifferentPunctuation_chsa9() throws Exception {
    Metaphone metaphone = new Metaphone();
    String str1 = "hello";
    String str2 = "hello.";
    assertFalse(metaphone.isMetaphoneEqual(str1, str2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone1_VMjV0() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "hello";
    String expected = "HLL";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone2_KAHe1() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "world";
    String expected = "WRLD";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone3_GgtV2() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "abc";
    String expected = "ABK";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone4_sUhp3() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "def";
    String expected = "DFK";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone5_pxPV4() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "ghi";
    String expected = "GHK";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone6_hNbM5() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "jkl";
    String expected = "JKL";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone7_wPjl6() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "mno";
    String expected = "MNK";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone8_igtY7() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "pqr";
    String expected = "PQR";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone9_Efdy8() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "stu";
    String expected = "STK";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone10_NrMF9() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "vwx";
    String expected = "VWK";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone11_UncT10() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "yz";
    String expected = "YZ";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone12_Bjxl11() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "abcdef";
    String expected = "ABKDF";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone13_tIld12() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "ghijkl";
    String expected = "GHJKL";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone14_sOTw13() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "mnopqr";
    String expected = "MNOPQR";
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneNull_rutD0() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("", metaphone.metaphone(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneEmpty_WSvZ1() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("", metaphone.metaphone(""));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneOneChar_YCro2() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("A", metaphone.metaphone("A"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneTwoChars_sHVF3() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("AB", metaphone.metaphone("AB"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneThreeChars_nEAq4() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABC", metaphone.metaphone("ABC"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneFourChars_CQGA5() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCD", metaphone.metaphone("ABCD"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneFiveChars_wLkG6() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDE", metaphone.metaphone("ABCDE"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneSixChars_oQPe7() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEF", metaphone.metaphone("ABCDEF"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneSevenChars_iVSn8() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEFG", metaphone.metaphone("ABCDEFG"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneEightChars_wOOk9() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEFGH", metaphone.metaphone("ABCDEFGH"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneNineChars_OoNV10() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEFGHI", metaphone.metaphone("ABCDEFGHI"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneTenChars_uPih11() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEFGHIJ", metaphone.metaphone("ABCDEFGHIJ"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneElevenChars_Qpkk12() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEFGHIJK", metaphone.metaphone("ABCDEFGHIJK"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneTwelveChars_SXqq13() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEFGHIJKL", metaphone.metaphone("ABCDEFGHIJKL"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneThirteenChars_hsbs14() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEFGHIJKLM", metaphone.metaphone("ABCDEFGHIJKLM"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphoneFourteenChars_RHJA15() throws Exception {
        Metaphone metaphone = new Metaphone();
        assertEquals("ABCDEFGHIJKLMN", metaphone.metaphone("ABCDEFGHIJKLMN"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone1_GTeu0() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "KN";
    String expected = "N";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone2_AYsf1() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "G";
    String expected = "K";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone3_sszD2() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "P";
    String expected = "P";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone4_IRys3() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "B";
    String expected = "B";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone5_Khqf4() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "C";
    String expected = "K";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone6_Jcyo5() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "D";
    String expected = "T";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone7_hxvA6() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "F";
    String expected = "F";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone9_joAt8() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "H";
    String expected = "H";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone10_deWN9() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "J";
    String expected = "J";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone11_JAVa10() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "K";
    String expected = "K";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone12_Hrcw11() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "L";
    String expected = "L";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone13_inZB12() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "M";
    String expected = "M";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMetaphone14_qfiV13() throws Exception {
    Metaphone metaphone = new Metaphone();
    String txt = "N";
    String expected = "N";
    String actual = metaphone.metaphone(txt);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone1_DvXp0() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Knight";
        String expected = "N";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone2_Mpai1() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Ghost";
        String expected = "K";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone3_HIUK2() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Penny";
        String expected = "P";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone4_DiEA3() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Wright";
        String expected = "R";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone5_QgfH4() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Bright";
        String expected = "B";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone6_ALPv5() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Dark";
        String expected = "T";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone7_dVSy6() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Fight";
        String expected = "F";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone8_eJfa7() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Flight";
        String expected = "F";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone9_Sfcf8() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Night";
        String expected = "N";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone10_YQwX9() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Light";
        String expected = "L";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone11_wdOd10() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Might";
        String expected = "M";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone12_lrPA11() throws Exception {
        Metaphone metaphone = new Metaphone();
        String input = "Right";
        String expected = "R";
        String actual = metaphone.metaphone(input);
        assertEquals(expected, actual);
    }
}