/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RefinedSoundex_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDifference_EmptyStrings_uJes0() throws EncoderException {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    assertEquals(0, refinedSoundex.difference("", ""));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDifference_NullStrings_PPPj1() throws EncoderException {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    assertEquals(0, refinedSoundex.difference(null, null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_String_yWCa0() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String input = "Hello World";
    String expectedOutput = "H415";
    String actualOutput = refinedSoundex.encode(input);
    assertEquals(expectedOutput, actualOutput);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMappingCode_UpperCaseLetter_PovR0() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex("AEIOU");
    char result = refinedSoundex.getMappingCode('A');
    assertEquals('A', result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMappingCode_LowerCaseLetter_rPzr1() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex("aeiou");
    char result = refinedSoundex.getMappingCode('a');
    assertEquals('a', result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMappingCode_Digit_laCD2() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex("0123456789");
    char result = refinedSoundex.getMappingCode('0');
    assertEquals('0', result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_EmptyString_rVYY0() throws Exception {
    RefinedSoundex soundex = new RefinedSoundex();
    String result = soundex.encode("");
    assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_SingleCharacter_bswV1() throws Exception {
    RefinedSoundex soundex = new RefinedSoundex();
    String result = soundex.encode("a");
    assertEquals("a", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_MultipleCharacters_gHUM2() throws Exception {
    RefinedSoundex soundex = new RefinedSoundex();
    String result = soundex.encode("abc");
    assertEquals("abc", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_Uppercase_RTMu3() throws Exception {
    RefinedSoundex soundex = new RefinedSoundex();
    String result = soundex.encode("ABC");
    assertEquals("ABC", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_MixedCase_MrJh5() throws Exception {
    RefinedSoundex soundex = new RefinedSoundex();
    String result = soundex.encode("AbC");
    assertEquals("AbC", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_SpecialCharacters_eiTJ6() throws Exception {
    RefinedSoundex soundex = new RefinedSoundex();
    String result = soundex.encode("a$b%c");
    assertEquals("a$b%c", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_Null_ewNR8() throws Exception {
    RefinedSoundex soundex = new RefinedSoundex();
    String result = soundex.encode(null);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_null_gIti0() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex(null);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_emptyString_nDhM1() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("");
    assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_singleCharacter_hCUW2() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("a");
    assertEquals("a", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_multipleCharacters_fuqd3() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("abc");
    assertEquals("abc", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_specialCharacters_PcmR4() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("a$%^&*()");
    assertEquals("a", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_uppercase_zKrz5() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("ABC");
    assertEquals("abc", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_mixedcase_kOtm7() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("aBc");
    assertEquals("abc", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_nonAlphanumeric_cimw9() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("a!@#$%^&*()");
    assertEquals("a", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_nonAlphanumericWhitespace_voEc10() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("a!@#$%^&*() b c");
    assertEquals("abc", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_nonAlphanumericWhitespaceUppercase_vJGq11() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("A!@#$%^&*() B C");
    assertEquals("abc", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundex_nonAlphanumericWhitespaceMixedcase_BsHd13() throws Exception {
    RefinedSoundex refinedSoundex = new RefinedSoundex();
    String result = refinedSoundex.soundex("a!@#$%^&*() bC");
    assertEquals("abc", result);
}
}