/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Nysiis_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisWithConsonants_NoNh1_fid2() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("QZKM");
        assertEquals("GNS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisWithSpecialCases_BHPc2_fid2() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("SCH");
        assertEquals("SSS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisWithNonStrictMode_lPoH6_fid2() {
        Nysiis nysiis = new Nysiis(false);
        String result = nysiis.nysiis("AEIOU");
        assertEquals("AEIOU", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis1_hTLY0_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Evans";
        String expected = "AFANS";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis2_BkgM1_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Able";
        String expected = "ABAL";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis4_SWhb3_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Ashcroft";
        String expected = "ASKRFT";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis5_RblP4_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Burroughs";
        String expected = "BURGS";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis6_yLBL5_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Bartlett";
        String expected = "BARTL";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_KMjE6_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Bailey";
        String expected = "BAL";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis8_Mlhw7_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Brown";
        String expected = "BRN";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis9_XONS8_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Parker";
        String expected = "PARKR";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis10_hRLO9_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Phillips";
        String expected = "FALPS";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis11_hMcI10_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Phillip";
        String expected = "FALP";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis12_VOfM11_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Philip";
        String expected = "FALP";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis3_PLVZ2_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Quinn";
        String expected = "KN";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis4_Zqqd3_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Zamora";
        String expected = "SAMRA";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis5_CUrS4_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Knight";
        String expected = "KN";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis6_DsUQ5_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Schmidt";
        String expected = "SCTM";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_Ieao6_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Philip";
        String expected = "FPLP";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis8_xNoA7_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Harrison";
        String expected = "HARSN";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis9_enzX8_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Washington";
        String expected = "WASHN";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis10_vlNn9_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Lee";
        String expected = "LE";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis11_pPXR10_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Gutierrez";
        String expected = "GTRT";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis12_fJNY11_fid2() {
        Nysiis nysiis = new Nysiis();
        String str = "Pfister";
        String expected = "PST";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }
}