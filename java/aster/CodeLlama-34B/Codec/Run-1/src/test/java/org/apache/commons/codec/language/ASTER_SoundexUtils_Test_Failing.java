/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.apache.commons.codec.StringEncoder;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_SoundexUtils_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClean_specialCharacters_zoZs4() {
        String input = "a!@#$%^&*()_+-=[]{}|;':\"<>,./?";
        String expected = "A!@#$%^&*()_+-=[]{}|;':\"<>,./?";
        String actual = SoundexUtils.clean(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceWithNullEncoderAndStrings_cuIA9() throws EncoderException {
        StringEncoder encoder = null;
        String s1 = "hello";
        String s2 = "world";
        int expected = 4;
        int actual = SoundexUtils.difference(encoder, s1, s2);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceWithNullEncoderAndStrings_cuIA9_fid1() throws EncoderException {
        StringEncoder encoder = null;
        String s1 = "hello";
        String s2 = "world";
        int expected = 4;
        int actual = 0;
        try {
            actual = SoundexUtils.difference(encoder, s1, s2);
        } catch (NullPointerException e) {
            // Expected exception
        }
        assertEquals(expected, actual);
    }
}