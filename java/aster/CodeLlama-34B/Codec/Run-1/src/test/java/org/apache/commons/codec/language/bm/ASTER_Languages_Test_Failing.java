/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.Arrays;
import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Languages_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithStringResourceName_WfBc1() {
        String languagesResourceName = "languages_ashkenazi";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertEquals(languages.getLanguages(), new HashSet<String>(Arrays.asList("Ashkenazi")));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithInvalidLanguagesResourceName_jvCR3() {
        String languagesResourceName = "invalid_languages.txt";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithNullLanguagesResourceName_TjrV5() {
        String languagesResourceName = null;
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithNameType_HjEh0_fid1() {
        NameType nameType = NameType.ASHKENAZI;
        Languages languages = Languages.getInstance(nameType);
        assertEquals(languages.getLanguages(), new HashSet<String>(Arrays.asList("Hebrew", "Yiddish")));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithStringResourceName_WfBc1_fid1() {
        String languagesResourceName = "languages_ashkenazi";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertEquals(languages.getLanguages(), new HashSet<String>(Arrays.asList("Hebrew", "Yiddish")));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithInvalidNameType_wGcG2_fid1() {
        NameType nameType = NameType.SEPHARDIC;
        Languages languages = Languages.getInstance(nameType);
        assertNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceWithNullLanguagesResourceName_TjrV5_fid1() {
        String languagesResourceName = null;
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNull(languages);
    }
}