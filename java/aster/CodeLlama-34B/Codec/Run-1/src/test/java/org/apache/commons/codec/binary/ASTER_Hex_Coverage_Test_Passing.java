/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.nio.ByteBuffer;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Hex_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_RAQk0_1() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        String input = "68656c6c6f20776f726c64";
        Object output = hex.decode(input);
        assertNotNull(output);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_RAQk0_2() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        String input = "68656c6c6f20776f726c64";
        Object output = hex.decode(input);
        assertTrue(output instanceof byte[]);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_RAQk0_3() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        String input = "68656c6c6f20776f726c64";
        Object output = hex.decode(input);
        assertEquals("hello world", new String((byte[]) output));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithByteArray_EOnF2_pnUw0() throws EncoderException {
        Hex hex = new Hex();
        byte[] byteArray = "Hello World".getBytes();
        String expectedOutput = "48656c6c6f20576f726c64";
        byte[] actualOutput = hex.encode(byteArray);
        assertEquals(expectedOutput, new String(actualOutput));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithByteBuffer_AuJm1_DzXa0() throws EncoderException {
        Hex hex = new Hex();
        ByteBuffer byteBuffer = ByteBuffer.wrap("Hello World".getBytes());
        String expectedOutput = "48656c6c6f20576f726c64";
        byte[] actualOutput = hex.encode(byteBuffer);
        assertEquals(expectedOutput, new String(actualOutput));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithEmptyByteArray_tTVo7_RtBK0() throws EncoderException {
        Hex hex = new Hex();
        byte[] byteArray = new byte[0];
        String expectedOutput = "";
        byte[] actualOutput = hex.encode(byteArray);
        assertEquals(expectedOutput, new String(actualOutput));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithEmptyByteBuffer_hGuu6_lhDY0() throws EncoderException {
        Hex hex = new Hex();
        ByteBuffer byteBuffer = ByteBuffer.wrap(new byte[0]);
        byte[] expectedOutput = new byte[0];
        byte[] actualOutput = hex.encode(byteBuffer);
        assertArrayEquals(expectedOutput, actualOutput);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithInvalidObject_hWkA3_fid1() throws org.apache.commons.codec.EncoderException {
        Hex hex = new Hex();
        Object object = new Object();
        try {
            hex.encode(object);
            fail("Expected EncoderException");
        } catch (EncoderException e) {
            assertEquals("class java.lang.Object cannot be cast to class [B (java.lang.Object and [B are in module java.base of loader 'bootstrap')", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeInvalidInput_rxzK4_fid1() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        Object input = new Object();
        try {
            hex.decode(input);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
            assertEquals("class java.lang.Object cannot be cast to class [C (java.lang.Object and [C are in module java.base of loader 'bootstrap')", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_RAQk0() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        String input = "68656c6c6f20776f726c64";
        Object output = hex.decode(input);
        assertNotNull(output);
        assertTrue(output instanceof byte[]);
        assertEquals("hello world", new String((byte[]) output));
    }
}