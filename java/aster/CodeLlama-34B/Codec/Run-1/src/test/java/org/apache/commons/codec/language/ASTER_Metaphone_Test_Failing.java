/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Metaphone_Test_Failing {
    private Metaphone metaphone = new Metaphone();

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone4_YoRG3() {
        Metaphone metaphone = new Metaphone();
        String txt = "BTat";
        String expected = "BT";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone7_DYDh6() {
        Metaphone metaphone = new Metaphone();
        String txt = "FKSox";
        String expected = "FKS";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLen_negativeInput_EluY5() {
        Metaphone metaphone = new Metaphone();
        int maxCodeLen = -1 - 10;
        metaphone.setMaxCodeLen(maxCodeLen);
        assertEquals(-10, metaphone.getMaxCodeLen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxCodeLen_nullPointerException_egpJ14_yKJy0() {
        Metaphone metaphone = new Metaphone();
        try {
            int maxCodeLen = metaphone.getMaxCodeLen();
            assertEquals(0, maxCodeLen);
        } catch (NullPointerException e) {
            assertEquals("maxCodeLen", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone1_dWXP0() {
        Metaphone metaphone = new Metaphone();
        String txt = "Knight";
        String expected = "N";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone2_BTYi1_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Ghost";
        String expected = "G";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone3_PmuZ2_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Pit";
        String expected = "P";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone4_YoRG3_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Bat";
        String expected = "B";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone5_lcth4() {
        Metaphone metaphone = new Metaphone();
        String txt = "Cat";
        String expected = "C";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone6_pWxD5() {
        Metaphone metaphone = new Metaphone();
        String txt = "Dog";
        String expected = "D";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone7_DYDh6_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Fox";
        String expected = "F";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone8_jYkJ7() {
        Metaphone metaphone = new Metaphone();
        String txt = "Gnat";
        String expected = "N";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone9_Fpkz8() {
        Metaphone metaphone = new Metaphone();
        String txt = "Hat";
        String expected = "H";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone10_rVGl9_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Ink";
        String expected = "N";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone11_unHT10_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Jam";
        String expected = "J";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone12_hJoa11_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Kite";
        String expected = "K";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone13_ObFx12_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Lion";
        String expected = "L";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone14_Xwlc13() {
        Metaphone metaphone = new Metaphone();
        String txt = "Moon";
        String expected = "M";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone2_ZuQG1_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "G";
        String expected = "K";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone5_Xphz4_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "C";
        String expected = "K";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone6_GNus5() {
        Metaphone metaphone = new Metaphone();
        String txt = "D";
        String expected = "T";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone2_ggnS1_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Ghost";
        String expected = "J";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone3_wMAH2_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Phrase";
        String expected = "F";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone5_yeGn4_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Brought";
        String expected = "BT";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone7_dpAY6_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "Through";
        String expected = "0";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone1_aaxq0_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "hello";
        String expected = "HLL";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone2_nBVg1_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "world";
        String expected = "WRLD";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone3_cJhX2_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "java";
        String expected = "JV";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone4_rwgX3_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "python";
        String expected = "PTHN";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone5_OiMI4_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "c++";
        String expected = "CP";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone6_vPhh5_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "javascript";
        String expected = "JSTFST";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone7_ALnq6_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "typescript";
        String expected = "TPSTSFT";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone8_PsLF7_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "coffeescript";
        String expected = "KFSFT";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone9_aRsQ8_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "livescript";
        String expected = "LFSFT";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone13_AqEj12_fid2() {
        Metaphone metaphone = new Metaphone();
        String txt = "bb8";
        String expected = "P";
        String actual = metaphone.metaphone(txt);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLen_invalidInput_pdaQ1_fid2() {
        Metaphone metaphone = new Metaphone();
        int maxCodeLen = -1;
        metaphone.setMaxCodeLen(maxCodeLen);
        assertEquals(0, metaphone.getMaxCodeLen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLen_negativeInput_EluY5_fid2() {
        Metaphone metaphone = new Metaphone();
        int maxCodeLen = -10;
        metaphone.setMaxCodeLen(maxCodeLen);
        assertEquals(0, metaphone.getMaxCodeLen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsMetaphoneEqual_differentAccents_XEQg5_fid2() {
        String str1 = "hello";
        String str2 = "hllo";
        assertTrue(metaphone.isMetaphoneEqual(str1, str2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsMetaphoneEqual_differentSpecialCharacters_Fdnb6_fid2() {
        String str1 = "hello";
        String str2 = "hllo!";
        assertTrue(metaphone.isMetaphoneEqual(str1, str2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_KKfG0_fid2() {
        Metaphone metaphone = new Metaphone();
        String str = "hello";
        String expected = "HLL";
        String actual = metaphone.encode(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNullString_lVvF2_fid2() {
        Metaphone metaphone = new Metaphone();
        String str = null;
        String expected = null;
        String actual = metaphone.encode(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithSpecialCharacters_XlQn3_fid2() {
        Metaphone metaphone = new Metaphone();
        String str = "hello world!";
        String expected = "HLL WRLD";
        String actual = metaphone.encode(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithAccentedCharacters_OukZ4_fid2() {
        Metaphone metaphone = new Metaphone();
        String str = "hllo";
        String expected = "HLL";
        String actual = metaphone.encode(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonLatinCharacters_uFgF6_fid2() {
        Metaphone metaphone = new Metaphone();
        String str = "";
        String expected = "KNNCH";
        String actual = metaphone.encode(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonLatinCharactersAndSpecialCharacters_CDaR7_fid2() {
        Metaphone metaphone = new Metaphone();
        String str = "!";
        String expected = "KNNCH";
        String actual = metaphone.encode(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLen_objectInput_AgRB7_msJR0_fid2() {
        Metaphone metaphone = new Metaphone();
        Object maxCodeLen = new Object();
        metaphone.setMaxCodeLen(Integer.parseInt(maxCodeLen.toString()));
        assertEquals(0, metaphone.getMaxCodeLen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLen_nullObjectInput_PTku8_Jnzt0() {
        Metaphone metaphone = new Metaphone();
        Integer maxCodeLen = null;
        metaphone.setMaxCodeLen(maxCodeLen);
        assertEquals(0, metaphone.getMaxCodeLen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxCodeLen_custom_qcAe1_uixo0_fid2() {
        Metaphone metaphone = new Metaphone();
        int maxCodeLen = metaphone.getMaxCodeLen();
        assertEquals(10, maxCodeLen);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxCodeLen_nullPointerException_egpJ14_yKJy0_fid2() {
        Metaphone metaphone = new Metaphone();
        try {
            int maxCodeLen = metaphone.getMaxCodeLen();
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            assertEquals("maxCodeLen", e.getMessage());
        }
    }
}