/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_B64_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomSalt_1_tHaJ0() {
        int num = 10;
        Random random = new Random();
        String salt = B64.getRandomSalt(num, random);
        assertEquals(num, salt.length());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomSalt_3_Lurv2() {
        int num = 5;
        Random random = new Random();
        String salt = B64.getRandomSalt(num, random);
        assertEquals(num, salt.length());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testB64from24bit_mqcn0() {
        byte b2 = 0x01;
        byte b1 = 0x02;
        byte b0 = 0x03;
        int outLen = 4;
        StringBuilder buffer = new StringBuilder();
        B64.b64from24bit(b2, b1, b0, outLen, buffer);
        assertEquals("16E.", buffer.toString());
    }
}