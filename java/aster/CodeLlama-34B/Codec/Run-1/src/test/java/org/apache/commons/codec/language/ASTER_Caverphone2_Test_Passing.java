/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Caverphone2_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode1_cFMK0() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("hello");
        assertEquals("ALA1111111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode3_qZmc2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("aeiou");
        assertEquals("AA11111111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode4_Waua3() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("bcdfghjklmnpqrstvwxyz");
        assertEquals("PKTFKMNPKS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode5_dxzk4() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("aeioubcdfghjklmnpqrstvwxyz");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode6_xoQq5() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("1111111111");
        assertEquals("1111111111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_1() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertFalse(caverphone2.isEncodeEqual(str1, str2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_2() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertFalse(caverphone2.isEncodeEqual(str3, str4));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_3() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertFalse(caverphone2.isEncodeEqual(str5, str6));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_4() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertFalse(caverphone2.isEncodeEqual(str7, str8));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_5() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertFalse(caverphone2.isEncodeEqual(str9, str10));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_6() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertTrue(caverphone2.isEncodeEqual(str1, str3));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_7() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertTrue(caverphone2.isEncodeEqual(str1, str5));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_8() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertTrue(caverphone2.isEncodeEqual(str1, str7));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_9() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
        assertTrue(caverphone2.isEncodeEqual(str1, str9));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_NWYf0_10() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        String str1 = "hello";
        String str2 = "world";
        String str3 = "hello";
        String str4 = "world";
        String str5 = "hello";
        String str6 = "world";
        String str7 = "hello";
        String str8 = "world";
        String str9 = "hello";
        String str10 = "world";
    }
}