/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_CharSequenceUtils_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatches_NullCharSequence_cPEn5() {
        CharSequence cs = null;
        boolean ignoreCase = true;
        int thisStart = 0;
        CharSequence substring = "Hello";
        int start = 0;
        int length = 5;
        assertFalse(CharSequenceUtils.regionMatches(cs, ignoreCase, thisStart, substring, start, length));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatches_NullSubstring_wENI6() {
        CharSequence cs = "Hello World";
        boolean ignoreCase = true;
        int thisStart = 0;
        CharSequence substring = null;
        int start = 0;
        int length = 5;
        assertFalse(CharSequenceUtils.regionMatches(cs, ignoreCase, thisStart, substring, start, length));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatches_NegativeLength_UaDd7() {
        CharSequence cs = "Hello World";
        boolean ignoreCase = true;
        int thisStart = 0;
        CharSequence substring = "Hello";
        int start = 0;
        int length = -1;
        assertFalse(CharSequenceUtils.regionMatches(cs, ignoreCase, thisStart, substring, start, length));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatches_NullCharSequence_cPEn5_fid1() {
        CharSequence cs = null;
        boolean ignoreCase = true;
        int thisStart = 0;
        CharSequence substring = "Hello";
        int start = 0;
        int length = 5;
        assertNull(CharSequenceUtils.regionMatches(cs, ignoreCase, thisStart, substring, start, length));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegionMatches_NullSubstring_wENI6_fid1() {
        CharSequence cs = "Hello World";
        boolean ignoreCase = true;
        int thisStart = 0;
        CharSequence substring = null;
        int start = 0;
        int length = 5;
        assertNull(CharSequenceUtils.regionMatches(cs, ignoreCase, thisStart, substring, start, length));
    }
}