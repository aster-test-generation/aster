/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Caverphone2_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode1_IbQE0() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("hello");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode2_FaFf1() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("world");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode5_kLlF4() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("b");
        assertEquals("P111111111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode9_zers8() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("f");
        assertEquals("F111111111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode10_QZfY9() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("g");
        assertEquals("K111111111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode11_lCzP10() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("h");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode12_ErdP11() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("i");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode13_EKqK12() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("j");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode14_vTsc13() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("k");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode15_KeYy14() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("l");
        assertEquals("A111111111", result);
    }
}