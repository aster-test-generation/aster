/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Nysiis_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis1_LJbt0() {
        Nysiis nysiis = new Nysiis();
        String str = "Evans";
        String expected = "EVAN";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis2_nlsG1() {
        Nysiis nysiis = new Nysiis();
        String str = "Aaron";
        String expected = "ARAN";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis3_zVBg2() {
        Nysiis nysiis = new Nysiis();
        String str = "Quick";
        String expected = "QAC";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis4_kBJI3() {
        Nysiis nysiis = new Nysiis();
        String str = "Zebra";
        String expected = "ZABR";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis5_tYhU4() {
        Nysiis nysiis = new Nysiis();
        String str = "Mccabe";
        String expected = "MCAB";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis6_WHjj5() {
        Nysiis nysiis = new Nysiis();
        String str = "Knight";
        String expected = "NAGT";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_YCZN6() {
        Nysiis nysiis = new Nysiis();
        String str = "Knights";
        String expected = "NAGT";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis8_mPxE7() {
        Nysiis nysiis = new Nysiis();
        String str = "Philip";
        String expected = "FALAP";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis9_GVdi8() {
        Nysiis nysiis = new Nysiis();
        String str = "Schmidt";
        String expected = "SNAD";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis10_lKQP9() {
        Nysiis nysiis = new Nysiis();
        String str = "Schneider";
        String expected = "SNADAR";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis11_kFBl10() {
        Nysiis nysiis = new Nysiis();
        String str = "Washington";
        String expected = "WASANG";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis12_ZObG11() {
        Nysiis nysiis = new Nysiis();
        String str = "Harrison";
        String expected = "HARASA";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis13_SlPQ12() {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis2_syaC1() {
        Nysiis nysiis = new Nysiis();
        String str = "A";
        String expected = "A";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_lyyN6() {
        Nysiis nysiis = new Nysiis();
        String str = "Q";
        String expected = "Q";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis10_zjLi9() {
        Nysiis nysiis = new Nysiis();
        String str = "KN";
        String expected = "N";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis11_yynQ10() {
        Nysiis nysiis = new Nysiis();
        String str = "K";
        String expected = "C";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis12_myOM11() {
        Nysiis nysiis = new Nysiis();
        String str = "PH";
        String expected = "F";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }
}