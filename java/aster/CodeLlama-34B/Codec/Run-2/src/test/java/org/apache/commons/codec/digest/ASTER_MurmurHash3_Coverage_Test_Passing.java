/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_MurmurHash3_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash128x64WithOffsetAndLength_QGPu0() {
        byte[] data = new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        int offset = 5;
        int length = 5;
        int seed = 12345;
        long[] result = MurmurHash3.hash128x64(data, offset, length, seed);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash128x64WithDifferentSeed_SRWZ1() {
        byte[] data = new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        int offset = 0;
        int length = data.length;
        int seed = 54321;
        long[] result = MurmurHash3.hash128x64(data, offset, length, seed);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash128x64WithDifferentData_UFLf2() {
        byte[] data = new byte[]{11, 12, 13, 14, 15, 16, 17, 18, 19, 20};
        int offset = 0;
        int length = data.length;
        int seed = 12345;
        long[] result = MurmurHash3.hash128x64(data, offset, length, seed);
    }
}