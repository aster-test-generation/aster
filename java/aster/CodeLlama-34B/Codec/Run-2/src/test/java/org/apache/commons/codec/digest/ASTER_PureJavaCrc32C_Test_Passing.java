/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PureJavaCrc32C_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithInvalidCrc3_iEgG10() {
        PureJavaCrc32C crc = new PureJavaCrc32C();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithZeroCrc_wwgG2_iXJq0() {
        PureJavaCrc32C crc = new PureJavaCrc32C();
        crc.update(0x00);
        long value = crc.getValue();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithNegativeCrc_jBAt3_mCFq0() {
        PureJavaCrc32C crc = new PureJavaCrc32C();
        crc.update(0xff);
        long value = crc.getValue();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithInvalidCrc_Sdft6_XFLB0() {
        PureJavaCrc32C crc = new PureJavaCrc32C();
        crc.update(new byte[]{0x00, 0x00, 0x00, 0x00}[0]);
        long value = crc.getValue();
        assertNotEquals(0xffffffffL, value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueWithValidCrc_plEb7_EjBP0() {
        PureJavaCrc32C crc = new PureJavaCrc32C();
        crc.update(0x01);
        crc.update(0x02);
        crc.update(0x03);
        crc.update(0x04);
        long value = crc.getValue();
        assertEquals(691047668L, value);
    }
}