/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Nysiis_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_strict_zasR0() {
        Nysiis nysiis = new Nysiis(true);
        assertTrue(nysiis.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_notStrict_LlAZ1() {
        Nysiis nysiis = new Nysiis(false);
        assertFalse(nysiis.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_strictAndNotStrict_cEqf2_1() {
        Nysiis nysiis = new Nysiis(true);
        nysiis = new Nysiis(false);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_strictAndNotStrict_cEqf2() {
        Nysiis nysiis = new Nysiis(true);
        assertTrue(nysiis.isStrict());
        nysiis = new Nysiis(false);
        assertFalse(nysiis.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_nullInput_zRjn0() {
        Nysiis nysiis = new Nysiis();
        assertNull(nysiis.nysiis(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_emptyInput_wueB1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("", nysiis.nysiis(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_singleCharacterInput_mDgk2() {
        Nysiis nysiis = new Nysiis();
        assertEquals("A", nysiis.nysiis("A"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_multipleCharacterInput_zQQm3() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("AB"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_inputWithNumbers_IIMl5() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("A1B"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_inputWithLowercaseLetters_LvFc7() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("a b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_inputWithMixedCaseLetters_gPfz8() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("a B"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_inputWithNonAsciiCharacters_FObJ10() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("a\u00a9 b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_inputWithInvalidCharacters_HxkL11() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("a\u0000 b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_inputWithValidCharacters_EFgC12() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("a\u0020 b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MultipleCharacterInput_WithSpecialCharacters_xCvS5() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("A!B"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MultipleCharacterInput_WithLowercaseLetters_KzXF8() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("a1b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MultipleCharacterInput_WithMixedCaseLetters_IUEH9() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("A1b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MultipleCharacterInput_WithSpecialCharactersAndNumbers_Mdfe11() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("A!1B"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MultipleCharacterInput_WithLowercaseLettersAndSpecialCharacters_HaXR13() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("a!1b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MultipleCharacterInput_WithMixedCaseLettersAndSpecialCharacters_EjPw14() {
        Nysiis nysiis = new Nysiis();
        assertEquals("AB", nysiis.nysiis("A!1b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MultipleCharacterInput_WithAccentedLettersAndSpecialCharacters_HhaH15() {
        Nysiis nysiis = new Nysiis();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_String_GhOz0() {
        Nysiis nysiis = new Nysiis();
        String input = "Hello";
        String expected = "HAL";
        String actual = nysiis.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_NonString_lBDi1() {
        Nysiis nysiis = new Nysiis();
        Object input = new Object();
        try {
            nysiis.encode(input);
            fail("Expected EncoderException");
        } catch (EncoderException e) {
            assertEquals("Parameter supplied to Nysiis encode is not of type java.lang.String", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_EmptyString_ONLz2() {
        Nysiis nysiis = new Nysiis();
        String input = "";
        String expected = "";
        String actual = nysiis.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_emptyString_gOzy2() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.encode("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_nullString_kDdd3() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.encode(null);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_differentString10_dcPp15() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.encode("Wilson");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_strictAndNotStrict_cEqf2_2() {
        Nysiis nysiis = new Nysiis(true);
        nysiis = new Nysiis(false);
        assertFalse(nysiis.isStrict());
    }
}