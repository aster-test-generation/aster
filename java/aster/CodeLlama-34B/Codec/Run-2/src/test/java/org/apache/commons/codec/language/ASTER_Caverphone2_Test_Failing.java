/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Caverphone2_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode1_IbQE0_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("hello");
        assertEquals("HEL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode2_FaFf1_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("world");
        assertEquals("WRL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode3_seGq2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode4_FPRp3() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("a");
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode5_kLlF4_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("b");
        assertEquals("B", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode6_ollf5() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("c");
        assertEquals("C", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode7_OrjO6() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("d");
        assertEquals("D", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode8_WlCY7() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("e");
        assertEquals("E", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode9_zers8_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("f");
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode10_QZfY9_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("g");
        assertEquals("G", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode11_lCzP10_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("h");
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode12_ErdP11_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("i");
        assertEquals("I", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode13_EKqK12_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("j");
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode14_vTsc13_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("k");
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode15_KeYy14_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("l");
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode16_pWSj15() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("m");
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode17_RMHe16() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("n");
        assertEquals("N", result);
    }
}