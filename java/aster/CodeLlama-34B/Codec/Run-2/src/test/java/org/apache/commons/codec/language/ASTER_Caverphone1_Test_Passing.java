/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Caverphone1_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode1_VmVU0_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("cough");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode2_rLVG1_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("rough");
        assertEquals("RF1111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode3_LWTE2_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("tough");
        assertEquals("TF1111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode7_IaBK6_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("enough");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode8_PAyO7_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("gn");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode9_nZsr8_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("mb");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode10_bwSw9_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("cq");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode11_eTxL10_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("ci");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode13_sVwc12_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("cy");
        assertEquals("S11111", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode14_wzgc13_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("tch");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode15_jaBw14_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("c");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode16_YqXM15_fid1() {
        Caverphone1 caverphone1 = new Caverphone1();
        String result = caverphone1.encode("q");
        assertEquals("K11111", result);
    }
}