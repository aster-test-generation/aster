/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import com.ibm.websphere.samples.daytrader.util.RecentQuotePriceChangeList;
import java.util.concurrent.TimeUnit;
import javax.websocket.Session;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

public class Aster_MarketSummaryWebSocket_Coverage_Test_Passing {
  private RecentQuotePriceChangeList recentQuotePriceChangeList;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnErrorWithSession_zxqX0() {
    MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
    Session currentSession = mock(Session.class);
    Throwable t = mock(Throwable.class);
    marketSummaryWebSocket.onError(t, currentSession);
    verify(currentSession).getId();
    verify(t).printStackTrace();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnErrorWithoutSession_SeBJ1() {
    MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
    Throwable t = mock(Throwable.class);
    marketSummaryWebSocket.onError(t, null);
    verify(t).printStackTrace();
  }
}