/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.ejb3;

import com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_MarketSummarySingleton_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetMarketSummaryDataBean_Vzci0() {
    MarketSummarySingleton marketSummarySingleton = new MarketSummarySingleton();
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean();
    marketSummaryDataBean.setOpenTSIA(BigDecimal.valueOf(1000));
    marketSummaryDataBean.setTSIA(BigDecimal.valueOf(1000));
    marketSummaryDataBean.setVolume(1000);
    marketSummaryDataBean.setTopGainers(new ArrayList<QuoteDataBean>());
    marketSummaryDataBean.setTopLosers(new ArrayList<QuoteDataBean>());
    marketSummarySingleton.setMarketSummaryDataBean(marketSummaryDataBean);
    assertEquals(marketSummaryDataBean, marketSummarySingleton.getMarketSummaryDataBean());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetMarketSummaryDataBeanWithNull_wAfg1() {
    MarketSummarySingleton marketSummarySingleton = new MarketSummarySingleton();
    MarketSummaryDataBean marketSummaryDataBean = null;
    marketSummarySingleton.setMarketSummaryDataBean(marketSummaryDataBean);
    assertNull(marketSummarySingleton.getMarketSummaryDataBean());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMarketSummaryDataBean_naRv0_fid1() {
    MarketSummarySingleton marketSummarySingleton = new MarketSummarySingleton();
    MarketSummaryDataBean marketSummaryDataBean = marketSummarySingleton.getMarketSummaryDataBean();
  }
}