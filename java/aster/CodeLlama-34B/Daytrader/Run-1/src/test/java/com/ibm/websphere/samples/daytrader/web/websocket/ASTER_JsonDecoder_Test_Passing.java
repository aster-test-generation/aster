/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JsonDecoder_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_nullJson_ajnF2() {
    JsonDecoder decoder = new JsonDecoder();
    String json = null;
    assertFalse(decoder.willDecode(json));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_emptyJson_QoBm3() {
    JsonDecoder decoder = new JsonDecoder();
    String json = "";
    assertFalse(decoder.willDecode(json));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_nonJson_EHOc5() {
    JsonDecoder decoder = new JsonDecoder();
    String json = "This is not JSON";
    assertFalse(decoder.willDecode(json));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_jsonWithInvalidKey_nVbV6() {
    JsonDecoder decoder = new JsonDecoder();
    String json = "{\"key\":\"value\"}";
    assertFalse(decoder.willDecode(json));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_validJson_BIcd0_fid1() {
    JsonDecoder decoder = new JsonDecoder();
    String json = "{\"key\":\"value\"}";
  }
}