/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PingSession3_Coverage_Test_Failing {
  private HttpServletResponse response;
  private ServletConfig config;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithNullRequest_ZMzV0() throws javax.servlet.ServletException, java.io.IOException {
    PingSession3 pingSession3 = new PingSession3();
    try {
      pingSession3.doGet(null, null);
      fail("Should have thrown NullPointerException");
    } catch (NullPointerException e) {
      assertEquals("request", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithNullResponse_fDXd1() throws javax.servlet.ServletException, java.io.IOException {
    PingSession3 pingSession3 = new PingSession3();
    HttpServletRequest request = new MockHttpServletRequest();
    try {
      pingSession3.doGet(request, null);
      fail("Should have thrown NullPointerException");
    } catch (NullPointerException e) {
      assertEquals("response", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithNullSession_tdrg2() throws javax.servlet.ServletException, java.io.IOException {
    PingSession3 pingSession3 = new PingSession3();
    HttpServletRequest request = new MockHttpServletRequest();
    HttpServletResponse response = new MockHttpServletResponse();
    try {
      pingSession3.doGet(request, response);
      fail("Should have thrown ServletException");
    } catch (ServletException e) {
      assertEquals("error getting session", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_uhJC0() {
    PingSession3 pingSession3 = new PingSession3();
    String expected = "HTTP Session Object: Tests management of a large custom session class";
    String actual = pingSession3.getServletInfo();
    assertEquals(expected, actual);
  }
}