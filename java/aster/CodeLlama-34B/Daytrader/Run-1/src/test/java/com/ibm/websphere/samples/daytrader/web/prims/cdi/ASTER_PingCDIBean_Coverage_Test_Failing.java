/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.spi.Bean;
import javax.enterprise.inject.spi.BeanManager;
import javax.enterprise.inject.spi.CDI;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_PingCDIBean_Coverage_Test_Failing {
  private BeanManager beanManager;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetBeanMangerViaCDICurrent_BeanManagerNull_kYgG0() throws Exception {
    PingCDIBean pingCDIBean = new PingCDIBean();
    when(CDI.current().getBeanManager()).thenReturn(null);
    assertEquals(0, pingCDIBean.getBeanMangerViaCDICurrent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetBeanMangerViaCDICurrent_BeanManagerNotNull_LUYW1() throws Exception {
    PingCDIBean pingCDIBean = new PingCDIBean();
    when(CDI.current().getBeanManager()).thenReturn(beanManager);
    when(beanManager.getBeans(Object.class)).thenReturn(null);
    assertEquals(0, pingCDIBean.getBeanMangerViaCDICurrent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetBeanMangerViaCDICurrent_BeanManagerNotNull_BeansEmpty_zWHG2() throws Exception {
    PingCDIBean pingCDIBean = new PingCDIBean();
    when(CDI.current().getBeanManager()).thenReturn(beanManager);
    when(beanManager.getBeans(Object.class)).thenReturn(Set.of());
    assertEquals(0, pingCDIBean.getBeanMangerViaCDICurrent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetBeanMangerViaJNDI_rbMq0_1() throws Exception {
    PingCDIBean pingCDIBean = new PingCDIBean();
    int result = pingCDIBean.getBeanMangerViaJNDI();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetBeanMangerViaJNDI_rbMq0_2() throws Exception {
    PingCDIBean pingCDIBean = new PingCDIBean();
    int result = pingCDIBean.getBeanMangerViaJNDI();
    assertTrue(result > 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetBeanMangerViaCDICurrent_BeanManagerNotNull_BeansNotEmpty_jpCT3_NAZf0() throws Exception {
    PingCDIBean pingCDIBean = new PingCDIBean();
    when(CDI.current().getBeanManager()).thenReturn(beanManager);
    when(beanManager.getBeans(Object.class)).thenReturn(Set.of(mock(Bean.class)));
    assertEquals(1, pingCDIBean.getBeanMangerViaCDICurrent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetBeanMangerViaJNDI_BeanManagerNull_HLDw1_TERi0() throws Exception {
    PingCDIBean pingCDIBean = new PingCDIBean();
    BeanManager beanManager = null;
    int result = pingCDIBean.getBeanMangerViaJNDI();
    assertEquals(0, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetBeanMangerViaJNDI_rbMq0() throws Exception {
    PingCDIBean pingCDIBean = new PingCDIBean();
    int result = pingCDIBean.getBeanMangerViaJNDI();
    assertNotNull(result);
    assertTrue(result > 0);
  }
}