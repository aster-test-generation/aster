/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TestJSONObject_Test_Passing {
  private TestJSONObject testJSONObject;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005_Null_VRaN1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0005();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005_Invalid_vWvZ4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0005";
    String actual = testJSONObject.getProp0005();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_MlOX0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    assertEquals("test", testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_null_FsKx1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014(null);
    assertNull(testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_emptyString_DUuR2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("");
    assertEquals("", testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0004WithNull_jplT1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0004();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0004WithInvalidString_yRyZ4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "invalid";
    String actual = testJSONObject.getProp0004();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_PAsB0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    assertEquals("test", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0013_KOZF0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0013("test");
    assertEquals("test", testJSONObject.getProp0013());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0013WithNull_ppYG1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0013(null);
    assertNull(testJSONObject.getProp0013());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0013WithEmptyString_dJwl2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0013("");
    assertEquals("", testJSONObject.getProp0013());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0013WithNumber_MFzK4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0013("123");
    assertEquals("123", testJSONObject.getProp0013());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009_cOMW0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0009("test");
    assertEquals("test", testJSONObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009_igeG1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0009("test");
    assertEquals("test", testJSONObject.getProp0009());
    testJSONObject.setProp0009("test2");
    assertEquals("test2", testJSONObject.getProp0009());
    testJSONObject.setProp0009("test3");
    assertEquals("test3", testJSONObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0008_nILv0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0008("test");
    assertEquals("test", testJSONObject.getProp0008());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0008WithNull_MuZz1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0008(null);
    assertNull(testJSONObject.getProp0008());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0008WithEmptyString_Cmwz2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0008("");
    assertEquals("", testJSONObject.getProp0008());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0011_ftvn0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0011("test");
    assertEquals("test", testJSONObject.getProp0011());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0011WithNull_Aeri1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0011(null);
    assertEquals(null, testJSONObject.getProp0011());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0011WithEmptyString_sCzl2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0011("");
    assertEquals("", testJSONObject.getProp0011());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007_CrIg0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("prop0007");
    assertEquals("prop0007", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithNull_DRLk1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007(null);
    assertNull(testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithEmptyString_HWSL2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("");
    assertEquals("", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithInvalidString_PCnw3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("invalid");
    assertEquals("invalid", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010_NullValue_QvoN0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010(null);
    assertNull(testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010_EmptyString_bFcL1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("");
    assertEquals("", testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010_NonEmptyString_yCfQ2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("test");
    assertEquals("test", testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0014WithNull_dKRQ1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0014();
    assertNull(actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_OOgf0() {
    testJSONObject = new TestJSONObject();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011_Null_zlQf1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0011();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006_vuFM0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006("test");
    assertEquals("test", testJSONObject.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006WithNull_rcCk1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006(null);
    assertNull(testJSONObject.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006WithEmptyString_hEwY2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006("");
    assertEquals("", testJSONObject.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004_UDkW0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("prop0004");
    assertEquals("prop0004", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004WithNull_zCWt1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004(null);
    assertNull(testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004WithEmptyString_pumr2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("");
    assertEquals("", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004WithInvalidString_oIIw3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("invalid");
    assertEquals("invalid", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004WithValidString_HwvM4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("valid");
    assertEquals("valid", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004WithDifferentCaseString_MLfe5() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("VALID");
    assertEquals("VALID", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004WithSpecialCharactersString_ohFb7() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("!@#$%^&*()_+");
    assertEquals("!@#$%^&*()_+", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004WithNumberString_UPLw8() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("1234567890");
    assertEquals("1234567890", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004WithBooleanString_SYMz9() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("true");
    assertEquals("true", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005_ioRG0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0005("test");
    assertEquals("test", testJSONObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005_null_UbIw1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0005(null);
    assertEquals(null, testJSONObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005_emptyString_AHAT2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0005("");
    assertEquals("", testJSONObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001_RmfJ0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001("test");
    assertEquals("test", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001_alreadySet_cjCG1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001("test");
    testJSONObject.setProp0001("test2");
    assertEquals("test2", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003_raiq0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0003("prop0003");
    assertEquals("prop0003", testJSONObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003WithNull_zcYL1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0003(null);
    assertNull(testJSONObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003WithEmptyString_MVct2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0003("");
    assertEquals("", testJSONObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0015_VyVh0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0015("test");
    assertEquals("test", testJSONObject.getProp0015());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0015WithNull_XAdc1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0015(null);
    assertNull(testJSONObject.getProp0015());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0015WithEmptyString_nsWx2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0015("");
    assertEquals("", testJSONObject.getProp0015());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0007_null_Gwcx1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0007();
    assertNull(actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006WithNull_uwAh1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0006();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006WithInvalidString_jhWu4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "invalid";
    String actual = testJSONObject.getProp0006();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0002_Rbkx0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0002("test");
    assertEquals("test", testJSONObject.getProp0002());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0002WithNull_mrxx1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0002(null);
    assertEquals(null, testJSONObject.getProp0002());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0002WithEmptyString_gwUd2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0002("");
    assertEquals("", testJSONObject.getProp0002());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0016_MIYT0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0016("test");
    assertEquals("test", testJSONObject.getProp0016());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0016WithNull_CzUj1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0016(null);
    assertNull(testJSONObject.getProp0016());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0016WithEmptyString_BMUr2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0016("");
    assertEquals("", testJSONObject.getProp0016());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009_igeG1_3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0009("test");
    testJSONObject.setProp0009("test2");
    testJSONObject.setProp0009("test3");
    assertEquals("test3", testJSONObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001WithNullValue_xecp1_oJJA0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0001();
    assertNull(actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0013WithNullValue_sGTr1_vpQk0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0013();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006WithNonStringValue_yMcS3_bVjE0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006("123");
    assertEquals("123", testJSONObject.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0008_ftji1_MFeP0_1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0008";
    String actual = testJSONObject.getProp0008();
    testJSONObject.setProp0008("differentValue");
    expected = "differentValue";
    actual = testJSONObject.getProp0008();
    testJSONObject.setProp0008(null);
    expected = null;
    actual = testJSONObject.getProp0008();
    testJSONObject.setProp0008("");
    expected = "";
    actual = testJSONObject.getProp0008();
    testJSONObject.setProp0008("123");
    expected = "123";
    actual = testJSONObject.getProp0008();
    assertEquals(expected, actual);
  }
}