/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2Entity2JSP_Test_Failing {
  private HttpServletRequest request;
  @Mock
  private HttpServletResponse response;
  private TradeServices tradeSLSBLocal;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_LCKY0() throws Exception {
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    servlet.doPost(request, response);
    assertEquals(HttpServletResponse.SC_OK, response.getStatus());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithInvalidRequest_QfTW1() throws Exception {
    when(request.getMethod()).thenReturn("POST");
    when(request.getRequestURI()).thenReturn("/ping");
    when(request.getParameter("name")).thenReturn("John Doe");
    when(request.getParameter("age")).thenReturn("30");
    when(request.getParameter("email")).thenReturn("johndoe@example.com");
    when(request.getParameter("phone")).thenReturn("1234567890");
    when(request.getParameter("address")).thenReturn("123 Main St");
    when(request.getParameter("city")).thenReturn("Anytown");
    when(request.getParameter("state")).thenReturn("CA");
    when(request.getParameter("zip")).thenReturn("12345");
    when(request.getParameter("country")).thenReturn("USA");
    when(request.getParameter("comments")).thenReturn("This is a test comment");
    when(request.getParameter("submit")).thenReturn("Submit");
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    servlet.doPost(request, response);
    assertEquals(HttpServletResponse.SC_OK, response.getStatus());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_DSKz0() {
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    String expected = "web primitive, tests Servlet to Session to Entity EJB to JSP path";
    String actual = servlet.getServletInfo();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitWithNullConfig_DMqB1_mgMn0() {
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    try {
      servlet.init(null);
    } catch (ServletException e) {
      e.printStackTrace();
    }
    assertNull(servlet.getServletConfig());
  }
}