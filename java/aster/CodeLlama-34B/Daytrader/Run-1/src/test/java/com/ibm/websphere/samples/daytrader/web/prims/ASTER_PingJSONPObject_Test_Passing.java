/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.util.concurrent.TimeUnit;
import javax.json.JsonObject;
import javax.json.JsonReader;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingJSONPObject_Test_Passing {
  private static int hitCount;
  private static String initTime;
  @Mock
  private HttpServletResponse response;
  private HttpServletRequest request;
  @Mock
  private ServletOutputStream outputStream;
  @Mock
  private JsonReader jsonReader;
  @Mock
  private JsonObject jsonObject;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_Xneb0_bsel0() {
    PingJSONPObject pingJSONPObject = new PingJSONPObject();
    assertNotNull(pingJSONPObject);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_tjGy1_nsAq0() {
    PingJSONPObject pingJSONPObject = new PingJSONPObject();
    String expected = "Basic JSON generation and parsing in a servlet";
    String actual = pingJSONPObject.getServletInfo();
    assertEquals(expected, actual);
  }
}