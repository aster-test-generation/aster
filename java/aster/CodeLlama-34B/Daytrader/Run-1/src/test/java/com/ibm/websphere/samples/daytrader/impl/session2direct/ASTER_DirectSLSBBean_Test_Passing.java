/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.session2direct;

import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DirectSLSBBean_Test_Passing {
  private DirectSLSBBean directSLSBBean;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAllQuotes_exception_Yccs3() throws Exception {
    DirectSLSBBean directSLSBBean = new DirectSLSBBean();
    try {
      directSLSBBean.getAllQuotes();
      fail("Exception should be thrown");
    } catch (Exception e) {
      assertTrue(e instanceof Exception);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetInSessionUnsupportedOperationException_JmUc2() {
    DirectSLSBBean bean = new DirectSLSBBean();
    try {
      bean.setInSession(true);
      fail("Expected UnsupportedOperationException");
    } catch (UnsupportedOperationException e) {
      assertEquals("DirectSLSBBean::setInGlobalTxn not supported", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testQueueOrder_orderID_null_true_false_vkUX8() throws Exception {
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetImpl_amBt0() {
    DirectSLSBBean directSLSBBean = new DirectSLSBBean();
    int result = directSLSBBean.getImpl();
    assertEquals(TradeConfig.SESSION_TO_DIRECT, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrders_userID_valid_kctb3_hzEn0() {
    DirectSLSBBean directSLSBBean = new DirectSLSBBean();
    try {
      Collection<?> orders = directSLSBBean.getClosedOrders("valid_user_id");
      assertNotNull(orders);
      assertFalse(orders.isEmpty());
    } catch (Exception e) {
      assertTrue(e.getMessage().contains("Cannot invoke \"com.ibm.websphere.samples.daytrader.interfaces.TradeServices.setInSession(boolean)\" because \"this.tradeDirect\" is null"));
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_acdX0() {
    directSLSBBean = new DirectSLSBBean();
  }
}