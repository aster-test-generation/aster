/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.util.ArrayList;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Log_Test_Passing {
  private Log log;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintObject_NullPointerException_OefL12() {
    try {
      Log.printObject(null);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintCollection_empty_fkWq0() {
    Collection<Object> c = new ArrayList<>();
    Log.printCollection(c);
    assertEquals(0, c.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintCollection_nonEmpty_xozF1() {
    Collection<Object> c = new ArrayList<>();
    c.add("apple");
    c.add("banana");
    c.add("orange");
    Log.printCollection(c);
    assertEquals(3, c.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintCollection_null_oJnQ2() {
    Collection<Object> c = null;
    try {
      Log.printCollection(c);
      fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintCollection_emptyCollection_atFI0() {
    Collection<Object> c = new ArrayList<>();
    Log.printCollection("Empty collection", c);
    assertEquals(0, c.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintCollection_nonEmptyCollection_rjSH1() {
    Collection<Object> c = new ArrayList<>();
    c.add(new Object());
    Log.printCollection("Non-empty collection", c);
    assertEquals(1, c.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_NullMessage_lOuV0() {
    Log.print(null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_EmptyMessage_ZXdN1() {
    Log.print("");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_ValidMessage_JBKN2() {
    Log.print("Hello, World!");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_MultipleMessages_EslW3() {
    Log.print("Hello, World!");
    Log.print("This is a test message.");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_DifferentMessages_RpHG4() {
    Log.print("Hello, World!");
    Log.print("This is a different message.");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_SameMessageMultipleTimes_rlLl5() {
    Log.print("Hello, World!");
    Log.print("Hello, World!");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_WiJF0() {
    log = new Log();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testTraceWithEmptyMessage_Qhnp6() {
    String message = "";
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDebug_True_Bael0() {
    assertTrue(Log.doDebug());
  }
}