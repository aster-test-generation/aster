/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContextEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockServletContext;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TradeWebContextListener_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextDestroyed_qZdP0() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextDestroyed(event);
    assertTrue(event.getServletContext().getAttribute("TradeDirect") == null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_5() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertTrue(TradeConfig.getPublishQuotePriceChange() == true);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_6() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertTrue(TradeConfig.getDisplayOrderAlerts() == true);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_11() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertTrue(TradeConfig.getLongRun() == true);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_failure_udJF1_1() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertTrue(TradeConfig.getRunTimeMode() == 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_failure_udJF1_2() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertTrue(TradeConfig.getOrderProcessingMode() == 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_failure_udJF1_7() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertTrue(TradeConfig.getWebInterface() == 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextDestroyedWithTradeDirect_GhmF1_fid2() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    TradeDirect tradeDirect = new TradeDirect();
    event.getServletContext().setAttribute("TradeDirect", tradeDirect);
    listener.contextDestroyed(event);
    assertFalse(event.getServletContext().getAttribute("TradeDirect") == null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_1_fid2() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertFalse(TradeConfig.getRunTimeMode() == 1);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_2_fid2() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertFalse(TradeConfig.getOrderProcessingMode() == 1);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_3_fid2() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertFalse(TradeConfig.getMAX_USERS() == 1000);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_4_fid2() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertFalse(TradeConfig.getMAX_QUOTES() == 1000);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_7_fid2() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
    assertFalse(TradeConfig.getWebInterface() == 1);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_success_JiPN0_8_fid2() {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = new ServletContextEvent(new MockServletContext());
    listener.contextInitialized(event);
  }
}