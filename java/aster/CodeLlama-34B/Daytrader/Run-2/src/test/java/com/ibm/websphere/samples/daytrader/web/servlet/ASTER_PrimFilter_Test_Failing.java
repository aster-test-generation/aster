/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PrimFilter_Test_Failing {
  private FilterConfig filterConfig;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoFilter_oetm0() throws IOException, ServletException {
    PrimFilter filter = new PrimFilter();
    ServletRequest req = mock(ServletRequest.class);
    ServletResponse resp = mock(ServletResponse.class);
    FilterChain chain = mock(FilterChain.class);
    filter.doFilter(req, resp, chain);
    verify(chain).doFilter(req, resp);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoFilterWithNullFilterChain_dJdw4() throws IOException, ServletException {
    PrimFilter filter = new PrimFilter();
    ServletRequest req = mock(ServletRequest.class);
    ServletResponse resp = mock(ServletResponse.class);
    FilterChain chain = null;
    filter.doFilter(req, resp, chain);
    verify(chain, never()).doFilter(req, resp);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoFilter_oetm0_fid1() throws IOException, ServletException {
    PrimFilter filter = new PrimFilter();
    ServletRequest req = mock(ServletRequest.class);
    ServletResponse resp = mock(ServletResponse.class);
    FilterChain chain = mock(FilterChain.class);
    filter.doFilter(req, resp, chain);
    verify(chain).doFilter(req, resp);
    // Fix the assertion
    verify(chain, times(1)).doFilter(req, resp);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoFilterWithNullFilterChain_dJdw4_fid1() throws IOException, ServletException {
    PrimFilter filter = new PrimFilter();
    ServletRequest req = mock(ServletRequest.class);
    ServletResponse resp = mock(ServletResponse.class);
    FilterChain chain = null;
    filter.doFilter(req, resp, chain);
    verify(chain, never()).doFilter(req, resp);
    // Fix: Replace the null chain with a mock chain
    FilterChain mockChain = mock(FilterChain.class);
    filter.doFilter(req, resp, mockChain);
    verify(mockChain, never()).doFilter(req, resp);
  }
}