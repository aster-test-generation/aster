/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingJDBCRead2JSP_Coverage_Test_Failing {
  private ServletContext servletContext;
  private ServletConfig config;
  private PingJDBCRead2JSP pingJDBCRead2JSP;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithException_zWYU0() throws ServletException, IOException {
    PingJDBCRead2JSP servlet = new PingJDBCRead2JSP();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    ServletContext ctx = mock(ServletContext.class);
    when(req.getServletContext()).thenReturn(ctx);
    when(ctx.getRequestDispatcher("/quoteDataPrimitive.jsp")).thenThrow(new ServletException());
    servlet.doGet(req, res);
    verify(res).sendError(500, "PingJDBCRead2JSP Exception caught: " + new ServletException().toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithNullQuoteData_VIWJ1() throws ServletException, IOException {
    PingJDBCRead2JSP servlet = new PingJDBCRead2JSP();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    ServletContext ctx = mock(ServletContext.class);
    when(req.getServletContext()).thenReturn(ctx);
    when(ctx.getRequestDispatcher("/quoteDataPrimitive.jsp")).thenReturn(null);
    servlet.doGet(req, res);
    verify(res).sendError(500, "PingJDBCRead2JSP Exception caught: " + new NullPointerException().toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithNullRequest_Kivd3() throws ServletException, IOException {
    PingJDBCRead2JSP servlet = new PingJDBCRead2JSP();
    HttpServletRequest req = null;
    HttpServletResponse res = mock(HttpServletResponse.class);
    ServletContext ctx = mock(ServletContext.class);
    when(req.getServletContext()).thenReturn(ctx);
    when(ctx.getRequestDispatcher("/quoteDataPrimitive.jsp")).thenReturn(null);
    servlet.doGet(req, res);
    verify(res).sendError(500, "PingJDBCRead2JSP Exception caught: " + new NullPointerException().toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithNullResponse_NoMb4() throws ServletException, IOException {
    PingJDBCRead2JSP servlet = new PingJDBCRead2JSP();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = null;
    ServletContext ctx = mock(ServletContext.class);
    when(req.getServletContext()).thenReturn(ctx);
    when(ctx.getRequestDispatcher("/quoteDataPrimitive.jsp")).thenReturn(null);
    servlet.doGet(req, res);
    verify(res).sendError(500, "PingJDBCRead2JSP Exception caught: " + new NullPointerException().toString());
  }
}