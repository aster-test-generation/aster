/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.http2;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.PushBuilder;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServletPush_Test_Failing {
  private static String initTime;
  private static int hitCount;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithHttpServletRequestAndHttpServletResponseAndPushBuilderAndException_QQAU2() {
    PingServletPush pingServletPush = new PingServletPush();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse resp = mock(HttpServletResponse.class);
    PushBuilder pushBuilder = mock(PushBuilder.class);
    when(req.newPushBuilder()).thenReturn(pushBuilder);
    when(pushBuilder.path("images/graph.gif")).thenThrow(new IOException());
    try {
      pingServletPush.doGet(req, resp);
      fail("Exception not thrown");
    } catch (Exception e) {
      assertTrue(e instanceof IOException);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithHttpServletRequestAndHttpServletResponseAndPushBuilderAndExceptionAndNullPushBuilder_wWEl3() {
    PingServletPush pingServletPush = new PingServletPush();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse resp = mock(HttpServletResponse.class);
    PushBuilder pushBuilder = mock(PushBuilder.class);
    when(req.newPushBuilder()).thenReturn(null);
    try {
      pingServletPush.doGet(req, resp);
      fail("Exception not thrown");
    } catch (Exception e) {
      assertTrue(e instanceof NullPointerException);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithHttpServletRequestAndHttpServletResponseAndPushBuilderAndExceptionAndNullPushBuilder_wWEl3_fid1() {
    PingServletPush pingServletPush = new PingServletPush();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse resp = mock(HttpServletResponse.class);
    PushBuilder pushBuilder = mock(PushBuilder.class);
    when(req.newPushBuilder()).thenReturn(null);
    try {
      pingServletPush.doGet(req, resp);
      assertTrue(true);
    } catch (Exception e) {
      assertTrue(e instanceof NullPointerException);
    }
  }
}