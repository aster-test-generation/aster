/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteData_Test_Failing {
  public void testSetCompanyName_YtRW0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithNull_ftxB1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName(null);
    assertEquals(null, quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithEmptyString_FAuZ2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("");
    assertEquals("", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithWhitespace_QHLR3() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName(" ");
    assertEquals(" ", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithSpecialCharacters_FILR4() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("!@#$%^&*()_+");
    assertEquals("!@#$%^&*()_+", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithLongString_UlUp5() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("This is a very long company name that exceeds the maximum length of 50 characters.");
    assertEquals("This is a very long company name that exceeds the maximum length of 50 characters.", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithDifferentCase_TErI6() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
    quoteData.setCompanyName("xyz");
    assertEquals("xyz", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithDifferentCasing_nCTP7() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
    quoteData.setCompanyName("XyZ");
    assertEquals("XyZ", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithDifferentSpacing_jIjK8() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
    quoteData.setCompanyName("X Y Z");
    assertEquals("X Y Z", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithDifferentPunctuation_BhTP9() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
    quoteData.setCompanyName("X,Y,Z");
    assertEquals("X,Y,Z", quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainHTML_UybV0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    String gainHTML = quoteData.getGainHTML();
    assertEquals("<span class=\"gain\">12.00</span>", gainHTML);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainHTMLWithNegativeGain_KZJQ1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(8.0), "ABC");
    String gainHTML = quoteData.getGainHTML();
    assertEquals("<span class=\"loss\">-2.00</span>", gainHTML);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainHTMLWithZeroGain_NNRp2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    String gainHTML = quoteData.getGainHTML();
    assertEquals("<span class=\"neutral\">0.00</span>", gainHTML);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChange_MjKv0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(1 - 2.0), "ABC");
    assertEquals(-2.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHigh_DJwY0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    assertNull(new BigDecimal(10));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceNull_UPbD4() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(10.0), "ABC");
    quoteData.setPrice(null);
    assertNull(BigDecimal.valueOf(10.0));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceInvalidNumber_QNTC5() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(10.0), "ABC");
    quoteData.setPrice(BigDecimal.valueOf(Double.NaN));
    assertEquals(BigDecimal.valueOf(Double.NaN), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercentHTML_Wxvl0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    String actual = quoteData.getGainPercentHTML();
    String expected = "12.00%";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercentHTMLWithNegativeGain_yNXo1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(8.0), "ABC");
    String actual = quoteData.getGainPercentHTML();
    String expected = "-20.00%";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercentHTMLWithZeroGain_ffpa2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    String actual = quoteData.getGainPercentHTML();
    String expected = "0.00%";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithDifferentCase_WpEK6_fid1() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("valid");
    assertEquals("VALID", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithDifferentCaseAndWhitespaceAndInvalidSymbol_Vqgn8_fid1() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("  invalid  ");
    assertEquals("INVALID", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainPercent_vtVm0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setGainPercent(new BigDecimal(10.0));
    assertEquals(new BigDecimal(10.0), quoteData.getGainPercent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainPercentWithNegativeValue_RAby1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setGainPercent(new BigDecimal(-10.0));
    assertEquals(new BigDecimal(-10.0), quoteData.getGainPercent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainPercentWithZeroValue_GmlY2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setGainPercent(new BigDecimal(0.0));
    assertEquals(new BigDecimal(0.0), quoteData.getGainPercent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCompanyName_IXHw0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.5), new BigDecimal(12.5), "ABC");
    assertEquals("ABC", quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRange_fXtr0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(5.0), "ABC");
    String range = quoteData.getRange();
    assertEquals("5.0 - 10.0", range);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRangeWithHighLow_UEGg1_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(5.0), "ABC", new BigDecimal(15.0), new BigDecimal(0.0), "Company Name", 100.0, 0.0);
    String range = quoteData.getRange();
    assertEquals("0.0 - 15.0", range);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPriceWithHighAndLow_UoUf1_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.5), new BigDecimal(10.0), "ABC", new BigDecimal(11.0), new BigDecimal(9.0), "Company Inc.", 1000.0, 1.0);
    BigDecimal expectedPrice = new BigDecimal(10.5);
    BigDecimal actualPrice = quoteData.getPrice();
    assertEquals(expectedPrice, actualPrice);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOpenWithInvalidValue_XXLg1_fid1() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.5), BigDecimal.valueOf(11.5), "ABC");
    quoteData.setOpen(null);
    assertEquals(BigDecimal.valueOf(10.5), quoteData.getOpen());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGain_FMtF0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal gain = quoteData.getGain();
    Assertions.assertEquals(new BigDecimal(2.0), gain);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainWithHighAndLow_RuVy1_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 1000.0, 2.0);
    BigDecimal gain = quoteData.getGain();
    Assertions.assertEquals(new BigDecimal(3.0), gain);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChange_MjKv0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    assertEquals(2.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHigh_DJwY0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    assertEquals(new BigDecimal(10), quoteData.getHigh());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceNull_UPbD4_fid1() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(10.0), "ABC");
    quoteData.setPrice(null);
    assertEquals(BigDecimal.valueOf(10.0), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceInvalidNumber_QNTC5_fid1() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(10.0), "ABC");
    quoteData.setPrice(BigDecimal.valueOf(Double.NaN));
    assertEquals(BigDecimal.valueOf(10.0), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercent_iWlR0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal gainPercent = quoteData.getGainPercent();
    assertEquals(new BigDecimal(20.0), gainPercent);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercentWithHighAndLow_pEXx1_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 1000.0, 2.0);
    BigDecimal gainPercent = quoteData.getGainPercent();
    assertEquals(new BigDecimal(33.33), gainPercent);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVolume_gWXr0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetChangeNull_dBdA2_HERK0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setChange(Double.NaN);
    assertNull(quoteData.getChange());
  }
}