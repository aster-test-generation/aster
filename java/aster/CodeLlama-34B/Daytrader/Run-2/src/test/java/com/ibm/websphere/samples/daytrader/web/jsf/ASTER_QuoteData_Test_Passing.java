/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteData_Test_Passing {
  public void testSetCompanyName_YtRW0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithNull_ftxB1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName(null);
    assertEquals(null, quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithEmptyString_FAuZ2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("");
    assertEquals("", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithWhitespace_QHLR3() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName(" ");
    assertEquals(" ", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithSpecialCharacters_FILR4() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("!@#$%^&*()_+");
    assertEquals("!@#$%^&*()_+", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithLongString_UlUp5() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("This is a very long company name that exceeds the maximum length of 50 characters.");
    assertEquals("This is a very long company name that exceeds the maximum length of 50 characters.", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithDifferentCase_TErI6() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
    quoteData.setCompanyName("xyz");
    assertEquals("xyz", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithDifferentCasing_nCTP7() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
    quoteData.setCompanyName("XyZ");
    assertEquals("XyZ", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithDifferentSpacing_jIjK8() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
    quoteData.setCompanyName("X Y Z");
    assertEquals("X Y Z", quoteData.getCompanyName());
  }

  public void testSetCompanyNameWithDifferentPunctuation_BhTP9() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
    quoteData.setCompanyName("X,Y,Z");
    assertEquals("X,Y,Z", quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRange_PKkn0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    quoteData.setRange("1d");
    assertEquals("1d", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithNull_cxRP1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    quoteData.setRange(null);
    assertNull(quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithEmptyString_vcKD2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    quoteData.setRange("");
    assertEquals("", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithInvalidString_kjXN3() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    quoteData.setRange("invalid");
    assertEquals("invalid", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithValidStringAndDifferentCase_zTxt5() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    quoteData.setRange("1D");
    assertEquals("1D", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithValidStringAndSpecialCharacters_kUhM7() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    quoteData.setRange("1d!");
    assertEquals("1d!", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithValidStringAndMultipleSpecialCharacters_xkkO8() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    quoteData.setRange("1d!@#$%^&*()_+");
    assertEquals("1d!@#$%^&*()_+", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbol_pzdm0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("DEF");
    assertEquals("DEF", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithNull_lzIf1() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol(null);
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithEmptyString_KLWC2() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("");
    assertEquals("", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithInvalidSymbol_kmtZ4() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("INVALID");
    assertEquals("INVALID", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithValidSymbol_hEjm5() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("VALID");
    assertEquals("VALID", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithDifferentCase_WpEK6() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("valid");
    assertEquals("valid", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithDifferentCaseAndWhitespaceAndInvalidSymbol_Vqgn8() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("  invalid  ");
    assertEquals("  invalid  ", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithDifferentCaseAndWhitespaceAndValidSymbol_HKmg9() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("  valid  ");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetHigh_GSgr0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setHigh(new BigDecimal(15.0));
    assertEquals(new BigDecimal(15.0), quoteData.getHigh());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChangeHTML_NegativeChange_PvAk0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC", BigDecimal.ZERO, BigDecimal.ZERO, "Company Name", 0.0, -1.0);
    String htmlString = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#cc0000\">-1.00</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", htmlString);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChangeHTML_ZeroChange_MzFc2() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC", BigDecimal.ZERO, BigDecimal.ZERO, "Company Name", 0.0, 0.0);
    String htmlString = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#009900\">0.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", htmlString);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCompanyName_IXHw0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.5), new BigDecimal(12.5), "ABC");
    assertNull(quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCompanyNameWithHighLowVolumeAndChange_gizp1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.5), new BigDecimal(12.5), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), "XYZ", 1000.0, 0.5);
    assertEquals("XYZ", quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGain_fEvY0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setGain(new BigDecimal(10.0));
    Assertions.assertEquals(new BigDecimal(10.0), quoteData.getGain());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainWithHighAndLow_nxRa1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(10.0), new BigDecimal(10.0), "Company", 10.0, 10.0);
    quoteData.setGain(new BigDecimal(10.0));
    Assertions.assertEquals(new BigDecimal(10.0), quoteData.getGain());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolume_BQGf0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setVolume(100.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolumeWithHighLow_aUZX1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(10.0), new BigDecimal(10.0), "Company", 100.0, 0.0);
    quoteData.setVolume(100.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRange_fXtr0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(5.0), "ABC");
    String range = quoteData.getRange();
    assertNull(range);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRangeWithHighLow_UEGg1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(5.0), "ABC", new BigDecimal(15.0), new BigDecimal(0.0), "Company Name", 100.0, 0.0);
    String range = quoteData.getRange();
    assertEquals("15-0", range);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPrice_fIxT0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.5), new BigDecimal(10.0), "ABC");
    BigDecimal expectedPrice = new BigDecimal(10.5);
    BigDecimal actualPrice = quoteData.getPrice();
    assertEquals(expectedPrice, actualPrice);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPriceWithHighAndLow_UoUf1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10.0), "ABC", new BigDecimal(11.0), new BigDecimal(9.0), "Company Inc.", 1000.0, 1.0);
    BigDecimal expectedPrice = new BigDecimal(10);
    BigDecimal actualPrice = quoteData.getPrice();
    assertEquals(expectedPrice, actualPrice);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOpen_jZOQ0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.5), BigDecimal.valueOf(11.5), "ABC");
    quoteData.setOpen(BigDecimal.valueOf(12.5));
    assertEquals(BigDecimal.valueOf(12.5), quoteData.getOpen());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOpenWithInvalidValue_XXLg1() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.5), BigDecimal.valueOf(11.5), "ABC");
    quoteData.setOpen(null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGain_FMtF0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal gain = quoteData.getGain();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainWithHighAndLow_RuVy1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 1000.0, 2.0);
    BigDecimal gain = quoteData.getGain();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetChange_bKSA0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setChange(1.0);
    assertEquals(1.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetChangeNegative_YOIm4() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setChange(-1.0);
    assertEquals(-1.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetChangeZero_OwzD5() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setChange(0.0);
    assertEquals(0.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOpen_1_fDqS0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC");
    BigDecimal open = quoteData.getOpen();
    assertEquals(new BigDecimal(10), open);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOpen_2_MSNt1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC", new BigDecimal(10), new BigDecimal(10), "Company", 100.0, 0.0);
    BigDecimal open = quoteData.getOpen();
    assertEquals(new BigDecimal(10), open);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLow_dqiz0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.5), new BigDecimal(12.5), "ABC", new BigDecimal(10.0), new BigDecimal(9.0), "Company Name", 1000.0, 1.5);
    assertEquals(new BigDecimal(9.0), quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLowWithZeroVolume_jaeV1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.5), new BigDecimal(12.5), "ABC", new BigDecimal(10.0), new BigDecimal(9.0), "Company Name", 0.0, 1.5);
    assertEquals(new BigDecimal(9.0), quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChangeWithHighLow_Clws1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 1000.0, 2.0);
    assertEquals(2.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHighWithHighValue_Rwgq1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10), new BigDecimal(10), "ABC", new BigDecimal(20), new BigDecimal(10), "XYZ", 100.0, 10.0);
    assertEquals(new BigDecimal(20), quoteData.getHigh());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPrice_mgAH0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(10.0), "ABC");
    quoteData.setPrice(BigDecimal.valueOf(15.0));
    assertEquals(BigDecimal.valueOf(15.0), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceLessThanCurrentPrice_MPBZ2() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(10.0), "ABC");
    quoteData.setPrice(BigDecimal.valueOf(5.0));
    assertEquals(BigDecimal.valueOf(5.0), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceEqualToCurrentPrice_Gnef3() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(10.0), "ABC");
    quoteData.setPrice(BigDecimal.valueOf(10.0));
    assertEquals(BigDecimal.valueOf(10.0), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbol_ZOSv0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithHighLow_gXVp1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 1000.0, 2.0);
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercent_iWlR0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal gainPercent = quoteData.getGainPercent();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercentWithHighAndLow_pEXx1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 1000.0, 2.0);
    BigDecimal gainPercent = quoteData.getGainPercent();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetLow_bmXG0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setLow(new BigDecimal(11.0));
    assertEquals(new BigDecimal(11.0), quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetLowWithDifferentValue_fXaS1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setLow(new BigDecimal(13.0));
    assertEquals(new BigDecimal(13.0), quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVolume_gWXr0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVolumeWithHighAndLow_kqNr1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 100.0, 2.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetChangeNull_dBdA2_HERK0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setChange(Double.NaN);
    assertEquals(Double.NaN, quoteData.getChange());
  }
}