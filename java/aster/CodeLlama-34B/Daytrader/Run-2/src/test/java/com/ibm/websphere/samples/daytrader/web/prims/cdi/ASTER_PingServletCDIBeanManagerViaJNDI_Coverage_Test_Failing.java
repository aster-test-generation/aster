/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServletCDIBeanManagerViaJNDI_Coverage_Test_Failing {
  private ServletConfig config;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_quQp0() throws IOException {
    PingServletCDIBeanManagerViaJNDI servlet = new PingServletCDIBeanManagerViaJNDI();
    HttpServletRequest request = null;
    HttpServletResponse response = null;
    servlet.doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithRequest_DtCp1() throws IOException {
    PingServletCDIBeanManagerViaJNDI servlet = new PingServletCDIBeanManagerViaJNDI();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = null;
    servlet.doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithResponse_nxGW2() throws IOException {
    PingServletCDIBeanManagerViaJNDI servlet = new PingServletCDIBeanManagerViaJNDI();
    HttpServletRequest request = null;
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithRequestAndResponse_Iuuy3() throws IOException {
    PingServletCDIBeanManagerViaJNDI servlet = new PingServletCDIBeanManagerViaJNDI();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithRequestAndPrintWriter_VNIG5_qHSN0() throws IOException {
    PingServletCDIBeanManagerViaJNDI servlet = new PingServletCDIBeanManagerViaJNDI();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter pw = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(pw);
    servlet.doGet(request, response);
    verify(pw).println("Hello, World!");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetWithRequestAndPrintWriter_VNIG5_qHSN0_fid2() throws IOException {
    PingServletCDIBeanManagerViaJNDI servlet = new PingServletCDIBeanManagerViaJNDI();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter pw = mock(PrintWriter.class);
    servlet.doGet(request, response);
  }
}