/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import javax.websocket.DecodeException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ActionDecoder_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDestroy_quyR0() {
    ActionDecoder actionDecoder = new ActionDecoder();
    actionDecoder.destroy();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_validString_zJgq2() {
    ActionDecoder decoder = new ActionDecoder();
    assertTrue(decoder.willDecode("valid_string"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDestroyWithValidString_dkxX3_rEhA0() {
    ActionDecoder actionDecoder = new ActionDecoder();
    actionDecoder.willDecode("test");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDestroyWithNullParameter_GqPb5_bhel0() {
    ActionDecoder actionDecoder = new ActionDecoder();
    actionDecoder.destroy();
    assertTrue(actionDecoder.willDecode(null));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_validObject_ljSV6_htKg0() {
    ActionDecoder decoder = new ActionDecoder();
    assertTrue(decoder.willDecode(""));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecode_SkSU0_fid2() throws DecodeException {
    ActionDecoder actionDecoder = new ActionDecoder();
    String jsonText = "{\"action\":\"test\"}";
    ActionMessage actionMessage = actionDecoder.decode(jsonText);
    assertNull(actionMessage.getDecodedAction());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeWithNullAction_aLFo5_fid2() throws DecodeException {
    ActionDecoder actionDecoder = new ActionDecoder();
    String jsonText = "{\"action\":null}";
    try {
      actionDecoder.decode(jsonText);
      assertTrue(true);
    } catch (DecodeException e) {
      assertTrue(e.getMessage().contains("Null action"));
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeWithEmptyAction_AusG6_fid2() throws DecodeException {
    ActionDecoder actionDecoder = new ActionDecoder();
    String jsonText = "{\"action\":\"\"}";
    try {
      actionDecoder.decode(jsonText);
      assertTrue(true);
    } catch (DecodeException e) {
      assertTrue(e.getMessage().contains("Empty action"));
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_emptyString_JlLq0_fid2() {
    ActionDecoder decoder = new ActionDecoder();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_invalidString_fkFZ3_fid2() {
    ActionDecoder decoder = new ActionDecoder();
    assertTrue(decoder.willDecode("invalid_string"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_nullObject_bIAl4_fid2() {
    ActionDecoder decoder = new ActionDecoder();
    assertTrue(decoder.willDecode(null));
  }
}