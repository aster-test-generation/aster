/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean;
import java.io.InputStream;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TradeDirectDBUtils_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_1() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getTradeUserCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_2() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getBuyOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_4() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getOpenOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_5() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_6() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getCancelledOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_7() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getTradeStockCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_8() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getDeletedOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_9() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getSumLogoutCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_10() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getSumLoginCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_11() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getHoldingCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_12() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertNotNull(runStatsData);
    assertEquals(0, runStatsData.getSellOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_1() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertNotNull(runStatsData);
    assertEquals(10, runStatsData.getTradeUserCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_2() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(5, runStatsData.getBuyOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertNotNull(runStatsData);
    assertEquals(10, runStatsData.getOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_4() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(5, runStatsData.getOpenOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_5() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(5, runStatsData.getNewUserCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_6() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(5, runStatsData.getCancelledOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_7() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(10, runStatsData.getTradeStockCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_8() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(0, runStatsData.getDeletedOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_9() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertNotNull(runStatsData);
    assertEquals(10, runStatsData.getSumLogoutCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_10() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(0, runStatsData.getSumLoginCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_11() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(10, runStatsData.getHoldingCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_12() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(5, runStatsData.getSellOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCheckDBProductName_dmjy0_1() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    String dbProductName = tradeDirectDBUtils.checkDBProductName();
    assertNotNull(dbProductName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCheckDBProductName_dmjy0_2() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    String dbProductName = tradeDirectDBUtils.checkDBProductName();
    assertEquals("MySQL", dbProductName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testParseDDLToBufferWithNullFile_Huoh4() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    InputStream ddlFile = null;
    Object[] sqlBuffer = tradeDirectDBUtils.parseDDLToBuffer(ddlFile);
    assertNull(sqlBuffer);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testParseDDLToBuffer_SDLu0_FetT0_1() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    InputStream ddlFile = null;
    Object[] sqlBuffer = tradeDirectDBUtils.parseDDLToBuffer(ddlFile);
    assertNotNull(sqlBuffer);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testParseDDLToBuffer_SDLu0_FetT0_2() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    InputStream ddlFile = null;
    Object[] sqlBuffer = tradeDirectDBUtils.parseDDLToBuffer(ddlFile);
    assertEquals(30, sqlBuffer.length);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getTradeUserCount());
    assertEquals(0, runStatsData.getBuyOrderCount());
    assertEquals(0, runStatsData.getOrderCount());
    assertEquals(0, runStatsData.getOpenOrderCount());
    assertEquals(0, runStatsData.getNewUserCount());
    assertEquals(0, runStatsData.getCancelledOrderCount());
    assertEquals(0, runStatsData.getTradeStockCount());
    assertEquals(0, runStatsData.getDeletedOrderCount());
    assertEquals(0, runStatsData.getSumLogoutCount());
    assertEquals(0, runStatsData.getSumLoginCount());
    assertEquals(0, runStatsData.getHoldingCount());
    assertEquals(0, runStatsData.getSellOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(10, runStatsData.getTradeUserCount());
    assertEquals(5, runStatsData.getBuyOrderCount());
    assertEquals(10, runStatsData.getOrderCount());
    assertEquals(5, runStatsData.getOpenOrderCount());
    assertEquals(5, runStatsData.getNewUserCount());
    assertEquals(5, runStatsData.getCancelledOrderCount());
    assertEquals(10, runStatsData.getTradeStockCount());
    assertEquals(5, runStatsData.getDeletedOrderCount());
    assertEquals(10, runStatsData.getSumLogoutCount());
    assertEquals(10, runStatsData.getSumLoginCount());
    assertEquals(10, runStatsData.getHoldingCount());
    assertEquals(5, runStatsData.getSellOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCheckDBProductName_dmjy0() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    String dbProductName = tradeDirectDBUtils.checkDBProductName();
    assertNotNull(dbProductName);
    assertEquals("MySQL", dbProductName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_1_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getTradeUserCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_2_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getBuyOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_3_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_4_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getOpenOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_5_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getNewUserCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_6_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getCancelledOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_7_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getTradeStockCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_8_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getDeletedOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_9_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getSumLogoutCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_10_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getSumLoginCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_11_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getHoldingCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_deleteAll_Iiib0_12_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(true);
    assertEquals(0, runStatsData.getSellOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_1_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(10, runStatsData.getTradeUserCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_3_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(10, runStatsData.getOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_8_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(5, runStatsData.getDeletedOrderCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_9_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(10, runStatsData.getSumLogoutCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade_notDeleteAll_FgaU1_10_fid3() throws Exception {
    TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
    RunStatsDataBean runStatsData = tradeDirectDBUtils.resetTrade(false);
    assertEquals(10, runStatsData.getSumLoginCount());
  }
}