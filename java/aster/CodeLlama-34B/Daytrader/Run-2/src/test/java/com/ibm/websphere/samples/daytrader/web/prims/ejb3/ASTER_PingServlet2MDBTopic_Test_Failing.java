/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.jms.ConnectionFactory;
import javax.jms.Topic;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2MDBTopic_Test_Failing {
  private static String initTime;
  private static int hitCount;
  private ConnectionFactory topicConnectionFactory;
  private Topic tradeStreamerTopic;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_SNvg0() throws ServletException, IOException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    servlet.doPost(req, res);
    verify(req).getParameter("param1");
    verify(req).getParameter("param2");
    verify(res).setStatus(HttpServletResponse.SC_OK);
    verify(res).setContentType("text/plain");
    verify(res).getWriter().print("Pong");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_withInvalidParameters_XrMO1() throws ServletException, IOException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getParameter("param1")).thenReturn("invalid_param1");
    when(req.getParameter("param2")).thenReturn("invalid_param2");
    servlet.doPost(req, res);
    verify(req).getParameter("param1");
    verify(req).getParameter("param2");
    verify(res).setStatus(HttpServletResponse.SC_BAD_REQUEST);
    verify(res).setContentType("text/plain");
    verify(res).getWriter().print("Invalid parameters");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_withNullParameters_vwRN2() throws ServletException, IOException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getParameter("param1")).thenReturn(null);
    when(req.getParameter("param2")).thenReturn(null);
    servlet.doPost(req, res);
    verify(req).getParameter("param1");
    verify(req).getParameter("param2");
    verify(res).setStatus(HttpServletResponse.SC_BAD_REQUEST);
    verify(res).setContentType("text/plain");
    verify(res).getWriter().print("Invalid parameters");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_withEmptyParameters_aVZW3() throws ServletException, IOException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getParameter("param1")).thenReturn("");
    when(req.getParameter("param2")).thenReturn("");
    servlet.doPost(req, res);
    verify(req).getParameter("param1");
    verify(req).getParameter("param2");
    verify(res).setStatus(HttpServletResponse.SC_BAD_REQUEST);
    verify(res).setContentType("text/plain");
    verify(res).getWriter().print("Invalid parameters");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_withInvalidParameterType_zNXp4() throws ServletException, IOException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getParameter("param1")).thenReturn("invalid_param1");
    when(req.getParameter("param2")).thenReturn("invalid_param2");
    servlet.doPost(req, res);
    verify(req).getParameter("param1");
    verify(req).getParameter("param2");
    verify(res).setStatus(HttpServletResponse.SC_BAD_REQUEST);
    verify(res).setContentType("text/plain");
    verify(res).getWriter().print("Invalid parameter type");
  }
}