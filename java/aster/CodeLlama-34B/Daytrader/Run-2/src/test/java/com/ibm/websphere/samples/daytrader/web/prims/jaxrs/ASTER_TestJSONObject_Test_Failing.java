/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TestJSONObject_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001_cSrx0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0001";
    String actual = testJSONObject.getProp0001();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005_flDb0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0005();
    String expected = "prop0005";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005WithEmptyString_wFIK2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0005();
    String expected = "";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005WithNullObject_tYNq5() {
    TestJSONObject testJSONObject = null;
    String actual = testJSONObject.getProp0005();
    String expected = null;
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0004_lhVP0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0004";
    String actual = testJSONObject.getProp0004();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0003_RVRe0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0003();
    assertEquals("prop0003", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002_ySsT0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0002";
    String actual = testJSONObject.getProp0002();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002WithEmptyString_gfij2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0002();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002WithNullObject_EyIf5() {
    TestJSONObject testJSONObject = null;
    String expected = null;
    String actual = testJSONObject.getProp0002();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010WithInvalidStringAndNull_IVvI6() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("invalid");
    assertEquals(null, testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010WithValidStringAndNull_Bqcw7() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("prop0010");
    assertEquals(null, testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010WithInvalidStringAndEmptyString_SLyg8() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("invalid");
    assertEquals("", testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010WithValidStringAndEmptyString_XnIZ9() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("prop0010");
    assertEquals("", testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010WithInvalidStringAndNonEmptyString_qxvL10() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("invalid");
    assertEquals("prop0010", testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0013_OHjp0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0013();
    String expected = "prop0013";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0014_1_NrnC0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0014();
    assertEquals("prop0014", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_EYXe0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0015";
    String actual = testJSONObject.getProp0015();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_empty_bWbp2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0015();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_invalid_EMgB4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "invalid";
    String actual = testJSONObject.getProp0015();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_numeric_TbfK6() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "12345";
    String actual = testJSONObject.getProp0015();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_alphanumeric_vNMI7() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "abc123";
    String actual = testJSONObject.getProp0015();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_alphanumericSpecialCharacters_ZLYJ8() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "abc123!@#$%^&*()_+";
    String actual = testJSONObject.getProp0015();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016_zzGm0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0016";
    String actual = testJSONObject.getProp0016();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011_ppPm0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0011";
    String actual = testJSONObject.getProp0011();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011WithEmptyString_hnVZ2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0011();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011WithNullObject_TRzh5() {
    TestJSONObject testJSONObject = null;
    String expected = null;
    String actual = testJSONObject.getProp0011();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_lineCoverage_UjaW0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0012();
    assertEquals("prop0012", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_branchCoverage_huSy1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0012();
    assertEquals("prop0012", result);
    assertEquals("prop0012", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009_yEZv0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0009();
    assertEquals("prop0009", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithEmptyString_XQZd2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0009();
    assertEquals("", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0008_VCMz0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0008";
    String actual = testJSONObject.getProp0008();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0008_empty_SpTH2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0008();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0007_ziax0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0007();
    assertEquals("prop0007", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0007WithEmptyString_WfxC2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0007();
    assertEquals("", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006_YtsS0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0006";
    String actual = testJSONObject.getProp0006();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_branchCoverage_huSy1_2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0012();
    assertEquals("prop0012", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005WithEmptyString_wFIK2_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0005();
    String expected = "";
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002_ySsT0_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0002";
    String actual = testJSONObject.getProp0002();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002WithEmptyString_gfij2_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0002();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_EYXe0_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0015";
    String actual = testJSONObject.getProp0015();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_empty_bWbp2_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0015();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_invalid_EMgB4_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "invalid";
    String actual = testJSONObject.getProp0015();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_numeric_TbfK6_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "12345";
    String actual = testJSONObject.getProp0015();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_alphanumeric_vNMI7_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "abc123";
    String actual = testJSONObject.getProp0015();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_alphanumericSpecialCharacters_ZLYJ8_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "abc123!@#$%^&*()_+";
    String actual = testJSONObject.getProp0015();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016_zzGm0_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0016";
    String actual = testJSONObject.getProp0016();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011WithNonEmptyString_xYuB3_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0011";
    String actual = testJSONObject.getProp0011();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0008_VCMz0_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0008";
    String actual = testJSONObject.getProp0008();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0008_empty_SpTH2_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0008();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006_YtsS0_fid2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0006";
    String actual = testJSONObject.getProp0006();
    assertNull(expected);
  }
}