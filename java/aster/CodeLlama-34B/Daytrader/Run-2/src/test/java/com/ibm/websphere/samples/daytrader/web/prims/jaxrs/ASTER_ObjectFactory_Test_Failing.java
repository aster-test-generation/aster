/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ObjectFactory_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertNotNull(xmlObject);
    assertEquals(xmlObject.getProp0001(), "");
    assertEquals(xmlObject.getProp0002(), "");
    assertEquals(xmlObject.getProp0003(), "");
    assertEquals(xmlObject.getProp0004(), "");
    assertEquals(xmlObject.getProp0005(), "");
    assertEquals(xmlObject.getProp0006(), "");
    assertEquals(xmlObject.getProp0007(), "");
    assertEquals(xmlObject.getProp0008(), "");
    assertEquals(xmlObject.getProp0009(), "");
    assertEquals(xmlObject.getProp0010(), "");
    assertEquals(xmlObject.getProp0011(), "");
    assertEquals(xmlObject.getProp0012(), "");
    assertEquals(xmlObject.getProp0013(), "");
    assertEquals(xmlObject.getProp0014(), "");
    assertEquals(xmlObject.getProp0015(), "");
    assertEquals(xmlObject.getProp0016(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_2() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0001(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_3() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0002(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_4() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0003(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_5() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0004(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_6() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0005(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_7() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0006(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_8() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0007(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_9() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0008(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_10() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0009(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_11() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0010(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_12() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0011(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_13() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0012(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_14() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0013(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_15() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0014(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_16() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0015(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObject_EJdf0_17() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertEquals(xmlObject.getProp0016(), "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateXMLObjectWithInvalidString_vTdo3_BOou0() {
    ObjectFactory objectFactory = new ObjectFactory();
    XMLObject xmlObject = objectFactory.createXMLObject();
    assertNull(xmlObject);
  }
}