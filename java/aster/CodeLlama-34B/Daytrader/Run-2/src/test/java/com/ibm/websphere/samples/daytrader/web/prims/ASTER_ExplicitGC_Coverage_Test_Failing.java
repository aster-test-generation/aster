/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_ExplicitGC_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_lNsD0() {
    ExplicitGC explicitGC = new ExplicitGC();
    String servletInfo = explicitGC.getServletInfo();
    assertEquals("Generate Explicit GC to VM", servletInfo);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_vkWg0() throws ServletException, IOException {
    ExplicitGC explicitGC = new ExplicitGC();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    explicitGC.doPost(req, res);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_DdpR1() throws ServletException, IOException {
    ExplicitGC explicitGC = new ExplicitGC();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    explicitGC.doGet(req, res);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet1_PYdM0() throws javax.servlet.ServletException, java.io.IOException {
    ExplicitGC explicitGC = new ExplicitGC();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      explicitGC.doGet(req, res);
      fail("Expected ServletException");
    } catch (ServletException e) {
      assertTrue(e.getMessage().contains("NullPointerException"));
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet2_TOPz1() throws javax.servlet.ServletException, java.io.IOException {
    ExplicitGC explicitGC = new ExplicitGC();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getMethod()).thenReturn("GET");
    try {
      explicitGC.doGet(req, res);
      fail("Expected ServletException");
    } catch (ServletException e) {
      assertTrue(e.getMessage().contains("NullPointerException"));
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet3_stEy2() throws javax.servlet.ServletException, java.io.IOException {
    ExplicitGC explicitGC = new ExplicitGC();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getMethod()).thenReturn("GET");
    when(res.getOutputStream()).thenReturn(null);
    try {
      explicitGC.doGet(req, res);
      fail("Expected ServletException");
    } catch (ServletException e) {
      assertTrue(e.getMessage().contains("NullPointerException"));
    }
  }
}