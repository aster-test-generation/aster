/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.ejb3;

import com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean;
import com.ibm.websphere.samples.daytrader.entities.OrderDataBean;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.util.concurrent.TimeUnit;
import javax.persistence.TypedQuery;
import javax.transaction.RollbackException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TradeSLSBBean_Coverage_Test_Passing {
  private MarketSummaryDataBean marketSummarySingleton;
  private TypedQuery<QuoteDataBean> query;
  private TradeConfig tradeConfig;
  private TypedQuery<OrderDataBean> q;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetInSession_kmFL0() {
    TradeSLSBBean tradeSLSBBean = new TradeSLSBBean();
    try {
      tradeSLSBBean.setInSession(true);
      Assertions.fail("UnsupportedOperationException should have been thrown");
    } catch (UnsupportedOperationException e) {
      Assertions.assertEquals("TradeSLSBBean::setInGlobalTxn not supported", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOrderCompleted_znBy0() {
    TradeSLSBBean tradeSLSBBean = new TradeSLSBBean();
    try {
      tradeSLSBBean.orderCompleted("userID", 123);
      Assertions.fail("UnsupportedOperationException should have been thrown");
    } catch (UnsupportedOperationException e) {
      Assertions.assertEquals("TradeSLSBBean:orderCompleted method not supported", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLogin_Log_Success_lfKj8() throws javax.transaction.RollbackException {
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void tearDown_VhIp1_ViTk0() {
    TradeSLSBBean tradeSLSBBean = new TradeSLSBBean();
  }
}