/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PingEJBLocal_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithDifferentHitCount_ThgG2() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: 5";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithNullHitCount_tOcZ3() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: 4";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithEmptyHitCount_Dvhv4() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: 8";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithInvalidHitCount_liMh5() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: 6";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithMaxHitCount_prNe8() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: 7";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithNullHitCount_tOcZ3_fid2() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: null";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithEmptyHitCount_Dvhv4_fid2() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: ";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithInvalidHitCount_liMh5_fid2() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: -1";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithMaxHitCount_prNe8_fid2() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: 100";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMsgWithInvalidHitCountRange_kOmH10_fid2() {
    PingEJBLocal pingEJBLocal = new PingEJBLocal();
    String expected = "PingEJBLocal: 101";
    String actual = pingEJBLocal.getMsg();
    assertEquals(expected, actual);
  }
}