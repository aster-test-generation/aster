/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.mdb;

import java.util.concurrent.TimeUnit;
import javax.jms.Message;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_DTBroker3MDB_Coverage_Test_Passing {
  private DTBroker3MDB dtBroker3MDB;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnMessage_receivedMessage_directFalse_ElDH2_MhkR0() throws Exception {
    DTBroker3MDB dtBroker3MDB = new DTBroker3MDB();
    Message message = mock(Message.class);
    when(message.getStringProperty("command")).thenReturn("neworder");
    when(message.getIntProperty("orderID")).thenReturn(1);
    when(message.getBooleanProperty("twoPhase")).thenReturn(false);
    when(message.getBooleanProperty("direct")).thenReturn(false);
    when(message.getLongProperty("publishTime")).thenReturn(1000L);
    when(message.getJMSRedelivered()).thenReturn(false);
    dtBroker3MDB.onMessage(message);
  }
}