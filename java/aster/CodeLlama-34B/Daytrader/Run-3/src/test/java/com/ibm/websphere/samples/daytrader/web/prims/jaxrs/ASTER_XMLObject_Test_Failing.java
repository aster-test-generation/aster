/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XMLObject_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005_lZvT0() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0005();
    String expected = "prop0005";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002_XcZn0() {
    XMLObject obj = new XMLObject();
    String result = obj.getProp0002();
    assertEquals("prop0002", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002WithEmptyString_Psom2() {
    XMLObject obj = new XMLObject();
    String result = obj.getProp0002();
    assertEquals("", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0008WithInvalidString_hQDM3() {
    XMLObject obj = new XMLObject();
    obj.setProp0008("invalid");
    assertNotEquals("invalid", obj.getProp0008());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0004_nKmJ0() {
    XMLObject xmlObject = new XMLObject();
    String prop0004 = xmlObject.getProp0004();
    assertEquals("prop0004", prop0004);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetX_kKlz0() {
    XMLObject xmlObject = new XMLObject();
    String x = xmlObject.getX();
    assertEquals("x", x);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetXWithEmptyString_BwGh2() {
    XMLObject xmlObject = new XMLObject();
    String x = xmlObject.getX();
    assertEquals("", x);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetXWithNonEmptyString_aJPI3() {
    XMLObject xmlObject = new XMLObject();
    String x = xmlObject.getX();
    assertEquals("non-empty string", x);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetXWithInvalidInput_dEcT4() {
    XMLObject xmlObject = new XMLObject();
    String x = xmlObject.getX();
    assertEquals("invalid input", x);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetXWithNullObject_cMjq5() {
    XMLObject xmlObject = null;
    String x = xmlObject.getX();
    assertNull(x);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetXWithNonEmptyObject_CbUO7() {
    XMLObject xmlObject = new XMLObject();
    String x = xmlObject.getX();
    assertEquals("non-empty object", x);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetXWithInvalidObject_Rbwu8() {
    XMLObject xmlObject = new XMLObject();
    String x = xmlObject.getX();
    assertEquals("invalid object", x);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0014_rsRi0() {
    XMLObject xmlObject = new XMLObject();
    String prop0014 = xmlObject.getProp0014();
    assertEquals("prop0014", prop0014);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0013_bABa0() {
    XMLObject obj = new XMLObject();
    String expected = "prop0013";
    String actual = obj.getProp0013();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011_toQD0() {
    XMLObject obj = new XMLObject();
    String result = obj.getProp0011();
    assertEquals("prop0011", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011_Empty_GJBZ2() {
    XMLObject obj = new XMLObject();
    String result = obj.getProp0011();
    assertEquals("", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001_ajFP0() {
    XMLObject xmlObject = new XMLObject();
    String prop0001 = xmlObject.getProp0001();
    assertEquals("prop0001", prop0001);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001WithEmptyString_EPog2() {
    XMLObject xmlObject = new XMLObject();
    String prop0001 = xmlObject.getProp0001();
    assertEquals("", prop0001);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012WithNullAndEmptyString_oUBc10_1() {
    XMLObject obj = new XMLObject();
    obj.setProp0012(null);
    obj.setProp0012("");
    assertNull(obj.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012WithWhitespaceAndInvalidValue_XcWM11_1() {
    XMLObject obj = new XMLObject();
    obj.setProp0012(" ");
    obj.setProp0012("invalid");
    assertEquals(" ", obj.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012WithDifferentCaseAndValidValue_XYUx12_1() {
    XMLObject obj = new XMLObject();
    obj.setProp0012("TeSt");
    obj.setProp0012("valid");
    assertEquals("TeSt", obj.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetXWithInvalidValue_oUcJ4() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setX("invalid");
    assertNull(xmlObject.getX());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009WithNullAndEmptyString_LpoM11_1() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0009(null);
    xmlObject.setProp0009("");
    assertNull(xmlObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009WithInvalidAndEmptyString_naVu12_1() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0009("invalid");
    xmlObject.setProp0009("");
    assertEquals("invalid", xmlObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009WithValidAndEmptyString_yiNk13_1() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0009("valid");
    xmlObject.setProp0009("");
    assertEquals("valid", xmlObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_bSFN0() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    assertEquals("prop0012", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1_1() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0012", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1_2() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0013", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1_3() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0014", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1_4() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0015", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1_5() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0016", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1_6() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0017", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1_7() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0018", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1_8() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0019", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0010_DMTM0() {
    XMLObject xmlObject = new XMLObject();
    String expected = "prop0010";
    String actual = xmlObject.getProp0010();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0010WithEmptyString_yzfO2() {
    XMLObject xmlObject = new XMLObject();
    String expected = "";
    String actual = xmlObject.getProp0010();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0010WithNullObject_AbFk5() {
    XMLObject xmlObject = null;
    String expected = null;
    String actual = xmlObject.getProp0010();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006_cPHB0() {
    XMLObject xmlObject = new XMLObject();
    String expected = "prop0006";
    String actual = xmlObject.getProp0006();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_WIPY0() {
    XMLObject xmlObject = new XMLObject();
    String prop0015 = xmlObject.getProp0015();
    assertEquals("prop0015", prop0015);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015WithEmptyString_HTvz2() {
    XMLObject xmlObject = new XMLObject();
    String prop0015 = xmlObject.getProp0015();
    assertEquals("", prop0015);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0008_LfAW0() {
    XMLObject xmlObject = new XMLObject();
    String prop0008 = xmlObject.getProp0008();
    assertEquals("prop0008", prop0008);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0007_GCgW0() {
    XMLObject obj = new XMLObject();
    String expected = "prop0007";
    String actual = obj.getProp0007();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0007WithEmptyString_rJni2() {
    XMLObject obj = new XMLObject();
    String expected = "";
    String actual = obj.getProp0007();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0007WithNullObject_bJlk5() {
    XMLObject obj = null;
    String expected = null;
    String actual = obj.getProp0007();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003WithDifferentValues_uTSc6_1() {
    XMLObject xmlObject = new XMLObject();
    String prop0003 = "test";
    xmlObject.setProp0003(prop0003);
    prop0003 = "test2";
    xmlObject.setProp0003(prop0003);
    assertEquals("test", xmlObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003WithInvalidValue_hpPe7_1() {
    XMLObject xmlObject = new XMLObject();
    String prop0003 = "test";
    xmlObject.setProp0003(prop0003);
    prop0003 = "invalid";
    xmlObject.setProp0003(prop0003);
    assertEquals("test", xmlObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006WithMixedValidAndInvalidStrings_HPoK10() {
    XMLObject obj = new XMLObject();
    obj.setProp0006("test1");
    obj.setProp0006("invalid1");
    obj.setProp0006("test2");
    obj.setProp0006("invalid2");
    obj.setProp0006("test3");
    obj.setProp0006("invalid3");
    assertEquals("test3", obj.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithMultipleValues_VbkA8_1() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0005("test1");
    xmlObject.setProp0005("test2");
    xmlObject.setProp0005("test3");
    assertEquals("test1", xmlObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithMultipleValues_VbkA8_2() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0005("test1");
    xmlObject.setProp0005("test2");
    xmlObject.setProp0005("test3");
    assertEquals("test2", xmlObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithNullAndEmptyString_Baii10_1() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0005(null);
    xmlObject.setProp0005("");
    assertNull(xmlObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithInvalidAndValidString_DjUL11_1() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0005("invalid");
    xmlObject.setProp0005("valid");
    assertEquals("invalid", xmlObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithDifferentTypes_PvIl9_mzMy0_1() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0005("1");
    xmlObject.setProp0005("1.0");
    xmlObject.setProp0005("true");
    xmlObject.setProp0005(new Object().toString());
    assertEquals("1", xmlObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithDifferentTypes_PvIl9_mzMy0_2() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0005("1");
    xmlObject.setProp0005("1.0");
    xmlObject.setProp0005("true");
    xmlObject.setProp0005(new Object().toString());
    assertEquals("1.0", xmlObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithDifferentTypes_PvIl9_mzMy0_3() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0005("1");
    xmlObject.setProp0005("1.0");
    xmlObject.setProp0005("true");
    xmlObject.setProp0005(new Object().toString());
    assertEquals("true", xmlObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithDifferentTypes_PvIl9_mzMy0_4() {
    XMLObject xmlObject = new XMLObject();
    xmlObject.setProp0005("1");
    xmlObject.setProp0005("1.0");
    xmlObject.setProp0005("true");
    xmlObject.setProp0005(new Object().toString());
    assertEquals(new Object().toString(), xmlObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0008WithInvalidString_hQDM3_fid1() {
    XMLObject obj = new XMLObject();
    obj.setProp0008("not equal");
    assertNotEquals("not equal", obj.getProp0008());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0013_cRKJ1() {
    XMLObject obj = new XMLObject();
    String expected = "prop0013";
    String actual = obj.getProp0013();
    assertEquals(expected, actual);
    obj.setProp0013("prop0014");
    expected = "prop0014";
    actual = obj.getProp0013();
    assertEquals(expected, actual);
    obj.setProp0013("prop0015");
    expected = "prop0015";
    actual = obj.getProp0013();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_fehF1() {
    XMLObject xmlObject = new XMLObject();
    String actual = xmlObject.getProp0012();
    assertEquals("prop0012", actual);
    xmlObject.setProp0012("prop0013");
    actual = xmlObject.getProp0012();
    assertEquals("prop0013", actual);
    xmlObject.setProp0012("prop0014");
    actual = xmlObject.getProp0012();
    assertEquals("prop0014", actual);
    xmlObject.setProp0012("prop0015");
    actual = xmlObject.getProp0012();
    assertEquals("prop0015", actual);
    xmlObject.setProp0012("prop0016");
    actual = xmlObject.getProp0012();
    assertEquals("prop0016", actual);
    xmlObject.setProp0012("prop0017");
    actual = xmlObject.getProp0012();
    assertEquals("prop0017", actual);
    xmlObject.setProp0012("prop0018");
    actual = xmlObject.getProp0012();
    assertEquals("prop0018", actual);
    xmlObject.setProp0012("prop0019");
    actual = xmlObject.getProp0012();
    assertEquals("prop0019", actual);
    xmlObject.setProp0012("prop0020");
    actual = xmlObject.getProp0012();
    assertEquals("prop0020", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003WithInvalidValue_hpPe7() {
    XMLObject xmlObject = new XMLObject();
    String prop0003 = "test";
    xmlObject.setProp0003(prop0003);
    assertEquals("test", xmlObject.getProp0003());
    prop0003 = "invalid";
    xmlObject.setProp0003(prop0003);
    assertEquals("test", xmlObject.getProp0003());
  }
}