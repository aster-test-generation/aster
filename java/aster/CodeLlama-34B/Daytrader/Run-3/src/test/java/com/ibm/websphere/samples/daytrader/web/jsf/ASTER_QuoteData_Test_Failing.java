/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteData_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainPercent_InvalidInput_jKWB1() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.50"), new BigDecimal("10.00"), "ABC");
    quoteData.setGainPercent(new BigDecimal("-10.00"));
    assertEquals(new BigDecimal("0.00"), quoteData.getGainPercent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainHTML_zpLO0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    String gainHTML = quoteData.getGainHTML();
    assertEquals("<span class=\"gain\">+20.00%</span>", gainHTML);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainHTMLWithNegativeGain_huGl1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(8.0), "ABC");
    String gainHTML = quoteData.getGainHTML();
    assertEquals("<span class=\"loss\">-20.00%</span>", gainHTML);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainHTMLWithZeroGain_yKLO2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    String gainHTML = quoteData.getGainHTML();
    assertEquals("<span class=\"neutral\">0.00%</span>", gainHTML);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCompanyName1_eTfJ0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    String expectedCompanyName = "ABC";
    String actualCompanyName = quoteData.getCompanyName();
    assertEquals(expectedCompanyName, actualCompanyName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLow_tUkL0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal low = quoteData.getLow();
    assertEquals(new BigDecimal(10.0), low);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOpen_VlxO0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal expectedOpen = new BigDecimal(10.0);
    BigDecimal actualOpen = quoteData.getOpen();
    assertEquals(expectedOpen, actualOpen);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHigh_HstZ0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal high = quoteData.getHigh();
    Assertions.assertEquals(new BigDecimal(12.0), high);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercent_muXl0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal gainPercent = quoteData.getGainPercent();
    assertEquals(new BigDecimal(20.0), gainPercent);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercentWithHighAndLow_JxxM1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 1000.0, 2.0);
    BigDecimal gainPercent = quoteData.getGainPercent();
    assertEquals(new BigDecimal(33.33), gainPercent);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRange_nXQL0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(100), new BigDecimal(100), "AAPL");
    String range = quoteData.getRange();
    assertEquals("100-100", range);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercentHTML_NDqo0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    String expected = "<span class=\"gain\">10.00%</span>";
    String actual = quoteData.getGainPercentHTML();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercentHTMLWithNegativeGain_kKOp1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(8.0), "ABC");
    String expected = "<span class=\"loss\">-20.00%</span>";
    String actual = quoteData.getGainPercentHTML();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGain_mDHs0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal gain = quoteData.getGain();
    assertEquals(new BigDecimal(2.0), gain);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChangeHTML_NegativeChange_mOiR0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "TEST");
    String htmlString = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#cc0000\">0.00</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", htmlString);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVolume_zsBN0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    Assertions.assertEquals(10.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullPrice_nbAk5() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), null, "ABC");
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullOpen_zarE6() {
    QuoteData quoteData = new QuoteData(null, new BigDecimal(12.0), "ABC");
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullHigh_Wlcc7() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", null, new BigDecimal(10.0), "Company Name", 100.0, 0.0);
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullLow_pRTF8() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), null, "Company Name", 100.0, 0.0);
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullCompanyName_IeQP9() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), null, 100.0, 0.0);
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullVolume_XTvI10() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), "Company Name", null, 0.0);
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullChange_yecZ11() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), "Company Name", 100.0, null);
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolumeWithInvalidValue_GnXy4_VMuU0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setVolume(Double.parseDouble("invalid"));
    assertEquals(null, quoteData.getVolume());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainPercent_InvalidInput_jKWB1_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.50"), new BigDecimal("1-10.00"), "ABC");
    quoteData.setGainPercent(new BigDecimal("-1-10.00"));
    assertEquals(new BigDecimal("-10.00"), quoteData.getGainPercent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCompanyName1_eTfJ0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    String expectedCompanyName = "ABC";
    String actualCompanyName = quoteData.getCompanyName();
    assertNull(expectedCompanyName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercent_muXl0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal gainPercent = quoteData.getGainPercent();
    assertNull(new BigDecimal(20.0));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGain_mDHs0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal gain = quoteData.getGain();
    assertNull(new BigDecimal(2.0));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullPrice_nbAk5_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), null, "ABC");
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullOpen_zarE6_fid1() {
    QuoteData quoteData = new QuoteData(null, new BigDecimal(12.0), "ABC");
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullChange_yecZ11_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), "Company Name", 100.0, null);
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolumeWithInvalidValue_GnXy4_VMuU0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setVolume(Double.parseDouble("invalid"));
    assertEquals(Double.NaN, quoteData.getVolume());
  }
}