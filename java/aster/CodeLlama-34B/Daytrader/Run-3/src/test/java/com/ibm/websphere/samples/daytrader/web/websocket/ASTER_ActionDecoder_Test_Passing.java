/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import javax.websocket.DecodeException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ActionDecoder_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeWithEmptyJsonText_RVQs1() throws DecodeException {
    ActionDecoder actionDecoder = new ActionDecoder();
    String jsonText = "";
    ActionMessage actionMessage = actionDecoder.decode(jsonText);
    assertNull(actionMessage.getDecodedAction());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_DesO0() {
    ActionDecoder actionDecoder = new ActionDecoder();
    assertTrue(actionDecoder.willDecode(""));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecodeWithNonEmptyString_MouH1() {
    ActionDecoder actionDecoder = new ActionDecoder();
    assertTrue(actionDecoder.willDecode("test"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecode_ERgN0_fid2() throws DecodeException {
    ActionDecoder actionDecoder = new ActionDecoder();
    String jsonText = "{\"action\":\"test\"}";
    ActionMessage actionMessage = actionDecoder.decode(jsonText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecodeWithNullString_AUeT2_fid2() {
    ActionDecoder actionDecoder = new ActionDecoder();
    assertTrue(actionDecoder.willDecode(null));
  }
}