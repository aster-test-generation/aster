/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JsonMessage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetKey_InvalidKey_llHG3_fid1() {
    JsonMessage jsonMessage = new JsonMessage();
    String key = "invalid_key";
    jsonMessage.setKey(key);
    assertNotEquals(key, jsonMessage.getKey());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetKey_NullJsonMessage_NKrV4_fid1() {
    JsonMessage jsonMessage = null;
    String key = "key";
    jsonMessage.setKey(key);
    assertNull(jsonMessage.getKey());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetValue_empty_MnzA1_fid1() {
    JsonMessage jsonMessage = new JsonMessage();
    String value = jsonMessage.getValue();
    assertEquals("", value);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetValue_validType_xdbn4_fid1() {
    JsonMessage jsonMessage = new JsonMessage();
    String value = jsonMessage.getValue();
    assertEquals("valid", value);
  }
}