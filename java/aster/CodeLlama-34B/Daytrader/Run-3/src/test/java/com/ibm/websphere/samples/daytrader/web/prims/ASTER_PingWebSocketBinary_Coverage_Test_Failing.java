/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.nio.ByteBuffer;
import java.util.concurrent.TimeUnit;
import javax.websocket.CloseReason;
import javax.websocket.EndpointConfig;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PingWebSocketBinary_Coverage_Test_Failing {
  private CloseReason reason;
  private EndpointConfig ec;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPing_GhHc0() {
    PingWebSocketBinary pwb = new PingWebSocketBinary();
    ByteBuffer data = ByteBuffer.allocate(10);
    pwb.ping(data);
    assertTrue(data.position() == 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPingWithData_pqGl1() {
    PingWebSocketBinary pwb = new PingWebSocketBinary();
    ByteBuffer data = ByteBuffer.allocate(10);
    data.put((byte) 1);
    data.put((byte) 2);
    pwb.ping(data);
    assertTrue(data.position() == 2);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnErrorWithNullThrowable_GaMY1() {
    PingWebSocketBinary pingWebSocketBinary = new PingWebSocketBinary();
    pingWebSocketBinary.onError(null);
  }
}