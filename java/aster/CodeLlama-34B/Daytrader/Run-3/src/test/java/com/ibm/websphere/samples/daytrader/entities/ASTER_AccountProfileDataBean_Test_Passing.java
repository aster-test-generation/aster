/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Passing {
  private AccountProfileDataBean accountProfileDataBean;

  public void testSetPassword_null_iIvJ0() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword(null);
    assertNull(account.getPassword());
  }

  public void testSetPassword_empty_xUwa1() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("");
    assertEquals("", account.getPassword());
  }

  public void testSetPassword_valid_Gvgn2() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  public void testSetPassword_invalid_QFNv3() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("invalidPassword");
    assertNotEquals("invalidPassword", account.getPassword());
  }

  public void testSetPassword_samePassword_yZue4() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("password");
    assertEquals("password", account.getPassword());
  }

  public void testSetPassword_differentPassword_POab5() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("differentPassword");
    assertNotEquals("differentPassword", account.getPassword());
  }

  public void testSetPassword_nullUserID_eEUo6() {
    AccountProfileDataBean account = new AccountProfileDataBean(null, "password", "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  public void testSetPassword_emptyUserID_JBRG7() {
    AccountProfileDataBean account = new AccountProfileDataBean("", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  public void testSetPassword_nullPassword_UYyK8() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", null, "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  public void testSetPassword_emptyPassword_UAda9() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "", "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCreditCard_MquJ0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    String creditCard = accountProfileDataBean.getCreditCard();
    assertEquals("creditCard", creditCard);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCreditCardWithEmptyCreditCard_BOoz1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "");
    String creditCard = accountProfileDataBean.getCreditCard();
    assertEquals("", creditCard);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCreditCardWithNullCreditCard_YfJX2() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", null);
    String creditCard = accountProfileDataBean.getCreditCard();
    assertNull(creditCard);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAddress_FseU0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    String actualAddress = accountProfileDataBean.getAddress();
    String expectedAddress = "address";
    assertEquals(expectedAddress, actualAddress);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_SameObject_zjDd0() {
    AccountProfileDataBean bean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    assertTrue(bean.equals(bean));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_DifferentObject_iYQV1() {
    AccountProfileDataBean bean1 = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    AccountProfileDataBean bean2 = new AccountProfileDataBean("user2", "password2", "fullName2", "address2", "email2", "creditCard2");
    assertFalse(bean1.equals(bean2));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_Null_osxa2() {
    AccountProfileDataBean bean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    assertFalse(bean.equals(null));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_DifferentClass_mJkS3() {
    AccountProfileDataBean bean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    String string = "user1";
    assertFalse(bean.equals(string));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_SameValues_iBox4() {
    AccountProfileDataBean bean1 = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    AccountProfileDataBean bean2 = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    assertTrue(bean1.equals(bean2));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetAccountWithNull_nmFK1() {
    AccountDataBean account = null;
    AccountProfileDataBean profile = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    profile.setAccount(account);
    assertNull(profile.getAccount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_UserID_Bvay0() {
    AccountProfileDataBean account = new AccountProfileDataBean("user1", "password", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    int expectedHash = "user1".hashCode();
    int actualHash = account.hashCode();
    assertEquals(expectedHash, actualHash);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_NullUserID_SyVL1() {
    AccountProfileDataBean account = new AccountProfileDataBean(null, "password", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    int expectedHash = 0;
    int actualHash = account.hashCode();
    assertEquals(expectedHash, actualHash);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_Jnfe0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    String html = accountProfileDataBean.toHTML();
    assertEquals("<BR>Account Profile Data for userID: <B>userID</B><LI>   passwd:password</LI><LI>   fullName:fullName</LI><LI>    address:address</LI><LI>      email:email</LI><LI> creditCard:creditCard</LI>", html);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstance_KmUH0_1() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstance_KmUH0_2() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getUserID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstance_KmUH0_3() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getPassword());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstance_KmUH0_4() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getFullName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstance_KmUH0_5() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getAddress());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstance_KmUH0_6() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getEmail());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstance_KmUH0_7() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getCreditCard());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_qtZW0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.print();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetCreditCard_ZwvL0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setCreditCard("newCreditCard");
    assertEquals("newCreditCard", accountProfileDataBean.getCreditCard());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetCreditCardWithNull_rMfU1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setCreditCard(null);
    assertNull(accountProfileDataBean.getCreditCard());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetCreditCardWithEmptyString_Kftr2() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setCreditCard("");
    assertEquals("", accountProfileDataBean.getCreditCard());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetCreditCardWithInvalidCreditCard_xqwQ3() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setCreditCard("invalidCreditCard");
    assertEquals("invalidCreditCard", accountProfileDataBean.getCreditCard());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetCreditCardWithValidCreditCard_oVcU4() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setCreditCard("validCreditCard");
    assertEquals("validCreditCard", accountProfileDataBean.getCreditCard());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetFullName_LRYt0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setFullName("newFullName");
    assertEquals("newFullName", accountProfileDataBean.getFullName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetFullNameWithNull_zRzD1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setFullName(null);
    assertNull(accountProfileDataBean.getFullName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetFullNameWithEmptyString_zWZV2() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setFullName("");
    assertEquals("", accountProfileDataBean.getFullName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetFullNameWithInvalidValue_nJgt4() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setFullName("invalidValue");
    assertEquals("invalidValue", accountProfileDataBean.getFullName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetFullNameWithValidValue_rtJv5() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setFullName("validValue");
    assertEquals("validValue", accountProfileDataBean.getFullName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetAddress_MdQB0() {
    AccountProfileDataBean account = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    account.setAddress("456 Elm St");
    assertEquals("456 Elm St", account.getAddress());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccountWithNullProfile_rmOO1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean(null, null, null, null, null, null);
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertNull(accountDataBean);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_KrFD0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    String expected = "\n\tAccount Profile Data for userID:userID\n\t\t   passwd:password\n\t\t   fullName:fullName\n\t\t    address:address\n\t\t      email:email\n\t\t creditCard:creditCard";
    assertEquals(expected, accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithNullValues_DrSK1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean(null, null, null, null, null, null);
    String expected = "\n\tAccount Profile Data for userID:null\n\t\t   passwd:null\n\t\t   fullName:null\n\t\t    address:null\n\t\t      email:null\n\t\t creditCard:null";
    assertEquals(expected, accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithEmptyValues_uAhq2() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("", "", "", "", "", "");
    String expected = "\n\tAccount Profile Data for userID:\n\t\t   passwd:\n\t\t   fullName:\n\t\t    address:\n\t\t      email:\n\t\t creditCard:";
    assertEquals(expected, accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithSpecialCharacters_toVM4() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID!", "password!", "fullName!", "address!", "email!", "creditCard!");
    String expected = "\n\tAccount Profile Data for userID:userID!\n\t\t   passwd:password!\n\t\t   fullName:fullName!\n\t\t    address:address!\n\t\t      email:email!\n\t\t creditCard:creditCard!";
    assertEquals(expected, accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetUserID_qfle0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    accountProfileDataBean.setUserID("newUserID");
    assertEquals("newUserID", accountProfileDataBean.getUserID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmail_dYBg0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("johndoe@example.com", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithNullEmail_alFm1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", null, "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertNull(email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithEmptyEmail_yMzj2() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithInvalidEmail_YSmO3() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "johndoeexample.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("johndoeexample.com", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithNullUserID_tJAz4() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean(null, "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("johndoe@example.com", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithInvalidUserID_GQBh6() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("johndoe@example.com", "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("johndoe@example.com", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithNullPassword_SinU7() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", null, "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("johndoe@example.com", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithInvalidPassword_zMCc9() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFullName_vnMp0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    String expectedFullName = "fullName";
    String actualFullName = accountProfileDataBean.getFullName();
    assertEquals(expectedFullName, actualFullName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFullNameWithNull_mfKT1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", null, "address", "email", "creditCard");
    String expectedFullName = null;
    String actualFullName = accountProfileDataBean.getFullName();
    assertEquals(expectedFullName, actualFullName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFullNameWithEmptyString_eJjn2() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "", "address", "email", "creditCard");
    String expectedFullName = "";
    String actualFullName = accountProfileDataBean.getFullName();
    assertEquals(expectedFullName, actualFullName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFullNameWithSpecialCharacters_nNMb4() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName!@#$%^&*()_+", "address", "email", "creditCard");
    String expectedFullName = "fullName!@#$%^&*()_+";
    String actualFullName = accountProfileDataBean.getFullName();
    assertEquals(expectedFullName, actualFullName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFullNameWithMultipleNames_NxNx5() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName1 fullName2", "address", "email", "creditCard");
    String expectedFullName = "fullName1 fullName2";
    String actualFullName = accountProfileDataBean.getFullName();
    assertEquals(expectedFullName, actualFullName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFullNameWithDifferentCasing_aory6() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "FULLNAME", "address", "email", "creditCard");
    String expectedFullName = "FULLNAME";
    String actualFullName = accountProfileDataBean.getFullName();
    assertEquals(expectedFullName, actualFullName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFullNameWithDifferentCasingAndSpecialCharacters_MQuh7() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "FULLNAME!@#$%^&*()_+", "address", "email", "creditCard");
    String expectedFullName = "FULLNAME!@#$%^&*()_+";
    String actualFullName = accountProfileDataBean.getFullName();
    assertEquals(expectedFullName, actualFullName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFullNameWithDifferentCasingAndSpecialCharactersAndWhitespace_kHnW9() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "FULLNAME!@#$%^&*()_+  ", "address", "email", "creditCard");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstanceWithNullUserID_mDXN1_zBUW0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean(null, "password", "fullName", "address", "email", "creditCard");
    assertNull(accountProfileDataBean.getUserID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstanceWithNullPassword_yLHi2_Iwdv0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", null, "fullName", "address", "email", "creditCard");
    assertNull(accountProfileDataBean.getPassword());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstanceWithNullAddress_onxR4_ZDBu0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", null, "email", "creditCard");
    assertNull(accountProfileDataBean.getAddress());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstanceWithNullEmail_sOBJ5_ZJUe0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", null, "creditCard");
    assertNull(accountProfileDataBean.getEmail());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_UPBa0() {
    AccountDataBean account = new AccountDataBean();
    AccountProfileDataBean profile = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    profile.setAccount(account);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstanceWithNullFullName_ODjt3_vIKm0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", null, "address", "email", "creditCard");
    assertNull(accountProfileDataBean.getFullName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_BLdZ0() {
    accountProfileDataBean = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomInstance_KmUH0() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean);
    assertNotNull(accountProfileDataBean.getUserID());
    assertNotNull(accountProfileDataBean.getPassword());
    assertNotNull(accountProfileDataBean.getFullName());
    assertNotNull(accountProfileDataBean.getAddress());
    assertNotNull(accountProfileDataBean.getEmail());
    assertNotNull(accountProfileDataBean.getCreditCard());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_GKot0() {
    accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
  }
}