/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import com.ibm.websphere.samples.daytrader.util.Log;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.any;
import static org.mockito.Mockito.verify;

public class Aster_ActionMessage_Coverage_Test_Passing {
  private Log log;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecodingWithInvalidKey_LiZa4() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"invalid_key\":\"test\"}";
    actionMessage.doDecoding(jsonText);
    verify(log).error("ActionMessage:doDecoding(" + jsonText + ") --> failed", any(Exception.class));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecodingWithInvalidValue_AwaP7() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"action\":123}";
    actionMessage.doDecoding(jsonText);
    verify(log).error("ActionMessage:doDecoding(" + jsonText + ") --> failed", any(Exception.class));
  }
}