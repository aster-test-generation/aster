/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServlet2MDBTopic_Coverage_Test_Failing {
  private ServletConfig config;
  private HttpServletResponse response;
  private StringBuffer output;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_dztZ0() throws ServletException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    servlet.init(config);
    verify(config).getServletContext();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitWithNullConfig_LmMM1() throws ServletException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    servlet.init(null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitWithException_YNOy2() throws ServletException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    when(config.getServletContext()).thenThrow(new ServletException());
    servlet.init(config);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitWithException_YNOy2_kQCC1() throws ServletException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    servlet.init(config);
    assertTrue(true);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitWithNullServletContext_moTq3_sKZi0() throws ServletException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    ServletConfig config = mock(ServletConfig.class);
    when(config.getServletContext()).thenReturn(null);
    servlet.init(config);
    assertNull(servlet.getServletContext());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitWithException_YNOy2_kQCC1_fid1() throws ServletException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    servlet.init(config);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitWithNullServletContext_moTq3_sKZi0_fid1() throws ServletException {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    ServletConfig config = mock(ServletConfig.class);
    when(config.getServletContext()).thenReturn(null);
    servlet.init(config);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_AWvm0() {
    PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
    String servletInfo = servlet.getServletInfo();
    assertEquals("web primitive, configured with trade runtime configs, tests Servlet to Session EJB path", servletInfo);
  }
}