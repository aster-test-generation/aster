/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.util.concurrent.TimeUnit;
import javax.faces.context.ExternalContext;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TradeConfigJSF_Test_Failing {
  TradeConfigJSF tradeConfig = new TradeConfigJSF();
  private TradeConfigJSF tradeConfigJSF;
  private ExternalContext context;
  private String result = "";

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMaxUsers_bVWi1() {
    int maxUsers = tradeConfigJSF.getMaxUsers();
    Assertions.assertEquals(100, maxUsers);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMarketSummaryInterval_lGae0_fid1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    int marketSummaryInterval = tradeConfigJSF.getMarketSummaryInterval();
    assertEquals(10, marketSummaryInterval);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertNotNull(webInterfaceList);
    assertEquals(webInterfaceList.length, 10);
    assertEquals(webInterfaceList[0], "WebInterface1");
    assertEquals(webInterfaceList[1], "WebInterface2");
    assertEquals(webInterfaceList[2], "WebInterface3");
    assertEquals(webInterfaceList[3], "WebInterface4");
    assertEquals(webInterfaceList[4], "WebInterface5");
    assertEquals(webInterfaceList[5], "WebInterface6");
    assertEquals(webInterfaceList[6], "WebInterface7");
    assertEquals(webInterfaceList[7], "WebInterface8");
    assertEquals(webInterfaceList[8], "WebInterface9");
    assertEquals(webInterfaceList[9], "WebInterface10");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceListWithEmptyList_GITX1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertNotNull(webInterfaceList);
    assertEquals(webInterfaceList.length, 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceListWithNullList_KszP2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertNull(webInterfaceList);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMaxQuotes_gNaC0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    int maxQuotes = tradeConfigJSF.getMaxQuotes();
    assertEquals(100, maxQuotes);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetWebInterfaceListWithDuplicateValues_Hdbo3() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = new String[]{"web1", "web1", "web2", "web3"};
    tradeConfigJSF.setWebInterfaceList(webInterfaceList);
    assertEquals(3, tradeConfigJSF.getWebInterfaceList().length);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetResult_DTQu0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String result = tradeConfigJSF.getResult();
    assertEquals("expectedResult", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeListWithDuplicateModes_Rxnt3() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] orderProcessingModeList = new String[]{"mode1", "mode1"};
    tradeConfigJSF.setOrderProcessingModeList(orderProcessingModeList);
    assertEquals(1, tradeConfigJSF.getOrderProcessingModeList().length);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeListWithInvalidModes_vpns4() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] orderProcessingModeList = new String[]{"invalid_mode"};
    tradeConfigJSF.setOrderProcessingModeList(orderProcessingModeList);
    assertEquals(0, tradeConfigJSF.getOrderProcessingModeList().length);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeList_COqh0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] runtimeModeList = tradeConfigJSF.getRuntimeModeList();
    assertNotNull(runtimeModeList);
    assertEquals(3, runtimeModeList.length);
    assertEquals("DEV", runtimeModeList[0]);
    assertEquals("QA", runtimeModeList[1]);
    assertEquals("PROD", runtimeModeList[2]);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeMode_oVeq0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String runtimeMode = tradeConfigJSF.getRuntimeMode();
    assertEquals("dev", runtimeMode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeWithNull_bEAm1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String runtimeMode = tradeConfigJSF.getRuntimeMode();
    assertNull(runtimeMode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeWithEmptyString_zmBy2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String runtimeMode = tradeConfigJSF.getRuntimeMode();
    assertEquals("", runtimeMode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeWithDifferentCase_nDbo5() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String runtimeMode = tradeConfigJSF.getRuntimeMode();
    assertEquals("DEV", runtimeMode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeWithSpecialCharacters_nPQU7() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String runtimeMode = tradeConfigJSF.getRuntimeMode();
    assertEquals("dev!", runtimeMode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeWithMultipleValues_fXfn8() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String runtimeMode = tradeConfigJSF.getRuntimeMode();
    assertEquals("dev, prod", runtimeMode);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPrimIterations_cGGA1() {
    int expected = 10;
    int actual = tradeConfigJSF.getPrimIterations();
    Assertions.assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetMarketSummaryIntervalWithInvalidValue_DpjV1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    int marketSummaryInterval = -1;
    tradeConfigJSF.setMarketSummaryInterval(marketSummaryInterval);
    assertEquals(0, tradeConfigJSF.getMarketSummaryInterval());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRuntimeModeWithInvalidValue_yosv3() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.setRuntimeMode("invalid");
    assertEquals(null, tradeConfig.getRuntimeMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRuntimeModeWithDifferentCase_uMce5() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.setRuntimeMode("DEV");
    assertEquals("dev", tradeConfig.getRuntimeMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_RunTimeMode_XUBe0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("RunTimeMode", TradeConfig.getRunTimeModeNames()[TradeConfig.getRunTimeMode()]);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_OrderProcessingMode_TNBf1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("OrderProcessingMode", TradeConfig.getOrderProcessingModeNames()[TradeConfig.getOrderProcessingMode()]);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_WebInterface_VNrp2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("Web Interface", TradeConfig.getWebInterfaceNames()[TradeConfig.getWebInterface()]);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_MAX_USERS_GCGx3() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("Trade  Users", TradeConfig.getMAX_USERS());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_MAX_QUOTES_JGBH4() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("Trade Quotes", TradeConfig.getMAX_QUOTES());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_MarketSummaryInterval_TkED5() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("Market Summary Interval", TradeConfig.getMarketSummaryInterval());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_PrimIterations_QjPp6() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("Primitive Iterations", TradeConfig.getPrimIterations());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_PublishQuotePriceChange_suHc7() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("TradeStreamer MDB Enabled", TradeConfig.getPublishQuotePriceChange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_ListQuotePriceChangeFrequency_wFhC8() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("% of trades on Websocket", TradeConfig.getListQuotePriceChangeFrequency());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_LongRun_JWdt9() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("Long Run Enabled", TradeConfig.getLongRun());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig_DisplayOrderAlerts_qNOE10() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.updateConfig();
    assertEquals("Display Order Alerts", TradeConfig.getDisplayOrderAlerts());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterface_gmzf0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String webInterface = tradeConfigJSF.getWebInterface();
    assertEquals("web", webInterface);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceWithNull_TbWU1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String webInterface = tradeConfigJSF.getWebInterface();
    assertNull(webInterface);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceWithEmptyString_xRym2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String webInterface = tradeConfigJSF.getWebInterface();
    assertEquals("", webInterface);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceWithDifferentCase_vNuT5() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String webInterface = tradeConfigJSF.getWebInterface();
    assertEquals("WEB", webInterface);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceWithSpecialCharacters_mcYs7() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String webInterface = tradeConfigJSF.getWebInterface();
    assertEquals("web!", webInterface);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceWithMultipleValues_fvrl8() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String webInterface = tradeConfigJSF.getWebInterface();
    assertEquals("web, web2", webInterface);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrderProcessingMode_TtcN0() {
    when(tradeConfigJSF.getOrderProcessingMode()).thenReturn("LIVE");
    assertEquals("LIVE", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrderProcessingMode_Null_oviA1() {
    when(tradeConfigJSF.getOrderProcessingMode()).thenReturn(null);
    assertEquals(null, tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrderProcessingMode_Empty_tsMs2() {
    when(tradeConfigJSF.getOrderProcessingMode()).thenReturn("");
    assertEquals("", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrderProcessingMode_Invalid_TLYr3() {
    when(tradeConfigJSF.getOrderProcessingMode()).thenReturn("INVALID");
    assertEquals("INVALID", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrderProcessingMode_Simulation_eRBe5() {
    when(tradeConfigJSF.getOrderProcessingMode()).thenReturn("SIMULATION");
    assertEquals("SIMULATION", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrderProcessingMode_Backtesting_bDrA6() {
    when(tradeConfigJSF.getOrderProcessingMode()).thenReturn("BACKTESTING");
    assertEquals("BACKTESTING", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrderProcessingMode_Paper_kkcj7() {
    when(tradeConfigJSF.getOrderProcessingMode()).thenReturn("PAPER");
    assertEquals("PAPER", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOrderProcessingMode_Other_DeOk8() {
    when(tradeConfigJSF.getOrderProcessingMode()).thenReturn("OTHER");
    assertEquals("OTHER", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testIsDisplayOrderAlerts_True_EIwP0() {
    tradeConfigJSF.setDisplayOrderAlerts(true);
    assertTrue(tradeConfigJSF.isDisplayOrderAlerts());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testIsDisplayOrderAlerts_False_FPjL1() {
    tradeConfigJSF.setDisplayOrderAlerts(false);
    assertFalse(tradeConfigJSF.isDisplayOrderAlerts());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_2_fid3() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList.length, 10);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_3() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[0], "WebInterface1");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_4() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[1], "WebInterface2");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_5() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[2], "WebInterface3");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_6() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[3], "WebInterface4");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_7() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[4], "WebInterface5");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_8() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[5], "WebInterface6");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_9() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[6], "WebInterface7");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_10() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[7], "WebInterface8");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_11() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[8], "WebInterface9");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceList_tRpa0_12() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList[9], "WebInterface10");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterfaceListWithEmptyList_GITX1_2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] webInterfaceList = tradeConfigJSF.getWebInterfaceList();
    assertEquals(webInterfaceList.length, 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeList_COqh0_3() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] runtimeModeList = tradeConfigJSF.getRuntimeModeList();
    assertEquals("DEV", runtimeModeList[0]);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeList_COqh0_4() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] runtimeModeList = tradeConfigJSF.getRuntimeModeList();
    assertEquals("QA", runtimeModeList[1]);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRuntimeModeList_COqh0_5() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String[] runtimeModeList = tradeConfigJSF.getRuntimeModeList();
    assertEquals("PROD", runtimeModeList[2]);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetListQuotePriceChangeFrequency_rhPP1() {
    int frequency = tradeConfig.getListQuotePriceChangeFrequency();
    Assertions.assertEquals(10, frequency);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetListQuotePriceChangeFrequencyWithNullFrequency_StrO3() {
    int frequency = tradeConfig.getListQuotePriceChangeFrequency();
    Assertions.assertNull(frequency);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetListQuotePriceChangeFrequencyWithMaxFrequency_DWgf6() {
    int frequency = tradeConfig.getListQuotePriceChangeFrequency();
    Assertions.assertEquals(Integer.MAX_VALUE, frequency);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetListQuotePriceChangeFrequencyWithMinFrequency_wnqn7() {
    int frequency = tradeConfig.getListQuotePriceChangeFrequency();
    Assertions.assertEquals(Integer.MIN_VALUE, frequency);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetListQuotePriceChangeFrequencyWithZeroFrequency_ZNvE8() {
    int frequency = tradeConfig.getListQuotePriceChangeFrequency();
    Assertions.assertEquals(0, frequency);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentCases_Gawk5_1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("TEST");
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("TeSt");
    assertEquals("TEST", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentCases_Gawk5_2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("TEST");
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("TeSt");
    assertEquals("test", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentLengths_QQCv6_1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("testtest");
    tradeConfigJSF.setOrderProcessingMode("testtesttest");
    assertEquals("test", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentLengths_QQCv6_2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("testtest");
    tradeConfigJSF.setOrderProcessingMode("testtesttest");
    assertEquals("testtest", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentCharacters_TIrC7_1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("test1");
    tradeConfigJSF.setOrderProcessingMode("test2");
    tradeConfigJSF.setOrderProcessingMode("test3");
    assertEquals("test", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentCharacters_TIrC7_2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("test1");
    tradeConfigJSF.setOrderProcessingMode("test2");
    tradeConfigJSF.setOrderProcessingMode("test3");
    assertEquals("test1", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentCharacters_TIrC7_3() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("test1");
    tradeConfigJSF.setOrderProcessingMode("test2");
    tradeConfigJSF.setOrderProcessingMode("test3");
    assertEquals("test2", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetMarketSummaryIntervalWithNullValue_VdAF5_mTgM0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    Integer marketSummaryInterval = null;
    tradeConfigJSF.setMarketSummaryInterval(marketSummaryInterval);
    assertNull(tradeConfigJSF.getMarketSummaryInterval());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentTypes_yBre8_rCPy0_1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("1");
    tradeConfigJSF.setOrderProcessingMode("1.0");
    tradeConfigJSF.setOrderProcessingMode("true");
    tradeConfigJSF.setOrderProcessingMode("1.0");
    assertEquals("test", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentTypes_yBre8_rCPy0_2() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("1");
    tradeConfigJSF.setOrderProcessingMode("1.0");
    tradeConfigJSF.setOrderProcessingMode("true");
    tradeConfigJSF.setOrderProcessingMode("1.0");
    assertEquals("1", tradeConfigJSF.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOrderProcessingModeWithDifferentTypes_yBre8_rCPy0_4() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    tradeConfigJSF.setOrderProcessingMode("test");
    tradeConfigJSF.setOrderProcessingMode("1");
    tradeConfigJSF.setOrderProcessingMode("1.0");
    tradeConfigJSF.setOrderProcessingMode("true");
    tradeConfigJSF.setOrderProcessingMode("1.0");
    assertEquals("true", tradeConfigJSF.getOrderProcessingMode());
  }
}