/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.Arrays;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TestJSONObject_Test_Failing {
  TestJSONObject testJSONObject = new TestJSONObject();

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001_tScC0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0001";
    String actual = testJSONObject.getProp0001();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001_Empty_efEx2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0001();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0010_LCJd0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String prop0010 = testJSONObject.getProp0010();
    assertEquals("prop0010", prop0010);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005_OCfM0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0005";
    String actual = testJSONObject.getProp0005();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0003_tyxe0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0003";
    String actual = testJSONObject.getProp0003();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0003_empty_leFi2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0003();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002_EdxQ0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0002();
    String expected = "prop0002";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0004_nydc0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0004();
    assertEquals("prop0004", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0013_hmaz0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0013();
    String expected = "prop0013";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0014_wLiu0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0014();
    String expected = "prop0014";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011_JTDP0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0011();
    String expected = "prop0011";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0007_vkdT0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0007";
    String actual = testJSONObject.getProp0007();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012_CuMy0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0012();
    assertEquals("prop0012", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_XYmb0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0015";
    String actual = testJSONObject.getProp0015();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0008_YvMd0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0008";
    String actual = testJSONObject.getProp0008();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016_sYVn0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0016";
    String actual = testJSONObject.getProp0016();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016WithEmptyString_rghv2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0016();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006_BXDA0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0006";
    String actual = testJSONObject.getProp0006();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009_QKvd1() {
    String expected = "prop0009";
    String actual = testJSONObject.getProp0009();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithEmptyString_Pcip3() {
    String expected = "";
    String actual = testJSONObject.getProp0009();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithInvalidStringAndNull_aLWG11() {
    String expected = null;
    String actual = testJSONObject.getProp0009();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithEmptyString_Pcip3_VzFP0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0009();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithInvalidStringAndNull_aLWG11_MRAU1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0009();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
    assertEquals("test", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
    assertNull(testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
    assertEquals("", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
    assertEquals("123", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_5() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
    assertEquals("true", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_6() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
    assertEquals("false", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_8() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
    assertEquals("[\"a\", \"b\", \"c\"]", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertEquals("test", testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertNull(testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertEquals("", testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertEquals("123", testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_5() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertEquals("true", testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_6() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertEquals("false", testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_7() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertEquals(new Object().toString(), testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_8() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertEquals(Arrays.toString(new int[]{1, 2, 3}), testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001_tScC0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0001";
    String actual = testJSONObject.getProp0001();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001_Empty_efEx2_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0001();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005_OCfM0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0005";
    String actual = testJSONObject.getProp0005();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0002_EdxQ0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0002();
    String expected = "prop0002";
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0013_hmaz0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0013();
    String expected = "prop0013";
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0014_wLiu0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0014();
    String expected = "prop0014";
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0007_vkdT0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0007";
    String actual = testJSONObject.getProp0007();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0008_YvMd0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0008";
    String actual = testJSONObject.getProp0008();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016_sYVn0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0016";
    String actual = testJSONObject.getProp0016();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006_BXDA0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0006";
    String actual = testJSONObject.getProp0006();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009_QKvd1_fid1() {
    String expected = "prop0009";
    String actual = testJSONObject.getProp0009();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithEmptyString_Pcip3_fid1() {
    String expected = "";
    String actual = testJSONObject.getProp0009();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006WithDifferentValues_iXcN1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0006";
    String actual = testJSONObject.getProp0006();
    assertEquals(expected, actual);
    testJSONObject.setProp0006("differentValue");
    expected = "differentValue";
    actual = testJSONObject.getProp0006();
    assertEquals(expected, actual);
  }
}