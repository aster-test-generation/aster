/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import com.ibm.websphere.samples.daytrader.entities.AccountDataBean;
import com.ibm.websphere.samples.daytrader.entities.HoldingDataBean;
import com.ibm.websphere.samples.daytrader.entities.OrderDataBean;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import com.ibm.websphere.samples.daytrader.util.Log;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.jms.TextMessage;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_TradeDirect_Coverage_Test_Passing {
  private ResultSet rs;
  private TextMessage mockMessage;
  private AsyncOrderSubmitter asyncOrderSubmitter;
  private Log log;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateQuoteWithNullSymbol_pUoc1() throws java.lang.Exception {
    TradeDirect tradeDirect = new TradeDirect();
    QuoteDataBean quoteData = tradeDirect.createQuote(null, "companyName", new BigDecimal(10.0));
    Assertions.assertNull(quoteData);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateQuoteWithNullCompanyName_MISb2() throws java.lang.Exception {
    TradeDirect tradeDirect = new TradeDirect();
    QuoteDataBean quoteData = tradeDirect.createQuote("symbol", null, new BigDecimal(10.0));
    Assertions.assertNull(quoteData);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateQuoteWithNullPrice_xnaD3() throws java.lang.Exception {
    TradeDirect tradeDirect = new TradeDirect();
    QuoteDataBean quoteData = tradeDirect.createQuote("symbol", "companyName", null);
    Assertions.assertNull(quoteData);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateQuoteWithInvalidPrice_VahM4() throws java.lang.Exception {
    TradeDirect tradeDirect = new TradeDirect();
    QuoteDataBean quoteData = tradeDirect.createQuote("symbol", "companyName", new BigDecimal(-10.0));
    Assertions.assertNull(quoteData);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateOrder3_WcjW2() throws java.lang.Exception {
    TradeDirect tradeDirect = new TradeDirect();
    AccountDataBean accountData = new AccountDataBean();
    QuoteDataBean quoteData = new QuoteDataBean();
    HoldingDataBean holdingData = new HoldingDataBean();
    String orderType = "orderType";
    double quantity = 10.0;
    Timestamp currentDate = new Timestamp(System.currentTimeMillis());
    Assertions.assertNotNull(currentDate);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetImpl_PXIe0() {
    TradeDirect tradeDirect = new TradeDirect();
    int result = tradeDirect.getImpl();
    assertEquals(TradeConfig.DIRECT, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCreateOrder6_kcdR5_akle0() throws java.lang.Exception {
    TradeDirect tradeDirect = new TradeDirect();
    AccountDataBean accountData = new AccountDataBean();
    QuoteDataBean quoteData = new QuoteDataBean();
    HoldingDataBean holdingData = new HoldingDataBean();
    String orderType = "orderType";
    double quantity = 10.0;
    Assertions.assertEquals(1, 1);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void tearDown_LMvJ1_iEuo1() throws java.lang.Exception {
    TradeDirect tradeDirect = new TradeDirect();
    tradeDirect = null;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCompleteOrderAsync_exception_xICh2_SRLN0() throws Exception {
    TradeDirect tradeDirect = new TradeDirect();
    AsyncOrderSubmitter asyncOrderSubmitter = mock(AsyncOrderSubmitter.class);
    when(asyncOrderSubmitter.submitOrder(1, true)).thenThrow(new Exception());
    Future<OrderDataBean> future = tradeDirect.completeOrderAsync(1, true);
    assertNull(future);
  }
}