/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteData_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainPercent_ValidInput_zxGl0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.50"), new BigDecimal("10.00"), "ABC");
    quoteData.setGainPercent(new BigDecimal("10.00"));
    assertEquals(new BigDecimal("10.00"), quoteData.getGainPercent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGain_AoXL0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setGain(new BigDecimal(1.0));
    assertEquals(new BigDecimal(1.0), quoteData.getGain());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainWithHighAndLow_SPYF1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "Company Inc.", 1000.0, 1.0);
    quoteData.setGain(new BigDecimal(2.0));
    assertEquals(new BigDecimal(2.0), quoteData.getGain());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCompanyName2_FbaV1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "XYZ", 100.0, 2.0);
    String expectedCompanyName = "XYZ";
    String actualCompanyName = quoteData.getCompanyName();
    assertEquals(expectedCompanyName, actualCompanyName);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPrice_BZYR0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    BigDecimal price = quoteData.getPrice();
    Assertions.assertEquals(new BigDecimal(10.0), price);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPriceWithHighLowVolumeAndChange_srMO1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(10.0), new BigDecimal(10.0), "Company Name", 100.0, 0.0);
    BigDecimal price = quoteData.getPrice();
    Assertions.assertEquals(new BigDecimal(10.0), price);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetChange_ExJZ0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setChange(10.0);
    assertEquals(10.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetChangeWithDifferentValue_XsLi1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setChange(5.0);
    assertEquals(5.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLowWithHighAndLow_ZwXa1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), "Company Name", 100.0, 1.0);
    BigDecimal low = quoteData.getLow();
    assertEquals(new BigDecimal(10.0), low);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOpenWithHighLowAndCompanyName_bnRW1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(8.0), "XYZ", 100.0, 2.0);
    BigDecimal expectedOpen = new BigDecimal(10.0);
    BigDecimal actualOpen = quoteData.getOpen();
    assertEquals(expectedOpen, actualOpen);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHighWithHighValue_FQLo1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), "Company", 100.0, 2.0);
    BigDecimal high = quoteData.getHigh();
    Assertions.assertEquals(new BigDecimal(15.0), high);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPrice_bUul0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setPrice(new BigDecimal(15.0));
    assertEquals(new BigDecimal(15.0), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceWithHighLow_aJDF1_1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(15.0), new BigDecimal(5.0), "Company Name", 100.0, 5.0);
    quoteData.setPrice(new BigDecimal(15.0));
    assertEquals(new BigDecimal(15.0), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceWithHighLow_aJDF1_2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(15.0), new BigDecimal(5.0), "Company Name", 100.0, 5.0);
    quoteData.setPrice(new BigDecimal(15.0));
    assertEquals(new BigDecimal(15.0), quoteData.getHigh());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceWithHighLow_aJDF1_3() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(15.0), new BigDecimal(5.0), "Company Name", 100.0, 5.0);
    quoteData.setPrice(new BigDecimal(15.0));
    assertEquals(new BigDecimal(5.0), quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetCompanyName_ADCY0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setCompanyName("XYZ");
    assertEquals("XYZ", quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetCompanyNameWithNull_jkcT1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    quoteData.setCompanyName(null);
    assertNull(quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOpen_ipcK0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setOpen(new BigDecimal(10.0));
    assertEquals(new BigDecimal(10.0), quoteData.getOpen());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOpenWithDifferentValue_vQsL1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setOpen(new BigDecimal(20.0));
    assertEquals(new BigDecimal(20.0), quoteData.getOpen());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChangeHTML_ZeroChange_wFBf2() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "TEST");
    String htmlString = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#009900\">0.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", htmlString);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChangeHTML_NullSymbol_TVcg3() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, null);
    String htmlString = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#009900\">0.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", htmlString);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVolumeWithHighAndLow_nUFQ1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(15.0), new BigDecimal(5.0), "Company Name", 100.0, 0.0);
    Assertions.assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRange_PbmO0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setRange("1d");
    assertEquals("1d", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithInvalidRange_HgOj1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setRange("invalid");
    assertEquals("invalid", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithNullRange_aiFg2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setRange(null);
    assertNull(quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRangeWithEmptyRange_FqPU3() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setRange("");
    assertEquals("", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbol_NLBD0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("DEF");
    assertEquals("DEF", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithSameSymbol_PrBP1() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("ABC");
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithDifferentSymbol_VfmJ2() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("DEF");
    assertNotEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithNullSymbol_mxGp3() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol(null);
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithEmptySymbol_biAu4() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("");
    assertEquals("", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithInvalidSymbol_BJab5() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("123");
    assertEquals("123", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithInvalidSymbolAndDifferentSymbol_udJJ9() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol("123");
    assertNotEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbolWithNullSymbolAndDifferentSymbol_bMzj12() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "ABC");
    quoteData.setSymbol(null);
    assertNotEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetLow_HScl0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setLow(new BigDecimal(5.0));
    assertEquals(new BigDecimal(5.0), quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetLowWithNull_HKPQ1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setLow(null);
    assertNull(quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetLowWithZero_BeZo2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setLow(new BigDecimal(0.0));
    assertEquals(new BigDecimal(0.0), quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolume_kfzY0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setVolume(100.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolumeWithNegativeValue_DqvF1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setVolume(-100.0);
    assertEquals(-100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolumeWithZeroValue_AVBM2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setVolume(0.0);
    assertEquals(0.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolumeWithValidValueAndHigh_PnEK6() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(100.0), new BigDecimal(100.0), "Company", 100.0, 0.0);
    quoteData.setVolume(100.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChange_1_pPha0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(100), BigDecimal.valueOf(100), "ABC");
    assertEquals(0.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChange_2_Dlby1() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(100), BigDecimal.valueOf(100), "ABC", BigDecimal.valueOf(100), BigDecimal.valueOf(100), "Company", 100.0, 0.0);
    assertEquals(0.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChange_3_MUxA2() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(100), BigDecimal.valueOf(100), "ABC", BigDecimal.valueOf(100), BigDecimal.valueOf(100), "Company", 100.0, 10.0);
    assertEquals(10.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChange_4_GlGv3() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(100), BigDecimal.valueOf(100), "ABC", BigDecimal.valueOf(100), BigDecimal.valueOf(100), "Company", 100.0, -10.0);
    assertEquals(-10.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbol_baIx0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithOpenAndPrice_uCEf1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), "Company Name", 100.0, 0.0);
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullSymbol_Xnwa2() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), null);
    assertNull(quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithEmptySymbol_DDTQ3() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "");
    assertEquals("", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithInvalidSymbol_JBMG4() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "Invalid Symbol");
    assertEquals("Invalid Symbol", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolumeWithNullValue_vzGX3_tEfR0() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC");
    quoteData.setVolume(0.0);
    assertEquals(0.0, quoteData.getVolume());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLow_tUkL0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal low = quoteData.getLow();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOpen_VlxO0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC");
    BigDecimal expectedOpen = new BigDecimal(10.0);
    BigDecimal actualOpen = quoteData.getOpen();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRange_nXQL0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(100), new BigDecimal(100), "AAPL");
    String range = quoteData.getRange();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVolume_zsBN0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(0.0), new BigDecimal(0.0), "ABC");
    Assertions.assertEquals(0.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullLow_pRTF8_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), BigDecimal.ZERO, "Company Name", 100.0, 0.0);
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullCompanyName_IeQP9_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), null, 100.0, 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbolWithNullVolume_XTvI10_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(12.0), "ABC", new BigDecimal(15.0), new BigDecimal(10.0), "Company Name", 0.0, 0.0);
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPriceWithHighLow_aJDF1() {
    QuoteData quoteData = new QuoteData(new BigDecimal(10.0), new BigDecimal(10.0), "ABC", new BigDecimal(15.0), new BigDecimal(5.0), "Company Name", 100.0, 5.0);
    quoteData.setPrice(new BigDecimal(15.0));
    assertEquals(new BigDecimal(15.0), quoteData.getPrice());
    assertEquals(new BigDecimal(15.0), quoteData.getHigh());
    assertEquals(new BigDecimal(5.0), quoteData.getLow());
  }
}