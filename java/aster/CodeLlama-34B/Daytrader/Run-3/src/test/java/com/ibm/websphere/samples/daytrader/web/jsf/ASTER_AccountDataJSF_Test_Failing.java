/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.math.BigDecimal;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.faces.context.ExternalContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_AccountDataJSF_Test_Failing {
  private OrderData[] closedOrders;
  private ExternalContext context;
  private TradeServices tradeAction;
  private AccountDataJSF accountDataJSF;
  @Mock
  private TradeServices tradeServices;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSessionCreationDateWithNullTradeServices_nBBj1() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    Date sessionCreationDate = accountDataJSF.getSessionCreationDate();
    assertNull(sessionCreationDate);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCurrentTimeWithNullTradeServices_YHrW1() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    Date currentTime = accountDataJSF.getCurrentTime();
    assertNotNull(currentTime);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccountIDWithNullTradeServices_wBqD1() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    Integer accountID = accountDataJSF.getAccountID();
    assertNull(accountID);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetNumberOfOrdersWithNullTradeServices_NTLP3() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    int numberOfOrders = accountDataJSF.getNumberOfOrders();
    assertEquals(0, numberOfOrders);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProfileIDWithNullTradeServices_oKGw1() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    String profileID = accountDataJSF.getProfileID();
    assertNull(profileID);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHoldingsTotalWithInvalidValueAndNullTradeServices_eKsI7() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    BigDecimal holdingsTotal = accountDataJSF.getHoldingsTotal();
    assertEquals(BigDecimal.ZERO, holdingsTotal);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHoldingsTotalWithValidValueAndNullTradeServices_XRPF8() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    BigDecimal holdingsTotal = accountDataJSF.getHoldingsTotal();
    assertNull(holdingsTotal);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHoldingsTotalWithInvalidValueAndNullTradeServicesAndNonNullHoldingsTotal_tRSY11_1() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    BigDecimal holdingsTotal = accountDataJSF.getHoldingsTotal();
    assertNotNull(holdingsTotal);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHoldingsTotalWithInvalidValueAndNullTradeServicesAndNonNullHoldingsTotal_tRSY11_2() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    BigDecimal holdingsTotal = accountDataJSF.getHoldingsTotal();
    assertEquals(BigDecimal.valueOf(100), holdingsTotal);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCurrentTimeWithNullTradeServices_YHrW1_fid1() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    Date currentTime = accountDataJSF.getCurrentTime();
    assertNull(currentTime);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHoldingsTotalWithInvalidValueAndNullTradeServicesAndNonNullHoldingsTotal_tRSY11() {
    AccountDataJSF accountDataJSF = new AccountDataJSF(null);
    BigDecimal holdingsTotal = accountDataJSF.getHoldingsTotal();
    assertNotNull(holdingsTotal);
    assertEquals(BigDecimal.valueOf(100), holdingsTotal);
  }
}