/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Failing {
  private AccountProfileDataBean accountProfileDataBean;

  public void testSetPassword_null_iIvJ0() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword(null);
    assertNull(account.getPassword());
  }

  public void testSetPassword_empty_xUwa1() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("");
    assertEquals("", account.getPassword());
  }

  public void testSetPassword_valid_Gvgn2() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  public void testSetPassword_invalid_QFNv3() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("invalidPassword");
    assertNotEquals("invalidPassword", account.getPassword());
  }

  public void testSetPassword_samePassword_yZue4() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("password");
    assertEquals("password", account.getPassword());
  }

  public void testSetPassword_differentPassword_POab5() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("differentPassword");
    assertNotEquals("differentPassword", account.getPassword());
  }

  public void testSetPassword_nullUserID_eEUo6() {
    AccountProfileDataBean account = new AccountProfileDataBean(null, "password", "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  public void testSetPassword_emptyUserID_JBRG7() {
    AccountProfileDataBean account = new AccountProfileDataBean("", "password", "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  public void testSetPassword_nullPassword_UYyK8() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", null, "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  public void testSetPassword_emptyPassword_UAda9() {
    AccountProfileDataBean account = new AccountProfileDataBean("userID", "", "fullName", "address", "email", "creditCard");
    account.setPassword("newPassword");
    assertEquals("newPassword", account.getPassword());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintWithNullValues_JNnK1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean(null, null, null, null, null, null);
    accountProfileDataBean.print();
    assertEquals("	Account Profile Data for userID:null		   passwd:null		   fullName:null		    address:null		      email:null		 creditCard:null", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintWithEmptyValues_LoKd2() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("", "", "", "", "", "");
    accountProfileDataBean.print();
    assertEquals("	Account Profile Data for userID:		   passwd:		   fullName:		    address:		      email:		 creditCard:", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintWithInvalidValues_lsIp3() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("invalidUserID", "invalidPassword", "invalidFullName", "invalidAddress", "invalidEmail", "invalidCreditCard");
    accountProfileDataBean.print();
    assertEquals("	Account Profile Data for userID:invalidUserID		   passwd:invalidPassword		   fullName:invalidFullName		    address:invalidAddress		      email:invalidEmail		 creditCard:invalidCreditCard", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccount_jPed0_1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertNotNull(accountDataBean);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccount_jPed0_2() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertEquals("userID", accountDataBean.getProfileID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccount_jPed0_3() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertEquals("password", accountDataBean.getProfile().getPassword());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccount_jPed0_4() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertEquals("fullName", accountDataBean.getProfile().getFullName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccount_jPed0_5() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertEquals("address", accountDataBean.getProfile().getAddress());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccount_jPed0_6() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertEquals("email", accountDataBean.getProfile().getEmail());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccount_jPed0_7() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertEquals("creditCard", accountDataBean.getProfile().getCreditCard());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_qtZW0_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.print();
    assertEquals("AccountProfileDataBean{userID='userID', password='password', fullName='fullName', address='address', email='email', creditCard='creditCard'}", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintWithNullValues_JNnK1_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean(null, null, null, null, null, null);
    accountProfileDataBean.print();
    assertEquals("AccountProfileDataBean{userID='null', password='null', fullName='null', address='null', email='null', creditCard='null'}", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintWithEmptyValues_LoKd2_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("", "", "", "", "", "");
    accountProfileDataBean.print();
    assertEquals("AccountProfileDataBean{userID='', password='', fullName='', address='', email='', creditCard=''}", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrintWithInvalidValues_lsIp3_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("invalidUserID", "invalidPassword", "invalidFullName", "invalidAddress", "invalidEmail", "invalidCreditCard");
    accountProfileDataBean.print();
    assertEquals("AccountProfileDataBean{userID='invalidUserID', password='invalidPassword', fullName='invalidFullName', address='invalidAddress', email='invalidEmail', creditCard='invalidCreditCard'}", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithNullUserID_tJAz4_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean(null, "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertNull(email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithEmptyUserID_fbzo5() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("", "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithInvalidUserID_GQBh6_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("user1", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithNullPassword_SinU7_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", null, "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertNull(email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithEmptyPassword_mqPw8() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEmailWithInvalidPassword_zMCc9_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "johndoe@example.com", "1234567890");
    String email = accountProfileDataBean.getEmail();
    assertEquals("password1", email);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserID_jhwc1() {
    assertEquals("user123", accountProfileDataBean.getUserID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserIDWithNullUserID_kfjx2() {
    accountProfileDataBean.setUserID(null);
    assertNull(accountProfileDataBean.getUserID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserIDWithEmptyUserID_xYyw3() {
    accountProfileDataBean.setUserID("");
    assertEquals("", accountProfileDataBean.getUserID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserIDWithInvalidUserID_zewT5() {
    accountProfileDataBean.setUserID("invalidUserID");
    assertEquals("invalidUserID", accountProfileDataBean.getUserID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPassword_XcYr1() {
    String expectedPassword = "password";
    String actualPassword = accountProfileDataBean.getPassword();
    assertEquals(expectedPassword, actualPassword);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPasswordWithNullPassword_lyAO3() {
    String expectedPassword = null;
    String actualPassword = accountProfileDataBean.getPassword();
    assertEquals(expectedPassword, actualPassword);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPasswordWithEmptyPassword_vZfW4() {
    String expectedPassword = "";
    String actualPassword = accountProfileDataBean.getPassword();
    assertEquals(expectedPassword, actualPassword);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPasswordWithInvalidPassword_tBpl5() {
    String expectedPassword = "invalidPassword";
    String actualPassword = accountProfileDataBean.getPassword();
    assertNotEquals(expectedPassword, actualPassword);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetAccount_jPed0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
    assertNotNull(accountDataBean);
    assertEquals("userID", accountDataBean.getProfileID());
    assertEquals("password", accountDataBean.getProfile().getPassword());
    assertEquals("fullName", accountDataBean.getProfile().getFullName());
    assertEquals("address", accountDataBean.getProfile().getAddress());
    assertEquals("email", accountDataBean.getProfile().getEmail());
    assertEquals("creditCard", accountDataBean.getProfile().getCreditCard());
  }
}