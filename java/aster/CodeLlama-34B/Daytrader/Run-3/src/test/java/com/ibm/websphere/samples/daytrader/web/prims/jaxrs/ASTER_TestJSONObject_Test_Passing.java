/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.Arrays;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TestJSONObject_Test_Passing {
  TestJSONObject testJSONObject = new TestJSONObject();

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0001_Null_pkoD1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0001();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0013_Xhph0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0013("test");
    assertEquals("test", testJSONObject.getProp0013());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0003_null_RSYB1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0003();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010_diIA0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("test");
    assertEquals("test", testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010WithNull_leBX1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010(null);
    assertNull(testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0010WithEmptyString_tVek2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("");
    assertEquals("", testJSONObject.getProp0010());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009_KBIi0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0009("test");
    assertEquals("test", testJSONObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009WithNull_FRQj1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0009(null);
    assertEquals(null, testJSONObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0009WithEmptyString_KUwI2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0009("");
    assertEquals("", testJSONObject.getProp0009());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0008_hXkq0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0008("test");
    assertEquals("test", testJSONObject.getProp0008());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0008WithNull_ZSYT1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0008(null);
    assertNull(testJSONObject.getProp0008());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0008WithEmptyString_fUWD2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0008("");
    assertEquals("", testJSONObject.getProp0008());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_mtvV0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    assertEquals("test", testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_pJjG0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    assertEquals("test", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0011_jwgs0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0011("test");
    assertEquals("test", testJSONObject.getProp0011());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0011_Null_FAoX1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0011(null);
    assertNull(testJSONObject.getProp0011());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0011_EmptyString_iduh2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0011("");
    assertEquals("", testJSONObject.getProp0011());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006_znoS0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006("test");
    assertEquals("test", testJSONObject.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006Null_RWqb1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006(null);
    assertNull(testJSONObject.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006EmptyString_mjqV2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006("");
    assertEquals("", testJSONObject.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0006InvalidValue_Cuhr3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006("invalid");
    assertEquals("invalid", testJSONObject.getProp0006());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004_lDbZ0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("test");
    assertEquals("test", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004_Null_gZXv1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004(null);
    assertNull(testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0004_EmptyString_jStD2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("");
    assertEquals("", testJSONObject.getProp0004());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003_OCSU0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0003("test");
    assertEquals("test", testJSONObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003WithNull_FRfs1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0003(null);
    assertNull(testJSONObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003WithEmptyString_ZxaT2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0003("");
    assertEquals("", testJSONObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0003WithInvalidString_eKYJ3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0003("invalid");
    assertEquals("invalid", testJSONObject.getProp0003());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005_SRXm0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0005("test");
    assertEquals("test", testJSONObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithNull_nUSm1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0005(null);
    assertEquals(null, testJSONObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0005WithEmptyString_wWCE2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0005("");
    assertEquals("", testJSONObject.getProp0005());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0015_DFST0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0015("test");
    assertEquals("test", testJSONObject.getProp0015());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0015_null_hdbt1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0015(null);
    assertNull(testJSONObject.getProp0015());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0015_emptyString_KMdK2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0015("");
    assertEquals("", testJSONObject.getProp0015());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007_CyTT0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("test");
    assertEquals("test", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithNull_dIvq1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007(null);
    assertNull(testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithEmptyString_Zref2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("");
    assertEquals("", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithInvalidString_AhaF3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("invalid");
    assertEquals("invalid", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithValidString_CrIZ4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("valid");
    assertEquals("valid", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithDifferentCasing_AZOr5() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("TEST");
    assertEquals("TEST", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithSpecialCharacters_nTpV7() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("test@#$%^&*()_+");
    assertEquals("test@#$%^&*()_+", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithMultipleValues_VrVV8() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("test1");
    testJSONObject.setProp0007("test2");
    assertEquals("test2", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0016_uRAr0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0016("test");
    assertEquals("test", testJSONObject.getProp0016());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0016WithNull_GYBp1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0016(null);
    assertNull(testJSONObject.getProp0016());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0016WithEmptyString_zjiz2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0016("");
    assertEquals("", testJSONObject.getProp0016());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0002_Lcfa0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0002("test");
    assertEquals("test", testJSONObject.getProp0002());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0002_null_jpse1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0002(null);
    assertNull(testJSONObject.getProp0002());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0002_emptyString_GwxO2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0002("");
    assertEquals("", testJSONObject.getProp0002());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016WithNull_hkzY1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0016();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016WithInvalidString_VCFq3() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "invalid";
    String actual = testJSONObject.getProp0016();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016WithDifferentAnnotations_tPrk13() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0016";
    String actual = testJSONObject.getProp0016();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0006WithDifferentValues_iXcN1_1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0006";
    String actual = testJSONObject.getProp0006();
    testJSONObject.setProp0006("differentValue");
    expected = "differentValue";
    actual = testJSONObject.getProp0006();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001_YuXa0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001("value");
    assertEquals("value", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithNull_OPfs1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001(null);
    assertEquals(null, testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithEmptyString_mirS2() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001("");
    assertEquals("", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithInvalidValue_yLin4() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001("invalid");
    assertEquals("invalid", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithValidValue_pbdO5() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001("valid");
    assertEquals("valid", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithDifferentCasing_LiFj6() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001("VaLid");
    assertEquals("VaLid", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithDifferentCasingAndWhitespaceAndInvalidValue_PjSu8() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001(" VaLid invalid");
    assertEquals(" VaLid invalid", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithDifferentCasingAndWhitespaceAndValidValue_VrtE9() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001(" VaLid valid");
    assertEquals(" VaLid valid", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithDifferentCasingAndWhitespaceAndInvalidValueAndValidValue_iZSb10() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001(" VaLid invalid valid");
    assertEquals(" VaLid invalid valid", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithDifferentCasingAndWhitespaceAndValidValueAndInvalidValue_TEoH11() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001(" VaLid valid invalid");
    assertEquals(" VaLid valid invalid", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0001WithDifferentCasingAndWhitespaceAndValidValueAndInvalidValueAndValidValue_SrCc12() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001(" VaLid valid invalid valid");
    assertEquals(" VaLid valid invalid valid", testJSONObject.getProp0001());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_RKzF0() {
    testJSONObject = new TestJSONObject();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithNull_YCAq2() {
    String expected = null;
    String actual = testJSONObject.getProp0009();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithInvalidString_yeFk5() {
    String expected = "prop0009";
    String actual = testJSONObject.getProp0009();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithInvalidStringAndEmptyString_JShP10() {
    String expected = "";
    String actual = testJSONObject.getProp0009();
    assertNotEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0005WithNullValue_geMy1_ofHA0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0009();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015WithNullInput_qKIz1_sZAm0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = null;
    String actual = testJSONObject.getProp0015();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009_nullInput_afDo1_iiqw0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0009();
    assertNull(actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithInvalidType_HXUm10_FVeo0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("new Object()");
    assertEquals("new Object()", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0007WithDifferentTypes_fTGc9_ZCfX0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("1");
    assertEquals("1", testJSONObject.getProp0007());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0012WithNullValue_GZzU1_AMrs0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0012();
    assertNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_7() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
    assertEquals("[1, 2, 3]", testJSONObject.getProp0012());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0014_GQkJ1_KFCn0_9() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    testJSONObject.setProp0014(null);
    testJSONObject.setProp0014("");
    testJSONObject.setProp0014("123");
    testJSONObject.setProp0014("true");
    testJSONObject.setProp0014("false");
    testJSONObject.setProp0014(new Object().toString());
    testJSONObject.setProp0014(Arrays.toString(new int[]{1, 2, 3}));
    testJSONObject.setProp0014(Arrays.toString(new String[]{"a", "b", "c"}));
    assertEquals(Arrays.toString(new String[]{"a", "b", "c"}), testJSONObject.getProp0014());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0010_LCJd0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String prop0010 = testJSONObject.getProp0010();
    assertNull(prop0010);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0003_tyxe0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0003";
    String actual = testJSONObject.getProp0003();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0003_empty_leFi2_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0003();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0004_nydc0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0004();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0011_JTDP0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String actual = testJSONObject.getProp0011();
    String expected = "prop0011";
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0015_XYmb0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "prop0015";
    String actual = testJSONObject.getProp0015();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0016WithEmptyString_rghv2_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0016();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009_QKvd1_PUJG0_fid1() {
    String expected = "prop0009";
    String actual = testJSONObject.getProp0009();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetProp0009WithEmptyString_Pcip3_VzFP0_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String expected = "";
    String actual = testJSONObject.getProp0009();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProp0012_AOIk1_gSLe0_4_fid1() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    testJSONObject.setProp0012(null);
    testJSONObject.setProp0012("");
    testJSONObject.setProp0012("123");
    testJSONObject.setProp0012("true");
    testJSONObject.setProp0012("false");
    testJSONObject.setProp0012("[1, 2, 3]");
    testJSONObject.setProp0012("[\"a\", \"b\", \"c\"]");
    testJSONObject.setProp0012("[1, 2, 3]");
  }
}