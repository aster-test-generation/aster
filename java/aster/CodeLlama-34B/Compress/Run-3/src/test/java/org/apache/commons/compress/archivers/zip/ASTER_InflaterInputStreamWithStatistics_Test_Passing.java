/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_InflaterInputStreamWithStatistics_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRead_InvalidInput_HRiT1_dsEd0_1() throws IOException {
    InflaterInputStreamWithStatistics stream = new InflaterInputStreamWithStatistics(null);
    byte[] b = new byte[10];
    int off = 0;
    int len = 10;
    int bytes = stream.read(b, off, len);
    assertEquals(-1, bytes);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRead_InvalidInput_HRiT1_dsEd0_2() throws IOException {
    InflaterInputStreamWithStatistics stream = new InflaterInputStreamWithStatistics(null);
    byte[] b = new byte[10];
    int off = 0;
    int len = 10;
    int bytes = stream.read(b, off, len);
    assertEquals(0, stream.getUncompressedCount());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressedCount_esQv0_ThXl0() {
    InflaterInputStreamWithStatistics stream = new InflaterInputStreamWithStatistics(null, null);
    long compressedCount = stream.getCompressedCount();
    assertEquals(0, compressedCount);
}
}