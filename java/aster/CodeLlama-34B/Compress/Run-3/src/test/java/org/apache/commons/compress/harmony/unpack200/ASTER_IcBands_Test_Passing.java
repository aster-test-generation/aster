/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_IcBands_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetIcTuplesWithNullSegment_ZrWC1() {
    IcBands icBands = new IcBands(null);
    IcTuple[] icTuples = icBands.getIcTuples();
    assertNull(icTuples);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRelevantIcTuples1_suMC0_wiIR0() {
    Segment segment = new Segment();
    ClassConstantPool cp = new ClassConstantPool();
    IcBands icBands = new IcBands(segment);
    String className = "TestClass";
    IcTuple[] relevantTuples = icBands.getRelevantIcTuples(className, cp);
    assertEquals(0, relevantTuples.length);
}
}