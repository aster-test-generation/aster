/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.lz4;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BlockLZ4CompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinishWithNullOutputStream_ZaQc2() throws IOException {
    BlockLZ4CompressorOutputStream stream = new BlockLZ4CompressorOutputStream(null);
    try {
        stream.finish();
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCloseWithNullOutputStream_WUJJ8() throws IOException {
        BlockLZ4CompressorOutputStream compressor = new BlockLZ4CompressorOutputStream(null);
        try {
            compressor.close();
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            assertTrue(true);
        }
}
}