/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnparseableExtraFieldData_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_ValidData_XsHK0() {
    UnparseableExtraFieldData fieldData = new UnparseableExtraFieldData();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    fieldData.parseFromCentralDirectoryData(buffer, offset, length);
    assertEquals(buffer, fieldData.getCentralDirectoryData());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_InvalidData_jBUQ1() {
    UnparseableExtraFieldData fieldData = new UnparseableExtraFieldData();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    fieldData.parseFromCentralDirectoryData(buffer, offset, length);
    assertNull(fieldData.getCentralDirectoryData());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_NullBuffer_EOcR1() {
    UnparseableExtraFieldData data = new UnparseableExtraFieldData();
    byte[] buffer = null;
    int offset = 0;
    int length = 10;
    try {
        data.parseFromLocalFileData(buffer, offset, length);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertEquals("buffer", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_InvalidOffset_xbmz2() {
    UnparseableExtraFieldData data = new UnparseableExtraFieldData();
    byte[] buffer = new byte[10];
    int offset = -1;
    int length = 10;
    try {
        data.parseFromLocalFileData(buffer, offset, length);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
        assertEquals("offset", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_InvalidLength_eRBv3() {
    UnparseableExtraFieldData data = new UnparseableExtraFieldData();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = -1;
    try {
        data.parseFromLocalFileData(buffer, offset, length);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
        assertEquals("length", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_InvalidBufferLength_Iekv4() {
    UnparseableExtraFieldData data = new UnparseableExtraFieldData();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 11;
    try {
        data.parseFromLocalFileData(buffer, offset, length);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
        assertEquals("buffer length", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_centralDirectoryDataIsNull_DlAI0() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] centralDirectoryData = unparseableExtraFieldData.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_centralDirectoryDataIsNotNull_UTBR1() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] centralDirectoryData = unparseableExtraFieldData.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 10);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_centralDirectoryDataIsNotNull_localFileDataIsNotNull_dbZA5() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] centralDirectoryData = unparseableExtraFieldData.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 20);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_SDHK0() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] localFileData = unparseableExtraFieldData.getLocalFileDataData();
    assertNotNull(localFileData);
    assertEquals(localFileData.length, 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength_LocalFileDataLength_XVcV0() {
    UnparseableExtraFieldData data = new UnparseableExtraFieldData();
    ZipShort length = data.getCentralDirectoryLength();
    assertEquals(data.getLocalFileDataLength().getValue(), length.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_centralDirectoryDataIsNull_DlAI0_1() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] centralDirectoryData = unparseableExtraFieldData.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_centralDirectoryDataIsNull_DlAI0_2() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] centralDirectoryData = unparseableExtraFieldData.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_centralDirectoryDataIsNotNull_UTBR1_2() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] centralDirectoryData = unparseableExtraFieldData.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 10);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_centralDirectoryDataIsNotNull_localFileDataIsNotNull_dbZA5_2() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] centralDirectoryData = unparseableExtraFieldData.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 20);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_SDHK0_1() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] localFileData = unparseableExtraFieldData.getLocalFileDataData();
    assertNotNull(localFileData);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_SDHK0_2() {
    UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
    byte[] localFileData = unparseableExtraFieldData.getLocalFileDataData();
    assertEquals(localFileData.length, 0);}
}