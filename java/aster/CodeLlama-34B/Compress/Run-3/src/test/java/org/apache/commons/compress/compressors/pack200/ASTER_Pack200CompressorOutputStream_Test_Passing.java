/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.pack200;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200CompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWriteWithNullOutputStream_kYpW4() throws IOException {
    Pack200CompressorOutputStream pack200CompressorOutputStream = new Pack200CompressorOutputStream(null);
    byte[] b = new byte[10];
    try {
        pack200CompressorOutputStream.write(b);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertEquals("outputStream", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_WithNullOutputStream_zvBn5() throws IOException {
    Pack200CompressorOutputStream stream = new Pack200CompressorOutputStream(null);
    try {
        stream.write(1);
        fail("Expected IOException");
    } catch (IOException e) {
        assertEquals("OutputStream is null", e.getMessage());
    }
}
}