/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DeprecatedAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_cRsf0() {
    DeprecatedAttribute deprecatedAttribute = new DeprecatedAttribute();
    String expected = "Deprecated Attribute";
    String actual = deprecatedAttribute.toString();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_DZVh0() {
    DeprecatedAttribute attr = new DeprecatedAttribute();
    int length = attr.getLength();
    assertEquals(0, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthWithNonZeroLength_QIfL1() {
    DeprecatedAttribute attr = new DeprecatedAttribute();
    int length = attr.getLength();
    assertNotEquals(0, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthWithNegativeLength_slCC2() {
    DeprecatedAttribute attr = new DeprecatedAttribute();
    int length = attr.getLength();
    assertTrue(length < 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthWithPositiveLength_IUKj3() {
    DeprecatedAttribute attr = new DeprecatedAttribute();
    int length = attr.getLength();
    assertTrue(length > 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthWithMaxValue_OYFp4() {
    DeprecatedAttribute attr = new DeprecatedAttribute();
    int length = attr.getLength();
    assertEquals(Integer.MAX_VALUE, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthWithMinValue_nqXY5() {
    DeprecatedAttribute attr = new DeprecatedAttribute();
    int length = attr.getLength();
    assertEquals(Integer.MIN_VALUE, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthWithNull_VvTT6() {
    DeprecatedAttribute attr = new DeprecatedAttribute();
    int length = attr.getLength();
    assertNull(length);
}
}