/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import java.io.DataOutputStream;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AnnotationDefaultAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNullElementValue_TsNp1() {
    AnnotationDefaultAttribute annotationDefaultAttribute = new AnnotationDefaultAttribute(null);
    String expected = "AnnotationDefault: null";
    String actual = annotationDefaultAttribute.toString();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthWithNullElementValue_BjHT1() {
    AnnotationDefaultAttribute annotationDefaultAttribute = new AnnotationDefaultAttribute(null);
    int length = annotationDefaultAttribute.getLength();
    assertEquals(0, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWriteBodyWithNullElementValue_CzUZ1() throws IOException {
    AnnotationDefaultAttribute annotationDefaultAttribute = new AnnotationDefaultAttribute(null);
    DataOutputStream dos = mock(DataOutputStream.class);
    annotationDefaultAttribute.writeBody(dos);
    verify(dos, never()).write(any(byte[].class));
}
}