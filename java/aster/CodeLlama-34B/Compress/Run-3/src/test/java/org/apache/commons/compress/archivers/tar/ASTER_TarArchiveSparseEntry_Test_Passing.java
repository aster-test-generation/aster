/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;
import java.io.IOException;
import java.util.List;
import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarArchiveSparseEntry_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsExtended_aqSR0_aZXL0() {
    byte[] headerBuf = new byte[512];
    TarArchiveSparseEntry entry = null;
    try {
        entry = new TarArchiveSparseEntry(headerBuf);
    } catch (IOException e) {
        e.printStackTrace();
    }
    assertTrue(entry.isExtended());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsExtended_False_bTXp1_EQbW0() {
    byte[] headerBuf = new byte[512];
    TarArchiveSparseEntry entry = null;
    try {
        entry = new TarArchiveSparseEntry(headerBuf);
    } catch (IOException e) {
        e.printStackTrace();
    }
    assertFalse(entry.isExtended());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSparseHeaders_qnyE0_sFsM0() {
    byte[] headerBuf = new byte[1024];
    TarArchiveSparseEntry entry = null;
    try {
        entry = new TarArchiveSparseEntry(headerBuf);
    } catch (IOException e) {
        e.printStackTrace();
    }
    List<TarArchiveStructSparse> sparseHeaders = entry.getSparseHeaders();
    assertNotNull(sparseHeaders);
    assertEquals(0, sparseHeaders.size());
}
}