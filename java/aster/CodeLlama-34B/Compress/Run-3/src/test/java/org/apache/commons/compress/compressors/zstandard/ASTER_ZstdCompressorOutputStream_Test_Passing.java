/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.zstandard;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ZstdCompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_WithNullOutputStream_IQkU5_vxmo0() {
    try {
        ZstdCompressorOutputStream zstdCompressorOutputStream = new ZstdCompressorOutputStream(null);
        assertEquals("ZstdCompressorOutputStream{encOS=null}", zstdCompressorOutputStream.toString());
    } catch (IOException e) {
        e.printStackTrace();
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_WithNullOutputStreamAndLevel_LpRJ6_TFJq0() {
    try {
        ZstdCompressorOutputStream zstdCompressorOutputStream = new ZstdCompressorOutputStream(null, 5);
        assertEquals("ZstdCompressorOutputStream{encOS=null, level=5}", zstdCompressorOutputStream.toString());
    } catch (IOException e) {
        e.printStackTrace();
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_WithNullOutputStreamAndAllParameters_GPrQ9_dXUD0() {
    try {
        ZstdCompressorOutputStream zstdCompressorOutputStream = new ZstdCompressorOutputStream(null, 5, false, true);
        assertEquals("ZstdCompressorOutputStream{encOS=null, level=5, closeFrameOnFlush=false, useChecksum=true}", zstdCompressorOutputStream.toString());
    } catch (IOException e) {
        e.printStackTrace();
    }
}
}