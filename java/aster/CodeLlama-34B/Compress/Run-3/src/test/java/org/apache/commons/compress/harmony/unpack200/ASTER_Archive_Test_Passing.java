/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.jar.JarInputStream;
import java.util.jar.JarOutputStream;
import java.util.zip.GZIPInputStream;
import org.apache.commons.io.input.BoundedInputStream;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Archive_Test_Passing {
private int logLevel;
public void testUnpackWithGzipInputStream_urpi0() throws IOException {
    InputStream inputStream = new GZIPInputStream(new FileInputStream("test.gz"));
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
}
public void testUnpackWithBoundedInputStream_SmzN1() throws IOException {
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
}
public void testUnpackWithGzipInputStreamAndBoundedInputStream_wnEX2() throws IOException {
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
}
public void testUnpackWithJarInputStream_oGHu3() throws IOException {
    InputStream inputStream = new JarInputStream(new FileInputStream("test.jar"));
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
}
public void testUnpackWithBoundedInputStreamAndJarInputStream_FQBy4() throws IOException {
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
}
public void testUnpackWithGzipInputStreamAndJarInputStream_OGYc5() throws IOException {
    InputStream inputStream = new GZIPInputStream(new JarInputStream(new FileInputStream("test.jar")));
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
}
public void testUnpackWithBoundedInputStreamAndGzipInputStreamAndJarInputStream_npbo6() throws IOException {
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
}
public void testUnpackWithSegment_KQVM7() throws IOException {
    InputStream inputStream = new FileInputStream("test.jar");
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
}
public void testUnpackWithBoundedInputStreamAndSegment_sFLZ8() throws IOException {
    InputStream inputStream = new BoundedInputStream(new BufferedInputStream(new FileInputStream("test.jar")));
    JarOutputStream outputStream = new JarOutputStream(new FileOutputStream("test.jar"));
    Archive archive = new Archive(inputStream, outputStream);
    archive.unpack();
}
public void testUnpackWithGzipInputStreamAndSegment_GmWk9() throws IOException {
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setQuiet(final boolean quiet) {
    if (quiet || logLevel == Segment.LOG_LEVEL_QUIET) {
        logLevel = Segment.LOG_LEVEL_QUIET;
    }
}
}