/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SevenZMethodConfiguration_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameObject_tmsP0() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
    assertTrue(config.equals(config));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentObjects_lGim1() {
    SevenZMethodConfiguration config1 = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
    SevenZMethodConfiguration config2 = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
    assertFalse(config1.equals(config2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentMethods_jVvD2() {
    SevenZMethodConfiguration config1 = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
    SevenZMethodConfiguration config2 = new SevenZMethodConfiguration(SevenZMethod.LZMA, null);
    assertFalse(config1.equals(config2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentOptions_YmpP3() {
    SevenZMethodConfiguration config1 = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
    SevenZMethodConfiguration config2 = new SevenZMethodConfiguration(SevenZMethod.COPY, new Object());
    assertFalse(config1.equals(config2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_NullMethod_gdzM4() {
    SevenZMethodConfiguration config1 = new SevenZMethodConfiguration(null, null);
    SevenZMethodConfiguration config2 = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
    assertFalse(config1.equals(config2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithCopyMethod_rNRe0() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithLZMAMethod_vOGE1() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.LZMA, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithLZMA2Method_aWCy2() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.LZMA2, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithDEFLATEMethod_fVER3() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.DEFLATE, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithDEFLATE64Method_fKxW4() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.DEFLATE64, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithBZIP2Method_QhJS5() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BZIP2, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithAES256SHA256Method_unWh6() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.AES256SHA256, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithBCJ_X86_FILTERMethod_BqFQ7() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_X86_FILTER, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithBCJ_PPC_FILTERMethod_GIRF8() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_PPC_FILTER, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsWithBCJ_IA64_FILTERMethod_TBeT9() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_IA64_FILTER, null);
    Object options = config.getOptions();
    assertNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithCopyMethod_JjLE0() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.COPY, null);
assertEquals(SevenZMethod.COPY, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithLZMAMethod_sfsL1() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.LZMA, null);
assertEquals(SevenZMethod.LZMA, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithLZMA2Method_Npqb2() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.LZMA2, null);
assertEquals(SevenZMethod.LZMA2, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithDEFLATEMethod_qrXP3() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.DEFLATE, null);
assertEquals(SevenZMethod.DEFLATE, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithDEFLATE64Method_lXdO4() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.DEFLATE64, null);
assertEquals(SevenZMethod.DEFLATE64, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithBZIP2Method_lFOB5() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BZIP2, null);
assertEquals(SevenZMethod.BZIP2, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithAES256SHA256Method_UtuP6() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.AES256SHA256, null);
assertEquals(SevenZMethod.AES256SHA256, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithBCJ_X86_FILTERMethod_Ktht7() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_X86_FILTER, null);
assertEquals(SevenZMethod.BCJ_X86_FILTER, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithBCJ_PPC_FILTERMethod_lYRt8() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_PPC_FILTER, null);
assertEquals(SevenZMethod.BCJ_PPC_FILTER, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMethodWithBCJ_IA64_FILTERMethod_AREz9() {
SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_IA64_FILTER, null);
assertEquals(SevenZMethod.BCJ_IA64_FILTER, config.getMethod());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_NullMethod_OuGi0() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(null);
    assertEquals(0, config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_NonNullMethod_Gkeh1() {
    SevenZMethod method = SevenZMethod.COPY;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_LZMAMethod_rVva2() {
    SevenZMethod method = SevenZMethod.LZMA;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_LZMA2Method_eYTE3() {
    SevenZMethod method = SevenZMethod.LZMA2;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_DEFLATEMethod_wzmY4() {
    SevenZMethod method = SevenZMethod.DEFLATE;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_DEFLATE64Method_LrtL5() {
    SevenZMethod method = SevenZMethod.DEFLATE64;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_BZIP2Method_YVOl6() {
    SevenZMethod method = SevenZMethod.BZIP2;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_AES256SHA256Method_OsBS7() {
    SevenZMethod method = SevenZMethod.AES256SHA256;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_BCJ_X86_FILTERMethod_blNv8() {
    SevenZMethod method = SevenZMethod.BCJ_X86_FILTER;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_BCJ_PPC_FILTERMethod_lDor9() {
    SevenZMethod method = SevenZMethod.BCJ_PPC_FILTER;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_BCJ_IA64_FILTERMethod_vlKy10() {
    SevenZMethod method = SevenZMethod.BCJ_IA64_FILTER;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_BCJ_ARM_FILTERMethod_UHnL11() {
    SevenZMethod method = SevenZMethod.BCJ_ARM_FILTER;
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(method);
    assertEquals(method.hashCode(), config.hashCode());
}
}