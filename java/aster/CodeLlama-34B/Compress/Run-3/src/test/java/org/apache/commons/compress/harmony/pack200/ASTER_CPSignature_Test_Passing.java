/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CPSignature_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSignatureFormWithNullSignatureForm_iIQX1() {
    CPSignature signature = new CPSignature("signature", null, new ArrayList<CPClass>());
    assertNull(signature.getSignatureForm());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetUnderlyingString_bFcS0_QwtJ1() {
    String signature = "Ljava/lang/String;";
    org.apache.commons.compress.harmony.pack200.CPUTF8 signatureForm = new org.apache.commons.compress.harmony.pack200.CPUTF8(signature);
    List<CPClass> classes = new ArrayList<>();
    classes.add(new CPClass(signatureForm));
    CPSignature cps = new CPSignature(signature, signatureForm, classes);
    String result = cps.getUnderlyingString();
    assertEquals(signature, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetUnderlyingStringWithNullClasses_oOoP4_dYXQ1() {
    String signature = "Ljava/lang/String;";
    org.apache.commons.compress.harmony.pack200.CPUTF8 signatureForm = new org.apache.commons.compress.harmony.pack200.CPUTF8(signature);
    List<CPClass> classes = null;
    CPSignature cps = new CPSignature(signature, signatureForm, classes);
    String result = cps.getUnderlyingString();
    assertEquals(signature, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetUnderlyingStringWithEmptyClasses_PMaN5_XdOz1() {
    String signature = "Ljava/lang/String;";
    org.apache.commons.compress.harmony.pack200.CPUTF8 signatureForm = new org.apache.commons.compress.harmony.pack200.CPUTF8(signature);
    List<CPClass> classes = new ArrayList<>();
    CPSignature cps = new CPSignature(signature, signatureForm, classes);
    String result = cps.getUnderlyingString();
    assertEquals(signature, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSignatureFormWithEmptySignatureForm_zSfv2_Ujbi0() {
    org.apache.commons.compress.harmony.pack200.CPUTF8 signatureForm = new org.apache.commons.compress.harmony.pack200.CPUTF8("");
    CPSignature signature = new CPSignature("signature", signatureForm, new ArrayList<CPClass>());
    assertEquals(signatureForm, signature.getSignatureForm());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSignatureFormWithNullSignature_jseM6_JNXk0() {
    org.apache.commons.compress.harmony.pack200.CPUTF8 signatureForm = new org.apache.commons.compress.harmony.pack200.CPUTF8("signature");
    CPSignature signature = new CPSignature(null, signatureForm, new ArrayList<CPClass>());
    assertNull(signature.getSignatureForm());
}
}