/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RunCodec_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithInvalidInput_sBrQ2() throws Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(1, 256);
    BHSDCodec bCodec = new BHSDCodec(3, 4);
    RunCodec runCodec = new RunCodec(5, aCodec, bCodec);
    try {
        runCodec.encode(10, 20);
        fail("Expected Pack200Exception");
    } catch (Pack200Exception e) {
        assertEquals("Must encode entire band at once with a RunCodec", e.getMessage());
    }
}
}