/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200PackerAdapter_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFirePropertyChangeWithNullPropertyName_laKW0_Wwcy0() {
    Pack200PackerAdapter packer = new Pack200PackerAdapter();
    try {
        packer.firePropertyChange(null, null, null);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertEquals("propertyName cannot be null", e.getMessage());
    } catch (IOException e) {
        fail("Expected NullPointerException, but got IOException");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFirePropertyChangeWithEmptyPropertyName_bLXb1_xBeA0() {
    Pack200PackerAdapter packer = new Pack200PackerAdapter();
    try {
        packer.firePropertyChange("", null, null);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        assertEquals("propertyName cannot be empty", e.getMessage());
    } catch (IOException e) {
        fail("IOException should not be thrown");
    }
}
}