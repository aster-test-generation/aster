/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200ClassReader_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFileName_Cxqp0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String fileName = reader.getFileName();
    assertEquals("", fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFileNameWithNonEmptyByteArray_WUcW1() {
    byte[] bytes = new byte[10];
    bytes[0] = 1;
    Pack200ClassReader reader = new Pack200ClassReader(bytes);
    String fileName = reader.getFileName();
    assertEquals("", fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFileNameWithNullByteArray_adAl2() {
    Pack200ClassReader reader = new Pack200ClassReader(null);
    String fileName = reader.getFileName();
    assertEquals("", fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_ValidIndex_XZlY0() {
    byte[] b = new byte[2];
    b[0] = 19;
    b[1] = 20;
    Pack200ClassReader reader = new Pack200ClassReader(b);
    int result = reader.readUnsignedShort(1);
    assertEquals(20, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_InvalidIndex_lGpr1() {
    byte[] b = new byte[2];
    b[0] = 19;
    b[1] = 20;
    Pack200ClassReader reader = new Pack200ClassReader(b);
    int result = reader.readUnsignedShort(0);
    assertEquals(Short.MIN_VALUE, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex1_GlFV0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex2_QOyo1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex3_HORo2() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[2]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex4_RvNe3() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[3]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex5_mcwQ4() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[4]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex6_WlqV5() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[5]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex7_FoKA6() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex8_JYmz7() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[7]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex9_nXwk8() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[8]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex10_CoFd9() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[9]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileName_xgab0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test.class");
    assertEquals("test.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithNull_CGoU1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName(null);
    assertNull(reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithEmptyString_uOPS2() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("");
    assertEquals("", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithInvalidFileName_EgCm3() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test");
    assertEquals("test", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPath_tpDi5() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.class");
    assertEquals("test/test.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndExtension_qvhI6() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.class.ext");
    assertEquals("test/test.class.ext", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensions_gLCE7() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.class.ext.ext2");
    assertEquals("test/test.class.ext.ext2", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensionsAndDots_aXxP8() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.class.ext.ext2.ext3");
    assertEquals("test/test.class.ext.ext2.ext3", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensionsAndDotsAndSpaces_uvET9() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.class.ext.ext2.ext3.ext4");
    assertEquals("test/test.class.ext.ext2.ext3.ext4", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensionsAndDotsAndSpacesAndSpecialChars_Jmdl10() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.class.ext.ext2.ext3.ext4.ext5");
    assertEquals("test/test.class.ext.ext2.ext3.ext4.ext5", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensionsAndDotsAndSpacesAndSpecialCharsAndInvalidChars_CYRz11() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.class.ext.ext2.ext3.ext4.ext5.ext6");
    assertEquals("test/test.class.ext.ext2.ext3.ext4.ext5.ext6", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_SyntheticAttribute_AGyC0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    assertEquals("Synthetic", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_NonSyntheticAttribute_uVQc1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    assertNotEquals("Synthetic", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_SyntheticAttributeWithNonEmptyString_RqMk3() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[] {'a', 'b', 'c'});
    assertEquals("abc", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_NonSyntheticAttributeWithNonEmptyString_WCle4() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[] {'a', 'b', 'c'});
    assertNotEquals("abc", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_NullAttributeWithNonEmptyString_ixoE5() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, null);
    assertNull(utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_NonNullAttributeWithEmptyString_fZWX6() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    assertEquals("", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasSyntheticAttributes_true_rCrP0() {
    byte[] b = new byte[10];
    Pack200ClassReader reader = new Pack200ClassReader(b);
    assertTrue(reader.hasSyntheticAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasSyntheticAttributes_null_IbTO2() {
    Pack200ClassReader reader = new Pack200ClassReader(null);
    assertFalse(reader.hasSyntheticAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasSyntheticAttributes_empty_kgpm3() {
    byte[] b = new byte[0];
    Pack200ClassReader reader = new Pack200ClassReader(b);
    assertFalse(reader.hasSyntheticAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasSyntheticAttributes_valid_ksme5() {
    byte[] b = new byte[10];
    b[0] = 0x01;
    b[1] = 0x02;
    Pack200ClassReader reader = new Pack200ClassReader(b);
    assertTrue(reader.hasSyntheticAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasSyntheticAttributes_validData_SbKc8() {
    byte[] b = new byte[10];
    b[0] = 0x01;
    b[1] = 0x02;
    b[2] = 0x03;
    b[3] = 0x04;
    b[4] = 0x05;
    Pack200ClassReader reader = new Pack200ClassReader(b);
    assertTrue(reader.hasSyntheticAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFileName_Cxqp0_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    String fileName = reader.getFileName();
    assertEquals("", fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_ValidIndex_XZlY0_fid1() {
    byte[] b = new byte[2];
    b[0] = 19;
    b[1] = 20;
    Pack200ClassReader reader = new Pack200ClassReader(b);
    int result = reader.readUnsignedShort(0);
    assertEquals(19, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_InvalidIndex_lGpr1_fid1() {
    byte[] b = new byte[2];
    b[0] = 19;
    b[1] = 20;
    Pack200ClassReader reader = new Pack200ClassReader(b);
    int result = reader.readUnsignedShort(0);
    assertEquals(38, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex1_GlFV0_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    assertTrue(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex3_HORo2_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    assertTrue(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex8_JYmz7_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[7]);
    assertTrue(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex9_nXwk8_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[8]);
    assertTrue(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex10_CoFd9_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[10]);
    assertTrue(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileName_xgab0_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    reader.setFileName("test.class");
    assertEquals("test.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithNull_CGoU1_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    reader.setFileName(null);
    assertNull(reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithEmptyString_uOPS2_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    reader.setFileName("");
    assertEquals("", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileName_vKqP4_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    reader.setFileName("test.class");
    assertEquals("test.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPath_tpDi5_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    reader.setFileName("test/test.class");
    assertEquals("test/test.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndExtension_qvhI6_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    reader.setFileName("test/test.class.ext");
    assertEquals("test/test.class.ext", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensions_gLCE7_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    reader.setFileName("test/test.class.ext.ext2");
    assertEquals("test/test.class.ext.ext2", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensionsAndDots_aXxP8_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    reader.setFileName("test/test.class.ext.ext2.ext3");
    assertEquals("test/test.class.ext.ext2.ext3", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensionsAndDotsAndSpaces_uvET9_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    reader.setFileName("test/test.class.ext.ext2.ext3.ext4");
    assertEquals("test/test.class.ext.ext2.ext3.ext4", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensionsAndDotsAndSpacesAndSpecialChars_Jmdl10_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    reader.setFileName("test/test.class.ext.ext2.ext3.ext4.ext5");
    assertEquals("test/test.class.ext.ext2.ext3.ext4.ext5", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithValidFileNameAndPathAndMultipleExtensionsAndDotsAndSpacesAndSpecialCharsAndInvalidChars_CYRz11_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    reader.setFileName("test/test.class.ext.ext2.ext3.ext4.ext5.ext6");
    assertEquals("test/test.class.ext.ext2.ext3.ext4.ext5.ext6", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_SyntheticAttribute_AGyC0_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    String utf8 = reader.readUTF8(0, new char[6]);
    assertEquals("Synthetic", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_NonSyntheticAttribute_uVQc1_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    String utf8 = reader.readUTF8(0, new char[1]);
    assertNotEquals("Synthetic", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_SyntheticAttributeWithNonEmptyString_RqMk3_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[6]);
    String utf8 = reader.readUTF8(0, new char[] {'a', 'b', 'c'});
    assertEquals("abc", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_NonSyntheticAttributeWithNonEmptyString_WCle4_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[10]);
    String utf8 = reader.readUTF8(0, new char[] {'a', 'b', 'c'});
    assertEquals("abc", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_NonNullAttributeWithEmptyString_fZWX6_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    String utf8 = reader.readUTF8(0, new char[0]);
    assertEquals("", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_NonNullAttributeWithNonEmptyString_lbQL7_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    String utf8 = reader.readUTF8(0, new char[] {'a', 'b', 'c'});
    assertEquals("abc", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasSyntheticAttributes_null_IbTO2_fid1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    assertFalse(reader.hasSyntheticAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasSyntheticAttributes_empty_kgpm3_fid1() {
    byte[] b = new byte[0];
    Pack200ClassReader reader = new Pack200ClassReader(b);
    assertTrue(reader.hasSyntheticAttributes());
}
}