/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode.forms;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DoubleForm_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_QeKf0() {
    DoubleForm doubleForm = new DoubleForm(1, "name", new int[] {1, 2});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentOpcode_ylHc1() {
    DoubleForm doubleForm = new DoubleForm(2, "name", new int[] {1, 2});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentName_CSaz2() {
    DoubleForm doubleForm = new DoubleForm(1, "differentName", new int[] {1, 2});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentRewrite_ulxn3() {
    DoubleForm doubleForm = new DoubleForm(1, "name", new int[] {3, 4});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithNullRewrite_bBnI4() {
    DoubleForm doubleForm = new DoubleForm(1, "name", new int[0]);
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithEmptyRewrite_qvYl5() {
    DoubleForm doubleForm = new DoubleForm(1, "name", new int[] {});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidOpcode_OsMR6() {
    DoubleForm doubleForm = new DoubleForm(0, "name", new int[] {1, 2});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidName_RXyz7() {
    DoubleForm doubleForm = new DoubleForm(1, null, new int[] {1, 2});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidRewrite_hELZ8() {
    DoubleForm doubleForm = new DoubleForm(1, "name", new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithEmptyName_wTTg10() {
    DoubleForm doubleForm = new DoubleForm(1, "", new int[] {1, 2});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidOpcodeAndName_GkxK11() {
    DoubleForm doubleForm = new DoubleForm(0, null, new int[] {1, 2});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidOpcodeAndRewrite_tfPc12() {
    DoubleForm doubleForm = new DoubleForm(0, "name", new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidNameAndRewrite_aGYa13() {
    DoubleForm doubleForm = new DoubleForm(1, null, new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_DOUBLE, doubleForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidOpcodeAndNameAndRewrite_qHds14() {
    DoubleForm doubleForm = new DoubleForm(0, null, new int[] {1, 2, 3});
}
}