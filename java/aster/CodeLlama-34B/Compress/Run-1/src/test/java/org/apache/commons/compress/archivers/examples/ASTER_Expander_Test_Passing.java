/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.examples;
import java.io.File;
import java.io.IOException;
import org.apache.commons.compress.archivers.tar.TarFile;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Expander_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandWithInvalidSevenZFile_JShd3() throws IOException {
        Expander expander = new Expander();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpand_ZOcd0_1() throws IOException {
    Expander expander = new Expander();
    TarFile tarFile = new TarFile(new File("test.tar"), "UTF-8");
    File targetDirectory = new File("target");
    expander.expand(tarFile, targetDirectory);
    assertTrue(targetDirectory.exists());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpand_ZOcd0_2() throws IOException {
    Expander expander = new Expander();
    TarFile tarFile = new TarFile(new File("test.tar"), "UTF-8");
    File targetDirectory = new File("target");
    expander.expand(tarFile, targetDirectory);
    assertTrue(targetDirectory.isDirectory());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpand_ZOcd0_3() throws IOException {
    Expander expander = new Expander();
    TarFile tarFile = new TarFile(new File("test.tar"), "UTF-8");
    File targetDirectory = new File("target");
    expander.expand(tarFile, targetDirectory);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandWithNonExistentTargetDirectory_mEtf1_1() throws IOException {
    Expander expander = new Expander();
    TarFile tarFile = new TarFile(new File("test.tar"), "UTF-8");
    File targetDirectory = new File("target");
    targetDirectory.delete();
    expander.expand(tarFile, targetDirectory);
    assertTrue(targetDirectory.exists());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandWithNonExistentTargetDirectory_mEtf1_2() throws IOException {
    Expander expander = new Expander();
    TarFile tarFile = new TarFile(new File("test.tar"), "UTF-8");
    File targetDirectory = new File("target");
    targetDirectory.delete();
    expander.expand(tarFile, targetDirectory);
    assertTrue(targetDirectory.isDirectory());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandWithExistingTargetDirectory_jSwJ2_1() throws IOException {
    Expander expander = new Expander();
    TarFile tarFile = new TarFile(new File("test.tar"), "UTF-8");
    File targetDirectory = new File("target");
    targetDirectory.mkdirs();
    expander.expand(tarFile, targetDirectory);
    assertTrue(targetDirectory.exists());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testExpandWithExistingTargetDirectory_jSwJ2_2() throws IOException {
    Expander expander = new Expander();
    TarFile tarFile = new TarFile(new File("test.tar"), "UTF-8");
    File targetDirectory = new File("target");
    targetDirectory.mkdirs();
    expander.expand(tarFile, targetDirectory);
    assertTrue(targetDirectory.isDirectory());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandWithSeekableByteChannel_jMDL8() throws IOException {
}
}