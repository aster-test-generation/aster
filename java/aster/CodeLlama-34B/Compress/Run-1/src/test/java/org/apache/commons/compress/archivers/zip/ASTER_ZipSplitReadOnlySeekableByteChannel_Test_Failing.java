/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.io.IOException;
import java.nio.file.Path;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ZipSplitReadOnlySeekableByteChannel_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBuildFromLastSplitSegment_NullPath_bjhY2() throws IOException {
    Path lastSegmentPath = null;
    try {
        ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment(lastSegmentPath);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertEquals("lastSegmentPath", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testForPathsWithNullPath_PSfy3() throws IOException {
    try {
        ZipSplitReadOnlySeekableByteChannel.forPaths((Path) null);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertEquals("Path cannot be null", e.getMessage());
    }
}
}