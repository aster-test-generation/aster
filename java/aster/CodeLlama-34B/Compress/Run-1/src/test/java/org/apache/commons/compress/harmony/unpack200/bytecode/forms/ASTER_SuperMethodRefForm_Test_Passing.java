/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode.forms;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SuperMethodRefForm_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_eODh0() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(1, "name", new int[] {1, 2, 3});
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentOpcode_AuCE1() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(2, "name", new int[] {1, 2, 3});
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentName_SHWY2() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(1, "differentName", new int[] {1, 2, 3});
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentRewrite_QYKV3() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(1, "name", new int[] {4, 5, 6});
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithEmptyRewrite_syaB5() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(1, "name", new int[] {});
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidOpcode_wZhl6() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(0, "name", new int[] {1, 2, 3});
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidName_qaJq7() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(1, null, new int[] {1, 2, 3});
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithEmptyName_wBSo10() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(1, "", new int[] {1, 2, 3});
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidNameAndRewrite_YSlu11() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(1, null, new int[] {1, 2, 3});
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithNullRewrite_UDBF4_fid1() {
    SuperMethodRefForm superMethodRefForm = new SuperMethodRefForm(1, "name", new int[0]);
    int poolID = superMethodRefForm.getPoolID();
    assertEquals(SegmentConstantPool.CP_METHOD, poolID);
}
}