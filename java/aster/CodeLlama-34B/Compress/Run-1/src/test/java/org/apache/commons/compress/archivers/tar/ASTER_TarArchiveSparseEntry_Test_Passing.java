/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;
import java.io.IOException;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarArchiveSparseEntry_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSparseHeaders_jkkQ0_tFNz0_1() throws IOException {
    byte[] headerBuf = new byte[1024];
    TarArchiveSparseEntry entry = new TarArchiveSparseEntry(headerBuf);
    List<TarArchiveStructSparse> sparseHeaders = entry.getSparseHeaders();
    TarArchiveStructSparse sparseHeader1 = new TarArchiveStructSparse(10, 10);
    sparseHeaders.add(sparseHeader1);
    TarArchiveStructSparse sparseHeader2 = new TarArchiveStructSparse(20, 20);
    sparseHeaders.add(sparseHeader2);
    sparseHeaders = entry.getSparseHeaders();
    assertNotNull(sparseHeaders);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSparseHeaders_jkkQ0_tFNz0_2_fid1() throws IOException {
    byte[] headerBuf = new byte[1024];
    TarArchiveSparseEntry entry = new TarArchiveSparseEntry(headerBuf);
    List<TarArchiveStructSparse> sparseHeaders = entry.getSparseHeaders();
    TarArchiveStructSparse sparseHeader1 = new TarArchiveStructSparse(10, 10);
    sparseHeaders.add(sparseHeader1);
    TarArchiveStructSparse sparseHeader2 = new TarArchiveStructSparse(20, 20);
    sparseHeaders.add(sparseHeader2);
    sparseHeaders = entry.getSparseHeaders();
}
}