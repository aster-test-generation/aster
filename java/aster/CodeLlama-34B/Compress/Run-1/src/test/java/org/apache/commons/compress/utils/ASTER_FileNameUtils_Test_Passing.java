/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.nio.file.Path;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FileNameUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBaseNameWithNullPath_gozG0() {
    Path path = null;
    String baseName = FileNameUtils.getBaseName(path);
    assertNull(baseName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_NullFileName_GNSS0() {
    String fileName = null;
    String extension = FileNameUtils.getExtension(fileName);
    assertNull(extension);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_SingleExtension_OlkL3() {
    String fileName = "file.txt";
    String extension = FileNameUtils.getExtension(fileName);
    assertEquals("txt", extension);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_MultipleExtensions_MrHo4() {
    String fileName = "file.txt.gz";
    String extension = FileNameUtils.getExtension(fileName);
    assertEquals("gz", extension);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_ExtensionWithMultipleDots_rNFO7() {
    String fileName = "file.txt.gz.bz2";
    String extension = FileNameUtils.getExtension(fileName);
    assertEquals("bz2", extension);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBaseName_NullFileName_Rohn0() {
    String fileName = null;
    String baseName = FileNameUtils.getBaseName(fileName);
    assertNull(baseName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBaseName_ValidFileName_VVvQ1() {
    String fileName = "file.txt";
    String baseName = FileNameUtils.getBaseName(fileName);
    assertEquals("file", baseName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBaseName_FileNameWithoutExtension_Ibwz5() {
    String fileName = "file";
    String baseName = FileNameUtils.getBaseName(fileName);
    assertEquals("file", baseName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_validPath_YZUh2() {
    assertEquals("txt", FileNameUtils.getExtension("file.txt"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_NoExtension_gJQp2_fid1() {
    String fileName = "file";
    String extension = FileNameUtils.getExtension(fileName);
    assertEquals("", extension);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_pathWithoutExtension_qVEX4_fid1() {
    assertEquals("", FileNameUtils.getExtension("file."));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_pathWithMultipleExtensions_kBRc5_fid1() {
    assertEquals("pdf", FileNameUtils.getExtension("file.pdf.pdf"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_pathWithInvalidExtension_EynI6_fid1() {
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_pathWithDotAtTheBeginningAndSpecialCharacters_wWGP18_fid1() {
    assertEquals("!file", FileNameUtils.getExtension(".!file"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_pathWithDotInTheMiddleAndWhitespaceAndSpecialCharacters_ILeJ22_fid1() {
    assertEquals("pdf", FileNameUtils.getExtension("file. !txt.pdf"));
}
}