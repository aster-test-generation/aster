/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.jar;
import java.security.cert.Certificate;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JarArchiveEntry_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_NonEmpty_qZbF1() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNotNull(certificates);
    assertEquals(1, certificates.length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_Different_tbOk6() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNotNull(certificates);
    assertNotEquals(certificates[0], certificates[1]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_Empty_CuNc0_fid2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertEquals(0, certificates.length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_NonEmpty_qZbF1_fid2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertEquals(1, certificates.length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_Valid_TmmM4_fid2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNotNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_Multiple_IyJW5_fid2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertEquals(2, certificates.length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_Different_tbOk6_fid2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNotEquals(certificates[0], certificates[1]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_Same_gUer7() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertEquals(certificates[0], certificates[0]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_DifferentLength_NZZl8_fid2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNotEquals(certificates.length, 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificates_SameLength_YnMO9_fid2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertEquals(certificates.length, 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetManifestAttributes_withSize_ElDJ9_fid2() {
    JarArchiveEntry entry = new JarArchiveEntry("test.jar");
    entry.setSize(1000);
    assertNotNull(entry.getManifestAttributes());
}
}