/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Zip64RequiredException_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEntryTooBigMessage_ANWV0() {
        ZipArchiveEntry ze = new ZipArchiveEntry("test.txt");
        ze.setSize(5000000000L);
        String expectedMessage = "test.txt's size exceeds the limit of 4GByte.";
        String actualMessage = Zip64RequiredException.getEntryTooBigMessage(ze);
        assertEquals(expectedMessage, actualMessage);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEntryTooBigMessage_sizeNotExceedingLimit_yKMI2() {
        ZipArchiveEntry ze = new ZipArchiveEntry("test.txt");
        ze.setSize(3000000000L);
        String expectedMessage = null;
        String actualMessage = Zip64RequiredException.getEntryTooBigMessage(ze);
    assertNull(expectedMessage);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEntryTooBigMessage_emptyName_plZE4() {
        ZipArchiveEntry ze = new ZipArchiveEntry("");
        ze.setSize(5000000000L);
        String expectedMessage = null;
        String actualMessage = Zip64RequiredException.getEntryTooBigMessage(ze);
    assertNull(expectedMessage);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetEntryTooBigMessage_nullName_SXcq3_PUrQ0() {
    ZipArchiveEntry ze = new ZipArchiveEntry("null");
    ze.setSize(5000000000L);
    String expectedMessage = "null's size exceeds the limit of 4GByte.";
    String actualMessage = Zip64RequiredException.getEntryTooBigMessage(ze);
    assertEquals(expectedMessage, actualMessage);
}
}