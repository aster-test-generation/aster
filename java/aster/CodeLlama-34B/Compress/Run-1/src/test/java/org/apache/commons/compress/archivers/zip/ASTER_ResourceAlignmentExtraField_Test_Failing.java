/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ResourceAlignmentExtraField_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_lnrq0() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true);
    ZipShort zipShort = resourceAlignmentExtraField.getHeaderId();
    assertEquals(1, zipShort.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderIdWithDifferentAlignment_Apny1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(2, true);
    ZipShort zipShort = resourceAlignmentExtraField.getHeaderId();
    assertEquals(2, zipShort.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderIdWithDifferentAllowMethodChange_PuwL2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, false);
    ZipShort zipShort = resourceAlignmentExtraField.getHeaderId();
    assertEquals(1, zipShort.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderIdWithDifferentPadding_htff3() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true, 1);
    ZipShort zipShort = resourceAlignmentExtraField.getHeaderId();
    assertEquals(1, zipShort.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_DefaultConstructor_ckbX0_3() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField();
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(0, centralDirectoryData[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_DefaultConstructor_ckbX0_4() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField();
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(0, centralDirectoryData[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_ParameterizedConstructor_ytIX1_2() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(0, centralDirectoryData[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_ParameterizedConstructor_ytIX1_3() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(0, centralDirectoryData[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_ParameterizedConstructor_ytIX1_4() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(0, centralDirectoryData[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_ParameterizedConstructorWithPadding_ARjC2_2() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true, 2);
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(0, centralDirectoryData[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_ParameterizedConstructorWithPadding_ARjC2_3() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true, 2);
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(0, centralDirectoryData[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_ParameterizedConstructorWithPadding_ARjC2_4() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true, 2);
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(2, centralDirectoryData[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileDataWithInvalidBuffer_ltVK3() throws ZipException {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true);
    byte[] buffer = null;
    int offset = 0;
    int length = 10;
    try {
        resourceAlignmentExtraField.parseFromLocalFileData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Invalid buffer", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithDefaultConstructor_XEff0() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField();
assertEquals(1, resourceAlignmentExtraField.getAlignment());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithAlignment_rsvm0_1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(4, content.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithAlignment_rsvm0_2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithAlignment_rsvm0_3() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithAlignment_rsvm0_4() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithAlignment_rsvm0_5() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithoutAlignment_MACv1_1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(4, content.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithoutAlignment_MACv1_2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithoutAlignment_MACv1_4() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithoutAlignment_MACv1_5() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithPadding_xIMv2_1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 2);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(6, content.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithPadding_xIMv2_2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 2);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithPadding_xIMv2_3() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 2);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithPadding_xIMv2_6() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 2);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[4]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithPadding_xIMv2_7() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 2);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(0, content[5]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_shortBuffer_qxjT0() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(1, true);
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        field.parseFromCentralDirectoryData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Too short content for ResourceAlignmentExtraField (0xa11e): " + length, e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_invalidAlignment_pqow1() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(1, true);
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        field.parseFromCentralDirectoryData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Invalid alignment value: 1", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength1_dmGU0() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength2_skfq1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, false);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength3_hgfo2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 2);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength4_RNCZ3() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, false, 2);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength5_cREd4() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 0);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength6_eJzJ5() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, false, 0);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength7_QvbJ6() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, -1);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength8_wpxM7() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, false, -1);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength9_EKTa8() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 1);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength10_BFFW9() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, false, 1);
    ZipShort centralDirectoryLength = resourceAlignmentExtraField.getCentralDirectoryLength();
    assertEquals(4, centralDirectoryLength.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_DefaultConstructor_ckbX0() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField();
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(0, centralDirectoryData[0]);
    assertEquals(0, centralDirectoryData[1]);
    assertEquals(0, centralDirectoryData[2]);
    assertEquals(0, centralDirectoryData[3]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_ParameterizedConstructor_ytIX1() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(4, centralDirectoryData[0]);
    assertEquals(0, centralDirectoryData[1]);
    assertEquals(0, centralDirectoryData[2]);
    assertEquals(0, centralDirectoryData[3]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_ParameterizedConstructorWithPadding_ARjC2() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true, 2);
    byte[] centralDirectoryData = field.getCentralDirectoryData();
    assertEquals(4, centralDirectoryData[0]);
    assertEquals(0, centralDirectoryData[1]);
    assertEquals(0, centralDirectoryData[2]);
    assertEquals(2, centralDirectoryData[3]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithAlignment_rsvm0() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(4, content.length);
    assertEquals(0, content[0]);
    assertEquals(0, content[1]);
    assertEquals(0, content[2]);
    assertEquals(0, content[3]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithoutAlignment_MACv1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(4, content.length);
    assertEquals(0, content[0]);
    assertEquals(0, content[1]);
    assertEquals(0, content[2]);
    assertEquals(0, content[3]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_WithPadding_xIMv2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(4, true, 2);
    byte[] content = resourceAlignmentExtraField.getLocalFileDataData();
    assertEquals(6, content.length);
    assertEquals(0, content[0]);
    assertEquals(0, content[1]);
    assertEquals(0, content[2]);
    assertEquals(0, content[3]);
    assertEquals(0, content[4]);
    assertEquals(0, content[5]);
}
@Test
@Timeout(value =41246, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderIdWithDifferentPadding_htff3_fid2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true,41246);
    ZipShort zipShort = resourceAlignmentExtraField.getHeaderId();
    assertEquals(1, zipShort.getValue());
}
}