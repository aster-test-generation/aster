/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.pack200;
import java.io.File;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200Utils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNormalize_fromNotFile_tNgA4_fid1() throws IOException {
    File from = new File("test.txt");
    File to = new File("test.txt");
    try {
        Pack200Utils.normalize(from, to);
        fail("Expected IOException");
    } catch (IOException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNormalize_toNotFile_Pwwm5() throws IOException {
    File from = new File("test.txt");
    File to = new File("test.txt");
    try {
        Pack200Utils.normalize(from, to);
        fail("Expected IOException");
    } catch (IOException e) {
        assertEquals("zip file is empty", e.getMessage());
    }
}
}