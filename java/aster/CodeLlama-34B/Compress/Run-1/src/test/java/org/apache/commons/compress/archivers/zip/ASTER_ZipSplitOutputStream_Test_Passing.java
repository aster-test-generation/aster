/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.io.File;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ZipSplitOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_byteArray_offset_length_invalid6_SgLa8_BTel0() throws IOException {
    ZipSplitOutputStream zsos = new ZipSplitOutputStream(new File("test.zip"), 10000000);
    byte[] b = new byte[10];
    try {
        zsos.write(b, 5, 15);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_byteArray_offset_length_invalid7_TiXu9_QDlj0() throws IOException {
    ZipSplitOutputStream zsos = new ZipSplitOutputStream(new File("test.zip"), 1024 * 1024);
    byte[] b = new byte[10];
    try {
        zsos.write(b, 5, 20);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
    }
}
}