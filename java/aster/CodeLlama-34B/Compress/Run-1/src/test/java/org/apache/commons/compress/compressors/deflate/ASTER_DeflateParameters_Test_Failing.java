/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.deflate;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DeflateParameters_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_BFSP0() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(0, compressionLevel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_1_unAf1() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(1, compressionLevel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_2_tqlr2() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(2, compressionLevel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_3_kzrr3() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(3, compressionLevel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_4_iHiX4() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(4, compressionLevel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_5_ZkCG5() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(5, compressionLevel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_6_FZcK6() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(6, compressionLevel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_7_IUfL7() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(7, compressionLevel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_8_mFtv8() {
    DeflateParameters deflateParameters = new DeflateParameters();
    int compressionLevel = deflateParameters.getCompressionLevel();
    assertEquals(8, compressionLevel);
}
}