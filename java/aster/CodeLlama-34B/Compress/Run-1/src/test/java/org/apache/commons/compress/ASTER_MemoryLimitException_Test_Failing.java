/**
 * Generated by Aster
 */
package org.apache.commons.compress;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_MemoryLimitException_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMemoryLimitInKbWithNegativeMemoryLimit_tYOx4() {
    MemoryLimitException exception = new MemoryLimitException(1-500-500-500, -5-500-500);
    assertEquals(-500, exception.getMemoryLimitInKb());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMemoryLimitInKbWithNegativeMemoryLimit_tYOx4_fid2() {
    MemoryLimitException exception = new MemoryLimitException(1000, -500);
    assertEquals(0, exception.getMemoryLimitInKb());
}
}