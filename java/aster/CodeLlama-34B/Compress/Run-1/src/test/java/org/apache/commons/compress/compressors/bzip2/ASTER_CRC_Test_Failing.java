/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.bzip2;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CRC_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue2_dtDC1() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(1, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue3_BRzm2() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(2, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue4_MIxs3() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(3, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue5_YZQG4() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(4, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue6_ZwOv5() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(5, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue7_lezJ6() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(6, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue8_AVoL7() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(7, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue9_oJRI8() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(8, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue10_IyYD9() {
    CRC crc = new CRC();
    int value = crc.getValue();
    assertEquals(9, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue_SCUR11() {
    for (int i = 0; i < 10; i++) {
        CRC crc = new CRC();
        int value = crc.getValue();
        assertEquals(i, value);
    }
}
}