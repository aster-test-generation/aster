/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarArchiveSparseZeroInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSkip_tpTR0() {
    TarArchiveSparseZeroInputStream inputStream = new TarArchiveSparseZeroInputStream();
    long n = 10;
    long skipped = inputStream.skip(n);
    assertEquals(n, skipped);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRead_NNJS0() throws IOException {
    TarArchiveSparseZeroInputStream inputStream = new TarArchiveSparseZeroInputStream();
    int result = inputStream.read();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSkipNegative_RMKB1_fid1() {
    TarArchiveSparseZeroInputStream inputStream = new TarArchiveSparseZeroInputStream();
    long n = -10;
    long skipped = inputStream.skip(n);
}
}