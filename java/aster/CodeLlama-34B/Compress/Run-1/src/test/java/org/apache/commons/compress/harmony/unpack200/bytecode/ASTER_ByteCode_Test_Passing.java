/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import org.apache.commons.compress.harmony.unpack200.bytecode.forms.ByteCodeForm;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ByteCode_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNestedMustStartClassPoolWithNested_Yzqv1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[0]);
    assertFalse(byteCode.nestedMustStartClassPool());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNestedMustStartClassPoolWithInvalidOpcode_EBRH2() {
    ByteCode byteCode = new ByteCode(0);
    assertFalse(byteCode.nestedMustStartClassPool());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetByteCodeTargets_lQTa0() {
    ByteCode byteCode = new ByteCode(1);
    int[] byteCodeTargets = {1, 2, 3};
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertArrayEquals(byteCodeTargets, byteCode.getByteCodeTargets());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetByteCodeTargets_ULRJ1_1() {
    ByteCode byteCode = new ByteCode(1);
    int[] byteCodeTargets = {1, 2, 3};
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = null;
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = new int[0];
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = new int[] {1, 2, 3};
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = new int[] {1};
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = new int[] {1, 2, 3, 4, 5};
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertArrayEquals(byteCodeTargets, byteCode.getByteCodeTargets());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries1_oiJT0() {
    ByteCode byteCode = new ByteCode(1);
    ClassFileEntry[] nested = byteCode.getNestedClassFileEntries();
    assertEquals(0, nested.length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries2_ZKCO1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[0]);
    ClassFileEntry[] nested = byteCode.getNestedClassFileEntries();
    assertEquals(0, nested.length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameObject_XCJB0() {
    ByteCode byteCode = new ByteCode(1);
    assertTrue(byteCode.equals(byteCode));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_NullObject_CBiX2() {
    ByteCode byteCode = new ByteCode(1);
    assertFalse(byteCode.equals(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasMultipleByteCodes_SingleByteCode_bWXA0() {
    ByteCode byteCode = new ByteCode(1);
    assertFalse(byteCode.hasMultipleByteCodes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetByteCodeIndex_inaS0() {
    ByteCode byteCode = new ByteCode(1);
    byteCode.setByteCodeIndex(10);
    assertEquals(10, byteCode.getByteCodeIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetByteCodeIndexWithNested_jgfE1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[0]);
    byteCode.setByteCodeIndex(10);
    assertEquals(10, byteCode.getByteCodeIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode1_VdWT0() {
    ByteCode byteCode = new ByteCode(1);
    assertEquals(1, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode2_czfE1() {
    ByteCode byteCode = new ByteCode(2);
    assertEquals(2, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode3_pRqC2() {
    ByteCode byteCode = new ByteCode(3);
    assertEquals(3, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode4_MMDP3() {
    ByteCode byteCode = new ByteCode(4);
    assertEquals(4, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode5_HypX4() {
    ByteCode byteCode = new ByteCode(5);
    assertEquals(5, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode6_lxvx5() {
    ByteCode byteCode = new ByteCode(6);
    assertEquals(6, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode7_KtqX6() {
    ByteCode byteCode = new ByteCode(7);
    assertEquals(7, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode8_ZzAw7() {
    ByteCode byteCode = new ByteCode(8);
    assertEquals(8, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode9_UCUe8() {
    ByteCode byteCode = new ByteCode(9);
    assertEquals(9, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpcode10_wXpX9() {
    ByteCode byteCode = new ByteCode(10);
    assertEquals(10, byteCode.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetNestedPositions_diRJ0() {
    ByteCode byteCode = new ByteCode(1);
    int[][] nestedPositions = new int[][] {{1, 2}, {3, 4}};
    byteCode.setNestedPositions(nestedPositions);
    assertEquals(nestedPositions, byteCode.getNestedPositions());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_NonEmptyRewrite_imJQ1() {
    ByteCode byteCode = new ByteCode(0, new ClassFileEntry[0]);
    assertEquals(1, byteCode.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeForm_wJTd0() {
    ByteCode byteCode = new ByteCode(1);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertNotNull(byteCodeForm);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithNested_ZUfi1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[0]);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertNotNull(byteCodeForm);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithMultipleByteCodes_KfPo3() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[1]);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertNotNull(byteCodeForm);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithMultipleByteCodesAndOperand_MYjO6() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[1]);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertFalse(byteCodeForm.hasNoOperand());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithRewriteCopy_cTuI7() {
    ByteCode byteCode = new ByteCode(1);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertNotNull(byteCodeForm.getRewriteCopy());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithRewrite_lteb8() {
    ByteCode byteCode = new ByteCode(1);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertNotNull(byteCodeForm.getRewrite());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithName_DPmb9() {
    ByteCode byteCode = new ByteCode(1);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertNotNull(byteCodeForm.getName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithOpcode_kuGC10() {
    ByteCode byteCode = new ByteCode(1);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertEquals(1, byteCodeForm.getOpcode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithHasNoOperand_MuxV12() {
    ByteCode byteCode = new ByteCode(1);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertFalse(byteCodeForm.hasNoOperand());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedPosition_nullNestedPositions_xBMS7_wJQY0() {
    ByteCode byteCode = new ByteCode(1);
    int[][] nestedPositions = byteCode.getNestedPositions();
    assertNull(nestedPositions);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNestedMustStartClassPool_ywJt0_fid1() {
    ByteCode byteCode = new ByteCode(1);
    assertFalse(byteCode.nestedMustStartClassPool());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetOperandBytes_InvalidOperands_wlVh1_fid1() {
    ByteCode byteCode = new ByteCode(1);
    int[] operands = new int[] {1, 2, 3, 4};
    try {
        byteCode.setOperandBytes(operands);
        fail("Expected Error");
    } catch (Error e) {
        assertEquals("Trying to rewrite aconst_null that has no rewrite", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetOperandBytes_InvalidByteCodeFormLength_LZfo2_fid1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[0]);
    int[] operands = new int[] {1, 2, 3};
    try {
        byteCode.setOperandBytes(operands);
        fail("Expected Error");
    } catch (Error e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetOperandByteWithNegativePosition_mFMf1_fid1() {
    ByteCode byteCode = new ByteCode(1);
    try {
        byteCode.setOperandByte(1, -1);
        fail("Expected Error to be thrown");
    } catch (Error e) {
        assertEquals("Trying to rewrite aconst_null that has no rewrite", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetOperandByteWithPositionOutOfBounds_nEhV2_fid1() {
    ByteCode byteCode = new ByteCode(1);
    try {
        byteCode.setOperandByte(1, 2);
        fail("Expected Error to be thrown");
    } catch (Error e) {
        assertEquals("Trying to rewrite aconst_null that has no rewrite", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString1_RgZD0_fid1() {
    ByteCode byteCode = new ByteCode(1);
    String expected = "ByteCode";
    String actual = byteCode.toString();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString2_lUYp1_fid1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[0]);
    String expected = "ByteCode";
    String actual = byteCode.toString();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetByteCodeTargets_ULRJ1_3_fid1() {
    ByteCode byteCode = new ByteCode(1);
    int[] byteCodeTargets = {1, 2, 3};
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = null;
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = new int[5];
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = new int[] {1, 2, 3};
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = new int[] {1};
    byteCode.setByteCodeTargets(byteCodeTargets);
    byteCodeTargets = new int[] {1, 2, 3, 4, 5};
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertEquals(5, byteCode.getByteCodeTargets().length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeIndex1_jYCh0_fid1() {
    ByteCode byteCode = new ByteCode(1);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_opcodeAndNested_nestedEmpty_fScq3_fid1() {
    ClassFileEntry[] nested = new ClassFileEntry[0];
    ByteCode byteCode = new ByteCode(1, nested);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_opcodeAndNested_opcodeZero_GKWe6_fid1() {
    ClassFileEntry[] nested = new ClassFileEntry[1563301471];
    ByteCode byteCode = new ByteCode(1563301471, nested);
    assertEquals(1563301471, byteCode.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetName10_DzEj9_fid1() {
    ByteCode byteCode = new ByteCode(10);
    String name = byteCode.getName();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetName11_zJXW10_fid1() {
    ByteCode byteCode = new ByteCode(11);
    String name = byteCode.getName();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetName12_XYIT11_fid1() {
    ByteCode byteCode = new ByteCode(12);
    String name = byteCode.getName();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetName14_hhVU13_fid1() {
    ByteCode byteCode = new ByteCode(14);
    String name = byteCode.getName();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetName16_LVwj15_fid1() {
    ByteCode byteCode = new ByteCode(16);
    String name = byteCode.getName();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_EmptyRewrite_gZzq1() {
    ByteCode byteCode = new ByteCode(1);
    assertEquals(1, byteCode.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeTargets_opcode_oggt0_fid1() {
    ByteCode byteCode = new ByteCode(1);
    int[] expected = new int[] { 1 };
    int[] actual = byteCode.getByteCodeTargets();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeTargets_opcodeAndNested_empty_tHNb2_fid1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[] {});
    int[] expected = new int[] {};
    int[] actual = byteCode.getByteCodeTargets();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithInvalidOpcode_HtcW2_fid1() {
    ByteCode byteCode = new ByteCode(0);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertNotNull(byteCodeForm);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithNoOperand_QEeo4_fid1() {
    ByteCode byteCode = new ByteCode(1);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithMultipleByteCodesAndNoOperand_mPTv5_fid1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[1]);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetByteCodeFormWithHasMultipleByteCodes_pdvH11_fid1() {
    ByteCode byteCode = new ByteCode(1, new ClassFileEntry[1]);
    ByteCodeForm byteCodeForm = byteCode.getByteCodeForm();
    assertFalse(byteCodeForm.hasMultipleByteCodes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedPosition_nullByteCode_Lkvl6_gXrD0_fid1() {
    ByteCode byteCode = null;
    int[][] nestedPositions = null;
    assertNull(nestedPositions);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetByteCodeTargets_ULRJ1() {
    ByteCode byteCode = new ByteCode(1);
    int[] byteCodeTargets = {1, 2, 3};
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertArrayEquals(byteCodeTargets, byteCode.getByteCodeTargets());
    byteCodeTargets = null;
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertNull(byteCode.getByteCodeTargets());
    byteCodeTargets = new int[0];
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertEquals(0, byteCode.getByteCodeTargets().length);
    byteCodeTargets = new int[] {1, 2, 3};
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertArrayEquals(byteCodeTargets, byteCode.getByteCodeTargets());
    byteCodeTargets = new int[] {1};
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertArrayEquals(byteCodeTargets, byteCode.getByteCodeTargets());
    byteCodeTargets = new int[] {1, 2, 3, 4, 5};
    byteCode.setByteCodeTargets(byteCodeTargets);
    assertArrayEquals(byteCodeTargets, byteCode.getByteCodeTargets());
}
}