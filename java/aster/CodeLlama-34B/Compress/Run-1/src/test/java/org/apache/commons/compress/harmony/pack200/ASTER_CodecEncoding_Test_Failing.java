/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CodecEncoding_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSpecifierForDefaultCodec_REve0() {
    BHSDCodec defaultCodec = new BHSDCodec(8, 16, 32, 64);
    int specifier = CodecEncoding.getSpecifierForDefaultCodec(defaultCodec);
    assertEquals(1, specifier);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i0_MSjn0_1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(0);
    assertEquals(0, codec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i0_MSjn0_2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(0);
    assertEquals(0, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i0_MSjn0_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(0);
    assertEquals(0, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i0_MSjn0_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(0);
    assertEquals(0, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i0_MSjn0_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(0);
    assertEquals(0, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i0_MSjn0() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(0);
    assertEquals(0, codec.getB());
    assertEquals(0, codec.hashCode());
    assertEquals(0, codec.getS());
    assertEquals(0, codec.getH());
    assertEquals(0, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i1_KWEQ1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(1);
    assertEquals(1, codec.getB());
    assertEquals(1, codec.hashCode());
    assertEquals(1, codec.getS());
    assertEquals(1, codec.getH());
    assertEquals(1, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i2_BocD2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(2);
    assertEquals(2, codec.getB());
    assertEquals(2, codec.hashCode());
    assertEquals(2, codec.getS());
    assertEquals(2, codec.getH());
    assertEquals(2, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i3_TEid3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(3);
    assertEquals(3, codec.getB());
    assertEquals(3, codec.hashCode());
    assertEquals(3, codec.getS());
    assertEquals(3, codec.getH());
    assertEquals(3, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i4_sBeH4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(4);
    assertEquals(4, codec.getB());
    assertEquals(4, codec.hashCode());
    assertEquals(4, codec.getS());
    assertEquals(4, codec.getH());
    assertEquals(4, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i5_KmiI5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(5);
    assertEquals(5, codec.getB());
    assertEquals(5, codec.hashCode());
    assertEquals(5, codec.getS());
    assertEquals(5, codec.getH());
    assertEquals(5, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i6_FXFH6() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(6);
    assertEquals(6, codec.getB());
    assertEquals(6, codec.hashCode());
    assertEquals(6, codec.getS());
    assertEquals(6, codec.getH());
    assertEquals(6, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i7_VqvS7() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(7);
    assertEquals(7, codec.getB());
    assertEquals(7, codec.hashCode());
    assertEquals(7, codec.getS());
    assertEquals(7, codec.getH());
    assertEquals(7, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i8_JBuK8() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(8);
    assertEquals(8, codec.getB());
    assertEquals(8, codec.hashCode());
    assertEquals(8, codec.getS());
    assertEquals(8, codec.getH());
    assertEquals(8, codec.getL());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i1_KWEQ1_2_fid2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(1);
    assertEquals(1, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i1_KWEQ1_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(1);
    assertEquals(1, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i1_KWEQ1_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(1);
    assertEquals(1, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i1_KWEQ1_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(1);
    assertEquals(1, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i2_BocD2_1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(2);
    assertEquals(2, codec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i2_BocD2_2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(2);
    assertEquals(2, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i2_BocD2_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(2);
    assertEquals(2, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i2_BocD2_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(2);
    assertEquals(2, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i2_BocD2_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(2);
    assertEquals(2, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i3_TEid3_1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(3);
    assertEquals(3, codec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i3_TEid3_2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(3);
    assertEquals(3, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i3_TEid3_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(3);
    assertEquals(3, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i3_TEid3_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(3);
    assertEquals(3, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i3_TEid3_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(3);
    assertEquals(3, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i4_sBeH4_1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(4);
    assertEquals(4, codec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i4_sBeH4_2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(4);
    assertEquals(4, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i4_sBeH4_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(4);
    assertEquals(4, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i4_sBeH4_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(4);
    assertEquals(4, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i4_sBeH4_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(4);
    assertEquals(4, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i5_KmiI5_1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(5);
    assertEquals(5, codec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i5_KmiI5_2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(5);
    assertEquals(5, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i5_KmiI5_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(5);
    assertEquals(5, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i5_KmiI5_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(5);
    assertEquals(5, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i5_KmiI5_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(5);
    assertEquals(5, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i6_FXFH6_1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(6);
    assertEquals(6, codec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i6_FXFH6_2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(6);
    assertEquals(6, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i6_FXFH6_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(6);
    assertEquals(6, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i6_FXFH6_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(6);
    assertEquals(6, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i6_FXFH6_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(6);
    assertEquals(6, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i7_VqvS7_1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(7);
    assertEquals(7, codec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i7_VqvS7_2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(7);
    assertEquals(7, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i7_VqvS7_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(7);
    assertEquals(7, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i7_VqvS7_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(7);
    assertEquals(7, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i7_VqvS7_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(7);
    assertEquals(7, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i8_JBuK8_1() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(8);
    assertEquals(8, codec.getB());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i8_JBuK8_2() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(8);
    assertEquals(8, codec.hashCode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i8_JBuK8_3() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(8);
    assertEquals(8, codec.getS());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i8_JBuK8_4() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(8);
    assertEquals(8, codec.getH());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCanonicalCodec_i8_JBuK8_5() {
    BHSDCodec codec = CodecEncoding.getCanonicalCodec(8);
    assertEquals(8, codec.getL());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSpecifier2_NiUl1_WfsI0_1() {
    Codec codec = new BHSDCodec(1, 1, 1);
    Codec defaultForBand = new BHSDCodec(1, 1, 1);
    int[] specifier = CodecEncoding.getSpecifier(codec, defaultForBand);
    assertEquals(3, specifier.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSpecifier2_NiUl1_WfsI0_2() {
    Codec codec = new BHSDCodec(1, 1, 1);
    Codec defaultForBand = new BHSDCodec(1, 1, 1);
    int[] specifier = CodecEncoding.getSpecifier(codec, defaultForBand);
    assertEquals(116, specifier[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSpecifier2_NiUl1_WfsI0_3() {
    Codec codec = new BHSDCodec(1, 1, 1);
    Codec defaultForBand = new BHSDCodec(1, 1, 1);
    int[] specifier = CodecEncoding.getSpecifier(codec, defaultForBand);
    assertEquals(1, specifier[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSpecifier2_NiUl1_WfsI0_4() {
    Codec codec = new BHSDCodec(1, 1, 1);
    Codec defaultForBand = new BHSDCodec(1, 1, 1);
    int[] specifier = CodecEncoding.getSpecifier(codec, defaultForBand);
    assertEquals(1, specifier[2]);}
}