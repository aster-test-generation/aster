/**
 * Generated by Aster
 */
package org.apache.commons.compress.changes;
import java.util.ArrayList;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ChangeSetResults_Test_Passing {
    private List<String> deleted = new ArrayList<>();
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetDeleted_EmptyList_VpUx0() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    List<String> deleted = changeSetResults.getDeleted();
    assertTrue(deleted.isEmpty());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAddedFromChangeSet_NzdD0() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    List<String> addedFromChangeSet = changeSetResults.getAddedFromChangeSet();
    assertEquals(0, addedFromChangeSet.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_validString_FqHK2_1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    assertEquals(1, changeSetResults.getAddedFromStream().size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_validString_FqHK2_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    assertEquals("file1.txt", changeSetResults.getAddedFromStream().get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_duplicateString_JRlZ3_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file1.txt");
    assertEquals("file1.txt", changeSetResults.getAddedFromStream().get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStrings_dNUv4_1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    assertEquals(2, changeSetResults.getAddedFromStream().size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStrings_dNUv4_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    assertEquals("file1.txt", changeSetResults.getAddedFromStream().get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStrings_dNUv4_3() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    assertEquals("file2.txt", changeSetResults.getAddedFromStream().get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStringsWithDuplicates_UJwA5_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    changeSetResults.addedFromStream("file1.txt");
    assertEquals("file1.txt", changeSetResults.getAddedFromStream().get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStringsWithDuplicates_UJwA5_3() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    changeSetResults.addedFromStream("file1.txt");
    assertEquals("file2.txt", changeSetResults.getAddedFromStream().get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStringsWithDuplicatesAndNull_xbcs6_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream(null);
    assertEquals("file1.txt", changeSetResults.getAddedFromStream().get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStringsWithDuplicatesAndNull_xbcs6_3() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream(null);
    assertEquals("file2.txt", changeSetResults.getAddedFromStream().get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStringsWithDuplicatesAndEmpty_fkoP7_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("");
    assertEquals("file1.txt", changeSetResults.getAddedFromStream().get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStringsWithDuplicatesAndEmpty_fkoP7_3() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("");
    assertEquals("file2.txt", changeSetResults.getAddedFromStream().get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAddedFromChangeSetWithInvalidElement_TdaZ6_ITGP0() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.deleted("invalid");
    List<String> addedFromChangeSet = changeSetResults.getAddedFromChangeSet();
    assertEquals(0, addedFromChangeSet.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_emptyString_OqXP1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("");
    assertEquals(1, changeSetResults.getAddedFromStream().size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_nullString_eGwv1_fid1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream(null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStringsWithDuplicates_UJwA5_1_fid1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    changeSetResults.addedFromStream("file1.txt");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_validString_FqHK2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    assertEquals(1, changeSetResults.getAddedFromStream().size());
    assertEquals("file1.txt", changeSetResults.getAddedFromStream().get(0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_multipleStrings_dNUv4() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("file1.txt");
    changeSetResults.addedFromStream("file2.txt");
    assertEquals(2, changeSetResults.getAddedFromStream().size());
    assertEquals("file1.txt", changeSetResults.getAddedFromStream().get(0));
    assertEquals("file2.txt", changeSetResults.getAddedFromStream().get(1));
}
}