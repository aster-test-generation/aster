/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.examples;
import java.io.File;
import java.io.IOException;
import org.apache.commons.compress.archivers.ArchiveException;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Archiver_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
        public void write(String entry) throws IOException {
        }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreate_validFormat_invalidTarget_validDirectory_PBmN2() throws IOException, ArchiveException {
    Archiver archiver = new Archiver();
    String format = "zip";
    File target = new File("target.txt");
    File directory = new File("directory");
    try {
        archiver.create(format, target, directory);
        fail("Expected IOException");
    } catch (IOException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateWithEmptyDirectory_VlkC6_wMyb0() throws IOException, ArchiveException {
    Archiver archiver = new Archiver();
    File target = new File("test.zip");
    File directory = new File("test");
    directory.mkdir();
    archiver.create("zip", target, directory);
}
}