/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.brotli;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BrotliCompressorInputStream_Test_Failing {
private void fail(String message) {
    throw new AssertionError(message);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadWithNullInputStream_HyBM6_2() throws IOException {
    BrotliCompressorInputStream inputStream = new BrotliCompressorInputStream(null);
    byte[] buf = new byte[10];
    int off = 0;
    int len = 10;
    int ret = inputStream.read(buf, off, len);
    assertEquals(0, ret);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNullInputStream_eeTh3_OWZN0() {
    BrotliCompressorInputStream inputStream = null;
    try {
        inputStream = new BrotliCompressorInputStream(null);
    } catch (IOException e) {
        e.printStackTrace();
    }
    String expected = "BrotliCompressorInputStream{inputStream=null}";
    String actual = inputStream.toString();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadWithNullStream_MAVn4() throws IOException {
    BrotliCompressorInputStream inputStream = new BrotliCompressorInputStream(null);
    int ret = inputStream.read();
    assertEquals(-1, ret);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadWithNullInputStream_HyBM6() throws IOException {
    BrotliCompressorInputStream inputStream = new BrotliCompressorInputStream(null);
    byte[] buf = new byte[10];
    int off = 0;
    int len = 10;
    int ret = inputStream.read(buf, off, len);
    assertEquals(-1, ret);
    assertEquals(0, inputStream.getCount());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testResetWithNullData_mdAF3() throws IOException {
    BrotliCompressorInputStream inputStream = new BrotliCompressorInputStream(null);
    inputStream.reset();
    assertEquals(0, inputStream.getCount());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadWithNullInputStream_HyBM6_1() throws IOException {
    BrotliCompressorInputStream inputStream = new BrotliCompressorInputStream(null);
    byte[] buf = new byte[10];
    int off = 0;
    int len = 10;
    int ret = inputStream.read(buf, off, len);
    assertEquals(-1, ret);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadWithNullInputStream_HyBM6_2_fid2() throws IOException {
    BrotliCompressorInputStream inputStream = new BrotliCompressorInputStream(null);
    byte[] buf = new byte[10];
    int off = 0;
    int len = 10;
    int ret = inputStream.read(buf, off, len);
    assertEquals(0, inputStream.getCount());}
}