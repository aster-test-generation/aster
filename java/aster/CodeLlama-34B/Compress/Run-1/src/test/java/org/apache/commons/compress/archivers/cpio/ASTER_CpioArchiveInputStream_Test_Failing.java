/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.cpio;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CpioArchiveInputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNextCPIOEntryWithNullInputStream_MPNy6() throws IOException {
CpioArchiveInputStream inputStream = new CpioArchiveInputStream(null);
CpioArchiveEntry entry = inputStream.getNextCPIOEntry();
assertNull(entry);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_validSignature_differentOrder_3_bswy5() {
    byte[] signature = new byte[] { 0x37, 0x30, 0x37, 0x30, 0x37, 0x30 };
    int length = 6;
    assertTrue(CpioArchiveInputStream.matches(signature, length));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_validSignature_differentOrder_4_AojW6() {
    byte[] signature = new byte[] { 0x30, 0x37, 0x37, 0x30, 0x37, 0x30 };
    int length = 6;
    assertTrue(CpioArchiveInputStream.matches(signature, length));
}
}