/**
 * Generated by Aster
 */
package org.apache.commons.compress.parallel;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FileBasedScatterGatherBackingStore_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInputStream_FileNotFoundException_lKtE2() throws IOException {
    FileBasedScatterGatherBackingStore store = new FileBasedScatterGatherBackingStore(new File("test.txt"));
    try {
        store.getInputStream();
        fail("Expected FileNotFoundException");
    } catch (FileNotFoundException e) {
        assertEquals(e.getMessage(), "test.txt (No such file or directory)");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInputStream_IOException_xqqC3_fid1() throws IOException {
    FileBasedScatterGatherBackingStore store = new FileBasedScatterGatherBackingStore(new File("test.txt"));
    try {
        store.getInputStream();
        fail("Expected IOException");
    } catch (IOException e) {
        assertEquals(e.getMessage(), "test.txt (No such file or directory)");
    }
}
}