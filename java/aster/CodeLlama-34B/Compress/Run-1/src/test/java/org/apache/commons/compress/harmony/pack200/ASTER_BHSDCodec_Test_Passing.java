/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BHSDCodec_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetB_zJbm0() {
    BHSDCodec codec = new BHSDCodec(5, 4, 2, 1);
    assertEquals(5, codec.getB());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetS_BHSDCodec_Tgvm0() {
    BHSDCodec bhsdCodec = new BHSDCodec(5, 4, 2, 1);
    assertEquals(2, bhsdCodec.getS());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetS_BHSDCodec_NoD_Jbih1() {
    BHSDCodec bhsdCodec = new BHSDCodec(4, 4, 2);
    assertEquals(2, bhsdCodec.getS());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetH_b2_h2_s2_d2_gcGg1() {
    BHSDCodec bhsdCodec = new BHSDCodec(2, 2, 2, 1);
    int h = bhsdCodec.getH();
    assertEquals(2, h);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsSigned_True_dRAO0() {
    BHSDCodec codec = new BHSDCodec(3, 16, 1, 1);
    assertTrue(codec.isSigned());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsDelta_True_VWAC0() {
    BHSDCodec codec = new BHSDCodec(4, 4, 2, 1);
    assertTrue(codec.isDelta());
}
}