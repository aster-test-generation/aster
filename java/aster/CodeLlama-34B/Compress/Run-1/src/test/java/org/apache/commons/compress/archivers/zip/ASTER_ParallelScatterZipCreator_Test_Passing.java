/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ParallelScatterZipCreator_Test_Passing {
    private ExecutorService executorService = null;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateCallableWithNullZipArchiveEntryRequestSupplier_XFGc0() {
    ParallelScatterZipCreator parallelScatterZipCreator = new ParallelScatterZipCreator();
    Callable<ScatterZipOutputStream> callable = parallelScatterZipCreator.createCallable(null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void addArchiveEntry(ZipArchiveEntryRequestSupplier zipArchiveEntryRequestSupplier) {
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateCallableWithNullExecutorService_lCaa5_Kvwl0() {
    ParallelScatterZipCreator parallelScatterZipCreator = new ParallelScatterZipCreator(null);
    ZipArchiveEntryRequestSupplier zipArchiveEntryRequestSupplier = null;
    Callable<ScatterZipOutputStream> callable = parallelScatterZipCreator.createCallable(zipArchiveEntryRequestSupplier);
    assertNotNull(callable);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateCallableWithNullDefaultBackingStoreSupplier_bLkK6_ZCEC0() {
    ParallelScatterZipCreator parallelScatterZipCreator = new ParallelScatterZipCreator(executorService);
    ZipArchiveEntryRequestSupplier zipArchiveEntryRequestSupplier = null;
    Callable<ScatterZipOutputStream> callable = parallelScatterZipCreator.createCallable(zipArchiveEntryRequestSupplier);
    assertNotNull(callable);
}
}