/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.dump;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DumpArchiveInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_smallBuffer_FSmz0() {
    byte[] buffer = new byte[31];
    assertFalse(DumpArchiveInputStream.matches(buffer, 31));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_largeBuffer_DVCY1() {
    byte[] buffer = new byte[DumpArchiveConstants.TP_SIZE];
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_invalidMagic_WMBf3() {
    byte[] buffer = new byte[24];
    buffer[23] = (byte) 0xFF;
    assertFalse(DumpArchiveInputStream.matches(buffer, 24));
}
}