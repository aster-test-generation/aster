/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LineNumberTableAttribute_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength1_iOSB0_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(1, new int[] { 1 }, new int[] { 1 });
    assertEquals(2, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength2_RieZ1_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(2, new int[] { 1, 2 }, new int[] { 1, 2 });
    assertEquals(6, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength3_heJh2_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(3, new int[] { 1, 2, 3 }, new int[] { 1, 2, 3 });
    assertEquals(10, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength4_PQPQ3_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(4, new int[] { 1, 2, 3, 4 }, new int[] { 1, 2, 3, 4 });
    assertEquals(14, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength5_BbjY4_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(5, new int[] { 1, 2, 3, 4, 5 }, new int[] { 1, 2, 3, 4, 5 });
    assertEquals(18, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength6_QlKe5_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(6, new int[] { 1, 2, 3, 4, 5, 6 }, new int[] { 1, 2, 3, 4, 5, 6 });
    assertEquals(22, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength7_OXfR6_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(7, new int[] { 1, 2, 3, 4, 5, 6, 7 }, new int[] { 1, 2, 3, 4, 5, 6, 7 });
    assertEquals(26, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength8_Jfzb7_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(8, new int[] { 1, 2, 3, 4, 5, 6, 7, 8 }, new int[] { 1, 2, 3, 4, 5, 6, 7, 8 });
    assertEquals(30, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength9_elHK8_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(9, new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 }, new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 });
    assertEquals(34, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_lineNumberTableLength10_mOhy9_fid2() {
    LineNumberTableAttribute attr = new LineNumberTableAttribute(10, new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }, new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 });
    assertEquals(38, attr.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testResolveWithInvalidLineNumberTableLength_vWSS6() {
    ClassConstantPool pool = new ClassConstantPool();
    LineNumberTableAttribute attribute = new LineNumberTableAttribute(10, new int[] { 0, 10, 20 }, new int[] { 1, 2, 3 });
    attribute.resolve(pool);
}
}