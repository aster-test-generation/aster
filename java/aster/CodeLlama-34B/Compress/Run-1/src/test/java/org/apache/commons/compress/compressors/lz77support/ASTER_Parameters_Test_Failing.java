/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.lz77support;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Parameters_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBuilderWithNullWindowSize_zCKd2_BFBL0() {
    int windowSize = 1;
    try {
        Parameters.builder(windowSize);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertEquals("Window size must be a power of two", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBuilderWithInvalidWindowSize_anpM1_fid1() {
    int windowSize = -1;
    try {
        Parameters.builder(windowSize);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        assertEquals("Window size must be positive", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBuilderWithNullWindowSize_zCKd2_BFBL0_fid3() {
    int windowSize = 0;
    try {
        Parameters.builder(windowSize);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertEquals("Window size cannot be null", e.getMessage());
    }
}
}