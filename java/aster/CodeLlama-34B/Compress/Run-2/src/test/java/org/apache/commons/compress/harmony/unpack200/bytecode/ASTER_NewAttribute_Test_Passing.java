/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_NewAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_CPUTF8_JqoD0() {
    CPUTF8 attributeName = new CPUTF8("attributeName");
    NewAttribute newAttribute = new NewAttribute(attributeName, 0);
    assertEquals("attributeName", newAttribute.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_CPUTF8_GlobalIndex_Bfzh1() {
    CPUTF8 attributeName = new CPUTF8("attributeName", 1);
    NewAttribute newAttribute = new NewAttribute(attributeName, 0);
    assertEquals("attributeName", newAttribute.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_CPUTF8_Empty_AiZZ3() {
    CPUTF8 attributeName = new CPUTF8("");
    NewAttribute newAttribute = new NewAttribute(attributeName, 0);
    assertEquals("", newAttribute.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_CPUTF8_NonAscii_GlobalIndex_Yaik6() {
    CPUTF8 attributeName = new CPUTF8("", 1);
    NewAttribute newAttribute = new NewAttribute(attributeName, 0);
    assertEquals("", newAttribute.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries_EmptyBody_FNnO0_1() {
    NewAttribute attribute = new NewAttribute(new CPUTF8("AttributeName"), 0);
    ClassFileEntry[] nested = attribute.getNestedClassFileEntries();
    assertEquals(1, nested.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries_EmptyBody_FNnO0_2() {
    NewAttribute attribute = new NewAttribute(new CPUTF8("AttributeName"), 0);
    ClassFileEntry[] nested = attribute.getNestedClassFileEntries();
    assertEquals(attribute.getAttributeName(), nested[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetStartPCsWithNullAttributeName_kjjJ3() {
    NewAttribute newAttribute = new NewAttribute(null, 0);
    int[] startPCs = newAttribute.getStartPCs();
    assertNull(startPCs);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLayoutIndex_qYDk0() {
    CPUTF8 attributeName = new CPUTF8("attributeName");
    int layoutIndex = 1;
    NewAttribute newAttribute = new NewAttribute(attributeName, layoutIndex);
    int result = newAttribute.getLayoutIndex();
    assertEquals(layoutIndex, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLayoutIndexWithDifferentLayoutIndex_yyMd1() {
    CPUTF8 attributeName = new CPUTF8("attributeName");
    int layoutIndex = 2;
    NewAttribute newAttribute = new NewAttribute(attributeName, layoutIndex);
    int result = newAttribute.getLayoutIndex();
    assertEquals(layoutIndex, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLayoutIndexWithNullAttributeName_rWcj2() {
    int layoutIndex = 1;
    NewAttribute newAttribute = new NewAttribute(null, layoutIndex);
    int result = newAttribute.getLayoutIndex();
    assertEquals(layoutIndex, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries_EmptyBody_FNnO0() {
    NewAttribute attribute = new NewAttribute(new CPUTF8("AttributeName"), 0);
    ClassFileEntry[] nested = attribute.getNestedClassFileEntries();
    assertEquals(1, nested.length);
    assertEquals(attribute.getAttributeName(), nested[0]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_empty_KEad0_fid1() {
    NewAttribute attribute = new NewAttribute(new CPUTF8(""), 0);
    assertEquals(0, attribute.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLayoutIndexWithNullLayoutIndex_gYwx3_XjXt0() {
    CPUTF8 attributeName = new CPUTF8("attributeName");
    NewAttribute newAttribute = new NewAttribute(attributeName, 0);
    int result = newAttribute.getLayoutIndex();
    assertEquals(0, result);
}
}