/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.StandardOpenOption;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SevenZOutputFile_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_NullInputStream_grRz2() throws IOException {
    SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), new char[] {'p', 'a', 's', 's', 'w', 'o', 'r', 'd'});
    InputStream inputStream = null;
    try {
        sevenZOutputFile.write(inputStream);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWriteWithValidPathAndOptions_jjey0_eeip0() throws IOException {
    SevenZOutputFile sevenZOutputFile = new SevenZOutputFile(new File("test.7z"), "password".toCharArray());
    File file = new File("test.txt");
    file.createNewFile();
    sevenZOutputFile.write(file.toPath(), StandardOpenOption.CREATE, StandardOpenOption.WRITE);
    assertTrue(Files.exists(file.toPath()));
}
}