/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SnappyCompressorInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSize_NullInputStream_UlTe5() throws IOException {
    SnappyCompressorInputStream inputStream = new SnappyCompressorInputStream(null, 10);
    assertEquals(0, inputStream.getSize());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSize_NullInputStreamAndNoBlockSize_DQOK6() throws IOException {
    SnappyCompressorInputStream inputStream = new SnappyCompressorInputStream(null);
    assertEquals(0, inputStream.getSize());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSize_NullInputStreamAndNegativeBlockSize_gAHa7() throws IOException {
    SnappyCompressorInputStream inputStream = new SnappyCompressorInputStream(null, -1);
    assertEquals(0, inputStream.getSize());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSize_NullInputStreamAndInvalidBlockSize_GGpo8() throws IOException {
    SnappyCompressorInputStream inputStream = new SnappyCompressorInputStream(null, 0);
    assertEquals(0, inputStream.getSize());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSize_ClosedInputStreamAndNullInputStream_xYoN13() throws IOException {
    SnappyCompressorInputStream inputStream = new SnappyCompressorInputStream(null, 10);
    inputStream.close();
    assertEquals(0, inputStream.getSize());
}
}