/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Random;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ResourceAlignmentExtraField_Test_Passing {
public void testGetHeaderId_defaultConstructor_keVt0() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField();
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(0, headerId.getValue());
}
public void testGetHeaderId_intConstructor_yocY1() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10);
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(10, headerId.getValue());
}
public void testGetHeaderId_intConstructor_negativeValue_JQQv2() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(-10);
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(-10, headerId.getValue());
}
public void testGetHeaderId_intConstructor_zeroValue_fmjA3() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(0);
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(0, headerId.getValue());
}
public void testGetHeaderId_intConstructor_largeValue_jRTK4() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1000000);
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(1000000, headerId.getValue());
}
public void testGetHeaderId_intConstructor_minValue_fBLp5() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(Integer.MIN_VALUE);
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(Integer.MIN_VALUE, headerId.getValue());
}
public void testGetHeaderId_intConstructor_maxValue_UTFB6() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(Integer.MAX_VALUE);
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(Integer.MAX_VALUE, headerId.getValue());
}
public void testGetHeaderId_intConstructor_randomValue_VzBh7() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(new Random().nextInt());
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(headerId.getValue(), resourceAlignmentExtraField.getHeaderId().getValue());
}
public void testGetHeaderId_intConstructor_randomNegativeValue_sPxs8() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(new Random().nextInt() * -1);
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(headerId.getValue(), resourceAlignmentExtraField.getHeaderId().getValue());
}
public void testGetHeaderId_intConstructor_randomPositiveValue_zSAd9() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(new Random().nextInt() * 1);
ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
assertEquals(headerId.getValue(), resourceAlignmentExtraField.getHeaderId().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAllowMethodChange_True_Amgk0() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    assertTrue(field.allowMethodChange());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAllowMethodChange_False_HwRm1() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, false);
    assertFalse(field.allowMethodChange());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAllowMethodChange_Default_yGHZ2() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4);
    assertFalse(field.allowMethodChange());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAllowMethodChange_Padding_pgEs3() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true, 10);
    assertTrue(field.allowMethodChange());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_alignment_ztuG0_1() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, false);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(4, data.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_alignment_ztuG0_2() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, false);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(0, data[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_alignment_ztuG0_3() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, false);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(0, data[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_alignment_ztuG0_4() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, false);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(0, data[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_alignment_ztuG0_5() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, false);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(0, data[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_allowMethodChange_pqTg1_1() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(4, data.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_allowMethodChange_pqTg1_2() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(0, data[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_allowMethodChange_pqTg1_3() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(0, data[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_allowMethodChange_pqTg1_4() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(0, data[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_allowMethodChange_pqTg1_5() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(1, data[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_shortBuffer_FKUW0() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(1, true);
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        field.parseFromCentralDirectoryData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Too short content for ResourceAlignmentExtraField (0xa11e): " + length, e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_invalidAlignment_xawp1() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(1, true);
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        field.parseFromCentralDirectoryData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Invalid alignment value: " + 1, e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithDefaultConstructor_EPdr0() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField();
assertEquals(0, resourceAlignmentExtraField.getAlignment());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithAlignmentConstructor_qwBQ1() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10);
assertEquals(10, resourceAlignmentExtraField.getAlignment());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithAlignmentAndAllowMethodChangeConstructor_pMaM2() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10, true);
assertEquals(10, resourceAlignmentExtraField.getAlignment());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAlignmentWithAlignmentAndAllowMethodChangeAndPaddingConstructor_Pmwu3() {
ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10, true, 5);
assertEquals(10, resourceAlignmentExtraField.getAlignment());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_defaultConstructor_keVt0_sAOa1() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField();
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(0, headerId.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_yocY1_XKPb2() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10);
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(10, headerId.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_negativeValue_JQQv2_nRdh3() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(-10);
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(-10, headerId.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_zeroValue_fmjA3_iNTD4() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(0);
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(0, headerId.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_largeValue_jRTK4_BXhW5() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1000000);
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(1000000, headerId.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_minValue_fBLp5_vKXB6() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(Integer.MIN_VALUE);
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(Integer.MIN_VALUE, headerId.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_maxValue_UTFB6_jerP7() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(Integer.MAX_VALUE);
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(Integer.MAX_VALUE, headerId.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_randomValue_VzBh7_PcJq8() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(new Random().nextInt());
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(headerId.getValue(), resourceAlignmentExtraField.getHeaderId().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_randomNegativeValue_sPxs8_eIcN9() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(new Random().nextInt() * -1);
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(headerId.getValue(), resourceAlignmentExtraField.getHeaderId().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_intConstructor_randomPositiveValue_zSAd9_OTRo10() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(new Random().nextInt() * 1);
    ZipShort headerId = resourceAlignmentExtraField.getHeaderId();
    assertEquals(headerId.getValue(), resourceAlignmentExtraField.getHeaderId().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData1_Brha0_vucD0() throws ZipException {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(1, true);
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    resourceAlignmentExtraField.parseFromLocalFileData(buffer, offset, length);
    assertEquals(10, resourceAlignmentExtraField.getAlignment());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength_9_Pzkv8_oVLL0() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(9, true);
    ZipShort zipShort = resourceAlignmentExtraField.getLocalFileDataLength();
    assertEquals(9, zipShort.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength_10_vIXu9_tsLy0() {
    ResourceAlignmentExtraField resourceAlignmentExtraField = new ResourceAlignmentExtraField(10, true);
    ZipShort zipShort = resourceAlignmentExtraField.getLocalFileDataLength();
    assertEquals(10, zipShort.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_DefaultConstructor_CkdV0_MApx0_1() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField();
    byte[] data = field.getLocalFileDataData();
    assertEquals(4, data.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_DefaultConstructor_CkdV0_MApx0_2() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField();
    byte[] data = field.getLocalFileDataData();
    assertEquals(0, data[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_DefaultConstructor_CkdV0_MApx0_3() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField();
    byte[] data = field.getLocalFileDataData();
    assertEquals(0, data[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_DefaultConstructor_CkdV0_MApx0_4() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField();
    byte[] data = field.getLocalFileDataData();
    assertEquals(0, data[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_DefaultConstructor_CkdV0_MApx0_5() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField();
    byte[] data = field.getLocalFileDataData();
    assertEquals(0, data[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_alignment_ztuG0() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, false);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(4, data.length);
    assertEquals(0, data[0]);
    assertEquals(0, data[1]);
    assertEquals(0, data[2]);
    assertEquals(0, data[3]);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_allowMethodChange_pqTg1() {
    ResourceAlignmentExtraField field = new ResourceAlignmentExtraField(4, true);
    byte[] data = field.getCentralDirectoryData();
    assertEquals(4, data.length);
    assertEquals(0, data[0]);
    assertEquals(0, data[1]);
    assertEquals(0, data[2]);
    assertEquals(1, data[3]);
}
}