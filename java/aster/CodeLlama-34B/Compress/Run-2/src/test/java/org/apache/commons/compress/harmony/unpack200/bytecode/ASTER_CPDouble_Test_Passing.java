/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CPDouble_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_IFTR0() {
    CPDouble double1 = new CPDouble(1.0, 0);
    assertEquals("Double: 1.0", double1.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNegativeValue_lqoT1() {
    CPDouble double1 = new CPDouble(-1.0, 0);
    assertEquals("Double: -1.0", double1.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithZeroValue_WtiP2() {
    CPDouble double1 = new CPDouble(0.0, 0);
    assertEquals("Double: 0.0", double1.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNonZeroValue_lRJc3() {
    CPDouble double1 = new CPDouble(1.5, 0);
    assertEquals("Double: 1.5", double1.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithGlobalIndex_eYli4() {
    CPDouble double1 = new CPDouble(1.0, 1);
    assertEquals("Double: 1.0", double1.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNegativeGlobalIndex_cXpX5() {
    CPDouble double1 = new CPDouble(1.0, -1);
    assertEquals("Double: 1.0", double1.toString());
}

}