/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode.forms;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ClassRefForm_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_1_Ouch0() {
    ClassRefForm classRefForm = new ClassRefForm(1, "name", new int[]{1, 2, 3}, false);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_2_aOmf1() {
    ClassRefForm classRefForm = new ClassRefForm(2, "name", new int[]{1, 2, 3}, true);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_3_AdAC2() {
    ClassRefForm classRefForm = new ClassRefForm(3, "name", new int[]{1, 2, 3}, false);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_4_bLLF3() {
    ClassRefForm classRefForm = new ClassRefForm(4, "name", new int[]{1, 2, 3}, true);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_5_tRQE4() {
    ClassRefForm classRefForm = new ClassRefForm(5, "name", new int[]{1, 2, 3}, false);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_6_oeBa5() {
    ClassRefForm classRefForm = new ClassRefForm(6, "name", new int[]{1, 2, 3}, true);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_7_LWJx6() {
    ClassRefForm classRefForm = new ClassRefForm(7, "name", new int[]{1, 2, 3}, false);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_8_dgCd7() {
    ClassRefForm classRefForm = new ClassRefForm(8, "name", new int[]{1, 2, 3}, true);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_9_zIOU8() {
    ClassRefForm classRefForm = new ClassRefForm(9, "name", new int[]{1, 2, 3}, false);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_10_Zvkh9() {
    ClassRefForm classRefForm = new ClassRefForm(10, "name", new int[]{1, 2, 3}, true);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_11_iTSC10() {
    ClassRefForm classRefForm = new ClassRefForm(11, "name", new int[]{1, 2, 3}, false);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_12_cgeZ11() {
    ClassRefForm classRefForm = new ClassRefForm(12, "name", new int[]{1, 2, 3}, true);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_13_xHcy12() {
    ClassRefForm classRefForm = new ClassRefForm(13, "name", new int[]{1, 2, 3}, false);
    assertEquals(SegmentConstantPool.CP_CLASS, classRefForm.getPoolID());
}
}