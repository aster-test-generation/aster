/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.jar;
import java.security.cert.Certificate;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JarArchiveEntry_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithEmptyString_TTmQ1() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithNonExistentFile_yRPe2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("non_existent_file.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithValidFile_SIxu3() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("valid_file.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNotNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithInvalidFile_qPkt4() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("invalid_file.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetManifestAttributes_empty_VAwq1() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("");
    assertNull(jarArchiveEntry.getManifestAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetManifestAttributes_valid_kcjb2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    assertNotNull(jarArchiveEntry.getManifestAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetManifestAttributes_invalid_SeGT3() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.txt");
    assertNull(jarArchiveEntry.getManifestAttributes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithValidFileAndValidEntry_NhXG5_wjAt0() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("valid_entry.class");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNotNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithValidFileAndInvalidEntry_PoUg6_ARGh0() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("valid_file.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithInvalidFileAndValidEntry_XkYe7_ioYc0() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("valid_entry.class");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithValidFileAndValidEntryAndValidCertificate_WFak9_oplE0_2() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("valid_file.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertEquals(1, certificates.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesWithValidFileAndValidEntryAndValidCertificate_WFak9_oplE0_3() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("valid_file.jar");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertEquals("valid_certificate", certificates[0].getType());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetManifestAttributes_nullZipEntry_mCcF4_vmIe0() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("test.jar");
    assertNull(jarArchiveEntry.getManifestAttributes());
}
}