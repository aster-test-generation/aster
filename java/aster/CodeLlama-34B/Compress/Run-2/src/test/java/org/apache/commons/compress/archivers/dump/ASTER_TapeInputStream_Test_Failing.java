/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.dump;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TapeInputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRead12_edKY11_Eheq0_1() throws IOException {
    TapeInputStream tis = new TapeInputStream(System.in);
    byte[] b = new byte[10];
    int off = 0;
    int len = 10;
    int bytes = tis.read(b, off, len);
    assertEquals(1024, bytes);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRead12_edKY11_Eheq0_2() throws IOException {
    TapeInputStream tis = new TapeInputStream(System.in);
    byte[] b = new byte[10];
    int off = 0;
    int len = 10;
    int bytes = tis.read(b, off, len);
    assertArrayEquals(new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, b);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRead12_edKY11_Eheq0_1_fid2() throws IOException {
    TapeInputStream tis = new TapeInputStream(System.in);
    byte[] b = new byte[10];
    int off = 0;
    int len = 10;
    int bytes = tis.read(b, off, len);
    assertEquals(10, bytes);}
}