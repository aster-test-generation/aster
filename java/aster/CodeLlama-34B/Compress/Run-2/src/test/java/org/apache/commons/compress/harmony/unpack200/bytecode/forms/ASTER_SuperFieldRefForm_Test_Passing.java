/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode.forms;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SuperFieldRefForm_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolID_Sykg0() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "name", new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentOpcode_LlhQ1() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(2, "name", new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentName_QPZL2() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "differentName", new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithDifferentRewrite_Gwnc3() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "name", new int[] {4, 5, 6});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithNullRewrite_ecuY4() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "name", null);
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithEmptyRewrite_MOcD5() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "name", new int[] {});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidOpcode_YFMP6() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(0, "name", new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidName_vWHS7() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "", new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithInvalidRewrite_DChL8() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "name", new int[] {1, 2, 3, 4});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithNullName_eOuX9() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, null, new int[] {1, 2, 3});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithNullRewriteAndNullName_YDsj11() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, null, null);
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPoolIDWithEmptyRewriteAndEmptyName_Hacm12() {
    SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "", new int[] {});
    assertEquals(SegmentConstantPool.CP_FIELD, superFieldRefForm.getPoolID());
}
}