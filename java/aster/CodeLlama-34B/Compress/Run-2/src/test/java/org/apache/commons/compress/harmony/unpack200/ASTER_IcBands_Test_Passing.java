/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_IcBands_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRelevantIcTuples_VFak0_Xkio0_1() {
    IcBands icBands = new IcBands(null);
    String className = "TestClass";
    ClassConstantPool cp = new ClassConstantPool();
    IcTuple[] relevantTuples = icBands.getRelevantIcTuples(className, cp);
    assertNotNull(relevantTuples);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRelevantIcTuples_VFak0_Xkio0_2() {
    IcBands icBands = new IcBands(null);
    String className = "TestClass";
    ClassConstantPool cp = new ClassConstantPool();
    IcTuple[] relevantTuples = icBands.getRelevantIcTuples(className, cp);
    assertEquals(0, relevantTuples.length);}
}