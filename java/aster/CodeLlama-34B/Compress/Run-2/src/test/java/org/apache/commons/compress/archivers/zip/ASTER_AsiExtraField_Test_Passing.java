/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.nio.charset.Charset;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AsiExtraField_Test_Passing {
private AsiExtraField asiExtraField;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFile_qqAF0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link = asiExtraField.getLinkedFile();
    assertEquals("", link);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithLink_kEQM1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link = "http://www.example.com";
    asiExtraField.setLinkedFile(link);
    assertEquals(link, asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithNullLink_uFAd2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link = null;
    asiExtraField.setLinkedFile(link);
    assertEquals(null, asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithEmptyLink_mxri3() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link = "";
    asiExtraField.setLinkedFile(link);
    assertEquals("", asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithInvalidLink_laMA4() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link = "invalid_link";
    asiExtraField.setLinkedFile(link);
    assertEquals(null, asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithDifferentLink_qxQU6_1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link1 = "http://www.example1.com";
    String link2 = "http://www.example2.com";
    asiExtraField.setLinkedFile(link1);
    asiExtraField.setLinkedFile(link2);
    assertEquals(link1, asiExtraField.getLinkedFile());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithDifferentLink_qxQU6_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link1 = "http://www.example1.com";
    String link2 = "http://www.example2.com";
    asiExtraField.setLinkedFile(link1);
    asiExtraField.setLinkedFile(link2);
    assertEquals(link2, asiExtraField.getLinkedFile());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithSameLink_PpAt7_1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link = "http://www.example.com";
    asiExtraField.setLinkedFile(link);
    asiExtraField.setLinkedFile(link);
    assertEquals(link, asiExtraField.getLinkedFile());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_1_GMdd0_1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_1_GMdd0_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_2_hAHX1_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 1);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_3_IdKZ2_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 2);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_4_IHTr3_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 3);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_5_BltW4_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 4);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_6_Aeuo5_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 5);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_7_oPFP6_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 6);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_8_oEGn7_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 7);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_9_qNvn8_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 8);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_10_oFFw9_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 9);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_11_bRoC10_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 10);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_12_mQpQ11_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertEquals(centralDirectoryData.length, 11);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_ushK0_1() {
        AsiExtraField asiExtraField = new AsiExtraField();
        ZipShort headerId = asiExtraField.getHeaderId();
        assertNotNull(headerId);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_ushK0_2() {
        AsiExtraField asiExtraField = new AsiExtraField();
        ZipShort headerId = asiExtraField.getHeaderId();
        assertEquals(headerId.getValue(), AsiExtraField.HEADER_ID.getValue());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetGroupId_sRDP0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int expected = 10;
    int actual = asiExtraField.getGroupId();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetGroupIdWithNull_vHyu1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int expected = 0;
    int actual = asiExtraField.getGroupId();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMode_validMode_YVbj0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int mode = 1;
    asiExtraField.setMode(mode);
    assertEquals(mode, asiExtraField.getMode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMode_invalidMode_iBif1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int mode = -1;
    asiExtraField.setMode(mode);
    assertEquals(0, asiExtraField.getMode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMode_negativeMode_Mamy6() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int mode = -10;
    asiExtraField.setMode(mode);
    assertEquals(0, asiExtraField.getMode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMode_zeroMode_Umyh7() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int mode = 0;
    asiExtraField.setMode(mode);
    assertEquals(0, asiExtraField.getMode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMode_positiveMode_VbLs8() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int mode = 10;
    asiExtraField.setMode(mode);
    assertEquals(10, asiExtraField.getMode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMode_maxMode_tSHo9() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int mode = Integer.MAX_VALUE;
    asiExtraField.setMode(mode);
    assertEquals(Integer.MAX_VALUE, asiExtraField.getMode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength_mNRN0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(2, zipShort.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthCoverage_FBlC1_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(2, zipShort.getBytes().length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthCoverage_FBlC1_3() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(2, asiExtraField.getLinkedFile().getBytes(Charset.defaultCharset()).length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetDirectoryTrue_WPNH0() {
AsiExtraField asiExtraField = new AsiExtraField();
asiExtraField.setDirectory(true);
assertTrue(asiExtraField.getMode() == 16895);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetDirectoryFalse_ujvC1() {
AsiExtraField asiExtraField = new AsiExtraField();
asiExtraField.setDirectory(false);
assertTrue(asiExtraField.getMode() == 33216);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetLinkedFile_Null_zcgy0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setLinkedFile(null);
    assertNull(asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetLinkedFile_Empty_NiGn1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setLinkedFile("");
    assertEquals("", asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetLinkedFile_Valid_qdAW2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setLinkedFile("file.txt");
    assertEquals("file.txt", asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetLinkedFile_Invalid_gJYc3() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setLinkedFile("file.txt");
    assertNotEquals("file.doc", asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength_YyMh0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort centralDirectoryLength = asiExtraField.getCentralDirectoryLength();
    assertEquals(centralDirectoryLength.getValue(), asiExtraField.getLocalFileDataLength().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetUserId_DoDL0() {
        AsiExtraField asiExtraField = new AsiExtraField();
        asiExtraField.setUserId(100);
        assertEquals(100, asiExtraField.getUserId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataWithInvalidBuffer_ZRPN3() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = null;
    int offset = 0;
    int length = 10;
    try {
        asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Invalid buffer", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataWithInvalidOffset_jesA4() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = -1;
    int length = 10;
    try {
        asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Invalid offset", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataWithInvalidLength_dfOy5() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = -1;
    try {
        asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Invalid length", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataWithInvalidBufferAndOffset_sooD6() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = null;
    int offset = -1;
    int length = 10;
    try {
        asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
        fail("Expected ZipException");
    } catch (ZipException e) {
        assertEquals("Invalid buffer and offset", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLink_EmptyLinkedFile_whuR0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    assertFalse(asiExtraField.isLink());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLink_NonEmptyLinkedFile_HBIm1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setLinkedFile("test.txt");
    assertTrue(asiExtraField.isLink());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLink_NullLinkedFile_mXFH4() {
        AsiExtraField asiExtraField = new AsiExtraField();
        asiExtraField.setLinkedFile(null);
        assertFalse(asiExtraField.isLink());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMode_VmeC0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int mode = asiExtraField.getMode();
    assertEquals(0, mode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModeWithNonZeroMode_AGXr1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setMode(1);
    int mode = asiExtraField.getMode();
    assertEquals(1, mode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModeWithNegativeMode_sFLl2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setMode(-1);
    int mode = asiExtraField.getMode();
    assertEquals(-1, mode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModeWithMaxValue_Vpwu3() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setMode(Integer.MAX_VALUE);
    int mode = asiExtraField.getMode();
    assertEquals(Integer.MAX_VALUE, mode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModeWithMinValue_Xwki4() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setMode(Integer.MIN_VALUE);
    int mode = asiExtraField.getMode();
    assertEquals(Integer.MIN_VALUE, mode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModeWithInvalidValue_HhGH5() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setMode(Integer.MAX_VALUE + 1);
    int mode = asiExtraField.getMode();
    assertEquals(Integer.MAX_VALUE, mode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsDirectory_True_MmcI0_ggwO0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setDirectory(true);
    assertTrue(asiExtraField.isDirectory());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsDirectory_False_lPhO1_OZin0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setDirectory(false);
    assertFalse(asiExtraField.isDirectory());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetDirectoryEmpty_UOnX3_JYmP0() {
AsiExtraField asiExtraField = new AsiExtraField();
asiExtraField.setDirectory(true);
assertTrue(asiExtraField.getMode() == 33216);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLengthWithBytes_pbqu2_BMBQ0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] bytes = new byte[10];
    ZipShort centralDirectoryLength = asiExtraField.getCentralDirectoryLength();
    assertEquals(centralDirectoryLength.getValue(), asiExtraField.getLocalFileDataLength().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetGroupId_ZGHH0_Owmt0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setGroupId(100);
    assertEquals(100, asiExtraField.getGroupId());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetGroupIdWithZeroValue_SriD2_uHDQ0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setGroupId(0);
    assertEquals(0, asiExtraField.getGroupId());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModeWithNull_XVIm6_vDZf0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setMode(0);
    int mode = asiExtraField.getMode();
    assertEquals(0, mode);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithDifferentLink_qxQU6() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link1 = "http://www.example1.com";
    String link2 = "http://www.example2.com";
    asiExtraField.setLinkedFile(link1);
    assertEquals(link1, asiExtraField.getLinkedFile());
    asiExtraField.setLinkedFile(link2);
    assertEquals(link2, asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFileWithSameLink_PpAt7() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String link = "http://www.example.com";
    asiExtraField.setLinkedFile(link);
    assertEquals(link, asiExtraField.getLinkedFile());
    asiExtraField.setLinkedFile(link);
    assertEquals(link, asiExtraField.getLinkedFile());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_1_GMdd0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_2_hAHX1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 1);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_3_IdKZ2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 2);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_4_IHTr3() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 3);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_5_BltW4() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 4);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_6_Aeuo5() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 5);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_7_oPFP6() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 6);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_8_oEGn7() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 7);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_9_qNvn8() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_10_oFFw9() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 9);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_11_bRoC10() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 10);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_12_mQpQ11() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] centralDirectoryData = asiExtraField.getCentralDirectoryData();
    assertNotNull(centralDirectoryData);
    assertEquals(centralDirectoryData.length, 11);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_ushK0() {
        AsiExtraField asiExtraField = new AsiExtraField();
        ZipShort headerId = asiExtraField.getHeaderId();
        assertNotNull(headerId);
        assertEquals(headerId.getValue(), AsiExtraField.HEADER_ID.getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthCoverage_FBlC1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(2, zipShort.getValue());
    assertEquals(2, zipShort.getBytes().length);
    assertEquals(2, asiExtraField.getLinkedFile().getBytes(Charset.defaultCharset()).length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_bpTw0() {
        asiExtraField = new AsiExtraField();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserId_pPPA1() {
        int expected = 123;
        int actual = asiExtraField.getUserId();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserId_negative_Zrkb2() {
        int expected = -123;
        int actual = asiExtraField.getUserId();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserId_zero_HskL3() {
        int expected = 0;
        int actual = asiExtraField.getUserId();
        assertEquals(expected, actual);
    }
}