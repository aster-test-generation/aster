/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.bzip2;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BZip2CompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testChooseBlockSize_smallInput_xbNu0() {
    int blockSize = BZip2CompressorOutputStream.chooseBlockSize(1000);
    assertEquals(1, blockSize);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testChooseBlockSize_largeInput_Qehw1() {
    int blockSize = BZip2CompressorOutputStream.chooseBlockSize(1000000);
    assertEquals(9, blockSize);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testChooseBlockSize_exactly132000_GhZX2() {
    int blockSize = BZip2CompressorOutputStream.chooseBlockSize(132000);
    assertEquals(9, blockSize);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCloseWithNullOutputStream_ceDf3() throws IOException {
    BZip2CompressorOutputStream bzip2CompressorOutputStream = new BZip2CompressorOutputStream(null);
    try {
        bzip2CompressorOutputStream.close();
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertTrue(e.getMessage().contains("out must not be null"));
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCloseWithBlockSizeAndNullOutputStream_NKjz5() throws IOException {
    BZip2CompressorOutputStream bzip2CompressorOutputStream = new BZip2CompressorOutputStream(null, 10);
    try {
        bzip2CompressorOutputStream.close();
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertTrue(e.getMessage().contains("out must not be null"));
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCloseWithInvalidBlockSizeAndNullOutputStream_EtwF7() throws IOException {
    BZip2CompressorOutputStream bzip2CompressorOutputStream = new BZip2CompressorOutputStream(null, -1);
    try {
        bzip2CompressorOutputStream.close();
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        assertTrue(e.getMessage().contains("out must not be null"));
    }
}
}