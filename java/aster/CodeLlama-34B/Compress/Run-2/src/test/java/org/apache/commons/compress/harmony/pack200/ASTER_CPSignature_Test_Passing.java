/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CPSignature_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNullSignatureFormAndClasses_Sezk5() {
    CPSignature signature = new CPSignature("signature", null, null);
    assertEquals("signature", signature.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetUnderlyingStringWithNoClasses_fnJQ2_uzyo0() {
    String signature = "";
    org.apache.commons.compress.harmony.pack200.CPUTF8 signatureForm = new org.apache.commons.compress.harmony.pack200.CPUTF8(signature);
    List<CPClass> classes = new ArrayList<>();
    CPSignature cps = new CPSignature(signature, signatureForm, classes);
    String result = cps.getUnderlyingString();
    assertEquals(signature, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithEmptyClasses_HOlN2_SmfC0() {
    org.apache.commons.compress.harmony.pack200.CPUTF8 signatureForm = new org.apache.commons.compress.harmony.pack200.CPUTF8("signatureForm");
    List<CPClass> classes = new ArrayList<>();
    CPSignature signature = new CPSignature("signature", signatureForm, classes);
    assertEquals("signature", signature.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNullClasses_WYqW4_VZPO1() {
    org.apache.commons.compress.harmony.pack200.CPUTF8 signatureForm = new org.apache.commons.compress.harmony.pack200.CPUTF8("signatureForm");
    CPSignature signature = new CPSignature("signature", signatureForm, null);
    assertEquals("signature", signature.toString());
}
}