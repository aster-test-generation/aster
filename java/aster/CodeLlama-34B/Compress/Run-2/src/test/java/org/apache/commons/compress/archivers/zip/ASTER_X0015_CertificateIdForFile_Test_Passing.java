/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_X0015_CertificateIdForFile_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryDataWithInvalidLength_RgiS3() {
    X0015_CertificateIdForFile certificateIdForFile = new X0015_CertificateIdForFile();
    byte[] data = new byte[4];
    int offset = 0;
    int length = 2;
    try {
        certificateIdForFile.parseFromCentralDirectoryData(data, offset, length);
        fail("Exception should be thrown");
    } catch (ZipException e) {
        assertEquals("Invalid length", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_DDmK0() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    assertEquals(1, rcount);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_1() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(1, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_2() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(2, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_3() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(3, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_4() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(4, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_5() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(5, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_6() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(6, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_7() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(7, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_8() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(8, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_9() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(9, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_10() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(10, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_11() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(11, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_12() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(12, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_13() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(13, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_14() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(14, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_15() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(15, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_16() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(16, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_17() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(17, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_18() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(18, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_19() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(19, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_20() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(20, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_21() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(21, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_22() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(22, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_23() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(23, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_24() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(24, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_25() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(25, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_26() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(26, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1_27() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    rcount = x0015.getRecordCount();
    assertEquals(27, rcount);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRecordCount_ZVKV1() {
    X0015_CertificateIdForFile x0015 = new X0015_CertificateIdForFile();
    int rcount = x0015.getRecordCount();
    assertEquals(1, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(2, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(3, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(4, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(5, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(6, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(7, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(8, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(9, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(10, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(11, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(12, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(13, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(14, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(15, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(16, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(17, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(18, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(19, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(20, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(21, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(22, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(23, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(24, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(25, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(26, rcount);
    rcount = x0015.getRecordCount();
    assertEquals(27, rcount);
    rcount = x0015.getRecordCount();
}
}