/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PopulationCodec_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_qYAl0_1() throws Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(3, 4);
    RunCodec runCodec = new RunCodec(5, aCodec, bCodec);
    PopulationCodec populationCodec = new PopulationCodec(runCodec, 6, runCodec);
    byte[] encoded = populationCodec.encode(10);
    for (int i = 0; i < 10; i++) {
    }
    assertNotNull(encoded);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_qYAl0_2() throws Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(3, 4);
    RunCodec runCodec = new RunCodec(5, aCodec, bCodec);
    PopulationCodec populationCodec = new PopulationCodec(runCodec, 6, runCodec);
    byte[] encoded = populationCodec.encode(10);
    for (int i = 0; i < 10; i++) {
    }
    assertEquals(10, encoded.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDecodeWithNullInputStream_KTgf1() throws IOException, Pack200Exception {
    BHSDCodec favouredCodec = new BHSDCodec(1, 2);
    BHSDCodec tokenCodec = new BHSDCodec(3, 4);
    BHSDCodec unfavouredCodec = new BHSDCodec(5, 6);
    RunCodec runCodec = new RunCodec(7, favouredCodec, unfavouredCodec);
    PopulationCodec populationCodec = new PopulationCodec(runCodec, 8, unfavouredCodec);
    assertThrows(Pack200Exception.class, () -> populationCodec.decode(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_qYAl0() throws Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(3, 4);
    RunCodec runCodec = new RunCodec(5, aCodec, bCodec);
    PopulationCodec populationCodec = new PopulationCodec(runCodec, 6, runCodec);
    byte[] encoded = populationCodec.encode(10);
    assertNotNull(encoded);
    assertEquals(10, encoded.length);
    for (int i = 0; i < 10; i++) {
        assertEquals(i, encoded[i]);
    }
}
}