/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200ClassReader_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFileName_aXJa0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String fileName = reader.getFileName();
    assertEquals("", fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFileNameWithNonEmptyByteArray_UAYj1() {
    byte[] bytes = new byte[10];
    bytes[0] = 1;
    Pack200ClassReader reader = new Pack200ClassReader(bytes);
    String fileName = reader.getFileName();
    assertEquals("", fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFileNameWithEmptyByteArray_Liak2() {
    byte[] bytes = new byte[0];
    Pack200ClassReader reader = new Pack200ClassReader(bytes);
    String fileName = reader.getFileName();
    assertEquals("", fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileName_qVrc0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test.class");
    assertEquals("test.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithNull_tVus1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName(null);
    assertNull(reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithEmptyString_ZXkP2() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("");
    assertEquals("", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithDifferentName_yfzC5() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test2.class");
    assertEquals("test2.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithDifferentExtension_DQdU7() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test.txt");
    assertEquals("test.txt", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithDifferentPath_bObG9() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.class");
    assertEquals("test/test.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithDifferentPathAndName_bJKs11() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test2.class");
    assertEquals("test/test2.class", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileNameWithDifferentPathAndExtension_sLyx13() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.setFileName("test/test.txt");
    assertEquals("test/test.txt", reader.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_index0_kyeN0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    int result = reader.readUnsignedShort(0);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_index1_PyUM1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    int result = reader.readUnsignedShort(1);
    assertEquals(1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_index0_nonEmptyByteArray_UyaQ3() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[10]);
    int result = reader.readUnsignedShort(0);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_index1_nonEmptyByteArray_hGUG4() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[10]);
    int result = reader.readUnsignedShort(1);
    assertEquals(1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_index2_nonEmptyByteArray_MGzy5() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[10]);
    int result = reader.readUnsignedShort(2);
    assertEquals(2, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_index0_byteArrayWith1Byte_TWPU6() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    int result = reader.readUnsignedShort(0);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_index2_byteArrayWith1Byte_FsPK8() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    int result = reader.readUnsignedShort(2);
    assertEquals(2, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUnsignedShort_index0_byteArrayWith2Bytes_lxKW9() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[2]);
    int result = reader.readUnsignedShort(0);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndex_pomA0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndexWithWideIndex_eHJJ1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[1]);
    reader.lastConstantHadWideIndex();
    assertTrue(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLastConstantHadWideIndexWithoutWideIndex_vrfi2() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    reader.lastConstantHadWideIndex();
    assertFalse(reader.lastConstantHadWideIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_synthetic_XIKA0() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    assertEquals("Synthetic", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_notSynthetic_hivY1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    assertNotEquals("Synthetic", utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_null_fvCT2() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, null);
    assertNull(utf8);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_allInputs_mIEE3_1() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    utf8 = reader.readUTF8(1, new char[0]);
    utf8 = reader.readUTF8(0, new char[1]);
    utf8 = reader.readUTF8(1, new char[1]);
    utf8 = reader.readUTF8(0, null);
    utf8 = reader.readUTF8(1, null);
    assertEquals("Synthetic", utf8);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_allInputs_mIEE3_2() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    utf8 = reader.readUTF8(1, new char[0]);
    utf8 = reader.readUTF8(0, new char[1]);
    utf8 = reader.readUTF8(1, new char[1]);
    utf8 = reader.readUTF8(0, null);
    utf8 = reader.readUTF8(1, null);
    assertNotEquals("Synthetic", utf8);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_allInputs_mIEE3_5() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    utf8 = reader.readUTF8(1, new char[0]);
    utf8 = reader.readUTF8(0, new char[1]);
    utf8 = reader.readUTF8(1, new char[1]);
    utf8 = reader.readUTF8(0, null);
    utf8 = reader.readUTF8(1, null);
    assertNull(utf8);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadUTF8_allInputs_mIEE3() {
    Pack200ClassReader reader = new Pack200ClassReader(new byte[0]);
    String utf8 = reader.readUTF8(0, new char[0]);
    assertEquals("Synthetic", utf8);
    utf8 = reader.readUTF8(1, new char[0]);
    assertNotEquals("Synthetic", utf8);
    utf8 = reader.readUTF8(0, new char[1]);
    assertEquals("Synthetic", utf8);
    utf8 = reader.readUTF8(1, new char[1]);
    assertNotEquals("Synthetic", utf8);
    utf8 = reader.readUTF8(0, null);
    assertNull(utf8);
    utf8 = reader.readUTF8(1, null);
    assertNull(utf8);
}
}