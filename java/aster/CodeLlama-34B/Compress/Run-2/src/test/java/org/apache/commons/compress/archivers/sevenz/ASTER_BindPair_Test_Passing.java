/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BindPair_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNonZeroIndices_wGZo1() {
    BindPair bindPair = new BindPair(1, 2);
    String expected = "BindPair binding input 1 to output 2";
    String actual = bindPair.toString();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithNegativeIndices_Heea2() {
    BindPair bindPair = new BindPair(-1, -2);
    String expected = "BindPair binding input -1 to output -2";
    String actual = bindPair.toString();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithEmptyIndices_VNTq4_OOOK0() {
    BindPair bindPair = new BindPair(0, 0);
    String expected = "BindPair binding input  to output ";
    String actual = bindPair.toString();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringWithInvalidIndices_btBO5_swLR0() {
    BindPair bindPair = new BindPair(0, 0);
    String expected = "BindPair binding input 0 to output 0";
    String actual = bindPair.toString();
    assertEquals(expected, actual);
}
}