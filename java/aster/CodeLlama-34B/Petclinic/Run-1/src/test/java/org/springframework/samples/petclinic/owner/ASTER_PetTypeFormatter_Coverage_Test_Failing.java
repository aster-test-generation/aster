/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.owner;

import java.text.ParseException;
import java.util.Locale;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import java.util.ArrayList;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PetTypeFormatter_Coverage_Test_Failing {

	private OwnerRepository owners;

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParse_emptyText_AGJS0() throws java.text.ParseException {
		PetTypeFormatter formatter = new PetTypeFormatter(owners);
		assertThrows(ParseException.class, () -> formatter.parse("", Locale.US));
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParse_nullText_PGQz1() throws java.text.ParseException {
		PetTypeFormatter formatter = new PetTypeFormatter(owners);
		assertThrows(ParseException.class, () -> formatter.parse(null, Locale.US));
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParse_nullLocale_UfOj2() throws java.text.ParseException {
		PetTypeFormatter formatter = new PetTypeFormatter(owners);
		assertThrows(ParseException.class, () -> formatter.parse("Dog", null));
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParse_petTypeNotFound_KORm3() throws java.text.ParseException {
		PetTypeFormatter formatter = new PetTypeFormatter(owners);
		when(owners.findPetTypes()).thenReturn(new ArrayList<>());
		assertThrows(ParseException.class, () -> formatter.parse("Dog", Locale.US));
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testPrint_sQRy0_buSx0_fid3() {
		PetTypeFormatter formatter = new PetTypeFormatter(null);
		PetType petType = new PetType();
		String result = formatter.print(petType, Locale.ENGLISH);
		assertEquals("petType name", result);
	}

}