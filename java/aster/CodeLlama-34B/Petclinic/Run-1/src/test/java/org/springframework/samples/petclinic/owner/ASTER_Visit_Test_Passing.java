/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.owner;

import java.time.LocalDate;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Visit_Test_Passing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetDate_validDate_jijD0() {
		Visit visit = new Visit();
		LocalDate date = LocalDate.of(2022, 1, 1);
		visit.setDate(date);
		assertEquals(date, visit.getDate());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetDate_nullDate_Dkeu1() {
		Visit visit = new Visit();
		visit.setDate(null);
		assertNull(visit.getDate());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetDate_invalidDate_Hvjm2() {
		Visit visit = new Visit();
		LocalDate date = LocalDate.of(2022, 1, 32);
		visit.setDate(date);
		assertNull(visit.getDate());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetDescription_OlQv0() {
		Visit visit = new Visit();
		String description = visit.getDescription();
		assertEquals("", description);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetDescriptionWithDescription_aaoV1() {
		Visit visit = new Visit();
		visit.setDescription("Test Description");
		String description = visit.getDescription();
		assertEquals("Test Description", description);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetDescriptionWithNullDescription_YxdS2() {
		Visit visit = new Visit();
		visit.setDescription(null);
		String description = visit.getDescription();
		assertNull(description);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetDescription_Null_YdaE0() {
		Visit visit = new Visit();
		visit.setDescription(null);
		assertNull(visit.getDescription());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetDescription_EmptyString_ELGk1() {
		Visit visit = new Visit();
		visit.setDescription("");
		assertEquals("", visit.getDescription());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetDescription_ValidString_Ocsi2() {
		Visit visit = new Visit();
		visit.setDescription("Test Description");
		assertEquals("Test Description", visit.getDescription());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetDescription_InvalidString_UHVx3() {
		Visit visit = new Visit();
		visit.setDescription("Invalid Description");
		assertNotEquals("Invalid Description", visit.getDescription());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetDate_UirO0() {
		Visit visit = new Visit();
		LocalDate date = visit.getDate();
		assertEquals(LocalDate.now(), date);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetDateWithInvalidParameter_WyCH2_BeAA0() {
		Visit visit = new Visit();
		LocalDate date = visit.getDate();
		assertNotEquals(LocalDate.now(), date);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetDateWithNullParameter_rJCz3_aDNC0() {
		Visit visit = new Visit();
		LocalDate date = visit.getDate();
		assertNull(date);
	}

}