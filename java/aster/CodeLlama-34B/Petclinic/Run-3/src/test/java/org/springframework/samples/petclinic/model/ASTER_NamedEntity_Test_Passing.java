/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.model;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_NamedEntity_Test_Passing {

	NamedEntity entity = new NamedEntity();

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetName_ValidName_oywX0() {
		NamedEntity entity = new NamedEntity();
		entity.setName("John Doe");
		assertEquals("John Doe", entity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetName_EmptyName_PubW1() {
		NamedEntity entity = new NamedEntity();
		entity.setName("");
		assertEquals("", entity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetName_NullName_XxbW2() {
		NamedEntity entity = new NamedEntity();
		entity.setName(null);
		assertNull(entity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetName_InvalidName_QMZR3() {
		NamedEntity entity = new NamedEntity();
		entity.setName("John Doe123");
		assertEquals("John Doe123", entity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetName_DuplicateName_jeJj4() {
		NamedEntity entity = new NamedEntity();
		entity.setName("John Doe");
		entity.setName("John Doe");
		assertEquals("John Doe", entity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetName_DifferentName_vFGu5() {
		NamedEntity entity = new NamedEntity();
		entity.setName("John Doe");
		entity.setName("Jane Doe");
		assertEquals("Jane Doe", entity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetName_Null_BDka0() {
		NamedEntity entity = new NamedEntity();
		String name = entity.getName();
		assertNull(name);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetName_Empty_SBLA1() {
		NamedEntity entity = new NamedEntity();
		entity.setName("");
		String name = entity.getName();
		assertEquals("", name);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetName_NonEmpty_BdED2() {
		NamedEntity entity = new NamedEntity();
		entity.setName("John Doe");
		String name = entity.getName();
		assertEquals("John Doe", name);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetName_NullName_oJKR3() {
		NamedEntity entity = new NamedEntity();
		entity.setName(null);
		String name = entity.getName();
		assertNull(name);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToStringWithName_ohme1_XeTh0() {
		NamedEntity entity = new NamedEntity();
		entity.setName("John Doe");
		String expected = "John Doe";
		String actual = entity.toString();
		assertEquals(expected, actual);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToStringWithNullName_wqDi2_Ypmh0() {
		NamedEntity entity = new NamedEntity();
		String expected = null;
		String actual = entity.toString();
		assertEquals(expected, actual);
	}

}