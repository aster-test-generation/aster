/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic;

import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PetClinicApplication_Test_Passing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMain_NoArgs_vSfl0() {
		String[] args = new String[0];
		PetClinicApplication.main(args);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMain_WithArgs_CrJQ1() {
		String[] args = new String[] { "--spring.config.location=classpath:/application.properties" };
		PetClinicApplication.main(args);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMain_WithInvalidArgs_Mxnp2() {
		String[] args = new String[] { "--invalid.arg" };
		try {
			PetClinicApplication.main(args);
			fail("Expected IllegalArgumentException");
		}
		catch (IllegalArgumentException e) {
		}
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMain_WithMultipleArgs_dTaG5() {
		String[] args = new String[] { "--spring.config.location=classpath:/application.properties",
				"--spring.profiles.active=dev" };
		PetClinicApplication.main(args);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMain_WithInvalidProfile_PSia6() {
		String[] args = new String[] { "--spring.config.location=classpath:/application.properties",
				"--spring.profiles.active=invalid" };
		try {
			PetClinicApplication.main(args);
			fail("Expected IllegalArgumentException");
		}
		catch (IllegalArgumentException e) {
		}
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMain_WithNullProfile_ZqyR7() {
		String[] args = new String[] { "--spring.config.location=classpath:/application.properties",
				"--spring.profiles.active=null" };
		try {
			PetClinicApplication.main(args);
			fail("Expected NullPointerException");
		}
		catch (NullPointerException e) {
		}
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMain_WithEmptyProfile_DzTx8() {
		String[] args = new String[] { "--spring.config.location=classpath:/application.properties",
				"--spring.profiles.active=" };
		PetClinicApplication.main(args);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMain_WithMultipleProfiles_rneS9() {
		String[] args = new String[] { "--spring.config.location=classpath:/application.properties",
				"--spring.profiles.active=dev,prod" };
		PetClinicApplication.main(args);
	}

}