/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_ParseException_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrap_UnsupportedOperationException_FgGL0() {
        Throwable e = new UnsupportedOperationException();
        try {
            ParseException.wrap(e);
            fail("Expected UnsupportedOperationException");
        } catch (UnsupportedOperationException ex) {
            assertEquals(e, ex);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrap_ParseException_jVxh1() {
        Throwable e = new ParseException("test");
        ParseException wrapped = ParseException.wrap(e);
        assertEquals(e, wrapped);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrap_OtherException_KbuB2_1() {
        Throwable e = new Exception();
        ParseException wrapped = ParseException.wrap(e);
        assertNotNull(wrapped);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrap_OtherException_KbuB2_2() {
        Throwable e = new Exception();
        ParseException wrapped = ParseException.wrap(e);
        assertEquals(e, wrapped.getCause());
    }
}