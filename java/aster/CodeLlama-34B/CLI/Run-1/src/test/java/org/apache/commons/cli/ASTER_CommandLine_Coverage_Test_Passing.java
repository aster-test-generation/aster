/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import java.util.function.Supplier;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_CommandLine_Coverage_Test_Passing {
    private Supplier<String> defaultValue;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionObject_ParseException_esyp0() {
        CommandLine commandLine = new CommandLine();
        String opt = "invalid_option";
        Object result = commandLine.getOptionObject(opt);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionObject_NullOption_vJjH2() {
        CommandLine commandLine = new CommandLine();
        String opt = null;
        Object result = commandLine.getOptionObject(opt);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionObjectWithInvalidOption_VyQu2_TraY0() {
        CommandLine commandLine = new CommandLine();
        Object optionObject = commandLine.getOptionObject("invalid_option");
        assertNull(optionObject);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionPropertiesWithEvenNumberOfValues_tRGq0_1_fid1() {
        CommandLine commandLine = new CommandLine();
        List<String> values = new ArrayList<String>(Arrays.asList("key1", "value1", "key0", "value0"));
        Properties props = commandLine.getOptionProperties("opt");
        assertEquals(0, props.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionPropertiesWithOddNumberOfValues_IhrY1_1_fid1() {
        CommandLine commandLine = new CommandLine();
        List<String> values = new ArrayList<String>(Arrays.asList("key1", "value1", "key0"));
        Properties props = commandLine.getOptionProperties("opt");
        assertEquals(0, props.size());
    }
}