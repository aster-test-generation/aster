/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_MissingArgumentException_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_1() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertNotNull(option);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_2() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getDescription());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_3() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getLongOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_4() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_5() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_6() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_7() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(1));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_8() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_9() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(3));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_10() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(4));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_11() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(5));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_12() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(6));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_13() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(7));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_14() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(8));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_15() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(9));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_16() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(10));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_17() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(11));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_18() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(12));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_19() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(13));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_20() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(14));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_21() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(15));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_22() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(16));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_23() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(17));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_24() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(18));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_25() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(19));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_26() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(20));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_27() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(21));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_28() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(22));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_29() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(23));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_30() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(24));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_31() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(25));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_32() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(26));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_33() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(27));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_34() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(28));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_35() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(29));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_36() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(30));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_37() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(31));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_38() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(32));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_39() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(33));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_40() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(34));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_41() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(35));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_42() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(36));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_43() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(37));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_44() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(38));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_45() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(39));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_46() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(40));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_47() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(41));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_48() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(42));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_49() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(43));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_50() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(44));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_51() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(45));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_52() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(46));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_53() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(47));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_54() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(48));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_55() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(49));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_56() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(50));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_57() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(51));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_58() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(52));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_59() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(53));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_60() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(54));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_61() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(55));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_62() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(56));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_63() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(57));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_64() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(58));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_65() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(59));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_66() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(60));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_67() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(61));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_68() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(62));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_69() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(63));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_70() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(64));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_71() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(65));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_72() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(66));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_73() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(67));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_74() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(68));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_75() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(69));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_76() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(70));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_77() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(71));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_78() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(72));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_79() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(73));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_80() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(74));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_81() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(75));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_82() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(76));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_83() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(77));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_84() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(78));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_85() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(79));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_86() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(80));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_87() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(81));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_88() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(82));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_89() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(83));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_90() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(84));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_91() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(85));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_92() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(86));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_93() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(87));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_94() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(88));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_95() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(89));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_96() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(90));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_97() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(91));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_98() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(92));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_99() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(93));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_100() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(94));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_101() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(95));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_102() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(96));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_103() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(97));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_104() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(98));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_105() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(99));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_106() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(100));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOption_hhwX0_107() {
        MissingArgumentException exception = new MissingArgumentException("message");
        Option option = exception.getOption();
        assertEquals("message", option.getValue(101));
    }
}