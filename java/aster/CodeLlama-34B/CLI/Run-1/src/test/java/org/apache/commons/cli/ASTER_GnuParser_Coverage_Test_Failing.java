/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_GnuParser_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCheckRequiredOptions_gCgX0() throws org.apache.commons.cli.MissingOptionException {
        GnuParser parser = new GnuParser();
        try {
            parser.checkRequiredOptions();
            fail("MissingOptionException should have been thrown");
        } catch (MissingOptionException e) {
            assertEquals("Missing required options: ", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFlatten_nullArguments_FVCy6() {
        GnuParser parser = new GnuParser();
        Options options = new Options();
        String[] arguments = null;
        String[] expected = new String[]{};
        String[] actual = parser.flatten(options, arguments, false);
        assertArrayEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFlatten_nullArgumentsAndOptions_BaIq8() {
        GnuParser parser = new GnuParser();
        Options options = null;
        String[] arguments = null;
        String[] expected = new String[]{};
        String[] actual = parser.flatten(options, arguments, false);
        assertArrayEquals(expected, actual);
    }
}