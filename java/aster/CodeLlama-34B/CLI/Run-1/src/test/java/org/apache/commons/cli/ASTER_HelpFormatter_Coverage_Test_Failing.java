/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_HelpFormatter_Coverage_Test_Failing {
    private Option option;
    private Options options;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos1_gDmo0() {
        HelpFormatter formatter = new HelpFormatter();
        String text = "This is a sample text.";
        int width = 10;
        int startPos = 0;
        int expected = 10;
        int actual = formatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos2_NSUj1() {
        HelpFormatter formatter = new HelpFormatter();
        String text = "This is a sample text.";
        int width = 10;
        int startPos = 5;
        int expected = 10;
        int actual = formatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindWrapPos3_huiE2() {
        HelpFormatter formatter = new HelpFormatter();
        String text = "This is a sample text.";
        int width = 10;
        int startPos = 10;
        int expected = -1;
        int actual = formatter.findWrapPos(text, width, startPos);
        assertEquals(expected, actual);
    }
}