/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionGroup_Coverage_Test_Failing {
    private Option option;
    private OptionGroup optionGroup;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_nullOption_Tfzt4() throws org.apache.commons.cli.AlreadySelectedException {
        optionGroup.setSelected(null);
        Assertions.assertNull(optionGroup.getSelected());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_differentOption_qaKz5() throws org.apache.commons.cli.AlreadySelectedException {
        Option option1 = new Option("test1", "test option 1", false, "test description 1");
        Option option2 = new Option("test2", "test option 2", false, "test description 2");
        optionGroup.setSelected(option1);
        Assertions.assertEquals(option1, optionGroup.getSelected());
        optionGroup.setSelected(option2);
        Assertions.assertEquals(option2, optionGroup.getSelected());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_sameOption_nHJX7() throws org.apache.commons.cli.AlreadySelectedException {
        optionGroup.setSelected(option);
        Assertions.assertEquals(option, optionGroup.getSelected());
        optionGroup.setSelected(option);
        Assertions.assertEquals(option, optionGroup.getSelected());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_differentOptionWithSameKey_WRuY8() throws org.apache.commons.cli.AlreadySelectedException {
        Option option1 = new Option("test", "test option 1", false, "test description 1");
        Option option2 = new Option("test", "test option 2", false, "test description 2");
        optionGroup.setSelected(option1);
        Assertions.assertEquals(option1, optionGroup.getSelected());
        optionGroup.setSelected(option2);
        Assertions.assertEquals(option2, optionGroup.getSelected());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_nullOptionWithSameKey_vzLC9() throws org.apache.commons.cli.AlreadySelectedException {
        Option option1 = new Option("test", "test option 1", false, "test description 1");
        optionGroup.setSelected(option1);
        Assertions.assertEquals(option1, optionGroup.getSelected());
        optionGroup.setSelected(null);
        Assertions.assertNull(optionGroup.getSelected());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_nullOptionWithDifferentKey_SCOY11() throws org.apache.commons.cli.AlreadySelectedException {
        Option option1 = new Option("test1", "test option 1", false, "test description 1");
        optionGroup.setSelected(option1);
        Assertions.assertEquals(option1, optionGroup.getSelected());
        optionGroup.setSelected(null);
        Assertions.assertNull(optionGroup.getSelected());
    }
}