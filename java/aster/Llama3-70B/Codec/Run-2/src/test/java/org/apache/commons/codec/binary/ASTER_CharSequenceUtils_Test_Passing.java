/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CharSequenceUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches3_hPaP2() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "Universe";
    boolean result = CharSequenceUtils.regionMatches(cs, false, 6, substring, 0, 5);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches4_SQID3() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "hello";
    boolean result = CharSequenceUtils.regionMatches(cs, true, 0, substring, 0, 5);
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches5_elTi4() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "World";
    boolean result = CharSequenceUtils.regionMatches(cs, false, 7, substring, 0, 5);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches7_QWdj6() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "";
    boolean result = CharSequenceUtils.regionMatches(cs, false, 6, substring, 0, 0);
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches8_defW7() {
    CharSequence cs = "";
    CharSequence substring = "World";
    boolean result = CharSequenceUtils.regionMatches(cs, false, 0, substring, 0, 5);
    assert !result;
}
}