/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;
import java.util.HashSet;
import java.util.Set;
import static org.junit.jupiter.api.Assertions.*;
import java.util.HashSet;
import java.util.Set;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Languages_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withEmptyResourceName_ZoBj2() {
    String languagesResourceName = "";
    try {
        Languages.getInstance(languagesResourceName);
        fail("Expected exception not thrown");
    } catch (Exception e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLanguages_INxB0_GTGX0() {
    Set<String> languagesSet = new HashSet<>();
    languagesSet.add("lang1");
    languagesSet.add("lang2");
    Languages languages = Languages.getInstance("languages");
    Set<String> result = languages.getLanguages();
    assertEquals(languagesSet, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withValidResourceName_aYMG0_1_fid1() {
    String languagesResourceName = "valid_resource_name";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withValidResourceName_aYMG0_2_fid1() {
    String languagesResourceName = "valid_resource_name";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages.getLanguages());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withResourceNameHavingExtendedComment_fjAk4_1_fid1() {
    String languagesResourceName = "resource_name_with_extended_comment";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withResourceNameHavingExtendedComment_fjAk4_2_fid1() {
    String languagesResourceName = "resource_name_with_extended_comment";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages.getLanguages());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withResourceNameHavingEmptyLines_eInS5_1_fid1() {
    String languagesResourceName = "resource_name_with_empty_lines";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withResourceNameHavingEmptyLines_eInS5_2_fid1() {
    String languagesResourceName = "resource_name_with_empty_lines";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages.getLanguages());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLanguages_INxB0_GTGX0_fid1() {
    Set<String> languagesSet = new HashSet<>();
    languagesSet.add("lang1");
    languagesSet.add("lang2");
    Languages languages = Languages.getInstance("languagesResourceName");
    Set<String> result = languages.getLanguages();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLanguages_INxB0_wlRW1_2_fid1() {
    Set<String> languagesSet = new HashSet<>();
    languagesSet.add("lang1");
    languagesSet.add("lang2");
    Languages languages = Languages.getInstance("languagesResourceName");
    Set<String> result = languages.getLanguages();
    assertEquals(languagesSet, result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withValidResourceName_aYMG0() {
    String languagesResourceName = "valid_resource_name";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages);
    assertNotNull(languages.getLanguages());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withResourceNameHavingExtendedComment_fjAk4() {
    String languagesResourceName = "resource_name_with_extended_comment";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages);
    assertNotNull(languages.getLanguages());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetInstance_withResourceNameHavingEmptyLines_eInS5() {
    String languagesResourceName = "resource_name_with_empty_lines";
    Languages languages = Languages.getInstance(languagesResourceName);
    assertNotNull(languages);
    assertNotNull(languages.getLanguages());
}
}