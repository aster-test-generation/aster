/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import java.io.UnsupportedEncodingException;
import java.util.BitSet;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.*;
import java.util.BitSet;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_QuotedPrintableCodec_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeNullInput_QUeH0() throws DecoderException, UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        assertNull(codec.decode(null, "UTF-8"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeValidInput_BXHK1() throws DecoderException, UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String sourceStr = "Hello, World!";
        String sourceCharset = "UTF-8";
        String decodedStr = codec.decode(sourceStr, sourceCharset);
        assertEquals(sourceStr, decodedStr);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeValidInputWithNonAsciiChars_POLp2() throws DecoderException, UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String sourceStr = "Hello, Welt!";
        String sourceCharset = "UTF-8";
        String decodedStr = codec.decode(sourceStr, sourceCharset);
        assertEquals(sourceStr, decodedStr);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeQuotedPrintable_withNegativeByte_Naaf0() {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        BitSet printable = BitSet.valueOf(new byte[]{(byte) 0x01, (byte) 0x02, (byte) 0x03});
        byte[] bytes = new byte[]{(byte) 0x80, (byte) 0x81, (byte) 0x82};
        byte[] result = QuotedPrintableCodec.encodeQuotedPrintable(printable, bytes, false);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeQuotedPrintable_withLargeByte_CydD1() {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        BitSet printable = BitSet.valueOf(new byte[]{(byte) 0x01, (byte) 0x02, (byte) 0x03});
        byte[] bytes = new byte[]{(byte) 0xF0, (byte) 0xF1, (byte) 0xF2};
        byte[] result = QuotedPrintableCodec.encodeQuotedPrintable(printable, bytes, false);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNullString_sKEW0() throws UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String result = codec.encode(null, "UTF-8");
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNonNullString_FIai1() throws UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String result = codec.encode("Hello, World!", "UTF-8");
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeByteArray_kILy1() throws EncoderException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        byte[] bytes = "Hello, World!".getBytes();
        Object result = codec.encode(bytes);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_xIAC2() throws EncoderException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String str = "Hello, World!";
        Object result = codec.encode(str);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNullByteArray_kEsu4() throws EncoderException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        byte[] bytes = null;
        Object result = codec.encode(bytes);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeEmptyString_KVYf5() throws EncoderException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String str = "";
        Object result = codec.encode(str);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNullString_DbOp6() throws EncoderException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String str = null;
        Object result = codec.encode(str);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteArray_GJvg1() throws DecoderException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        byte[] bytes = new byte[] {1, 2, 3};
        Object result = codec.decode(bytes);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_rkML2() throws DecoderException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String str = "Hello, World!";
        Object result = codec.decode(str);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_CR_HqKZ0() throws DecoderException {
        byte[] bytes = new byte[] {(byte) '=' , (byte) '\r'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(0, result.length);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_continue_jhvJ1() throws DecoderException {
        byte[] bytes = new byte[] {(byte) '=' , (byte) '\r', (byte) 'a'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(1, result.length);
        assertEquals('a', result[0]);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_UtilsDigit16_U_osvX2() throws DecoderException {
        byte[] bytes = new byte[] {(byte) '=' , (byte) '1', (byte) '2'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(1, result.length);
        assertEquals((byte) 0x12, result[0]);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_DecoderException_nqRl6() throws DecoderException {
        try {
            byte[] bytes = new byte[] {(byte) '='};
            QuotedPrintableCodec.decodeQuotedPrintable(bytes);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
            assertEquals("Invalid quoted-printable encoding", e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_CR_LF_qeas7() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) '\r', (byte) '\n', (byte) 'b'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(2, result.length);
        assertEquals('a', result[0]);
        assertEquals('b', result[1]);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_NormalBytes_HmHu8() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) 'b', (byte) 'c'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(3, result.length);
        assertEquals('a', result[0]);
        assertEquals('b', result[1]);
        assertEquals('c', result[2]);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_PoCN0_fid1() throws EncoderException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String sourceStr = "Hello, World!";
        String expected = "Hello, World!";
        String actual = codec.encode(sourceStr);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithValidCharset_KQIk2_fid1() throws UnsupportedEncodingException {
        QuotedPrintableCodec codec = new QuotedPrintableCodec();
        String result = codec.encode("Hello, World!", "UTF-16");
        assertFalse(result.startsWith("=") && result.endsWith("="));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_continue_jhvJ1_1() throws DecoderException {
        byte[] bytes = new byte[] {(byte) '=' , (byte) '\r', (byte) 'a'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(1, result.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_continue_jhvJ1_2() throws DecoderException {
        byte[] bytes = new byte[] {(byte) '=' , (byte) '\r', (byte) 'a'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals('a', result[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_UtilsDigit16_U_osvX2_1() throws DecoderException {
        byte[] bytes = new byte[] {(byte) '=' , (byte) '1', (byte) '2'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(1, result.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_UtilsDigit16_U_osvX2_2() throws DecoderException {
        byte[] bytes = new byte[] {(byte) '=' , (byte) '1', (byte) '2'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals((byte) 0x12, result[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_CR_LF_qeas7_1() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) '\r', (byte) '\n', (byte) 'b'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(2, result.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_CR_LF_qeas7_2() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) '\r', (byte) '\n', (byte) 'b'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals('a', result[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_CR_LF_qeas7_3() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) '\r', (byte) '\n', (byte) 'b'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals('b', result[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_NormalBytes_HmHu8_1() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) 'b', (byte) 'c'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals(3, result.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_NormalBytes_HmHu8_2() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) 'b', (byte) 'c'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals('a', result[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_NormalBytes_HmHu8_3() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) 'b', (byte) 'c'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals('b', result[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeQuotedPrintable_NormalBytes_HmHu8_4() throws DecoderException {
        byte[] bytes = new byte[] {(byte) 'a', (byte) 'b', (byte) 'c'};
        byte[] result = QuotedPrintableCodec.decodeQuotedPrintable(bytes);
        assertEquals('c', result[2]);}
}