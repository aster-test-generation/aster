/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import java.io.UnsupportedEncodingException;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_URLCodec_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_DoesNotThrowException_WhenInputIsValid_ZRvV2() throws Exception {
        URLCodec urlCodec = new URLCodec();
        String result = urlCodec.decode("someValidString");
        assert result != null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_tsZv2() throws DecoderException {
        URLCodec codec = new URLCodec();
        assertEquals("Hello World", codec.decode("Hello%20World"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_unIQ2() throws EncoderException {
        URLCodec codec = new URLCodec();
        assertEquals("Hello+World", codec.encode("Hello World"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNonNullString_zaVw1() throws EncoderException {
        URLCodec urlCodec = new URLCodec();
        String str = "Hello World";
        String result = urlCodec.encode(str);
        assert result != null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeCustomCharset_uIse4() throws EncoderException {
        URLCodec urlCodec = new URLCodec("UTF-8");
        String str = "Hello World";
        String result = urlCodec.encode(str);
        assert result != null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_sGhP3_DGyi0() throws UnsupportedEncodingException {
    URLCodec codec = new URLCodec();
    codec.encode("test", "UTF-8"); // No exception is expected here
}
}