/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CharSequenceUtils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches1_oqTn0() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "World";
    boolean result = CharSequenceUtils.regionMatches(cs, false, 6, substring, 0, 5);
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches2_rraV1() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "WORLD";
    boolean result = CharSequenceUtils.regionMatches(cs, true, 6, substring, 0, 5);
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches6_XsNQ5() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "World";
    boolean result = CharSequenceUtils.regionMatches(cs, false, 6, substring, 1, 4);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches1_oqTn0_fid1() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "World";
    boolean result = CharSequenceUtils.regionMatches(cs, false, 6, substring, 0, 5);
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches2_rraV1_fid1() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "WORLD";
    boolean result = CharSequenceUtils.regionMatches(cs, true, 6, substring, 0, 5);
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatches6_XsNQ5_fid1() {
    CharSequence cs = "HelloWorld";
    CharSequence substring = "World";
    boolean result = CharSequenceUtils.regionMatches(cs, false, 6, substring, 0, 4);
    assert result;
}
}