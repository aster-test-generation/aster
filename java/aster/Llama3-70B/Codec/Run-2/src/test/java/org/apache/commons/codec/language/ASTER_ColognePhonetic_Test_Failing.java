/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ColognePhonetic_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_Imre0() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.encode("Schmidt");
    assertEquals("4623", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic3_Myzv2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("AEIOUY");
    assertEquals("000000", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic4_kefr3() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("BP");
    assertEquals("11", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic5_MaMC4() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("DT");
    assertEquals("22", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic6_EJuS5() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("FPVW");
    assertEquals("333", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic7_pLAh6() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("GKQ");
    assertEquals("444", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic8_PoES7() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("XCKQ");
    assertEquals("488", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic9_JfjS8() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("SZ");
    assertEquals("88", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic11_ubtR10() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("DTX");
    assertEquals("88", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic14_YYLE13() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("MN");
    assertEquals("66", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic3_mAiX2() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("");
    assertEquals("0", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic12_gwIW11() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("P");
    assertEquals("3", result);
}
}