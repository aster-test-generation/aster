/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ColognePhonetic_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeString_KocH0() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    Object result = colognePhonetic.encode("Hello");
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsEncodeEqual_SameText_ReturnsTrue_zKXX0() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String text1 = "Hello";
    String text2 = "Hello";
    assertTrue(colognePhonetic.isEncodeEqual(text1, text2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic1_LkoV0() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic(null);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic2_iicU1() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("");
    assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic10_RAsn9() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("C");
    assertEquals("8", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic12_kNCx11() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("R");
    assertEquals("7", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic13_ZWoO12() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("L");
    assertEquals("5", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic15_bGjF14() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("H");
    assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic1_RaDl0() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic(null);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic2_SsZM1() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("");
    assertEquals("", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic6_mHYN5() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("A");
    assertEquals("0", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic7_lLzP6() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("B");
    assertEquals("1", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic8_ijRJ7() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("P");
    assertEquals("1", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic9_ucln8() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("D");
    assertEquals("2", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic10_PNeZ9() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("T");
    assertEquals("2", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic11_cAKI10() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("F");
    assertEquals("3", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic13_FUfV12() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("V");
    assertEquals("3", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic14_XBuY13() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("W");
    assertEquals("3", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic15_gUCI14() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("G");
    assertEquals("4", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic16_sSBM15() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("K");
    assertEquals("4", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic17_MaJr16() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("Q");
    assertEquals("4", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic18_SMrj17() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("X");
    assertEquals("48", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testArrayContains3_EwZY17_RaAo0() {
    ColognePhonetic cp = new ColognePhonetic();
    char[] array = {'C', 'S', 'Z'};
    boolean result = false;
    for (char c : array) {
        if (c == 'C') {
            result = true;
            break;
        }
    }
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testArrayContains4_hfqt18_RnFc0() {
    ColognePhonetic cp = new ColognePhonetic();
    char[] chars = {'C', 'S', 'Z'};
    boolean result = false;
    for (char c : chars) {
        if (c == 'X') {
            result = true;
            break;
        }
    }
    assertFalse(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testArrayContains5_cohW19_oQpW0() {
    ColognePhonetic cp = new ColognePhonetic();
    char[] array = {'F', 'P', 'V', 'W'};
    boolean result = false;
    for (char c : array) {
        if (c == 'F') {
            result = true;
            break;
        }
    }
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testArrayContains2_ZMfU16_SUQK0() {
    ColognePhonetic cp = new ColognePhonetic();
    char[] chars = {'A', 'E', 'I', 'J', 'O', 'U', 'Y'};
    boolean result = false;
    for (char c : chars) {
        if (c == 'Z') {
            result = true;
            break;
        }
    }
    assertFalse(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testArrayContains1_NGvC15_ttQB0() {
    ColognePhonetic cp = new ColognePhonetic();
    char[] chars = {'A', 'E', 'I', 'J', 'O', 'U', 'Y'};
    boolean result = false;
    for (char c : chars) {
        if (c == 'A') {
            result = true;
            break;
        }
    }
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_Imre0_fid2() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.encode("Schmidt");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic3_Myzv2_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("AEIOUY");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic4_kefr3_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("BP");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic5_MaMC4_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("DT");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic6_EJuS5_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("FPVW");
    assertEquals("313", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic7_pLAh6_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("GKQ");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic8_PoES7_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("XCKQ");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic9_JfjS8_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("SZ");
    assertEquals("8", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic11_ubtR10_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("DTX");
    assertEquals("248", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic14_YYLE13_fid2() {
    ColognePhonetic cp = new ColognePhonetic();
    String result = cp.colognePhonetic("MN");
    assertEquals("6", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testColognePhonetic4_BAGk3_fid2() {
    ColognePhonetic colognePhonetic = new ColognePhonetic();
    String result = colognePhonetic.colognePhonetic("");
}
}