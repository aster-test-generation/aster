/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_StringUtils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNewStringUtf16Le_ppUT0() {
    byte[] bytes = new byte[] {0x00, 0x68, 0x00, 0x65, 0x00, 0x6c, 0x00, 0x6c, 0x00, 0x6f};
    String result = StringUtils.newStringUtf16Le(bytes);
    assertEquals("hello", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNewStringUtf16_oGsH0_2() {
    byte[] bytes = new byte[] { 0, 1, 2, 3 };
    String result = StringUtils.newStringUtf16(bytes);
    assertEquals("\u0000\u0001\u0002\u0003", result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesUtf16Be_kbyf0_2() {
    String string = "Hello";
    byte[] result = StringUtils.getBytesUtf16Be(string);
    assertEquals("Hello".getBytes(StandardCharsets.UTF_16BE), result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNewStringUtf16_oGsH0() {
    byte[] bytes = new byte[] { 0, 1, 2, 3 };
    String result = StringUtils.newStringUtf16(bytes);
    assertNotNull(result);
    assertEquals("\u0000\u0001\u0002\u0003", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesUtf16Be_kbyf0() {
    String string = "Hello";
    byte[] result = StringUtils.getBytesUtf16Be(string);
    assertNotNull(result);
    assertEquals("Hello".getBytes(StandardCharsets.UTF_16BE), result);
}
}