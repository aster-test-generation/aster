/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Nysiis_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_PMUJ0() {
    Nysiis nysiis = new Nysiis();
    String result = nysiis.encode("hello");
    assertEquals("HAL", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsStrict_DefaultConstructor_ENPH0() {
    Nysiis nysiis = new Nysiis();
    assertTrue(nysiis.isStrict());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsStrict_StrictConstructor_HWdJ1() {
    Nysiis nysiis = new Nysiis(true);
    assertTrue(nysiis.isStrict());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeString_dVxT0() {
    Nysiis nysiis = new Nysiis();
    String result = (String) nysiis.encode("Hello World");
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisNull_sSll0() {
    Nysiis nysiis = new Nysiis();
    assertNull(nysiis.nysiis(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisEmpty_IDSU1() {
    Nysiis nysiis = new Nysiis();
    assertEquals("", nysiis.nysiis(""));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisEV_fHQo2() {
    Nysiis nysiis = new Nysiis();
    assertEquals("EV", nysiis.nysiis("EV"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisQ_YKQS4() {
    Nysiis nysiis = new Nysiis();
    assertEquals("Q", nysiis.nysiis("Q"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisKN_vgbD7() {
    Nysiis nysiis = new Nysiis();
    assertEquals("N", nysiis.nysiis("KN"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisSCH_dBbh8() {
    Nysiis nysiis = new Nysiis();
    assertEquals("S", nysiis.nysiis("SCH"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisPH_VIYB9() {
    Nysiis nysiis = new Nysiis();
    assertEquals("F", nysiis.nysiis("PH"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisH_ADvT10() {
    Nysiis nysiis = new Nysiis();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisStrict_kRVd12() {
    Nysiis nysiis = new Nysiis(true);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisH_apcS10() {
    Nysiis nysiis = new Nysiis();
    assertEquals("H", nysiis.nysiis("H"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisW_tJbs11() {
    Nysiis nysiis = new Nysiis();
    assertEquals("W", nysiis.nysiis("W"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNysiisStrict_QOeP12() {
    Nysiis nysiis = new Nysiis(true);
    assertEquals("A", nysiis.nysiis("AEIOU"));
}
}