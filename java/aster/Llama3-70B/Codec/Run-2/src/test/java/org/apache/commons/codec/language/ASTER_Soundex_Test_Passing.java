/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Soundex_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeString_zqNq0() {
    Soundex soundex = new Soundex();
    Object result = soundex.encode("Hello");
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMaxLength1_HfFl0() {
    Soundex soundex = new Soundex("mapping");
    assertEquals(4, soundex.getMaxLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMaxLength2_nLxj1() {
    Soundex soundex = new Soundex();
    assertEquals(4, soundex.getMaxLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMaxLength3_nwCH2() {
    Soundex soundex = new Soundex("mapping", true);
    assertEquals(4, soundex.getMaxLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMaxLength4_HSbg3() {
    Soundex soundex = new Soundex(new char[] {'m', 'a', 'p', 'p', 'i', 'n', 'g'});
    assertEquals(4, soundex.getMaxLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMaxLength_UWlM0() {
    Soundex soundex = new Soundex();
    soundex.setMaxLength(5);
    assertEquals(5, soundex.getMaxLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMaxLength_withMapping_ZQRH1() {
    Soundex soundex = new Soundex("mapping");
    soundex.setMaxLength(5);
    assertEquals(5, soundex.getMaxLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMaxLength_withSpecialCaseHW_GayA2() {
    Soundex soundex = new Soundex("mapping", true);
    soundex.setMaxLength(5);
    assertEquals(5, soundex.getMaxLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMaxLength_withCharArray_kLXA3() {
    Soundex soundex = new Soundex(new char[] {'a', 'b', 'c'});
    soundex.setMaxLength(5);
    assertEquals(5, soundex.getMaxLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_ojwQ0() {
    Soundex soundex = new Soundex();
    String result = soundex.encode("Hello");
    assertEquals("H400", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithMapping_NuMk1() {
    Soundex soundex = new Soundex("01230120022455012623010202");
    String result = soundex.encode("Hello");
    assertEquals("H400", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithSpecialCaseHW_AFBa2() {
    Soundex soundex = new Soundex("01230120022455012623010202", true);
    String result = soundex.encode("Hello");
    assertEquals("H400", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithCharArrayMapping_cJMI3() {
    char[] mapping = "01230120022455012623010202".toCharArray();
    Soundex soundex = new Soundex(mapping);
    String result = soundex.encode("Hello");
    assertEquals("H400", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexNull_TCxZ0() {
    Soundex soundex = new Soundex();
    assertNull(soundex.soundex(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexEmpty_UTXw1() {
    Soundex soundex = new Soundex();
    assertEquals("", soundex.soundex(""));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexSingleChar_kLKs2() {
    Soundex soundex = new Soundex();
    assertEquals("A000", soundex.soundex("A"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexMultipleChars_dpij3_fid1() {
    Soundex soundex = new Soundex();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexSpecialCaseHW_OpZu4_fid1() {
    Soundex soundex = new Soundex("01230120022455012623010202", true);
    assertEquals("B260", soundex.soundex("Baker"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexConsecutiveSameDigit_YjAd8_fid1() {
    Soundex soundex = new Soundex();
    assertEquals("B260", soundex.soundex("BBBaker"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexMaxLength_aFnG10_fid1() {
    Soundex soundex = new Soundex();
    assertEquals("B261", soundex.soundex("BakerBrownBrownBrown"));
}
}