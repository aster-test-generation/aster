/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import java.nio.charset.Charset;
import org.apache.commons.codec.CodecPolicy;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BCodec_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_RLpC1() throws DecoderException {
        BCodec bCodec = new BCodec("UTF-8");
        String value = "Hello, World!";
        Object result = bCodec.decode(value);
        assert result.equals(value);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeStringUsingOverloadedMethod_OUbE3() throws DecoderException {
        BCodec bCodec = new BCodec("UTF-8");
        String value = "Hello, World!";
        Object result = bCodec.decode((Object) value);
        assert result.equals(value);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_ciMm1() throws EncoderException {
        BCodec bCodec = new BCodec();
        String value = "Hello World";
        Object result = bCodec.encode(value);
        assert result.equals(value);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeStringWithCharset_qVZb3() throws EncoderException {
        BCodec bCodec = new BCodec("UTF-8");
        String value = "Hello World";
        Object result = bCodec.encode(value);
        assert result.equals(value);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeStringWithCharsetAndPolicy_StKj4() throws EncoderException {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"), CodecPolicy.STRICT);
        String value = "Hello World";
        Object result = bCodec.encode(value);
        assert result.equals(value);
    }
}