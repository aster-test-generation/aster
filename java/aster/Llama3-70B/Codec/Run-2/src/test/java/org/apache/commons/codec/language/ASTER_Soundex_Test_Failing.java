/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Soundex_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDifference_mqCv0() {
    Soundex soundex = new Soundex("01230120022455012623010202");
    try {
        int result = soundex.difference("Hello", "Halo");
        assert result == 2;
    } catch (EncoderException e) {
        assert false;
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexMultipleChars_dpij3() {
    Soundex soundex = new Soundex();
    assertEquals("B200", soundex.soundex("Baker"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexSpecialCaseHW_OpZu4() {
    Soundex soundex = new Soundex("01230120022455012623010202", true);
    assertEquals("B200", soundex.soundex("Baker"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexUnmappedChar_sQhu5() {
    Soundex soundex = new Soundex();
    assertEquals("0000", soundex.soundex(" ABCDEFGHIJKLMNOPQRSTUVWXYZ"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexConsecutiveSameDigit_YjAd8() {
    Soundex soundex = new Soundex();
    assertEquals("B200", soundex.soundex("BBBaker"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexConsecutiveDifferentDigit_WPyE9() {
    Soundex soundex = new Soundex();
    assertEquals("B230", soundex.soundex("BakerBrown"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSoundexMaxLength_aFnG10() {
    Soundex soundex = new Soundex();
    assertEquals("B200", soundex.soundex("BakerBrownBrownBrown"));
}
}