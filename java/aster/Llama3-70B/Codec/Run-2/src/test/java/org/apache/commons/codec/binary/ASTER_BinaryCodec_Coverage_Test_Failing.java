/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;
import org.apache.commons.codec.DecoderException;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BinaryCodec_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteArray_Ywem1() throws DecoderException {
        BinaryCodec codec = new BinaryCodec();
        byte[] ascii = new byte[] {1, 2, 3};
        assertArrayEquals(ascii, codec.decode(ascii));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDecodeString_VCUr3_HSPk0() throws DecoderException {
    BinaryCodec codec = new BinaryCodec();
    String ascii = "123";
    byte[] raw = ascii.getBytes();
    byte[] expected = new byte[] {49, 50, 51};
    byte[] actual = codec.toAsciiBytes(raw);
    assertArrayEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDecodeString_VCUr3_HSPk0_fid1() throws DecoderException {
    BinaryCodec codec = new BinaryCodec();
    String ascii = "123";
    byte[] raw = ascii.getBytes();
    String actual = codec.toAsciiString(raw);
    assertEquals(ascii, actual);
}
}