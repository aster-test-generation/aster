/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import java.nio.charset.Charset;
import org.apache.commons.codec.CodecPolicy;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BCodec_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_pSwq0() throws EncoderException {
        BCodec bCodec = new BCodec("UTF-8");
        String strSource = "Test String";
        String encodedString = bCodec.encode(strSource);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeTextNullInput_XwPx0() throws EncoderException {
        BCodec bCodec = new BCodec();
        String result = bCodec.encodeText(null, "UTF-8");
        assert result == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeTextNonNullInput_tFTR1() throws EncoderException {
        BCodec bCodec = new BCodec();
        String result = bCodec.encodeText("Hello, World!", "UTF-8");
        assert result != null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeNull_QWlp0() throws DecoderException {
        BCodec bCodec = new BCodec("UTF-8");
        Object result = bCodec.decode(null);
        assert result == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharset_ZWUe0_1() {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"), CodecPolicy.STRICT);
        Charset charset = bCodec.getCharset();
        assertNotNull(charset);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharset_ZWUe0_2() {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"), CodecPolicy.STRICT);
        Charset charset = bCodec.getCharset();
        assertEquals("UTF-8", charset.name());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharsetAndDefaultPolicy_FhlL1_1() {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"));
        Charset charset = bCodec.getCharset();
        assertNotNull(charset);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharsetAndDefaultPolicy_FhlL1_2() {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"));
        Charset charset = bCodec.getCharset();
        assertEquals("UTF-8", charset.name());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharsetString_ADdR2_1() {
        BCodec bCodec = new BCodec("UTF-8");
        Charset charset = bCodec.getCharset();
        assertNotNull(charset);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharsetString_ADdR2_2() {
        BCodec bCodec = new BCodec("UTF-8");
        Charset charset = bCodec.getCharset();
        assertEquals("UTF-8", charset.name());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withDefault_RCdg3() {
        BCodec bCodec = new BCodec();
        Charset charset = bCodec.getCharset();
        assertNotNull(charset);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNull_tjBh0() throws EncoderException {
        BCodec bCodec = new BCodec();
        Object result = bCodec.encode(null);
        assert result == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeText_NYCX4_SXZi0() throws EncoderException {
    BCodec bCodec = new BCodec("UTF-8");
    String value = "Hello, World!";
    String result = bCodec.encodeText(value, Charset.forName("UTF-8"));
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharset_ZWUe0() {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"), CodecPolicy.STRICT);
        Charset charset = bCodec.getCharset();
        assertNotNull(charset);
        assertEquals("UTF-8", charset.name());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharsetAndDefaultPolicy_FhlL1() {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"));
        Charset charset = bCodec.getCharset();
        assertNotNull(charset);
        assertEquals("UTF-8", charset.name());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCharset_withCharsetString_ADdR2() {
        BCodec bCodec = new BCodec("UTF-8");
        Charset charset = bCodec.getCharset();
        assertNotNull(charset);
        assertEquals("UTF-8", charset.name());
    }
}