/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Nysiis_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_WithStringObject_ReturnsNysiisEncodedString_ovak1_1() throws EncoderException {
        Nysiis nysiis = new Nysiis();
        String str = "Test String";
        Object result = nysiis.encode(str);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_WithStringObject_ReturnsNysiisEncodedString_ovak1_2() throws EncoderException {
        Nysiis nysiis = new Nysiis();
        String str = "Test String";
        Object result = nysiis.encode(str);
        assertTrue(result instanceof String);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_EV_btPp0() {
        Nysiis nysiis = new Nysiis();
        assertEquals("EV", nysiis.nysiis("EV"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_KN_qkXC1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("N", nysiis.nysiis("KN"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_SCH_AJld2() {
        Nysiis nysiis = new Nysiis();
        assertEquals("S", nysiis.nysiis("SCH"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_PH_DahG3() {
        Nysiis nysiis = new Nysiis();
        assertEquals("F", nysiis.nysiis("PH"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_H_Vowel_Zkgc4() {
        Nysiis nysiis = new Nysiis();
        assertEquals("H", nysiis.nysiis("HA"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_W_Vowel_XVDH6() {
        Nysiis nysiis = new Nysiis();
        assertEquals("A", nysiis.nysiis("A"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_WB_Consonant_TRpR7() {
        Nysiis nysiis = new Nysiis();
        assertEquals("WB", nysiis.nysiis("WBB"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_Q_KqkF8() {
        Nysiis nysiis = new Nysiis();
        assertEquals("Q", nysiis.nysiis("Q"));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_WithStringObject_ReturnsNysiisEncodedString_ovak1() throws EncoderException {
        Nysiis nysiis = new Nysiis();
        String str = "Test String";
        Object result = nysiis.encode(str);
        assertNotNull(result);
        assertTrue(result instanceof String);
    }
}