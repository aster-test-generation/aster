/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XXHash32_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_StateUpdatedTrue_RotateLeftState3_18_zWfe1_gcdB0() {
        XXHash32 xxHash32 = new XXHash32(1);
        xxHash32.update(403766453);
        assertEquals(403766453, xxHash32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_Default_ENZC9_fid1() {
        XXHash32 xxHash32 = new XXHash32();
        assertEquals(0, xxHash32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_StateUpdatedTrue_RotateLeftState3_18_zWfe1_gcdB0_fid2() {
        XXHash32 xxHash32 = new XXHash32(1);
        xxHash32.update(10);
        assertEquals(10, xxHash32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_WhileLoop_Buffer_aGfx4_kToM0_fid2() {
        XXHash32 xxHash32 = new XXHash32(1);
        xxHash32.update(1);
        xxHash32.update(2);
        xxHash32.update(3);
        xxHash32.update(4);
        xxHash32.update(5);
        assertEquals(12345, xxHash32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_StateUpdatedTrue_RotateLeftState0_1_lttg6_lIVe1_fid2() {
        XXHash32 xxHash32 = new XXHash32(1);
        xxHash32.update(10);
        assertEquals(1640531527, xxHash32.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_ForLoop_IntBuffer_BJyK2_XzzU0_fid2() {
        XXHash32 xxHash32 = new XXHash32(1);
        byte[] buffer = new byte[8];
        buffer[0] = 1;
        buffer[1] = 2;
        buffer[2] = 3;
        buffer[3] = 4;
        buffer[4] = 5;
        buffer[5] = 6;
        buffer[6] = 7;
        buffer[7] = 8;
        for (int i = 0; i < 8; i++) {
            xxHash32.update(buffer[i]);
        }
        assertEquals(12345678, xxHash32.getValue());
    }
}