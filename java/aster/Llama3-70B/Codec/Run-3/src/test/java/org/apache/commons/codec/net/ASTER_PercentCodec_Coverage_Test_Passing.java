/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PercentCodec_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_ContainsSpace_GgMt0() throws EncoderException {
        PercentCodec percentCodec = new PercentCodec();
        byte[] bytes = "Hello World".getBytes();
        byte[] result = percentCodec.encode(bytes);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeNull_DDXf0() throws DecoderException {
        PercentCodec codec = new PercentCodec();
        assertNull(codec.decode(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteArray_DsOo1() throws DecoderException {
        PercentCodec codec = new PercentCodec();
        byte[] bytes = "Hello World".getBytes();
        Object result = codec.decode(bytes);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNull_sqmY0() throws EncoderException {
        PercentCodec codec = new PercentCodec();
        assertNull(codec.encode(null));
    }

    @Test
    public void testEncodeString_RmjF2_qELv0() throws EncoderException {
        PercentCodec codec = new PercentCodec();
        byte[] bytes = "string".getBytes();
        codec.encode(bytes);
    }
}