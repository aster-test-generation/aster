/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_URLCodec_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteArray_tAOs1() throws DecoderException {
        URLCodec codec = new URLCodec();
        byte[] bytes = "Hello World".getBytes();
        assertEquals("Hello+World", codec.decode(bytes));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeByteArray_qAgl1() throws EncoderException {
        URLCodec codec = new URLCodec();
        byte[] bytes = "Hello World".getBytes();
        assertEquals("Hello+World", codec.encode(bytes));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteArray_tAOs1_fid2() throws DecoderException {
        URLCodec codec = new URLCodec();
        byte[] bytes = "Hello World".getBytes();
        assertEquals("[72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100]", codec.decode(bytes));
    }
}