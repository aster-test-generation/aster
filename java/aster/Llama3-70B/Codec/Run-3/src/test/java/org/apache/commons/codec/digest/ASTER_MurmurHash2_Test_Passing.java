/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_MurmurHash2_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash32_OYtA0() throws Exception {
        byte[] data = new byte[]{1, 2, 3, 4, 5};
        int length = data.length;
        int result = MurmurHash2.hash32(data, length);
        assertEquals(2147483647, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash64_cDYg0() throws Exception {
        byte[] data = new byte[]{1, 2, 3, 4, 5};
        long result = MurmurHash2.hash64(data, data.length);
        assertEquals(1431655765, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash32_1_gFgj0() throws Exception {
        byte[] data = new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        int length = data.length;
        int seed = 1;
        int result = MurmurHash2.hash32(data, length, seed);
        assert result != 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash32_2_EZic1() throws Exception {
        byte[] data = new byte[]{};
        int length = data.length;
        int seed = 0;
        int result = MurmurHash2.hash32(data, length, seed);
        assert result == 0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash64_eUUC0() throws Exception {
        byte[] data = new byte[]{1, 2, 3, 4, 5, 6, 7, 8};
        int length = data.length;
        int seed = 1;
        long result = MurmurHash2.hash64(data, length, seed);
        assertEquals(1416658575, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHash64EmptyArray_ESmW1() throws Exception {
        byte[] data = new byte[]{};
        int length = data.length;
        int seed = 1;
        long result = MurmurHash2.hash64(data, length, seed);
        assertEquals(seed, result);
    }
}