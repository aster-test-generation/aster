/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Crypt_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCrypt_nwpP0() throws Exception {
        String key = "key";
        String salt = "salt";
        String result = Crypt.crypt(key, salt);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCrypt_QvbG0() throws Exception {
        byte[] keyBytes = new byte[]{1, 2, 3};
        String result = Crypt.crypt(keyBytes);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCrypt_uoza0() throws Exception {
        String result = Crypt.crypt("key");
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCryptNullSalt_Feug0() throws Exception {
        byte[] keyBytes = "key".getBytes();
        String result = Crypt.crypt(keyBytes, null);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCryptSha512Salt_XOdn1() throws Exception {
        byte[] keyBytes = "key".getBytes();
        String salt = "$6$salt";
        String result = Crypt.crypt(keyBytes, salt);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCryptSha256Salt_UASC2() throws Exception {
        byte[] keyBytes = "key".getBytes();
        String salt = "$5$salt";
        String result = Crypt.crypt(keyBytes, salt);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCryptMd5Salt_VbxN3() throws Exception {
        byte[] keyBytes = "key".getBytes();
        String salt = "$1$salt";
        String result = Crypt.crypt(keyBytes, salt);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCryptUnixSalt_kijX4() throws Exception {
        byte[] keyBytes = "key".getBytes();
        String salt = "salt";
        String result = Crypt.crypt(keyBytes, salt);
        assertNotNull(result);
    }
}