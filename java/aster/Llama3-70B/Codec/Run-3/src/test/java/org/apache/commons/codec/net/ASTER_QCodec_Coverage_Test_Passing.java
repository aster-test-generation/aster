/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QCodec_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNull_iHIX0() throws EncoderException {
        QCodec qCodec = new QCodec();
        Object result = qCodec.encode(null);
        assert result == null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeInstanceofString_Spcj3() throws EncoderException {
        QCodec qCodec = new QCodec();
        String str = "Hello";
        Object result = qCodec.encode(str);
        assert result instanceof String;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeNull_vpZD0() throws DecoderException {
        QCodec qCodec = new QCodec();
        assertNull(qCodec.decode(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_tvPj0() {
        QCodec qCodec = new QCodec("UTF-8");
        try {
            String result = qCodec.encode("Hello World", "UTF-8");
            assertNotNull(result);
        } catch (EncoderException e) {
            fail("EncoderException should not be thrown");
        }
    }
}