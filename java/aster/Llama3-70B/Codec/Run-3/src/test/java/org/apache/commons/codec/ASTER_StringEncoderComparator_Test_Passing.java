/**
 * Generated by Aster
 */
package org.apache.commons.codec;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.language.Nysiis;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_StringEncoderComparator_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompare_BothNull_Gcmu0() throws Exception {
        Nysiis nysiis = new Nysiis();
        StringEncoderComparator stringEncoderComparator = new StringEncoderComparator(nysiis);
        int result = stringEncoderComparator.compare(null, null);
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompare_FirstNull_SecondNotNull_qHMi1() throws Exception {
        Nysiis nysiis = new Nysiis();
        StringEncoderComparator stringEncoderComparator = new StringEncoderComparator(nysiis);
        int result = stringEncoderComparator.compare(null, "test");
        assertEquals(-1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompare_FirstNotNull_SecondNull_esgW2() throws Exception {
        Nysiis nysiis = new Nysiis();
        StringEncoderComparator stringEncoderComparator = new StringEncoderComparator(nysiis);
        int result = stringEncoderComparator.compare("test", null);
        assertEquals(1, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompare_BothNotNull_Equal_BGAQ3() throws Exception {
        Nysiis nysiis = new Nysiis();
        StringEncoderComparator stringEncoderComparator = new StringEncoderComparator(nysiis);
        int result = stringEncoderComparator.compare("test", "test");
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompare_BothNotNull_NotEqual_dPYF4() throws Exception {
        Nysiis nysiis = new Nysiis();
        StringEncoderComparator stringEncoderComparator = new StringEncoderComparator(nysiis);
        int result = stringEncoderComparator.compare("test1", "test2");
        assertNotEquals(0, result);
    }
}