/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.nio.ByteBuffer;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Hex_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_ByteBufferRemainingEqualsLength_UNmM1() throws EncoderException {
        Hex hex = new Hex();
        ByteBuffer byteBuffer = ByteBuffer.allocate(12);
        byteBuffer.put("Hello, World!".getBytes());
        byteBuffer.flip();
        Object result = hex.encode(byteBuffer);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_ByteBufferCreateNewArray_covG2() throws EncoderException {
        Hex hex = new Hex();
        ByteBuffer byteBuffer = ByteBuffer.allocate(12);
        byteBuffer.put("Hello, World!".getBytes());
        byteBuffer.position(7);
        Object result = hex.encode(byteBuffer);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_ByteBufferReturnByteArray_axmv4() throws EncoderException {
        Hex hex = new Hex();
        ByteBuffer byteBuffer = ByteBuffer.wrap("Hello, World!".getBytes());
        byteBuffer.flip();
        Object result = hex.encode(byteBuffer);
        assertTrue(result instanceof String);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_String_ZJBw0() throws DecoderException {
        Hex hex = new Hex();
        String input = "48656c6c6f";
        char[] expected = input.toCharArray();
        Object result = hex.decode(input);
        assertArrayEquals(expected, (char[]) result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_ByteArray_tkZR1() throws DecoderException {
        Hex hex = new Hex();
        byte[] input = "Hello".getBytes();
        byte[] expected = hex.decode(input).toString().getBytes();
        assertArrayEquals(expected, hex.decode(input));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_ByteBuffer_rElt2() throws DecoderException {
        Hex hex = new Hex();
        ByteBuffer input = ByteBuffer.wrap("Hello".getBytes());
        byte[] expected = hex.decode(input).toString().getBytes();
        assertArrayEquals(expected, hex.decode(input));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_CharArray_DOir3() throws DecoderException {
        Hex hex = new Hex();
        char[] input = "48656c6c6f".toCharArray();
        char[] expected = input;
        assertArrayEquals(expected, (char[]) hex.decode(input));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_StringNull_dpNz5() throws DecoderException {
        Hex hex = new Hex();
        String input = null;
        try {
            hex.decode(input);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_ByteArrayNull_AyBu6() throws DecoderException {
        Hex hex = new Hex();
        byte[] input = null;
        try {
            hex.decode(input);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_ByteBufferNull_NlqT7() throws DecoderException {
        Hex hex = new Hex();
        ByteBuffer input = null;
        try {
            hex.decode(input);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
        }
    }
}