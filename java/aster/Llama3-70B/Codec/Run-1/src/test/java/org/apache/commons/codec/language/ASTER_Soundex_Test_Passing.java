/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Soundex_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexNull_QRDp0() {
        Soundex soundex = new Soundex();
        assertNull(soundex.soundex(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexEmpty_gdQK1() {
        Soundex soundex = new Soundex();
        assertEquals("", soundex.soundex(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexSingleChar_qfVq2() {
        Soundex soundex = new Soundex();
        assertEquals("A000", soundex.soundex("A"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexMultipleChars_zPCR3() {
        Soundex soundex = new Soundex();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexSpecialCaseHW_xbxc4() {
        Soundex soundex = new Soundex("01230120022455012623010202", true);
        assertEquals("A140", soundex.soundex("AbleHow"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexSilentMarker_lxEz5() {
        Soundex soundex = new Soundex();
        assertEquals("A240", soundex.soundex("Axl"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundexNonAlphaChar_JsIU7() {
        Soundex soundex = new Soundex();
        assertEquals("A100", soundex.soundex("A1b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLength1_MiFp4() {
        Soundex soundex = new Soundex();
        assertEquals(4, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLength2_iDbS1() {
        Soundex soundex = new Soundex("mapping");
        assertEquals(4, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLength3_Uatu2() {
        Soundex soundex = new Soundex("mapping", true);
        assertEquals(4, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLength4_VeDS3() {
        char[] mapping = {'a', 'b', 'c'};
        Soundex soundex = new Soundex(mapping);
        assertEquals(4, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_rSfj0() {
        Soundex soundex = new Soundex();
        Object result = soundex.encode("Hello");
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNonString_GSKA1() {
        Soundex soundex = new Soundex("mapping");
        try {
            soundex.encode(123);
            fail();
        } catch (EncoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxLength_PjGV0() {
        Soundex soundex = new Soundex();
        soundex.setMaxLength(10);
        assertEquals(10, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxLength_withMapping_KwAi1() {
        Soundex soundex = new Soundex("mapping");
        soundex.setMaxLength(5);
        assertEquals(5, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxLength_withSpecialCaseHW_vbqW2() {
        Soundex soundex = new Soundex("mapping", true);
        soundex.setMaxLength(7);
        assertEquals(7, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxLength_withCharArray_KGxn3() {
        Soundex soundex = new Soundex(new char[]{'a', 'b', 'c'});
        soundex.setMaxLength(3);
        assertEquals(3, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jeQV0() {
        Soundex soundex = new Soundex("01230120022455012623010202");
        assertEquals("B260", soundex.encode("Baker"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode2_Rika1() {
        Soundex soundex = new Soundex();
        assertEquals("A261", soundex.encode("Ashcraft"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode3_AjJG2() {
        Soundex soundex = new Soundex("01230120022455012623010202", true);
        assertEquals("B130", soundex.encode("Babbit"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode4_tUiZ3() {
        char[] mapping = "01230120022455012623010202".toCharArray();
        Soundex soundex = new Soundex(mapping);
        assertEquals("B130", soundex.encode("Babbit"));
    }
}