/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Hex_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToDigit_ValidCharacter_ReturnsDigit_kxfT1() throws DecoderException {
        Hex hex = new Hex();
        char validChar = 'A';
        int index = 0;
        int result = Hex.toDigit(validChar, index);
        assert result == 10;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_Object_ULZL7() throws DecoderException {
        Hex hex = new Hex();
        Object input = new Object();
        try {
            hex.decode(input);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_UnsupportedObject_cPCV8() throws DecoderException {
        Hex hex = new Hex();
        Object input = new Object() {
        };
        try {
            hex.decode(input);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_ClassCastException_ftNw5_ITqM0_fid1() throws DecoderException {
        Hex hex = new Hex();
        byte[] input = new byte[0];
        try {
            hex.decode(input);
        } catch (DecoderException e) {
            // Expected
        }
    }
}