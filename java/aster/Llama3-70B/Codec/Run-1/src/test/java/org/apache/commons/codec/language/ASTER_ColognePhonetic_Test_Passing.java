/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_ColognePhonetic_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticNull_PYwg0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic(null);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticEmpty_xloC1() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticX_qoKk7() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("X");
        assertEquals("48", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticR_uuZS11() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("R");
        assertEquals("7", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticL_qOol12() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("L");
        assertEquals("5", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticH_tQSk14() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("H");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticNull_ZFAJ0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertNull(colognePhonetic.colognePhonetic(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticEmpty_XObJ1() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("", colognePhonetic.colognePhonetic(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticAEIJOUY_IBrv2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("0", colognePhonetic.colognePhonetic("A"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticB_bQbA3() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("1", colognePhonetic.colognePhonetic("B"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticP_FRxf4() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("1", colognePhonetic.colognePhonetic("P"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticPH_NHjj5() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("3", colognePhonetic.colognePhonetic("PH"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticD_tWnA6() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("2", colognePhonetic.colognePhonetic("D"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticT_Nkxu7() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("2", colognePhonetic.colognePhonetic("T"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticF_ndij8() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("3", colognePhonetic.colognePhonetic("F"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticG_DRCo9() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("4", colognePhonetic.colognePhonetic("G"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticK_uOzE10() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("4", colognePhonetic.colognePhonetic("K"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticQ_kvkW11() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("4", colognePhonetic.colognePhonetic("Q"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticX_dQnG12() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("48", colognePhonetic.colognePhonetic("X"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticS_yJLN13() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("8", colognePhonetic.colognePhonetic("S"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticZ_DzYi14() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("8", colognePhonetic.colognePhonetic("Z"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticR_UssM16() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("7", colognePhonetic.colognePhonetic("R"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticL_XjKD17() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("5", colognePhonetic.colognePhonetic("L"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticM_VRlz18() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("6", colognePhonetic.colognePhonetic("M"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticN_RkEa19() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("6", colognePhonetic.colognePhonetic("N"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_SameText_ReturnsTrue_KKPH0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String text1 = "Hello";
        String text2 = "Hello";
        assertTrue(colognePhonetic.isEncodeEqual(text1, text2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_baHK0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = (String) colognePhonetic.encode("Hello");
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticAEIJOUY_zTkf2_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("AEIJOUY");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticBP_yCtv3_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("BP");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticDT_UaVv4_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("DT");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticFPVW_SDHp5_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("FPVW");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticGKQ_Jiig6_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("GKQ");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticSZ_cEiN8_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("SZ");
        assertEquals("8", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticC_ZYXM9_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("C");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticDTX_gXwM10_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("DTX");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticMN_wQLE13_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("MN");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticUmlaut_oEQT15_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.colognePhonetic("");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticC_EBJv15_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        Assertions.assertEquals("8", colognePhonetic.colognePhonetic("C"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_hcjD0_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.encode("Schmidt");
        assertEquals("862", result);
    }
}