/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Lang_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_validInput_CnIg0_IeSL0() {
        Languages languages = Languages.getInstance("languages");
        Lang lang = Lang.loadFromResource("languageRules", languages);
        assertNotNull(lang);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_invalidInput_emptyResourceName_STZY2_WEDR0() {
        try {
            Lang.loadFromResource("", null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_malformedLine_pVKe4_JKIo0() {
        try {
            Lang.loadFromResource("malformedResourceName", null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_extendedComment_Badk5_HsgL0() {
        Languages languages = Languages.getInstance("languages");
        Lang lang = Lang.loadFromResource("extendedComment", languages);
        assertNotNull(lang);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_invalidInput_nullLanguages_sOhM3_fid1() {
        try {
            Lang.loadFromResource("languageRulesResourceName", null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_validInput_CnIg0_IeSL0_fid3() {
        Languages languages = Languages.getInstance("languagesResourceName");
        Lang lang = Lang.loadFromResource("languageRulesResourceName", languages);
        assertNotNull(lang);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_invalidInput_nullResourceName_wMIe1_EXyB0_fid3() {
        Languages languages = Languages.getInstance("languagesResourceName");
        try {
            Lang.loadFromResource(null, languages);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_invalidInput_emptyResourceName_STZY2_WEDR0_fid3() {
        Languages languages = Languages.getInstance("languagesResourceName");
        try {
            Lang.loadFromResource("", languages);
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_malformedLine_pVKe4_JKIo0_fid3() {
        Languages languages = Languages.getInstance("languagesResourceName");
        try {
            Lang.loadFromResource("malformedResourceName", languages);
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLoadFromResource_extendedComment_Badk5_HsgL0_fid3() {
        Languages languages = Languages.getInstance("languagesResourceName");
        Lang lang = Lang.loadFromResource("extendedCommentResourceName", languages);
        assertNotNull(lang);
    }
}