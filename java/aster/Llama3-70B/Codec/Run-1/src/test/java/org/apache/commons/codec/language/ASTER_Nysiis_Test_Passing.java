/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Nysiis_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_DefaultConstructor_nNBo0() {
        Nysiis nysiis = new Nysiis();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrict_StrictConstructor_gnar1() {
        Nysiis nysiis = new Nysiis(true);
        assertTrue(nysiis.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis1_WQnK0() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis(null);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis2_HBYD1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis4_rJmc3() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Knickman");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis5_BPQJ4() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Phelps");
        assertEquals("FALP", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis6_iUlc5() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Schmidt");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis7_KqDh6() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Eevans");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis8_lkek7() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Dutton");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis9_NrmF8() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.nysiis("EVans");
        assertEquals("EVAN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis10_ZPgR9() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.nysiis("Qiuick");
        assertEquals("QAC", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis11_cKOL10() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.nysiis("Zimmer");
        assertEquals("ZANAR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis12_jeQI11() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.nysiis("Walter");
        assertEquals("WALTAR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis13_NSIQ12() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.nysiis("Harris");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis14_NFuI13() {
        Nysiis nysiis = new Nysiis(true);
        String result = nysiis.nysiis("KWHarris");
        assertEquals("CWAR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisNull_TPvV0() {
        Nysiis nysiis = new Nysiis();
        assertNull(nysiis.nysiis(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisEmpty_uwiG1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("", nysiis.nysiis(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisEV_lMjz2() {
        Nysiis nysiis = new Nysiis();
        assertEquals("EV", nysiis.nysiis("EV"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisQ_mbIB4() {
        Nysiis nysiis = new Nysiis();
        assertEquals("Q", nysiis.nysiis("Q"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisKN_AkCk7() {
        Nysiis nysiis = new Nysiis();
        assertEquals("N", nysiis.nysiis("KN"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisPH_QTGe9() {
        Nysiis nysiis = new Nysiis();
        assertEquals("F", nysiis.nysiis("PH"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiisStrict_RSGo12() {
        Nysiis nysiis = new Nysiis(true);
        assertEquals("EV", nysiis.nysiis("EV"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_xqfU0_1() {
        Nysiis nysiis = new Nysiis();
        Object result = nysiis.encode("Hello World");
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_xqfU0_2() {
        Nysiis nysiis = new Nysiis();
        Object result = nysiis.encode("Hello World");
        assertEquals("HALARL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_MmGa0() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.encode("Hello World");
        assertEquals("HALARL", result);
    }
}