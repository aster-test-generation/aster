/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Languages_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withEmptyResourceName_JIHG2() {
        String languagesResourceName = "";
        try {
            Languages.getInstance(languagesResourceName);
            fail("Expected exception not thrown");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withValidResourceName_HJsM0_1_fid1() {
        String languagesResourceName = "valid_resource_name";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withValidResourceName_HJsM0_2_fid1() {
        String languagesResourceName = "valid_resource_name";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withResourceNameHavingExtendedComment_QEln4_1_fid1() {
        String languagesResourceName = "resource_name_with_extended_comment";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withResourceNameHavingExtendedComment_QEln4_2_fid1() {
        String languagesResourceName = "resource_name_with_extended_comment";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withResourceNameHavingEmptyLines_RJcV5_1_fid1() {
        String languagesResourceName = "resource_name_with_empty_lines";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withResourceNameHavingEmptyLines_RJcV5_2_fid1() {
        String languagesResourceName = "resource_name_with_empty_lines";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withValidResourceName_HJsM0() {
        String languagesResourceName = "valid_resource_name";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages);
        assertNotNull(languages.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withResourceNameHavingExtendedComment_QEln4() {
        String languagesResourceName = "resource_name_with_extended_comment";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages);
        assertNotNull(languages.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_withResourceNameHavingEmptyLines_RJcV5() {
        String languagesResourceName = "resource_name_with_empty_lines";
        Languages languages = Languages.getInstance(languagesResourceName);
        assertNotNull(languages);
        assertNotNull(languages.getLanguages());
    }
}