/**
 * Generated by Aster
 */
package org.apache.commons.codec;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.io.InputStream;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Resources_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInputStream_ExistingResource_Boxg0() {
        String resourceName = "existingResource.txt";
        InputStream inputStream = Resources.getInputStream(resourceName);
        assertNotNull(inputStream);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInputStream_ExistingResource_Boxg0_fid1() {
        String resourceName = "Resources.class.getResource(\"/\").getPath() + \"existingResource.txt\"";
        Resources.class.getResource("/" + resourceName).getFile();
        InputStream inputStream = null;
        try {
            inputStream = Resources.getInputStream(resourceName);
        } catch (IllegalArgumentException e) {
            assertNotNull(e.getMessage());
        }
    }
}