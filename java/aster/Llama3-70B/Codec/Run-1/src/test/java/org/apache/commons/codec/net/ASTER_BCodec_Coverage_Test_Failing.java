/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.nio.charset.Charset;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.CodecPolicy;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_BCodec_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_quCh0() throws EncoderException {
        BCodec bCodec = new BCodec("UTF-8");
        String strSource = "Hello World";
        String expected = "Encoded Hello World";
        String actual = bCodec.encode(strSource);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeString_bYWl1() throws EncoderException {
        BCodec bCodec = new BCodec();
        String value = "Hello World";
        Object result = bCodec.encode(value);
        assert result.equals(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeStringWithCharset_qjCx3() throws EncoderException {
        BCodec bCodec = new BCodec("UTF-8");
        String value = "Hello World";
        Object result = bCodec.encode(value);
        assert result.equals(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeStringWithCharsetAndPolicy_VDic4() throws EncoderException {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"), CodecPolicy.STRICT);
        String value = "Hello World";
        Object result = bCodec.encode(value);
        assert result.equals(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeStringValue_vrvp1() throws DecoderException {
        BCodec bCodec = new BCodec();
        String value = "Hello World";
        Object result = bCodec.decode(value);
        assert result.equals(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeStringValueWithCharset_vBPy3() throws DecoderException {
        BCodec bCodec = new BCodec("UTF-8");
        String value = "Hello World";
        Object result = bCodec.decode(value);
        assert result.equals(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeStringValueWithCharsetAndPolicy_QTeh4() throws DecoderException {
        BCodec bCodec = new BCodec(Charset.forName("UTF-8"), CodecPolicy.STRICT);
        String value = "Hello World";
        Object result = bCodec.decode(value);
        assert result.equals(value);
    }
}