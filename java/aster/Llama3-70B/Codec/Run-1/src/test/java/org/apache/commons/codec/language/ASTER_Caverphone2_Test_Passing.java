/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Caverphone2_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeEmptyString_LCvE0() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("");
        assert result.equals("1111111111");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeNormalString_bKSq1() {
        Caverphone2 caverphone2 = new Caverphone2();
        String result = caverphone2.encode("HelloWorld");
        assert result.length() == 10;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_UtcR0() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        assertTrue(caverphone2.isEncodeEqual("hello", "hello"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_WithString_tbTM0() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        Object result = caverphone2.encode("testString");
        assertNotNull(result);
    }
}