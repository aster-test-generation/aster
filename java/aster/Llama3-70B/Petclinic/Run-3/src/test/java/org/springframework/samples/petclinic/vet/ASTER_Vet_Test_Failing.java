/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.vet;

import java.util.HashSet;
import java.util.Set;
import static org.junit.jupiter.api.Assertions.*;
import java.util.HashSet;
import java.util.Set;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Vet_Test_Failing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetSpecialtiesInternal_PGtD0() {
		Vet vet = new Vet();
		Set<Specialty> specialties = new HashSet<>();
		Specialty specialty = new Specialty();
		specialties.add(specialty);
		vet.setSpecialtiesInternal(specialties);
		assertEquals(specialties, vet.getSpecialties());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetSpecialtiesInternal_WhenSpecialtiesIsNotNull_ReturnsSameSet_gHwx1() {
		Vet vet = new Vet();
		Set<Specialty> specialties = new HashSet<>();
		vet.getSpecialtiesInternal().addAll(specialties);
		Set<Specialty> result = vet.getSpecialtiesInternal();
		assertSame(specialties, result);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetSpecialtiesInternal_PGtD0_fid1() {
		Vet vet = new Vet();
		Set<Specialty> specialties = new HashSet<>();
		Specialty specialty = new Specialty();
		specialties.add(specialty);
		vet.setSpecialtiesInternal(specialties);
		assertNull(specialties);
	}

}