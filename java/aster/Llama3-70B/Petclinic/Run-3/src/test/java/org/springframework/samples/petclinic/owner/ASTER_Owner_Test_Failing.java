/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.owner;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Owner_Test_Failing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetPet_kxFd0_1() {
		Owner owner = new Owner();
		Pet pet = owner.getPet("petName");
		assertNotNull(pet);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetPet_kxFd0_2() {
		Owner owner = new Owner();
		Pet pet = owner.getPet("petName");
		assertNotNull(pet.getVisits());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetPet_kxFd0_3() {
		Owner owner = new Owner();
		Pet pet = owner.getPet("petName");
		assertNotNull(pet.getType());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetPet_kxFd0_4() {
		Owner owner = new Owner();
		Pet pet = owner.getPet("petName");
		assertNotNull(pet.getBirthDate());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetPet_kxFd0() {
		Owner owner = new Owner();
		Pet pet = owner.getPet("petName");
		assertNotNull(pet);
		assertNotNull(pet.getVisits());
		assertNotNull(pet.getType());
		assertNotNull(pet.getBirthDate());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetPet_ExistingPet_IgnoreNewTrue_oIkO0() {
		Owner owner = new Owner();
		Pet pet = new Pet();
		pet.setName("TestPet");
		owner.getPets().add(pet);
		Pet result = owner.getPet("testpet", true);
		assertSame(pet, result);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetPet_NullName_IgnoreNewTrue_npaN4_fid2() {
		Owner owner = new Owner();
		Pet result = owner.getPet(null, true);
		assertNull(result);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetPet_NullName_IgnoreNewFalse_kPXV5_fid2() {
		Owner owner = new Owner();
		Pet result = owner.getPet(null, false);
		assertNull(result);
	}

}