/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.owner;

import org.springframework.validation.Errors;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PetValidator_Coverage_Test_Passing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSupports_PetClass_ReturnsTrue_xCCj0() {
		PetValidator petValidator = new PetValidator();
		assertTrue(petValidator.supports(Pet.class));
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSupports_NotPetClass_ReturnsFalse_Phab2() {
		PetValidator petValidator = new PetValidator();
		assertFalse(petValidator.supports(String.class));
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testValidate_NameIsEmpty_RejectsValue_yqIg3_ieak0() {
		PetValidator validator = new PetValidator();
		Pet pet = new Pet();
		pet.setName("");
		org.springframework.validation.Errors errors = new org.springframework.validation.BeanPropertyBindingResult(pet,
				"pet");
		validator.validate(pet, errors);
		assertTrue(errors.hasErrors());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testValidate_BirthDateIsNull_RejectsValue_BPzV7_vEMa0() {
		PetValidator validator = new PetValidator();
		Pet pet = new Pet();
		pet.setBirthDate(null);
		org.springframework.validation.BeanPropertyBindingResult errors = new org.springframework.validation.BeanPropertyBindingResult(
				pet, "pet");
		validator.validate(pet, errors);
		assertTrue(errors.hasErrors());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testValidate_NameIsNull_RejectsValue_stLL2_tYWq0() {
		PetValidator validator = new PetValidator();
		Pet pet = new Pet();
		pet.setName(null);
		org.springframework.validation.BindingResult errors = new org.springframework.validation.BeanPropertyBindingResult(
				pet, "pet");
		validator.validate(pet, errors);
		assertTrue(errors.hasErrors());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testValidate_NameIsValid_DoesNotRejectValue_dHDo4_xxBs0_fid1() {
		PetValidator validator = new PetValidator();
		Pet pet = new Pet();
		pet.setName("Valid Name");
		org.springframework.validation.BindingResult errors = new org.springframework.validation.BeanPropertyBindingResult(
				pet, "pet");
		validator.validate(pet, errors);
	}

}