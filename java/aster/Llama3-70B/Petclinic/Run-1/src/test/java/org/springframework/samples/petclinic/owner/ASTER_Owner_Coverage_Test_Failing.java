/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.owner;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Owner_Coverage_Test_Failing {

	private String address;

	private String city;

	private String telephone;

	private String lastName;

	private String firstName;

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testAddVisitInvalidPetId_xYUz2() {
		Owner owner = new Owner();
		Visit visit = new Visit();
		try {
			owner.addVisit(1, visit);
			fail("Expected AssertionError");
		}
		catch (AssertionError e) {
			assertEquals("Invalid Pet identifier!", e.getMessage());
		}
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testAddVisitValidPetId_tBHY3() {
		Owner owner = new Owner();
		Visit visit = new Visit();
		Pet pet = new Pet();
		owner.addVisit(1, visit);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_Id_WpGj0() {
		Owner owner = new Owner();
		owner.setId(1);
		String expected = "Owner[id=1, new=false, lastName=null, firstName=null, address=null, city=null, telephone=null]";
		assertNull(expected);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_LastName_kpzB2() {
		Owner owner = new Owner();
		owner.setLastName("Doe");
		String expected = "Owner[id=0, new=false, lastName=Doe, firstName=null, address=null, city=null, telephone=null]";
		assertNull(expected);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_FirstName_uHIC3() {
		Owner owner = new Owner();
		owner.setFirstName("John");
		String expected = "Owner[id=0, new=false, lastName=null, firstName=John, address=null, city=null, telephone=null]";
		assertNull(expected);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_Address_XMcn4() {
		Owner owner = new Owner();
		owner.setAddress("123 Street");
		String expected = "Owner[id=0, new=false, lastName=null, firstName=null, address=123 Street, city=null, telephone=null]";
		assertNull(expected);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_City_PKZB5() {
		Owner owner = new Owner();
		owner.setCity("Anytown");
		String expected = "Owner[id=0, new=false, lastName=null, firstName=null, address=null, city=Anytown, telephone=null]";
		assertNull(expected);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_Telephone_Plkr6() {
		Owner owner = new Owner();
		owner.setTelephone("123-456-7890");
		String expected = "Owner[id=0, new=false, lastName=null, firstName=null, address=null, city=null, telephone=123-456-7890]";
		assertNull(expected);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_Full_TKnF7_Tqvb0() {
		Owner owner = new Owner();
		owner.setId(1);
		owner.setLastName("Doe");
		owner.setFirstName("John");
		owner.setAddress("123 Street");
		owner.setCity("Anytown");
		owner.setTelephone("123-456-7890");
		String expected = "[Owner@7aac754e id = 1, new = false, lastName = 'Doe', firstName = 'John', address = '123 Street', city = 'Anytown', telephone = '123-456-7890']";
		assertEquals(expected, owner.toString());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_Id_WpGj0_fid1() {
		Owner owner = new Owner();
		owner.setId(1);
		String expected = "Owner[id=1, new=false, lastName=null, firstName=null, address=null, city=null, telephone=null]";
		assertEquals(expected, owner.toString());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_LastName_kpzB2_fid1() {
		Owner owner = new Owner();
		owner.setLastName("Doe");
		String expected = "Owner[id=0, new=false, lastName=Doe, firstName=null, address=null, city=null, telephone=null]";
		assertEquals(expected, owner.toString());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_FirstName_uHIC3_fid1() {
		Owner owner = new Owner();
		owner.setFirstName("John");
		String expected = "Owner[id=0, new=false, lastName=null, firstName=John, address=null, city=null, telephone=null]";
		assertEquals(expected, owner.toString());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_Address_XMcn4_fid1() {
		Owner owner = new Owner();
		owner.setAddress("123 Street");
		String expected = "Owner[id=0, new=false, lastName=null, firstName=null, address=123 Street, city=null, telephone=null]";
		assertEquals(expected, owner.toString());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_City_PKZB5_fid1() {
		Owner owner = new Owner();
		owner.setCity("Anytown");
		String expected = "Owner[id=0, new=false, lastName=null, firstName=null, address=null, city=Anytown, telephone=null]";
		assertEquals(expected, owner.toString());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_Telephone_Plkr6_fid1() {
		Owner owner = new Owner();
		owner.setTelephone("123-456-7890");
		String expected = "Owner[id=0, new=false, lastName=null, firstName=null, address=null, city=null, telephone=123-456-7890]";
		assertEquals(expected, owner.toString());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_Full_TKnF7_Tqvb0_fid2() {
		Owner owner = new Owner();
		owner.setId(1);
		owner.setLastName("Doe");
		owner.setFirstName("John");
		owner.setAddress("123 Street");
		owner.setCity("Anytown");
		owner.setTelephone("123-456-7890");
		String expected = "Owner[id=1, lastName=Doe, firstName=John, address=123 Street, city=Anytown, telephone=123-456-7890]";
		assertEquals(expected, owner.toString());
	}

}