/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_CommandLine_Coverage_Test_Failing {
    private CommandLine commandLine;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionObject_ReturnsNull_kbSz2_XWNu0() {
        CommandLine commandLine = new CommandLine();
        Option option = new Option("opt", "opt", true, "description");
        when(commandLine.getOptionValues(option)).thenReturn(null);
        assertNull(commandLine.getOptionValue(option));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetParsedOptionValue_NonDeprecatedOption_zdRl3_LbKe0() throws ParseException {
        Option option = new Option("o", "opt", true, "description");
        CommandLine commandLine = new CommandLine();
        commandLine.addOption(option);
        String parsedOptionValue = commandLine.getOptionValue(option);
        assertNotNull(parsedOptionValue);
    }

    @Test
    public void testGetOptionValue_snIG0() {
        CommandLine commandLine = new CommandLine();
        Option option = new Option("opt", "opt", true, "description");
        when(commandLine.getOptionValues(option)).thenReturn(new String[]{"value"});
        assertEquals("value", commandLine.getOptionValue(option));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionValue_XXSk0_1() {
        CommandLine commandLine = new CommandLine();
        Option option = new Option("opt", "longOpt", true, "description");
        String[] values = new String[]{"value"};
        String result = commandLine.getOptionValue(option);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionValue_XXSk0_2() {
        CommandLine commandLine = new CommandLine();
        Option option = new Option("opt", "longOpt", true, "description");
        String[] values = new String[]{"value"};
        String result = commandLine.getOptionValue(option);
        assertEquals("value", result);
    }
}