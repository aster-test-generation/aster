/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionBuilder_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasArg_Instance_WOrA1() {
        OptionBuilder result = OptionBuilder.hasArg();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWithType_vOIp0() {
        Class<?> newType = Object.class;
        OptionBuilder optionBuilder = OptionBuilder.withType(newType);
        assertNotNull(optionBuilder);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreate_xRuU0() {
        Option option = OptionBuilder.create('a');
        assertEquals("a", option.getOpt());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWithLongOpt_HGVk0_GZNA0() {
        OptionBuilder result = OptionBuilder.withLongOpt("newLongopt");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWithValueSeparator4_pbcy3_TUeO0() {
        OptionBuilder optionBuilder = OptionBuilder.withValueSeparator('.');
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWithType_BUqt0_SLga0() {
        OptionBuilder result = OptionBuilder.hasArg(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWithValueSeparator8_FqOh7_oOiC0() {
        OptionBuilder optionBuilder = OptionBuilder.withValueSeparator('/');
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWithValueSeparator9_IcXs8_eNuF0() {
        OptionBuilder optionBuilder = OptionBuilder.withValueSeparator('\\');
        OptionBuilder builder = OptionBuilder.hasArg(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsRequiredFalse_HasArgs_tyoX7_VJWm0() {
        OptionBuilder result = OptionBuilder.hasArg(true).hasArgs(2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsRequiredFalse_Chain_HvEn3_TQTt0() {
        OptionBuilder result = OptionBuilder.isRequired(false).hasArg();
        assertNotNull(result);
    }
}