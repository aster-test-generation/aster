/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_TypeHandler_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber_LKED0_1() throws ParseException {
        TypeHandler typeHandler = new TypeHandler();
        String string = "123";
        Number number = TypeHandler.createNumber(string);
        assertNotNull(number);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber_LKED0_2() throws ParseException {
        TypeHandler typeHandler = new TypeHandler();
        String string = "123";
        Number number = TypeHandler.createNumber(string);
        assertEquals(123, number.intValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateObject_uSAt0() throws ParseException {
        String className = "java.lang.String";
        Object obj = TypeHandler.createObject(className);
        assertNotNull(obj);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateValue_BiTw0_1() throws ParseException {
        String string = "Test String";
        Object obj = String.class;
        Object result = TypeHandler.createValue(string, obj);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateValue_BiTw0_2() throws ParseException {
        String string = "Test String";
        Object obj = String.class;
        Object result = TypeHandler.createValue(string, obj);
        assertEquals(string, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber_LKED0() throws ParseException {
        TypeHandler typeHandler = new TypeHandler();
        String string = "123";
        Number number = TypeHandler.createNumber(string);
        assertNotNull(number);
        assertEquals(123, number.intValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateValue_BiTw0() throws ParseException {
        String string = "Test String";
        Object obj = String.class;
        Object result = TypeHandler.createValue(string, obj);
        assertNotNull(result);
        assertEquals(string, result);
    }
}