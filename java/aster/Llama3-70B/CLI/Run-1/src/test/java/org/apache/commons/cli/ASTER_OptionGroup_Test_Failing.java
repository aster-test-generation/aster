/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionGroup_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_SingleOption_bqUp1() {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.getOptions().clear(); // clear the list
        optionGroup.getOptions().add(new Option("a", "desc")); // add the option
        assertEquals("[ -a desc ]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_NullDescriptionOption_YTSI4() {
        OptionGroup optionGroup = new OptionGroup();
        List<Option> options = new ArrayList<>();
        Option option = new Option("a", null);
        options.add(option);
        optionGroup = new OptionGroup() {
            @Override
            public List<Option> getOptions() {
                return options;
            }
        };
        assertEquals("[ -a ]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_SingleOption_bqUp1_fid1() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("a", "desc");
        optionGroup.getOptions().add(option);
        assertEquals("[ -a desc ]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_MultipleOptions_ZnVT2() {
        OptionGroup optionGroup = new OptionGroup();
        Option option1 = new Option("a", "desc1");
        Option option2 = new Option("b", "desc2");
        optionGroup.getOptions().add(option1);
        optionGroup.getOptions().add(option2);
        assertEquals("[ -a desc1, -b desc2 ]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_NullDescriptionOption_YTSI4_fid1() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("a", null);
        optionGroup.getOptions().add(option);
        assertEquals("[ -a ]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_EulT0_oDCJ0_fid1() {
        OptionGroup optionGroup = new OptionGroup();
        Option option1 = new Option("o1", "option1", false, "desc1");
        Option option2 = new Option("o2", "option2", false, "desc2");
        optionGroup.addOption(option1);
        optionGroup.addOption(option2);
        String expected = "[--option1 desc1, --option2 desc2]";
        assertEquals(expected, optionGroup.toString());
    }
}