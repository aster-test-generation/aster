/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

import java.util.Collections;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_DefaultParser_Coverage_Test_Passing {
    private Option currentOption;
    private DefaultParser defaultParser;

    @BeforeEach
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHandleConcatenatedOptions_EmptyToken_JhxZ1_zjIJ0() throws Exception {
        Options options = mock(Options.class);
        Option currentOption = mock(Option.class);
        DefaultParser defaultParser = new DefaultParser();
        defaultParser.handleConcatenatedOptions("");
        verifyNoInteractions(options);
        verifyNoInteractions(currentOption);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testparse_optionGroups_dfMR1_TPRG0() throws Exception {
        Options options = mock(Options.class);
        OptionGroup optionGroup = mock(OptionGroup.class);
        when(options.getOptionGroups()).thenReturn(Collections.singletonList(optionGroup));
        DefaultParser defaultparser = new DefaultParser();
        defaultparser.parse(options, new String[]{}, new Properties());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testparse_arguments_null_EezY3_PkzZ0() throws Exception {
        DefaultParser defaultparser = new DefaultParser();
        defaultparser.parse(new Options(), new String[0], new Properties(), true);
    }
}