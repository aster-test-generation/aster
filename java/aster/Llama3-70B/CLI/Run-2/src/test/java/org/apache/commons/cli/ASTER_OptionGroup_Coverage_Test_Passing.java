/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionGroup_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelectedNullOption_VfWr0() throws org.apache.commons.cli.AlreadySelectedException {
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.setSelected(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelectedNewOption_wrIG1() throws org.apache.commons.cli.AlreadySelectedException {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("option", "description");
        optionGroup.setSelected(option);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelectedSameOption_tEQv2() throws org.apache.commons.cli.AlreadySelectedException {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("option", "description");
        optionGroup.setSelected(option);
        optionGroup.setSelected(option);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelectedNullAfterSetting_lBEA4() throws org.apache.commons.cli.AlreadySelectedException {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("option", "description");
        optionGroup.setSelected(option);
        optionGroup.setSelected(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_NoOptions_vdBf0() {
        OptionGroup optionGroup = new OptionGroup();
        assertEquals("[]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_OneOption_WithOpt_WVio1() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("a", "description");
        optionGroup.addOption(option);
        assertEquals("[-a description]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_MultipleOptions_WithOpt_CVlJ3() {
        OptionGroup optionGroup = new OptionGroup();
        Option option1 = new Option("a", "description1");
        Option option2 = new Option("b", "description2");
        optionGroup.addOption(option1);
        optionGroup.addOption(option2);
        assertEquals("[-a description1, -b description2]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_Option_WithoutDescription_tude5() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("a", null);
        optionGroup.addOption(option);
        assertEquals("[-a]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_Option_WithEmptyDescription_xgZW10() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("a", "");
        optionGroup.addOption(option);
        assertEquals("[-a ]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_MultipleOptions_WithDifferentTypes_dLoX9_HLjM0() {
        OptionGroup optionGroup = new OptionGroup();
        Option option1 = new Option("a", "description1");
        Option option2 = new Option("b", true, "description2");
        optionGroup.addOption(option1);
        optionGroup.addOption(option2);
        assertEquals("[-a description1, -b description2]", optionGroup.toString());
    }
}