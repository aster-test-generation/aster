/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.io.File;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_TypeHandler_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber_tZNC0_RtXz0() {
        TypeHandler typeHandler = new TypeHandler();
        Number number = null;
        try {
            number = (Number) TypeHandler.createObject("java.lang.Integer");
        } catch (ParseException e) {
            // ParseException is expected
        }
        assertNotNull(number);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateDate_Eowp0() {
        String string = "2022-01-01";
        Date expected = new GregorianCalendar(2022, Calendar.JANUARY, 1).getTime();
        Date actual = TypeHandler.createDate(string);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateFiles_GHPi0() {
        File[] files = TypeHandler.createFiles("testString");
        assertNotNull(files);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateValue_Wbpe0_KFoG0_fid1() {
        TypeHandler typeHandler = new TypeHandler();
        String string = "test";
        Class<String> clazz = String.class;
        String result = null;
        try {
            result = (String) TypeHandler.createObject(string);
        } catch (ParseException e) {
            fail("ParseException was thrown");
        }
        assertEquals(string, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNumber_tZNC0_RtXz0_fid1() {
        TypeHandler typeHandler = new TypeHandler();
        try {
            Number number = (Number) TypeHandler.createObject("java.lang.Integer");
        } catch (ParseException e) {
            fail("ParseException occurred");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateURL_TRiq0_GKBp0_fid1() {
        TypeHandler typeHandler = new TypeHandler();
        Object url = null;
        try {
            url = typeHandler.createObject("java.net.URL");
        } catch (ParseException e) {
            fail("ParseException occurred");
        }
        assertNotNull(url);
    }
}