/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.io.File;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_TypeHandler_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateFile_bJvW0_1() {
        File file = TypeHandler.createFile("test.txt");
        assertNotNull(file);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateFile_bJvW0_2() {
        File file = TypeHandler.createFile("test.txt");
        assertEquals("test.txt", file.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDefault_ZTNA0() {
        TypeHandler typeHandler = TypeHandler.getDefault();
        assertNotNull(typeHandler);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateClass_qOXP0_ajsS0_1() throws ParseException {
        Object obj = TypeHandler.createObject("java.lang.String");
        assertNotNull(obj);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateClass_qOXP0_ajsS0_2() throws ParseException {
        Object obj = TypeHandler.createObject("java.lang.String");
        assertEquals(String.class, obj.getClass());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateValue_Wbpe0_KFoG0() {
        TypeHandler typeHandler = new TypeHandler();
        String string = "test";
        Class<String> clazz = String.class;
        Object result = null;
        try {
            result = TypeHandler.createObject(string);
        } catch (ParseException e) {
            // ParseException is expected
        }
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateURL_TRiq0_GKBp0() {
        TypeHandler typeHandler = new TypeHandler();
        Object url = null;
        try {
            url = typeHandler.createObject("java.net.URL");
            assertNotNull(url);
        } catch (ParseException e) {
            // No operation
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateObject_JtoC0_OCAi0() {
        Object obj = null;
        try {
            obj = TypeHandler.createObject("java.lang.String");
        } catch (ParseException e) {
            fail("ParseException occurred");
        }
        assertNotNull(obj);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateFile_bJvW0() {
        File file = TypeHandler.createFile("test.txt");
        assertNotNull(file);
        assertEquals("test.txt", file.getName());
    }
}