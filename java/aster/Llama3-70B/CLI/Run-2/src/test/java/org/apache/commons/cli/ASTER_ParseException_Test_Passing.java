/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_ParseException_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrap_UnsupportedOperationException_MqwN0() {
        Throwable e = new UnsupportedOperationException();
        try {
            ParseException.wrap(e);
            assert false;
        } catch (UnsupportedOperationException ex) {
            assert true;
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrap_ParseException_DQqI1() {
        Throwable e = new ParseException("message");
        ParseException result = ParseException.wrap(e);
        assert result instanceof ParseException;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrap_NewParseException_TsXj2() {
        Throwable e = new RuntimeException();
        ParseException result = ParseException.wrap(e);
        assert result instanceof ParseException;
        assert result.getCause() == e;
    }
}