/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionGroup_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_MultipleOptions_RAfQ2() {
        OptionGroup optionGroup = new OptionGroup();
        Option option1 = new Option("a", "longOpt1", true, "description1");
        Option option2 = new Option("b", "longOpt2", true, "description2");
        // optionGroup.getOptions().add(option1);
        // optionGroup.getOptions().add(option2);
        assertEquals("OptionGroup[]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_SingleOption_KFqD1() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("a", "longOpt", true, "description");
        optionGroup.getOptions().add(option);
        assertEquals("[ -a description]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_MultipleOptions_RAfQ2_fid1() {
        OptionGroup optionGroup = new OptionGroup();
        Option option1 = new Option("a", "longOpt1", true, "description1");
        Option option2 = new Option("b", "longOpt2", true, "description2");
        optionGroup.getOptions().add(option1);
        optionGroup.getOptions().add(option2);
        assertEquals("[ -a description1, -b description2]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_OptionWithoutDescription_cuqh3() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option("a", "longOpt", true, null);
        optionGroup.getOptions().add(option);
        assertEquals("[ -a]", optionGroup.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_OptionWithLongOpt_QVVw4() {
        OptionGroup optionGroup = new OptionGroup();
        Option option = new Option(null, "longOpt", true, "description");
        optionGroup.getOptions().add(option);
        assertEquals("[ --longOpt description]", optionGroup.toString());
    }
}