/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import java.io.DataOutputStream;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_EnclosingMethodAttribute_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWriteBody_BPEt0_uQDZ0_fid2() throws IOException {
    org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 className = new org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8("java/lang/Object");
    org.apache.commons.compress.harmony.unpack200.bytecode.CPClass cpClass = new org.apache.commons.compress.harmony.unpack200.bytecode.CPClass(className, 1);
    org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 methodName = new org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8("myMethod");
    org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 methodDescriptor = new org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8("()V");
    org.apache.commons.compress.harmony.unpack200.bytecode.CPNameAndType method = new org.apache.commons.compress.harmony.unpack200.bytecode.CPNameAndType(methodName, methodDescriptor, 2);
    EnclosingMethodAttribute enclosingMethodAttribute = new EnclosingMethodAttribute(cpClass, method);
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    java.io.DataOutputStream dos = new java.io.DataOutputStream(bos);
    enclosingMethodAttribute.writeBody(dos);
    byte[] bytes = bos.toByteArray();
    assertArrayEquals(new byte[]{0, 1, 0, 2}, bytes);
}
}