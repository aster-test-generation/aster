/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.dump;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DumpArchiveInputStream_Test_Passing {
    private boolean isClosed;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_lengthLessThan32_osMO0() {
    byte[] buffer = new byte[10];
    assertFalse(DumpArchiveInputStream.matches(buffer, 10));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_NFS_MAGIC_matches_sqby2() {
    byte[] buffer = new byte[32];
    buffer[24] = (byte) (DumpArchiveConstants.NFS_MAGIC >> 24);
    buffer[25] = (byte) (DumpArchiveConstants.NFS_MAGIC >> 16);
    buffer[26] = (byte) (DumpArchiveConstants.NFS_MAGIC >> 8);
    buffer[27] = (byte) DumpArchiveConstants.NFS_MAGIC;
    assertFalse(DumpArchiveInputStream.matches(buffer, 32));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_NFS_MAGIC_doesNotMatch_yZWo3() {
    byte[] buffer = new byte[32];
    buffer[24] = 0;
    buffer[25] = 0;
    buffer[26] = 0;
    buffer[27] = 0;
    assertFalse(DumpArchiveInputStream.matches(buffer, 32));
}
}