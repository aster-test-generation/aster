/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AttributeLayout_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_True_ryog0_DZkY0_fid2() throws Pack200Exception {
    AttributeLayout attributeLayout = new AttributeLayout("name", 1, "layout", 1, true);
    long value = attributeLayout.getIndex() | attributeLayout.getContext();
    assertTrue(attributeLayout.getValue(value, new SegmentConstantPool(new CpBands(new Segment()))).hashCode() != 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_LLlO0_eWxi0_fid2() {
    try {
        AttributeLayout attributeLayout = new AttributeLayout("name", 1, "layout", 1, false);
        assertEquals("CONTEXT_1: name", attributeLayout.toString());
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_1_ySUV0_aHOk0_fid2() {
    try {
        AttributeLayout attributeLayout = new AttributeLayout("name", 1, "layout", 2, true);
        assertEquals(131074, attributeLayout.hashCode());
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_2_fpVF1_NzuC0_fid2() {
    try {
        AttributeLayout attributeLayout = new AttributeLayout("name", 1, "layout", 2);
        assertEquals(131074, attributeLayout.hashCode());
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_3_qRIj2_oRag0() {
    try {
        AttributeLayout attributeLayout = new AttributeLayout(null, 1, null, 2, true);
        assertEquals(62, attributeLayout.hashCode());
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
}