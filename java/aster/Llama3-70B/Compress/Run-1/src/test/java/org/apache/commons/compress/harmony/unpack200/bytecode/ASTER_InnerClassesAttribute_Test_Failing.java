/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import java.io.DataOutputStream;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_InnerClassesAttribute_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_1_VfmU0() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    assertEquals(31, innerClassesAttribute.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoWrite_ptwT0_gBRd0() throws IOException {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    java.io.DataOutputStream dos = new java.io.DataOutputStream(bos);
    innerClassesAttribute.doWrite(dos);
    assertArrayEquals(new byte[8], bos.toByteArray());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_QXJj0_fid1() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    assertEquals("InnerClasses: name", innerClassesAttribute.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_VFrv0_fid1() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    assertEquals(10, innerClassesAttribute.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentAttributeName_olDH4_fid1() {
    InnerClassesAttribute innerClassesAttribute1 = new InnerClassesAttribute("name1");
    InnerClassesAttribute innerClassesAttribute2 = new InnerClassesAttribute("name2");
    assertFalse(innerClassesAttribute1.equals(innerClassesAttribute2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_OneNullAttributeName_pLBN6_fid1() {
    InnerClassesAttribute innerClassesAttribute1 = new InnerClassesAttribute("name");
    InnerClassesAttribute innerClassesAttribute2 = new InnerClassesAttribute(null);
    assertFalse(innerClassesAttribute1.equals(innerClassesAttribute2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testResolve_IrPt0() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    ClassConstantPool pool = new ClassConstantPool();
    innerClassesAttribute.resolve(pool);
    assertEquals(0, pool.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_1_VfmU0_fid1() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    assertEquals(31 * innerClassesAttribute.getAttributeName().hashCode(), innerClassesAttribute.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_2_XkNx1_fid1() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute(null);
    assertEquals(0, innerClassesAttribute.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoWrite_ptwT0_gBRd0_fid1() throws IOException {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    java.io.DataOutputStream dos = new java.io.DataOutputStream(bos);
    innerClassesAttribute.doWrite(dos);
    assertArrayEquals(new byte[0], bos.toByteArray());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWriteBody_zhHe0_LJSw0() throws IOException {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    java.io.DataOutputStream dos = new java.io.DataOutputStream(bos);
    innerClassesAttribute.writeBody(dos);
    assertEquals(0, bos.toByteArray().length);
}
}