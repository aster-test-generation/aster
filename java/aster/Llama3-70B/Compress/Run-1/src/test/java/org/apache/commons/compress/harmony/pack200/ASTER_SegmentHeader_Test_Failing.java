/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentHeader_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHaveFileSizeHi_pZyZ0() {
    SegmentHeader segmentHeader = new SegmentHeader();
    boolean result = segmentHeader.have_file_size_hi();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetDefaultMajorVersion_iPlo0() {
    SegmentHeader segmentHeader = new SegmentHeader();
    assertEquals(1, segmentHeader.getDefaultMajorVersion());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHave_field_flags_hi_LFCG0() {
    SegmentHeader segmentHeader = new SegmentHeader();
    boolean result = segmentHeader.have_field_flags_hi();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHave_code_flags_hi_gfFj0() {
    SegmentHeader segmentHeader = new SegmentHeader();
    boolean result = segmentHeader.have_code_flags_hi();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHave_method_flags_hi_rRAh0() {
    SegmentHeader segmentHeader = new SegmentHeader();
    boolean result = segmentHeader.have_method_flags_hi();
    assertTrue(result);
}
}