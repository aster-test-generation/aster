/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ConstantValueAttribute_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_1_suSf0() {
    ByteCode entry = new ByteCode(1);
    ConstantValueAttribute constantValueAttribute = new ConstantValueAttribute(entry);
    int result = constantValueAttribute.hashCode();
    assertEquals(31 * (entry.hashCode() + 1), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_2_CLaF1() {
    ConstantValueAttribute constantValueAttribute = new ConstantValueAttribute(null);
    int result = constantValueAttribute.hashCode();
    assertEquals(1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_1_suSf0_fid2() {
    ByteCode entry = new ByteCode(1);
    ConstantValueAttribute constantValueAttribute = new ConstantValueAttribute(entry);
    int result = constantValueAttribute.hashCode();
    assertEquals(31 * (1 + entry.hashCode()), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_2_CLaF1_fid2() {
    ConstantValueAttribute constantValueAttribute = new ConstantValueAttribute(new ByteCode(0));
    int result = constantValueAttribute.hashCode();
    assertEquals(31, result);
}
}