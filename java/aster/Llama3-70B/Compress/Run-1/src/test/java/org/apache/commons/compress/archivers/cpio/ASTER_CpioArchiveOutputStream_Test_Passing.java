/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.cpio;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CpioArchiveOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinish_Pad_TPbv3_VWeP0() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    CpioArchiveOutputStream out = new CpioArchiveOutputStream(bos, (short) 1, 512);
    out.putArchiveEntry(new CpioArchiveEntry("test"));
    out.closeArchiveEntry();
    out.close();
    assertTrue(bos.size() > 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinish_Padding_MUmE3_BxlQ0() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    CpioArchiveOutputStream out = new CpioArchiveOutputStream(bos, (short) 1, 512);
    CpioArchiveEntry entry = new CpioArchiveEntry((short) 1, "", 0);
    out.putArchiveEntry(entry);
    out.closeArchiveEntry();
    out.finish();
    assertEquals(0, bos.size() % 512);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFinish_Padding_pOgA3_SqwE0() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    CpioArchiveOutputStream out = new CpioArchiveOutputStream(bos, (short) 1, 512);
    out.putArchiveEntry(new CpioArchiveEntry("test"));
    out.closeArchiveEntry();
    out.finish();
    assertEquals(512, bos.size());
}
}