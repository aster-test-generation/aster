/**
 * Generated by Aster
 */
package org.apache.commons.compress.changes;
import java.util.ArrayList;
import java.util.List;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ChangeSetResults_Test_Passing {
    private List<String> deleted = new ArrayList<>();
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromChangeSet_oaVl0_1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromChangeSet("testFile.txt");
    assertEquals(1, changeSetResults.getAddedFromChangeSet().size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromChangeSet_oaVl0_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromChangeSet("testFile.txt");
    assertEquals("testFile.txt", changeSetResults.getAddedFromChangeSet().iterator().next());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasBeenAdded_addedFromChangeSet_ILiH0() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.getAddedFromChangeSet().add("file1");
    assertTrue(changeSetResults.hasBeenAdded("file1"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasBeenAdded_addedFromStream_fTVv1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.getAddedFromStream().add("file2");
    assertTrue(changeSetResults.hasBeenAdded("file2"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasBeenAdded_notAdded_iuIn2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    assertFalse(changeSetResults.hasBeenAdded("file3"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_tcaV0_1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("testFile.txt");
    assertEquals(1, changeSetResults.getAddedFromStream().size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_tcaV0_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("testFile.txt");
    assertEquals("testFile.txt", changeSetResults.getAddedFromStream().iterator().next());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDeleted_rGns0_1() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.deleted("file1");
    assertEquals(1, changeSetResults.getDeleted().size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDeleted_rGns0_2() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.deleted("file1");
    assertEquals("file1", changeSetResults.getDeleted().get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromChangeSet_oaVl0() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromChangeSet("testFile.txt");
    assertEquals(1, changeSetResults.getAddedFromChangeSet().size());
    assertEquals("testFile.txt", changeSetResults.getAddedFromChangeSet().iterator().next());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddedFromStream_tcaV0() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.addedFromStream("testFile.txt");
    assertEquals(1, changeSetResults.getAddedFromStream().size());
    assertEquals("testFile.txt", changeSetResults.getAddedFromStream().iterator().next());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDeleted_rGns0() {
    ChangeSetResults changeSetResults = new ChangeSetResults();
    changeSetResults.deleted("file1");
    assertEquals(1, changeSetResults.getDeleted().size());
    assertEquals("file1", changeSetResults.getDeleted().get(0));
}
}