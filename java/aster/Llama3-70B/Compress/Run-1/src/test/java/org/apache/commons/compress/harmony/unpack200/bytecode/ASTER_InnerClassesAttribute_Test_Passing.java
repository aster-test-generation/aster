/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import java.io.DataOutputStream;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_InnerClassesAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_QXJj0() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries_HNxJ0() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    ClassFileEntry[] result = innerClassesAttribute.getNestedClassFileEntries();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameObject_OaeJ0() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    assertTrue(innerClassesAttribute.equals(innerClassesAttribute));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SuperClassObject_cFpw1() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    Object obj = new Object();
    assertFalse(innerClassesAttribute.equals(obj));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentClassObject_ZnOC2() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    Object obj = new Object() {};
    assertFalse(innerClassesAttribute.equals(obj));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameAttributeName_tAhc3() {
    InnerClassesAttribute innerClassesAttribute1 = new InnerClassesAttribute("name");
    InnerClassesAttribute innerClassesAttribute2 = new InnerClassesAttribute("name");
    assertTrue(innerClassesAttribute1.equals(innerClassesAttribute2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentAttributeName_olDH4() {
    InnerClassesAttribute innerClassesAttribute1 = new InnerClassesAttribute("name1");
    InnerClassesAttribute innerClassesAttribute2 = new InnerClassesAttribute("name2");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_NullAttributeName_hMjO5() {
    InnerClassesAttribute innerClassesAttribute1 = new InnerClassesAttribute(null);
    InnerClassesAttribute innerClassesAttribute2 = new InnerClassesAttribute(null);
    assertTrue(innerClassesAttribute1.equals(innerClassesAttribute2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_OneNullAttributeName_pLBN6() {
    InnerClassesAttribute innerClassesAttribute1 = new InnerClassesAttribute("name");
    InnerClassesAttribute innerClassesAttribute2 = new InnerClassesAttribute(null);
    assertTrue(innerClassesAttribute1.equals(innerClassesAttribute2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_2_XkNx1() {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute(null);
    assertEquals(961, innerClassesAttribute.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWriteBody_zhHe2_LJSw2() throws IOException {
    InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    java.io.DataOutputStream dos = new java.io.DataOutputStream(bos);
    innerClassesAttribute.writeBody(dos);
    assertEquals(2, bos.toByteArray().length);
}
}