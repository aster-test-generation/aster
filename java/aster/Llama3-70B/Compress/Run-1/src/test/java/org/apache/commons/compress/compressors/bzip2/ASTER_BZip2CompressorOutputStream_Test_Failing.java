/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.bzip2;
import java.io.IOException;
import java.io.OutputStream;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BZip2CompressorOutputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFlush_withNullOutputStream_msfO1_fid2() throws IOException {
    BZip2CompressorOutputStream compressorOutputStream = new BZip2CompressorOutputStream(null);
    compressorOutputStream.flush();
    assertTrue(true); // no exception thrown
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClose_WithNullOutputStream_Ovin2_fid2() throws IOException {
    BZip2CompressorOutputStream compressor = new BZip2CompressorOutputStream(null);
    try {
        compressor.close();
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_NormalCase_WritesData_ijfo4_YSex0() throws IOException {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    BZip2CompressorOutputStream out = new BZip2CompressorOutputStream(bos, 1);
    byte[] buf = new byte[] { 1, 2, 3 };
    out.write(buf, 0, 3);
    out.close();
    assertArrayEquals(buf, bos.toByteArray());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_qaUN0_kGzd0_fid2() throws IOException {
    java.io.OutputStream out = new java.io.ByteArrayOutputStream();
    BZip2CompressorOutputStream bZip2CompressorOutputStream = new BZip2CompressorOutputStream(out, 1);
    bZip2CompressorOutputStream.write(1);
    bZip2CompressorOutputStream.close();
    assertEquals(4, ((java.io.ByteArrayOutputStream) out).size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_Normal_yPAi0_Loac0_fid2() throws IOException {
    java.io.OutputStream out = new java.io.ByteArrayOutputStream();
    BZip2CompressorOutputStream bZip2CompressorOutputStream = new BZip2CompressorOutputStream(out, 9);
    bZip2CompressorOutputStream.write(10);
    bZip2CompressorOutputStream.close();
    assertEquals(1, ((java.io.ByteArrayOutputStream) out).size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_Normal_SrPF0_Magt0_fid2() throws IOException {
    java.io.OutputStream out = new java.io.ByteArrayOutputStream();
    BZip2CompressorOutputStream bZip2CompressorOutputStream = new BZip2CompressorOutputStream(out, 900);
    bZip2CompressorOutputStream.write(10);
    bZip2CompressorOutputStream.close();
    assertEquals(4, ((java.io.ByteArrayOutputStream) out).size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_Normal_vWGB0_YCUr0_fid2() throws IOException {
    java.io.OutputStream out = new java.io.ByteArrayOutputStream();
    BZip2CompressorOutputStream bZip2CompressorOutputStream = new BZip2CompressorOutputStream(out);
    bZip2CompressorOutputStream.write(10);
    bZip2CompressorOutputStream.close();
    assertEquals(4, ((java.io.ByteArrayOutputStream) out).size());
}
}