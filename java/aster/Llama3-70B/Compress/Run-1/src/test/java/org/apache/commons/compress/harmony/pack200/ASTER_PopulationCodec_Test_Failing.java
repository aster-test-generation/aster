/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PopulationCodec_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_uNSM0_NYte0() {
    BHSDCodec bhSDCodec1 = new BHSDCodec(1, 2);
    BHSDCodec bhSDCodec2 = new BHSDCodec(1, 2, 3);
    try {
        RunCodec runCodec1 = new RunCodec(1, bhSDCodec1, bhSDCodec2);
        PopulationCodec populationCodec = new PopulationCodec(runCodec1, 1, runCodec1);
        byte[] result = new byte[0]; // dummy initialization
    } catch (Pack200Exception e) {
        Assertions.assertNotNull(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFavouredCodec_rbea0_vHjU0() {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2);
    RunCodec favouredCodec = null;
    RunCodec unfavouredCodec = null;
    try {
        favouredCodec = new RunCodec(1, aCodec, bCodec);
        unfavouredCodec = new RunCodec(1, aCodec, bCodec);
    } catch (Pack200Exception e) {
        fail("Pack200Exception was thrown");
    }
    PopulationCodec populationCodec = new PopulationCodec(favouredCodec, 1, unfavouredCodec);
    Codec codec = populationCodec.getFavouredCodec();
    assertNotNull(codec);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_uNSM0_NYte0_fid1() {
    BHSDCodec bhSDCodec1 = new BHSDCodec(256, 2);
    BHSDCodec bhSDCodec2 = new BHSDCodec(1, 2, 3);
    try {
        RunCodec runCodec1 = new RunCodec(1, bhSDCodec1, bhSDCodec2);
        PopulationCodec populationCodec = new PopulationCodec(runCodec1, 1, runCodec1);
        byte[] result = new byte[0]; // dummy initialization
    } catch (Pack200Exception e) {
        Assertions.assertNotNull(e);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFavouredCodec_rbea0_vHjU0_fid1() {
    BHSDCodec aCodec = new BHSDCodec(256, 2);
    BHSDCodec bCodec = new BHSDCodec(256, 2);
    RunCodec favouredCodec = null;
    RunCodec unfavouredCodec = null;
    try {
        favouredCodec = new RunCodec(1, aCodec, bCodec);
        unfavouredCodec = new RunCodec(1, aCodec, bCodec);
    } catch (Pack200Exception e) {
        fail("Pack200Exception was thrown");
    }
    PopulationCodec populationCodec = new PopulationCodec(favouredCodec, 1, unfavouredCodec);
    Codec codec = populationCodec.getFavouredCodec();
    assertNotNull(codec);
}
}