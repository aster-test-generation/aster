/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.deflate;
import static org.junit.jupiter.api.Assertions.assertFalse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DeflateCompressorInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesTrue1_kelr0_hdCX0() {
    byte[] signature = new byte[] { 0x49, 0x4d, 0, 0 };
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesTrue3_LBQJ2_mTUf0() {
    byte[] signature = new byte[] { (byte) 0x1f, (byte) 0x4c, 0, 0 };
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesTrue2_TLou1_VVnN0() {
    byte[] signature = new byte[] { (byte) 0x1f, (byte) 0x5e, 0, 0 };
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesTrue4_NzYL3_GsBw0() {
    byte[] signature = new byte[] { (byte) 0x1f, (byte) 0x9d, 0, 0 };
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesFalseLength_vMvf4_KRmV0() {
    byte[] signature = new byte[] { (byte) 0x49, (byte) 0x5e, 0 };
    assertFalse(DeflateCompressorInputStream.matches(signature, 3));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesFalseMagic2_fMun6_reTV0() {
    byte[] signature = new byte[] { 0x49, 0, 0, 0 }; 
    assertFalse(DeflateCompressorInputStream.matches(signature, 4));
}
}