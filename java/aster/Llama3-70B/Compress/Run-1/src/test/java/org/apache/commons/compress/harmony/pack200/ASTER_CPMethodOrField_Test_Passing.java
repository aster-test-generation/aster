/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CPMethodOrField_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCompareTo_DifferentClassName_hpdc1_MwYA0() {
    CPMethodOrField mof1 = new CPMethodOrField(new CPClass(new org.apache.commons.compress.harmony.pack200.CPUTF8("class1")), new CPNameAndType(new org.apache.commons.compress.harmony.pack200.CPUTF8("name"), new CPSignature("signature", new org.apache.commons.compress.harmony.pack200.CPUTF8("form"), Arrays.asList(new CPClass(new org.apache.commons.compress.harmony.pack200.CPUTF8("class"))))));
    CPMethodOrField mof2 = new CPMethodOrField(new CPClass(new org.apache.commons.compress.harmony.pack200.CPUTF8("class2")), new CPNameAndType(new org.apache.commons.compress.harmony.pack200.CPUTF8("name"), new CPSignature("signature", new org.apache.commons.compress.harmony.pack200.CPUTF8("form"), Arrays.asList(new CPClass(new org.apache.commons.compress.harmony.pack200.CPUTF8("class"))))));
    assertNotEquals(0, mof1.compareTo(mof2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCompareTo_DifferentNameAndType_aMLO2_oVjS0() {
    CPMethodOrField mof1 = new CPMethodOrField(new CPClass(new org.apache.commons.compress.harmony.pack200.CPUTF8("class")), new CPNameAndType(new org.apache.commons.compress.harmony.pack200.CPUTF8("name1"), new CPSignature("signature", new org.apache.commons.compress.harmony.pack200.CPUTF8("form"), Arrays.asList(new CPClass(new org.apache.commons.compress.harmony.pack200.CPUTF8("class"))))));
    CPMethodOrField mof2 = new CPMethodOrField(new CPClass(new org.apache.commons.compress.harmony.pack200.CPUTF8("class")), new CPNameAndType(new org.apache.commons.compress.harmony.pack200.CPUTF8("name2"), new CPSignature("signature", new org.apache.commons.compress.harmony.pack200.CPUTF8("form"), Arrays.asList(new CPClass(new org.apache.commons.compress.harmony.pack200.CPUTF8("class"))))));
    assertNotEquals(0, mof1.compareTo(mof2));
}
}