/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.nio.file.Path;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FileNameUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtension_zXDZ0() {
    String fileName = "test.txt";
    String expected = "txt";
    String actual = FileNameUtils.getExtension(fileName);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBaseName_nidI0() {
    String fileName = "test.txt";
    String expected = "test";
    String actual = FileNameUtils.getBaseName(fileName);
    assert actual.equals(expected);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBaseNameNull_sCRg1() {
    String fileName = null;
    String actual = FileNameUtils.getBaseName(fileName);
    assert actual == null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBaseNameNullPath_Csly0() {
    Path path = null;
    String result = FileNameUtils.getBaseName(path);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetExtensionNullPath_JicW0() {
    Path path = null;
    String result = FileNameUtils.getExtension(path);
    assertNull(result);
}
}