/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BinaryTree_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDecode_sizeZero_eIGp5_amik0() {
    java.io.InputStream inputStream = new java.io.ByteArrayInputStream(new byte[] { 0 });
    try {
        BinaryTree.decode(inputStream, 10);
        fail();
    } catch (IOException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDecode_bitLengthGreaterThan16_eUzo7_PrCZ0() {
    byte[] encodedTree = new byte[] { (byte) 0x10, (byte) 0x11, (byte) 0x12 };
    java.io.InputStream inputStream = new java.io.ByteArrayInputStream(encodedTree);
    try {
        BinaryTree.decode(inputStream, 2);
        fail();
    } catch (IOException e) {
    }
}
}