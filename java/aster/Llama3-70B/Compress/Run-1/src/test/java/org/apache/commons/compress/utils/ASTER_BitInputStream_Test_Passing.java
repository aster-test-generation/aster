/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteOrder;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BitInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBytesRead_TqDa0_qHJx0() {
    java.io.InputStream in = new java.io.ByteArrayInputStream(new byte[0]);
    BitInputStream bitInputStream = new BitInputStream(in, java.nio.ByteOrder.BIG_ENDIAN);
    assertEquals(0, bitInputStream.getBytesRead());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void readBits(int count) throws IOException {
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClose_syDE0_sUUw0() throws IOException {
    java.io.ByteArrayInputStream byteArrayInputStream = new java.io.ByteArrayInputStream(new byte[0]);
    BitInputStream bitInputStream = new BitInputStream(byteArrayInputStream, java.nio.ByteOrder.BIG_ENDIAN);
    bitInputStream.close();
    assertTrue(byteArrayInputStream instanceof java.io.ByteArrayInputStream);
}
}