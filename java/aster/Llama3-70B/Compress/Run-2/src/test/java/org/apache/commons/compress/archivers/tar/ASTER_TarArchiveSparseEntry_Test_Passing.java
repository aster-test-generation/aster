/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarArchiveSparseEntry_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsExtended_VmZY0() throws Exception {
    TarArchiveSparseEntry tarArchiveSparseEntry = new TarArchiveSparseEntry(new byte[512]);
    boolean result = tarArchiveSparseEntry.isExtended();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSparseHeaders_kuDS0() throws Exception {
    byte[] headerBuf = new byte[512];
    TarArchiveSparseEntry tarArchiveSparseEntry = new TarArchiveSparseEntry(headerBuf);
    List<TarArchiveStructSparse> sparseHeaders = tarArchiveSparseEntry.getSparseHeaders();
    assertNotNull(sparseHeaders);
}
}