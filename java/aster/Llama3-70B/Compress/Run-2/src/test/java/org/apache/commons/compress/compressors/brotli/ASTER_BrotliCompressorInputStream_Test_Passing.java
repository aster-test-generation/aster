/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.brotli;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BrotliCompressorInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAvailable_vEeK0_dkKm0() throws IOException {
    java.io.InputStream inputStream = new java.io.ByteArrayInputStream(new byte[0]);
    BrotliCompressorInputStream brotliCompressorInputStream = new BrotliCompressorInputStream(inputStream);
    int result = brotliCompressorInputStream.available();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReset_GkfO0_xoOZ0() throws IOException {
    java.io.InputStream inputStream = new java.io.ByteArrayInputStream(new byte[0]);
    BrotliCompressorInputStream brotliCompressorInputStream = new BrotliCompressorInputStream(inputStream);
    brotliCompressorInputStream.close(); 
}
}