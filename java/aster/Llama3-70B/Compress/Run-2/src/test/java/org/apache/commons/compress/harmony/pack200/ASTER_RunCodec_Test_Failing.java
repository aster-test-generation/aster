/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RunCodec_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBCodec_vMiJ0_cviO0() {
    BHSDCodec aCodec = new BHSDCodec(256, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    RunCodec runCodec = null;
    try {
        runCodec = new RunCodec(1, aCodec, bCodec);
        assertNotNull(runCodec.getBCodec());
    } catch (Pack200Exception e) {
        fail("Pack200Exception was thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetACodec_iIyV0_Xthy0() {
    BHSDCodec aCodec = new BHSDCodec(256, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    RunCodec runCodec = null;
    try {
        runCodec = new RunCodec(1, aCodec, bCodec);
        Codec codec = runCodec.getACodec();
        assertNotNull(codec);
    } catch (Pack200Exception e) {
        fail("Pack200Exception occurred");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_yWpK0_oKGe0() throws Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(256, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3, 4);
    RunCodec runCodec = new RunCodec(5, aCodec, bCodec);
    assertEquals("RunCodec[k=" + 5 + ";aCodec=" + aCodec.toString() + ";bCodec=" + bCodec.toString() + "]", runCodec.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_lkbs0_XxHN0() {
    BHSDCodec aCodec = new BHSDCodec(256, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    try {
        RunCodec runCodec = new RunCodec(1, aCodec, bCodec);
        byte[] result = runCodec.encode(1, 2);
        assertNotNull(result);
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_vLts0_eQup0() {
    BHSDCodec aCodec = new BHSDCodec(256, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    try {
        RunCodec runCodec = new RunCodec(1, aCodec, bCodec);
        byte[] result = new byte[0]; // Initialize result array
        try {
            result = runCodec.encode(1);
        } catch (Pack200Exception e) {
        }
        assertNotNull(result);
    } catch (Exception e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetK_DSMV0_nkKk0() {
    BHSDCodec aCodec = new BHSDCodec(1, 256);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3, 4);
    RunCodec runCodec = null;
    try {
        runCodec = new RunCodec(5, aCodec, bCodec);
        assertEquals(5, runCodec.getK());
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBCodec_vMiJ0_cviO0_fid3() {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    RunCodec runCodec = null;
    try {
        runCodec = new RunCodec(1, aCodec, bCodec);
        assertNotNull(runCodec.getBCodec());
    } catch (Pack200Exception e) {
        fail("Pack200Exception was thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetACodec_iIyV0_Xthy0_fid3() {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    RunCodec runCodec = null;
    try {
        runCodec = new RunCodec(1, aCodec, bCodec);
        Codec codec = runCodec.getACodec();
        assertNotNull(codec);
    } catch (Pack200Exception e) {
        fail("Pack200Exception occurred");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_yWpK0_oKGe0_fid3() throws Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3, 4);
    RunCodec runCodec = new RunCodec(5, aCodec, bCodec);
    assertEquals("RunCodec[k=" + 5 + ";aCodec=" + aCodec.toString() + ";bCodec=" + bCodec.toString() + "]", runCodec.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_lkbs0_XxHN0_fid3() {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    try {
        RunCodec runCodec = new RunCodec(1, aCodec, bCodec);
        byte[] result = runCodec.encode(1, 2);
        assertArrayEquals(new byte[0], result);
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncode_vLts0_eQup0_fid3() {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    try {
        RunCodec runCodec = new RunCodec(1, aCodec, bCodec);
        byte[] result = new byte[0]; // Initialize result array
        try {
            result = runCodec.encode(1);
        } catch (Pack200Exception e) {
        }
        assertArrayEquals(new byte[0], result);
    } catch (Exception e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetK_DSMV0_nkKk0_fid3() {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3, 4);
    RunCodec runCodec = null;
    try {
        runCodec = new RunCodec(5, aCodec, bCodec);
        assertEquals(5, runCodec.getK());
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
}