/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.io.File;
import java.io.IOException;
import java.nio.channels.SeekableByteChannel;
import java.nio.file.OpenOption;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ZipSplitReadOnlySeekableByteChannel_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testForFiles_yeHW0() throws IOException {
    File file1 = new File("file1.zip");
    File file2 = new File("file2.zip");
    file1.createNewFile();
    file2.createNewFile();
    SeekableByteChannel channel = ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment(file1);
    assertNotNull(channel);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testBuildFromLastSplitSegment_InvalidExtension_xfUN0_GQzh0() throws IOException {
    Path lastSegmentPath = java.nio.file.Paths.get("test.txt");
    try {
        ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment(lastSegmentPath);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        assertEquals("The extension of last ZIP split segment should be .zip", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testForPaths_NullPaths_avvS2_CLPP0() {
    try {
        ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment(new File("dummy.zip"));
        try {
            ZipSplitReadOnlySeekableByteChannel.forPaths(null, new OpenOption[] { StandardOpenOption.READ });
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    } catch (IOException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testForFilesNull_vHPT1_wvix0() {
    try {
        try {
            ZipSplitReadOnlySeekableByteChannel.forFiles((File[]) null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    } catch (IOException e) {
    }
}
}