/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.lzma;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LZMACompressorInputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSkip_HABr0_RhbX0() throws IOException {
    java.io.ByteArrayInputStream inputStream = new java.io.ByteArrayInputStream(new byte[0]);
    LZMACompressorInputStream lzmaCompressorInputStream = new LZMACompressorInputStream(inputStream);
    long skipped = lzmaCompressorInputStream.skip(0);
    assertEquals(0, skipped);
    lzmaCompressorInputStream.close();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSkip_HABr0_RhbX0_fid2() throws IOException {
    java.io.ByteArrayInputStream inputStream = new java.io.ByteArrayInputStream(new byte[1024]);
    LZMACompressorInputStream lzmaCompressorInputStream = new LZMACompressorInputStream(inputStream);
    long skipped = lzmaCompressorInputStream.skip(1024);
    assertEquals(1024, skipped);
    lzmaCompressorInputStream.close();
}
}