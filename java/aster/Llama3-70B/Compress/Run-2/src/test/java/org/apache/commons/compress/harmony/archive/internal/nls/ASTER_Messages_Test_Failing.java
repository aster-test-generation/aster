/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.archive.internal.nls;
import java.util.Locale;
import java.util.ResourceBundle;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Messages_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_YCDX0() {
    String result = Messages.getString("Hello, {}", "World");
    assertEquals("Hello, World", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_xfJb0() {
    String result = Messages.getString("Message: {}", 10);
    assertEquals("Message: 10", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_XyAR0() {
    String result = Messages.getString("Hello {} and {}", "John", "Doe");
    assertEquals("Hello John and Doe", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_iKao0() {
    String result = Messages.getString("Message: %c", 'a');
    assertEquals("Message: a", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetLocale_raiP0() {
    Locale locale = new Locale("en", "US");
    ResourceBundle resourceBundle = Messages.setLocale(locale, "messages");
    assertNotNull(resourceBundle);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_BundleIsNotNull_PLIB1_wioi0() {
    ResourceBundle bundle = Messages.setLocale(Locale.getDefault(), "messages");
    assertNotNull(bundle);
    if (bundle != null) {
        String result = bundle.getString("message");
        assertNotNull(result);
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_WithoutBundle_COSZ1_SJVw0() {
    Locale locale = new Locale("en", "US");
    ResourceBundle bundle = ResourceBundle.getBundle("Messages", locale);
    String result = bundle.getString("key");
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_BundleIsNull_gDnH0_BoJl0_fid3() {
    ResourceBundle bundle = Messages.setLocale(Locale.US, "messages");
    String result = ResourceBundle.getBundle("messages", Locale.US).getString("message");
    assertEquals("message", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_BundleIsNotNull_PLIB1_wioi0_fid3() {
    ResourceBundle bundle = Messages.setLocale(Locale.getDefault(), "messages");
    String result = bundle.getString("message");
    assertEquals(bundle.getString("message"), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetString_WithoutBundle_COSZ1_SJVw0_fid3() {
    Locale locale = new Locale("en", "US");
    ResourceBundle bundle = Messages.setLocale(locale, "Messages");
    ResourceBundle.getBundle("Messages", locale).clearCache();
    String result = ResourceBundle.getBundle("Messages", locale).getString("key");
    assertEquals("key arg", result);
}
}