/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.nio.file.attribute.FileTime;
import java.util.Arrays;
import java.util.Date;
import java.util.zip.ZipException;
import org.apache.commons.compress.utils.TimeUtils;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;
import java.util.Date;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_X5455_ExtendedTimestamp_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModifyTime_EabD0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipLong modifyTime = x5455_ExtendedTimestamp.getModifyTime();
    long value = modifyTime.getValue();
    assertNotEquals(0, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_CpSI0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] actual = x5455_ExtendedTimestamp.getCentralDirectoryData();
    byte[] expected = Arrays.copyOf(x5455_ExtendedTimestamp.getLocalFileDataData(), x5455_ExtendedTimestamp.getCentralDirectoryLength().getValue());
    assertArrayEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessFileTime_qCUb0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    FileTime fileTime = FileTime.fromMillis(1643723400000L);
    x5455_ExtendedTimestamp.setAccessFileTime(fileTime);
    assertEquals(new ZipLong(1643723400L), x5455_ExtendedTimestamp.getAccessTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFlags_IXKh0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte expected = 0; // default value of flags
    assert(expected == x5455_ExtendedTimestamp.getFlags());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withNonNullZipLong_JDzK0() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(1234567890L);
    x5455.setCreateTime(l);
    assertTrue(x5455.isBit2_createTimePresent());
    assertEquals((byte) (x5455.getFlags() | 1), x5455.getFlags());
    assertEquals(l, x5455.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withNullZipLong_btaE1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setCreateTime(null);
    assertFalse(x5455.isBit2_createTimePresent());
    assertEquals((byte) (x5455.getFlags() & ~1), x5455.getFlags());
    assertNull(x5455.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withZipLongFromBytes_UJql2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    byte[] bytes = ZipLong.getBytes(1234567890L);
    ZipLong l = new ZipLong(bytes);
    x5455.setCreateTime(l);
    assertTrue(x5455.isBit2_createTimePresent());
    assertEquals((byte) (x5455.getFlags() | 1), x5455.getFlags());
    assertEquals(l, x5455.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_1_ufUN0() throws Exception {
    X5455_ExtendedTimestamp obj = new X5455_ExtendedTimestamp();
    int result = obj.hashCode();
    assertEquals(-123 * (obj.getFlags() & 0x07), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_modifyTimePresent_CdxU0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) (1 << 0));
    assertTrue(x5455_ExtendedTimestamp.isBit0_modifyTimePresent());
    assertFalse(x5455_ExtendedTimestamp.isBit1_accessTimePresent());
    assertFalse(x5455_ExtendedTimestamp.isBit2_createTimePresent());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_accessTimePresent_raNL1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) (1 << 1));
    assertFalse(x5455_ExtendedTimestamp.isBit0_modifyTimePresent());
    assertTrue(x5455_ExtendedTimestamp.isBit1_accessTimePresent());
    assertFalse(x5455_ExtendedTimestamp.isBit2_createTimePresent());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_createTimePresent_gSxQ2() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) (1 << 2));
    assertFalse(x5455_ExtendedTimestamp.isBit0_modifyTimePresent());
    assertFalse(x5455_ExtendedTimestamp.isBit1_accessTimePresent());
    assertTrue(x5455_ExtendedTimestamp.isBit2_createTimePresent());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_allPresent_lYkT3() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) ((1 << 0) | (1 << 1) | (1 << 2)));
    assertTrue(x5455_ExtendedTimestamp.isBit0_modifyTimePresent());
    assertTrue(x5455_ExtendedTimestamp.isBit1_accessTimePresent());
    assertTrue(x5455_ExtendedTimestamp.isBit2_createTimePresent());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_NoTimesPresent_cntd4() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] result = x5455_ExtendedTimestamp.getLocalFileDataData();
    assertArrayEquals(new byte[] {0}, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameObject_yBPh0() throws Exception {
    X5455_ExtendedTimestamp obj = new X5455_ExtendedTimestamp();
    assertTrue(obj.equals(obj));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentClass_rFLG1() throws Exception {
    Object obj = new Object();
    X5455_ExtendedTimestamp xf = new X5455_ExtendedTimestamp();
    assertFalse(xf.equals(obj));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_1_kprm0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 1);
    assertEquals(0, x5455_ExtendedTimestamp.getFlags());
    assertNull(x5455_ExtendedTimestamp.getModifyTime());
    assertNull(x5455_ExtendedTimestamp.getAccessTime());
    assertNull(x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_2_FUdo1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 5);
    assertEquals(1, x5455_ExtendedTimestamp.getFlags());
    assertNotNull(x5455_ExtendedTimestamp.getModifyTime());
    assertNull(x5455_ExtendedTimestamp.getAccessTime());
    assertNull(x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_3_clGA2() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[9];
    data[0] = (byte) 3;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 9);
    assertEquals(3, x5455_ExtendedTimestamp.getFlags());
    assertNotNull(x5455_ExtendedTimestamp.getModifyTime());
    assertNotNull(x5455_ExtendedTimestamp.getAccessTime());
    assertNull(x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_4_YizT3() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[13];
    data[0] = (byte) 7;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 13);
    assertEquals(7, x5455_ExtendedTimestamp.getFlags());
    assertNotNull(x5455_ExtendedTimestamp.getModifyTime());
    assertNotNull(x5455_ExtendedTimestamp.getAccessTime());
    assertNotNull(x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_6_QwxN5() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 0);
    assertEquals(0, x5455_ExtendedTimestamp.getFlags());
    assertNull(x5455_ExtendedTimestamp.getModifyTime());
    assertNull(x5455_ExtendedTimestamp.getAccessTime());
    assertNull(x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_7_RMTj6() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 4);
    assertEquals(1, x5455_ExtendedTimestamp.getFlags());
    assertNotNull(x5455_ExtendedTimestamp.getModifyTime());
    assertNull(x5455_ExtendedTimestamp.getAccessTime());
    assertNull(x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_8_YNAK7() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[13];
    data[0] = (byte) 7;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 12);
    assertEquals(7, x5455_ExtendedTimestamp.getFlags());
    assertNotNull(x5455_ExtendedTimestamp.getModifyTime());
    assertNotNull(x5455_ExtendedTimestamp.getAccessTime());
    assertNotNull(x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateJavaTime_tVBz0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date date = new Date(1643723400000L);
    x5455_ExtendedTimestamp.setCreateJavaTime(date);
    assertEquals(1643723400L, x5455_ExtendedTimestamp.getCreateTime().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsBit1_accessTimePresent_kvxK0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    boolean result = x5455_ExtendedTimestamp.isBit1_accessTimePresent();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_JGTR0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipShort headerId = x5455_ExtendedTimestamp.getHeaderId();
    assertEquals(headerId.getValue(), 1234); // replace 1234 with the expected value
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_noFlags_xzbe0() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    assertEquals("0x5455 Zip Extra Field: Flags=0 ", x5455.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateFileTime_OubJ0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    FileTime fileTime = FileTime.fromMillis(1000);
    x5455_ExtendedTimestamp.setCreateFileTime(fileTime);
    assertEquals(1000, x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_PFGC0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        x5455_ExtendedTimestamp.parseFromCentralDirectoryData(buffer, offset, length);
        assertTrue(true);
    } catch (ZipException e) {
        fail("Should not throw ZipException");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCreateTime_Lvcv0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipLong createTime = x5455_ExtendedTimestamp.getCreateTime();
    long value = createTime.getValue();
    assertNotEquals(0, value);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccessTime_uSrY0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipLong accessTime = x5455_ExtendedTimestamp.getAccessTime();
    long value = accessTime.getValue();
    byte[] bytes = accessTime.getBytes();
    assertNotEquals(0, value);
    assertNotNull(bytes);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyFileTime_ycuD0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    FileTime fileTime = FileTime.fromMillis(1000);
    x5455_ExtendedTimestamp.setModifyFileTime(fileTime);
    assertEquals(1000, x5455_ExtendedTimestamp.getModifyTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsBit0_modifyTimePresent_eLqL0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    boolean result = x5455_ExtendedTimestamp.isBit0_modifyTimePresent();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withNonNullZipLong_bKWs0() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(1234567890L);
    x5455.setModifyTime(l);
    assertTrue(x5455.isBit0_modifyTimePresent());
    assertEquals((byte) (x5455.getFlags() | 1), x5455.getFlags());
    assertEquals(l, x5455.getModifyTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withNullZipLong_Pfwm1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setModifyTime(null);
    assertFalse(x5455.isBit0_modifyTimePresent());
    assertEquals((byte) (x5455.getFlags() & ~1), x5455.getFlags());
    assertNull(x5455.getModifyTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withZeroZipLong_ZdKU2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(0L);
    x5455.setModifyTime(l);
    assertTrue(x5455.isBit0_modifyTimePresent());
    assertEquals((byte) (x5455.getFlags() | 1), x5455.getFlags());
    assertEquals(l, x5455.getModifyTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsBit2_createTimePresent_QOaf0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    boolean result = x5455_ExtendedTimestamp.isBit2_createTimePresent();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withNonNullZipLong_bLZJ0() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(1234567890L);
    x5455.setAccessTime(l);
    assertTrue(x5455.isBit1_accessTimePresent());
    assertEquals((byte) (x5455.getFlags() | X5455_ExtendedTimestamp.ACCESS_TIME_BIT), x5455.getFlags());
    assertEquals(l, x5455.getAccessTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withNullZipLong_Hzwx1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setAccessTime(null);
    assertFalse(x5455.isBit1_accessTimePresent());
    assertEquals((byte) (x5455.getFlags() & ~X5455_ExtendedTimestamp.ACCESS_TIME_BIT), x5455.getFlags());
    assertNull(x5455.getAccessTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withZeroZipLong_GQet2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(0L);
    x5455.setAccessTime(l);
    assertTrue(x5455.isBit1_accessTimePresent());
    assertEquals((byte) (x5455.getFlags() | X5455_ExtendedTimestamp.ACCESS_TIME_BIT), x5455.getFlags());
    assertEquals(l, x5455.getAccessTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_clone_ZSft0() throws CloneNotSupportedException {
    X5455_ExtendedTimestamp obj = new X5455_ExtendedTimestamp();
    Object clonedObj = obj.clone();
    assertNotSame(obj, clonedObj);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessFileTime_kSOO0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    FileTime fileTime = FileTime.fromMillis(1000);
    x5455_ExtendedTimestamp.setAccessFileTime(fileTime);
    assertEquals(1000, x5455_ExtendedTimestamp.getAccessTime().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessFileTime_hCPn0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    FileTime fileTime = FileTime.fromMillis(1000);
    x5455_ExtendedTimestamp.setAccessFileTime(fileTime);
    assertEquals(new ZipLong(1), x5455_ExtendedTimestamp.getAccessTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFlags_sgfl0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte expected = 0; // default value of flags
    byte actual = x5455_ExtendedTimestamp.getFlags();
    assert actual == expected;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withNonNullZipLong_ptQe0_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(1234567890L);
    x5455.setCreateTime(l);
    assertTrue(x5455.isBit2_createTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withNonNullZipLong_ptQe0_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(1234567890L);
    x5455.setCreateTime(l);
    assertEquals((byte) (x5455.getFlags() | 0x01), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withNonNullZipLong_ptQe0_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(1234567890L);
    x5455.setCreateTime(l);
    assertEquals(l, x5455.getCreateTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withNullZipLong_zWCG1_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setCreateTime(null);
    assertFalse(x5455.isBit2_createTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withNullZipLong_zWCG1_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setCreateTime(null);
    assertEquals((byte) (x5455.getFlags() & ~0x01), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withNullZipLong_zWCG1_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setCreateTime(null);
    assertNull(x5455.getCreateTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withZipLongFromBytes_FIpg2_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    byte[] bytes = new byte[8];
    ZipLong.putLong(1234567890L, bytes, 0);
    ZipLong l = new ZipLong(bytes);
    x5455.setCreateTime(l);
    assertTrue(x5455.isBit2_createTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withZipLongFromBytes_FIpg2_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    byte[] bytes = new byte[8];
    ZipLong.putLong(1234567890L, bytes, 0);
    ZipLong l = new ZipLong(bytes);
    x5455.setCreateTime(l);
    assertEquals((byte) (x5455.getFlags() | 0x01), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateTime_withZipLongFromBytes_FIpg2_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    byte[] bytes = new byte[8];
    ZipLong.putLong(1234567890L, bytes, 0);
    ZipLong l = new ZipLong(bytes);
    x5455.setCreateTime(l);
    assertEquals(l, x5455.getCreateTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength1_Kmtm0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipShort result = x5455_ExtendedTimestamp.getLocalFileDataLength();
    assertEquals(new ZipShort(1), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_modifyTimePresent_EXYE0_1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x01);
    assertTrue(x5455_ExtendedTimestamp.isBit0_modifyTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_modifyTimePresent_EXYE0_2() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x01);
    assertFalse(x5455_ExtendedTimestamp.isBit1_accessTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_modifyTimePresent_EXYE0_3() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x01);
    assertFalse(x5455_ExtendedTimestamp.isBit2_createTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_accessTimePresent_KtcN1_1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x02);
    assertFalse(x5455_ExtendedTimestamp.isBit0_modifyTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_accessTimePresent_KtcN1_2() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x02);
    assertTrue(x5455_ExtendedTimestamp.isBit1_accessTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_accessTimePresent_KtcN1_3() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x02);
    assertFalse(x5455_ExtendedTimestamp.isBit2_createTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_createTimePresent_ZIZU2_1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x04);
    assertFalse(x5455_ExtendedTimestamp.isBit0_modifyTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_createTimePresent_ZIZU2_2() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x04);
    assertFalse(x5455_ExtendedTimestamp.isBit1_accessTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_createTimePresent_ZIZU2_3() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x04);
    assertTrue(x5455_ExtendedTimestamp.isBit2_createTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_allPresent_stBX3_1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x07);
    assertTrue(x5455_ExtendedTimestamp.isBit0_modifyTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_allPresent_stBX3_2() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x07);
    assertTrue(x5455_ExtendedTimestamp.isBit1_accessTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_setFlags_allPresent_stBX3_3() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setFlags((byte) 0x07);
    assertTrue(x5455_ExtendedTimestamp.isBit2_createTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_qsEk0_1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipShort headerId = x5455_ExtendedTimestamp.getHeaderId();
    assertNotNull(headerId);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_qsEk0_2() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipShort headerId = x5455_ExtendedTimestamp.getHeaderId();
    assertEquals(headerId.getValue(), headerId.getValue());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameObject_qleu0() throws Exception {
    X5455_ExtendedTimestamp xf = new X5455_ExtendedTimestamp();
    assertTrue(xf.equals(xf));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentClass_gPDt1() throws Exception {
    Object o = new Object();
    X5455_ExtendedTimestamp xf = new X5455_ExtendedTimestamp();
    assertFalse(xf.equals(o));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccessTime_GOsi0_1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipLong accessTime = x5455_ExtendedTimestamp.getAccessTime();
    long value = accessTime.getValue();
    byte[] bytes = accessTime.getBytes();
    assertNotEquals(0, value);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccessTime_GOsi0_2() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    ZipLong accessTime = x5455_ExtendedTimestamp.getAccessTime();
    long value = accessTime.getValue();
    byte[] bytes = accessTime.getBytes();
    assertNotNull(bytes);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withNonNullZipLong_eKZp0_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(12345);
    x5455.setModifyTime(l);
    assertTrue(x5455.isBit0_modifyTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withNonNullZipLong_eKZp0_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(12345);
    x5455.setModifyTime(l);
    assertEquals((byte) (x5455.getFlags() | 1), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withNonNullZipLong_eKZp0_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(12345);
    x5455.setModifyTime(l);
    assertEquals(l, x5455.getModifyTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withNullZipLong_BjFP1_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setModifyTime(null);
    assertFalse(x5455.isBit0_modifyTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withNullZipLong_BjFP1_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setModifyTime(null);
    assertEquals((byte) (x5455.getFlags() & ~1), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withNullZipLong_BjFP1_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setModifyTime(null);
    assertNull(x5455.getModifyTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withZeroZipLong_mtnb2_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(0);
    x5455.setModifyTime(l);
    assertTrue(x5455.isBit0_modifyTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withZeroZipLong_mtnb2_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(0);
    x5455.setModifyTime(l);
    assertEquals((byte) (x5455.getFlags() | 1), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModifyTime_withZeroZipLong_mtnb2_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(0);
    x5455.setModifyTime(l);
    assertEquals(l, x5455.getModifyTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withNonNullZipLong_zSQy0_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(12345);
    x5455.setAccessTime(l);
    assertTrue(x5455.isBit1_accessTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withNonNullZipLong_zSQy0_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(12345);
    x5455.setAccessTime(l);
    assertEquals((byte) (x5455.getFlags() | X5455_ExtendedTimestamp.ACCESS_TIME_BIT), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withNonNullZipLong_zSQy0_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(12345);
    x5455.setAccessTime(l);
    assertEquals(l, x5455.getAccessTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withNullZipLong_DOHa1_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setAccessTime(null);
    assertFalse(x5455.isBit1_accessTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withNullZipLong_DOHa1_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setAccessTime(null);
    assertEquals((byte) (x5455.getFlags() & ~X5455_ExtendedTimestamp.ACCESS_TIME_BIT), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withNullZipLong_DOHa1_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setAccessTime(null);
    assertNull(x5455.getAccessTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withZeroZipLong_RGqp2_1() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(0);
    x5455.setAccessTime(l);
    assertTrue(x5455.isBit1_accessTimePresent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withZeroZipLong_RGqp2_2() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(0);
    x5455.setAccessTime(l);
    assertEquals((byte) (x5455.getFlags() | X5455_ExtendedTimestamp.ACCESS_TIME_BIT), x5455.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccessTime_withZeroZipLong_RGqp2_3() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    ZipLong l = new ZipLong(0);
    x5455.setAccessTime(l);
    assertEquals(l, x5455.getAccessTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void parseFromLocalFileData(byte[] data, int offset, int length) throws ZipException {
        if (data.length == 0) {
            throw new ZipException("Data is empty");
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength_bit0_modifyTimePresentTrue_hNhE0_NhSK0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date d = new Date();
    x5455_ExtendedTimestamp.setAccessJavaTime(d);
    ZipShort result = x5455_ExtendedTimestamp.getCentralDirectoryLength();
    assertArrayEquals(new byte[]{0, 5}, result.getBytes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength_bit0_modifyTimePresentFalse_hsPm1_zltO0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date d = new Date();
    x5455_ExtendedTimestamp.setAccessJavaTime(d);
    ZipShort result = x5455_ExtendedTimestamp.getCentralDirectoryLength();
    assertArrayEquals(new byte[]{0, 1}, result.getBytes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_2_DUGo1_meXy0() throws Exception {
    X5455_ExtendedTimestamp obj = new X5455_ExtendedTimestamp();
    Date d = new Date();
    obj.setAccessJavaTime(d);
    int result = obj.hashCode();
    assertEquals(-123 * (obj.getFlags() & 0x07) ^ d.hashCode(), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_3_YmFn2_XMxu0() throws Exception {
    X5455_ExtendedTimestamp obj = new X5455_ExtendedTimestamp();
    Date d = new Date();
    obj.setAccessJavaTime(d);
    int result = obj.hashCode();
    assertEquals(-123 * (obj.getFlags() & 0x07) ^ Integer.rotateLeft(obj.getAccessTime().hashCode(), 11), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_4_hGnm3_AWPw0() throws Exception {
    X5455_ExtendedTimestamp obj = new X5455_ExtendedTimestamp();
    obj.setAccessJavaTime(new Date());
    int result = obj.hashCode();
    assertEquals(-123 * (obj.getFlags() & 0x07) ^ Integer.rotateLeft(obj.getAccessTime().hashCode(), 22), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength2_XdRD1_uksW0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date date = new Date();
    x5455_ExtendedTimestamp.setAccessJavaTime(date);
    ZipShort result = x5455_ExtendedTimestamp.getLocalFileDataLength();
    assertEquals(new ZipShort(5), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength3_WlaZ2_zmbL0_1() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date d = new Date();
    x5455_ExtendedTimestamp.setAccessJavaTime(d);
    ZipShort result = x5455_ExtendedTimestamp.getLocalFileDataLength();
    x5455_ExtendedTimestamp.setAccessTime(new ZipLong(d.getTime()));
    result = x5455_ExtendedTimestamp.getLocalFileDataLength();
    assertEquals(new ZipShort(5), result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModifyFileTime_RWqg0_dPSw0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    FileTime expected = FileTime.fromMillis(0);
    x5455_ExtendedTimestamp.setModifyTime(new ZipLong(0));
    assertSame(expected, x5455_ExtendedTimestamp.getModifyFileTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCreateFileTime_gORd0_KlLX0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date date = new Date(1643723400000L);
    x5455_ExtendedTimestamp.setCreateJavaTime(date);
    FileTime expected = TimeUtils.unixTimeToFileTime(1643723400);
    Assertions.assertEquals(expected, x5455_ExtendedTimestamp.getCreateFileTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccessFileTime_Ivcw0_Lwik0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    long accessTime = 1643723400L;
    x5455_ExtendedTimestamp.setAccessTime(new org.apache.commons.compress.archivers.zip.ZipLong(accessTime));
    FileTime expected = FileTime.fromMillis(accessTime * 1000);
    FileTime actual = x5455_ExtendedTimestamp.getAccessFileTime();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength5_VfDV4_MRKg0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setModifyJavaTime(new Date());
    x5455_ExtendedTimestamp.setAccessJavaTime(new Date());
    ZipShort result = x5455_ExtendedTimestamp.getLocalFileDataLength();
    assertEquals(new ZipShort(9), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreateJavaTime_Wgno0_KnKQ0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date date = new Date(1643723400000L);
    x5455_ExtendedTimestamp.setCreateJavaTime(date);
    long unixTime = date.getTime() / 1000;
    long zipLong = unixTime >>> 16;
    zipLong = (zipLong << 16) | (unixTime & 0xFFFF);
    assertEquals(zipLong, x5455_ExtendedTimestamp.getCreateTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_modifyTimePresent_xWuY0_fNCk0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setAccessJavaTime(new Date());
    byte[] result = x5455_ExtendedTimestamp.getLocalFileDataData();
    assertArrayEquals(new byte[]{17, 1, 2, 3, 4}, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_accessTimePresent_qsnf1_AGNQ0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date date = new Date();
    x5455_ExtendedTimestamp.setAccessJavaTime(date);
    byte[] result = x5455_ExtendedTimestamp.getLocalFileDataData();
    assertArrayEquals(new byte[]{18, 1, 2, 3, 4}, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_modifyAndAccessTimePresent_obIQ5_FWal0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date modifyDate = new Date(0);
    x5455_ExtendedTimestamp.setModifyJavaTime(modifyDate);
    Date accessDate = new Date(0);
    x5455_ExtendedTimestamp.setAccessJavaTime(accessDate);
    byte[] result = x5455_ExtendedTimestamp.getLocalFileDataData();
    assertArrayEquals(new byte[]{25, 1, 2, 3, 4, 7, 8, 9, 10}, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength6_gJaC5_TEEz0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date date = new Date();
    x5455_ExtendedTimestamp.setAccessJavaTime(date);
    x5455_ExtendedTimestamp.setModifyJavaTime(date);
    x5455_ExtendedTimestamp.setCreateJavaTime(date);
    ZipShort result = x5455_ExtendedTimestamp.getLocalFileDataLength();
    assertEquals(new ZipShort(13), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_createTimePresent_gGbV2_fouo0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setAccessJavaTime(new Date());
    byte[] result = x5455_ExtendedTimestamp.getLocalFileDataData();
    assertArrayEquals(new byte[]{20, 1, 2, 3, 4}, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccessJavaTime_eOBm0_bLVU0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setAccessJavaTime(new Date(1643723400 * 1000L));
    Date expected = new Date(1643723400 * 1000L);
    Date actual = x5455_ExtendedTimestamp.getAccessJavaTime();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCreateJavaTime_RWgL0_nIhL0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    Date expected = new Date(1643723400000L);
    x5455_ExtendedTimestamp.setCreateTime(new ZipLong(1643723400000L));
    Date result = x5455_ExtendedTimestamp.getCreateJavaTime();
    assert result.equals(expected);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetModifyJavaTime_NMZD0_xKzq0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    x5455_ExtendedTimestamp.setAccessJavaTime(new Date(1234567890L));
    Date actual = x5455_ExtendedTimestamp.getModifyJavaTime();
    assert actual.getTime() == 1234567890L;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_modifyTimePresent_xpZB1_HxZM0() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setAccessJavaTime(new Date(1234567890));
    assertEquals("0x5455 Zip Extra Field: Flags=0  Access:[Sun Feb 14 23:31:30 UTC 1971] ", x5455.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_accessTimePresent_cgiu2_sBqR0() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setAccessJavaTime(new Date(1234567890));
    assertEquals("0x5455 Zip Extra Field: Flags=2  Access:[Sun Feb 14 23:31:30 UTC 1971] ", x5455.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_createTimePresent_zcLJ3_sdqN0() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setAccessJavaTime(new Date(1234567890));
    assertEquals("0x5455 Zip Extra Field: Flags=4  Create:[Sun Feb 14 23:31:30 UTC 1971] ", x5455.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_1_Ynyt0_tFlc0_1() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 1);
    assertEquals(0, x5455_ExtendedTimestamp.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_1_Ynyt0_tFlc0_2() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 1);
    assertNull(x5455_ExtendedTimestamp.getModifyTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_1_Ynyt0_tFlc0_3() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 1);
    assertNull(x5455_ExtendedTimestamp.getAccessTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_1_Ynyt0_tFlc0_4() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 1);
    assertNull(x5455_ExtendedTimestamp.getCreateTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_2_RObi1_Ersd0_1() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 5);
    assertEquals(1, x5455_ExtendedTimestamp.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_2_RObi1_Ersd0_2() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 5);
    assertNotNull(x5455_ExtendedTimestamp.getModifyTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_2_RObi1_Ersd0_3() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 5);
    assertNull(x5455_ExtendedTimestamp.getAccessTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_2_RObi1_Ersd0_4() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 5);
    assertNull(x5455_ExtendedTimestamp.getCreateTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_3_ZaIk2_QktJ0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[9];
    data[0] = (byte) 3;
    try {
        x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 9);
        assertEquals(3, x5455_ExtendedTimestamp.getFlags());
        assertNotNull(x5455_ExtendedTimestamp.getModifyTime());
        assertNotNull(x5455_ExtendedTimestamp.getAccessTime());
        assertNull(x5455_ExtendedTimestamp.getCreateTime());
    } catch (java.util.zip.ZipException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_modifyAndCreateTimePresent_btCv6_oliT0() throws Exception {
    X5455_ExtendedTimestamp x5455 = new X5455_ExtendedTimestamp();
    x5455.setAccessJavaTime(new Date(1234567890));
    x5455.setCreateJavaTime(new Date(1234567890));
    x5455.setModifyJavaTime(new Date(1234567890));
    assertEquals("0x5455 Zip Extra Field: Flags=7  Access:[Sun Feb 14 23:31:30 UTC 1971] Create:[Sun Feb 14 23:31:30 UTC 1971] Modify:[Sun Feb 14 23:31:30 UTC 1971] ", x5455.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_4_KUQl3_FLEX0_1() throws ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[13];
    data[0] = (byte) 7;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 13);
    assertEquals(7, x5455_ExtendedTimestamp.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_4_KUQl3_FLEX0_2() throws ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[13];
    data[0] = (byte) 7;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 13);
    assertNotNull(x5455_ExtendedTimestamp.getModifyTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_4_KUQl3_FLEX0_3() throws ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[13];
    data[0] = (byte) 7;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 13);
    assertNotNull(x5455_ExtendedTimestamp.getAccessTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_4_KUQl3_FLEX0_4() throws ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[13];
    data[0] = (byte) 7;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 0, 13);
    assertNotNull(x5455_ExtendedTimestamp.getCreateTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_6_FGPX5_knRg0_1() throws ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 0);
    assertEquals(0, x5455_ExtendedTimestamp.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_6_FGPX5_knRg0_2() throws ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 0);
    assertNull(x5455_ExtendedTimestamp.getModifyTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_6_FGPX5_knRg0_3() throws ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 0);
    assertNull(x5455_ExtendedTimestamp.getAccessTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_6_FGPX5_knRg0_4() throws ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[1];
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 0);
    assertNull(x5455_ExtendedTimestamp.getCreateTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_7_mQsJ6_aABZ0_1() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 4);
    assertEquals(1, x5455_ExtendedTimestamp.getFlags());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_7_mQsJ6_aABZ0_2() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 4);
    assertNotNull(x5455_ExtendedTimestamp.getModifyTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_7_mQsJ6_aABZ0_3() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 4);
    assertNull(x5455_ExtendedTimestamp.getAccessTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_7_mQsJ6_aABZ0_4() throws java.util.zip.ZipException {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[5];
    data[0] = (byte) 1;
    x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 4);
    assertNull(x5455_ExtendedTimestamp.getCreateTime());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameValues_tdxM2_WXDj0() throws Exception {
    X5455_ExtendedTimestamp xf1 = new X5455_ExtendedTimestamp();
    xf1.setFlags((byte) 1);
    xf1.setModifyJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf1.setAccessJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf1.setCreateJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    X5455_ExtendedTimestamp xf2 = new X5455_ExtendedTimestamp();
    xf2.setFlags((byte) 1);
    xf2.setModifyJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf2.setAccessJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf2.setCreateJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    assertTrue(xf1.equals(xf2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentFlags_edLb3_pnYd0() throws Exception {
    X5455_ExtendedTimestamp xf1 = new X5455_ExtendedTimestamp();
    xf1.setFlags((byte) 1);
    xf1.setModifyJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf1.setAccessJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf1.setCreateJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    X5455_ExtendedTimestamp xf2 = new X5455_ExtendedTimestamp();
    xf2.setFlags((byte) 2);
    xf2.setModifyJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf2.setAccessJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf2.setCreateJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    assertFalse(xf1.equals(xf2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentModifyTime_wJcX4_AAtc0() throws Exception {
    X5455_ExtendedTimestamp xf1 = new X5455_ExtendedTimestamp();
    xf1.setFlags((byte) 1);
    xf1.setModifyJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf1.setAccessJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf1.setCreateJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    X5455_ExtendedTimestamp xf2 = new X5455_ExtendedTimestamp();
    xf2.setFlags((byte) 1);
    xf2.setModifyJavaTime(java.sql.Timestamp.valueOf("2022-01-02 00:00:00"));
    xf2.setAccessJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf2.setCreateJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    assertFalse(xf1.equals(xf2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_8_XtIV7_BdUb0() throws Exception {
    X5455_ExtendedTimestamp x5455_ExtendedTimestamp = new X5455_ExtendedTimestamp();
    byte[] data = new byte[9];
    data[0] = (byte) 3;
    try {
        x5455_ExtendedTimestamp.parseFromLocalFileData(data, 1, 8);
        assertEquals(3, x5455_ExtendedTimestamp.getFlags());
        assertNotNull(x5455_ExtendedTimestamp.getModifyTime());
        assertNotNull(x5455_ExtendedTimestamp.getAccessTime());
        assertNull(x5455_ExtendedTimestamp.getCreateTime());
    } catch (ZipException e) {
        fail("ZipException should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentAccessTime_nhqQ5_fdQI0() throws Exception {
    X5455_ExtendedTimestamp xf1 = new X5455_ExtendedTimestamp();
    xf1.setFlags((byte) 1);
    xf1.setModifyJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf1.setAccessJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf1.setCreateJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    X5455_ExtendedTimestamp xf2 = new X5455_ExtendedTimestamp();
    xf2.setFlags((byte) 1);
    xf2.setModifyJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    xf2.setAccessJavaTime(java.sql.Timestamp.valueOf("2022-01-02 00:00:00"));
    xf2.setCreateJavaTime(java.sql.Timestamp.valueOf("2022-01-01 00:00:00"));
    assertFalse(xf1.equals(xf2));
}
}