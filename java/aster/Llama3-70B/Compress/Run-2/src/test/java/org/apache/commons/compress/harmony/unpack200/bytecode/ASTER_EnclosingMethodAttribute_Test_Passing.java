/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_EnclosingMethodAttribute_Test_Passing {
EnclosingMethodAttribute enclosingMethodAttribute;
    private ClassConstantPool pool;
private int methodIndex = 1;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_fEsk0_YCSg0() {
    org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 name = new org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8("string");
    org.apache.commons.compress.harmony.unpack200.bytecode.CPClass cpClass = new org.apache.commons.compress.harmony.unpack200.bytecode.CPClass(new org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8("className"), 1);
    org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 descriptor = new org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8("descriptor");
    org.apache.commons.compress.harmony.unpack200.bytecode.CPNameAndType method = new org.apache.commons.compress.harmony.unpack200.bytecode.CPNameAndType(name, descriptor, 3);
    org.apache.commons.compress.harmony.unpack200.bytecode.EnclosingMethodAttribute enclosingMethodAttribute = new org.apache.commons.compress.harmony.unpack200.bytecode.EnclosingMethodAttribute(cpClass, method);
    assertEquals(4, enclosingMethodAttribute.getLength());
}
}