/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.util.ArrayList;
import java.util.Iterator;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.Iterator;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Lists_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_ksDB0() throws Exception {
    ArrayList<?> list = Lists.newArrayList();
    assertNotNull(list);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_empty_iterator_NeDt0() throws Exception {
    Iterator<String> iterator = new ArrayList<String>().iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals(0, list.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_single_element_iterator_DcMj1_1() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals(1, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_single_element_iterator_DcMj1_2() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element", list.get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_multiple_elements_iterator_dwTu2_1() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element1");
    arrayList.add("Element2");
    arrayList.add("Element3");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals(3, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_multiple_elements_iterator_dwTu2_2() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element1");
    arrayList.add("Element2");
    arrayList.add("Element3");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element1", list.get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_multiple_elements_iterator_dwTu2_3() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element1");
    arrayList.add("Element2");
    arrayList.add("Element3");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element2", list.get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_multiple_elements_iterator_dwTu2_4() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element1");
    arrayList.add("Element2");
    arrayList.add("Element3");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element3", list.get(2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_null_iterator_qxhC3() throws Exception {
    try {
        Lists.newArrayList(null);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_integers_oAeg4_1() throws Exception {
    ArrayList<Integer> arrayList = new ArrayList<Integer>();
    arrayList.add(1);
    arrayList.add(2);
    arrayList.add(3);
    Iterator<Integer> iterator = arrayList.iterator();
    ArrayList<Integer> list = Lists.newArrayList(iterator);
    assertEquals(3, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_integers_oAeg4_2() throws Exception {
    ArrayList<Integer> arrayList = new ArrayList<Integer>();
    arrayList.add(1);
    arrayList.add(2);
    arrayList.add(3);
    Iterator<Integer> iterator = arrayList.iterator();
    ArrayList<Integer> list = Lists.newArrayList(iterator);
    assertEquals(1, (int) list.get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_integers_oAeg4_3() throws Exception {
    ArrayList<Integer> arrayList = new ArrayList<Integer>();
    arrayList.add(1);
    arrayList.add(2);
    arrayList.add(3);
    Iterator<Integer> iterator = arrayList.iterator();
    ArrayList<Integer> list = Lists.newArrayList(iterator);
    assertEquals(2, (int) list.get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_integers_oAeg4_4() throws Exception {
    ArrayList<Integer> arrayList = new ArrayList<Integer>();
    arrayList.add(1);
    arrayList.add(2);
    arrayList.add(3);
    Iterator<Integer> iterator = arrayList.iterator();
    ArrayList<Integer> list = Lists.newArrayList(iterator);
    assertEquals(3, (int) list.get(2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_objects_viPo5_1() throws Exception {
    ArrayList<Object> arrayList = new ArrayList<Object>();
    arrayList.add(new Object());
    arrayList.add(new Object());
    arrayList.add(new Object());
    Iterator<Object> iterator = arrayList.iterator();
    ArrayList<Object> list = Lists.newArrayList(iterator);
    assertEquals(3, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_objects_viPo5_2() throws Exception {
    ArrayList<Object> arrayList = new ArrayList<Object>();
    arrayList.add(new Object());
    arrayList.add(new Object());
    arrayList.add(new Object());
    Iterator<Object> iterator = arrayList.iterator();
    ArrayList<Object> list = Lists.newArrayList(iterator);
    assertNotNull(list.get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_objects_viPo5_3() throws Exception {
    ArrayList<Object> arrayList = new ArrayList<Object>();
    arrayList.add(new Object());
    arrayList.add(new Object());
    arrayList.add(new Object());
    Iterator<Object> iterator = arrayList.iterator();
    ArrayList<Object> list = Lists.newArrayList(iterator);
    assertNotNull(list.get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_objects_viPo5_4() throws Exception {
    ArrayList<Object> arrayList = new ArrayList<Object>();
    arrayList.add(new Object());
    arrayList.add(new Object());
    arrayList.add(new Object());
    Iterator<Object> iterator = arrayList.iterator();
    ArrayList<Object> list = Lists.newArrayList(iterator);
    assertNotNull(list.get(2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_duplicates_Kgjg6_1() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add("Element");
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals(3, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_duplicates_Kgjg6_2() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add("Element");
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element", list.get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_duplicates_Kgjg6_3() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add("Element");
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element", list.get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_duplicates_Kgjg6_4() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add("Element");
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element", list.get(2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_nulls_QeyC7_1() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add(null);
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals(3, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_nulls_QeyC7_2() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add(null);
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element", list.get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_nulls_QeyC7_3() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add(null);
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertNull(list.get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_nulls_QeyC7_4() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add(null);
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element", list.get(2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_empty_string_HkRB8_1() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add("");
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals(3, list.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_empty_string_HkRB8_2() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add("");
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element", list.get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_empty_string_HkRB8_3() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add("");
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("", list.get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test_newArrayList_with_iterator_of_strings_with_empty_string_HkRB8_4() throws Exception {
    ArrayList<String> arrayList = new ArrayList<String>();
    arrayList.add("Element");
    arrayList.add("");
    arrayList.add("Element");
    Iterator<String> iterator = arrayList.iterator();
    ArrayList<String> list = Lists.newArrayList(iterator);
    assertEquals("Element", list.get(2));}
}