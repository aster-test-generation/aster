/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RuntimeVisibleorInvisibleAnnotationsAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_cgnT0_YPAB0() {
    CPUTF8 name = new CPUTF8("name", 0);
    RuntimeVisibleorInvisibleAnnotationsAttribute.Annotation[] annotations = new RuntimeVisibleorInvisibleAnnotationsAttribute.Annotation[0];
    RuntimeVisibleorInvisibleAnnotationsAttribute attribute = new RuntimeVisibleorInvisibleAnnotationsAttribute(name, annotations);
    String result = attribute.toString();
    assertEquals("name: 0 annotations", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries_iRzj0_ZAMe0() {
    CPUTF8 attributeName = new CPUTF8("name", 0);
    RuntimeVisibleorInvisibleAnnotationsAttribute.Annotation[] annotations = new RuntimeVisibleorInvisibleAnnotationsAttribute.Annotation[0];
    RuntimeVisibleorInvisibleAnnotationsAttribute attribute = new RuntimeVisibleorInvisibleAnnotationsAttribute(attributeName, annotations);
    ClassFileEntry[] result = attribute.getNestedClassFileEntries();
    assert(result.length == 1);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_Iiay0_ahuM0() {
    CPUTF8 name = new CPUTF8("name", 0);
    RuntimeVisibleorInvisibleAnnotationsAttribute.Annotation[] annotations = new RuntimeVisibleorInvisibleAnnotationsAttribute.Annotation[0];
    RuntimeVisibleorInvisibleAnnotationsAttribute attribute = new RuntimeVisibleorInvisibleAnnotationsAttribute(name, annotations);
    int length = attribute.getLength();
    assertEquals(2, length);
}
}