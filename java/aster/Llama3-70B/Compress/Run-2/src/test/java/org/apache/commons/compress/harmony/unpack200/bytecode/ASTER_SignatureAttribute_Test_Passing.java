/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SignatureAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_YDzN0() throws Exception {
    CPUTF8 cpuTF8 = new CPUTF8("utf8");
    SignatureAttribute signatureAttribute = new SignatureAttribute(cpuTF8);
    assertEquals("Signature: " + cpuTF8.toString(), signatureAttribute.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries_ZjZL0_1() throws Exception {
    CPUTF8 cpuTF8 = new CPUTF8("utf8");
    SignatureAttribute signatureAttribute = new SignatureAttribute(cpuTF8);
    ClassFileEntry[] result = signatureAttribute.getNestedClassFileEntries();
    assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNestedClassFileEntries_ZjZL0_2() throws Exception {
    CPUTF8 cpuTF8 = new CPUTF8("utf8");
    SignatureAttribute signatureAttribute = new SignatureAttribute(cpuTF8);
    ClassFileEntry[] result = signatureAttribute.getNestedClassFileEntries();
    assertEquals(2, result.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_dQHm0() throws Exception {
    CPUTF8 cpuTF8 = new CPUTF8("utf8");
    SignatureAttribute signatureAttribute = new SignatureAttribute(cpuTF8);
    int length = signatureAttribute.getLength();
    assert length == 2;
}
}