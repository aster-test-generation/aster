/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.zstandard;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ZstdCompressorOutputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_dIFz0_fdQi0_1_fid2() throws IOException {
    java.io.ByteArrayOutputStream outStream = new java.io.ByteArrayOutputStream();
    ZstdCompressorOutputStream zstdCompressorOutputStream = new ZstdCompressorOutputStream(outStream);
    byte[] buf = new byte[10];
    zstdCompressorOutputStream.write(buf, 0, 5);
    zstdCompressorOutputStream.close();
    assertEquals(0, outStream.toString().getBytes().length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_dIFz0_fdQi0_2() throws IOException {
    java.io.ByteArrayOutputStream outStream = new java.io.ByteArrayOutputStream();
    ZstdCompressorOutputStream zstdCompressorOutputStream = new ZstdCompressorOutputStream(outStream);
    byte[] buf = new byte[10];
    zstdCompressorOutputStream.write(buf, 0, 5);
    zstdCompressorOutputStream.close();
    assertEquals(5, outStream.toString().getBytes().length);}
}