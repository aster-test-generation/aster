/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import java.io.ByteArrayInputStream;
import java.io.OutputStream;
import java.util.Map;
import org.apache.commons.compress.harmony.pack200.AttributeDefinitionBands.AttributeDefinition;
import org.objectweb.asm.Label;
import java.util.Map;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NewAttributeBands_Test_Passing {
@Mock
    private AttributeDefinition def;
@Mock
private boolean usedAtLeastOnce;
@Mock
    private ByteArrayInputStream stream;
@Mock
    private IntList bciRenumbering;
@Mock
    private Map<Label, Integer> labelsToOffsets;
@Mock
    private OutputStream outputStream;
private int[] backwardsCallCounts = {1, 2, 3};
}