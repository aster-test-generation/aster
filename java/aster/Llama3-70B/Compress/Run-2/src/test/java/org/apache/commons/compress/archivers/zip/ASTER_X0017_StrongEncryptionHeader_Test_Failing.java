/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_X0017_StrongEncryptionHeader_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_mzWs0() {
    X0017_StrongEncryptionHeader x0017_StrongEncryptionHeader = new X0017_StrongEncryptionHeader();
    byte[] data = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        x0017_StrongEncryptionHeader.parseFromCentralDirectoryData(data, offset, length);
    } catch (ZipException e) {
        Assertions.fail("ZipException should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_pEJc0() {
    X0017_StrongEncryptionHeader x0017_StrongEncryptionHeader = new X0017_StrongEncryptionHeader();
    byte[] data = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        x0017_StrongEncryptionHeader.parseFromLocalFileData(data, offset, length);
    } catch (ZipException e) {
        assert false;
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_mzWs0_fid1() {
    X0017_StrongEncryptionHeader x0017_StrongEncryptionHeader = new X0017_StrongEncryptionHeader();
    byte[] data = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        x0017_StrongEncryptionHeader.parseFromCentralDirectoryData(data, offset, length);
        Assertions.assertTrue(true);
    } catch (ZipException e) {
        Assertions.fail("ZipException was thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_pEJc0_fid1() {
    X0017_StrongEncryptionHeader x0017_StrongEncryptionHeader = new X0017_StrongEncryptionHeader();
    byte[] data = new byte[10];
    int offset = 0;
    int length = 10;
    try {
        x0017_StrongEncryptionHeader.parseFromLocalFileData(data, offset, length);
        assertTrue(true); // No exception thrown
    } catch (ZipException e) {
        fail("ZipException was thrown");
    }
    assertEquals(0, x0017_StrongEncryptionHeader.getRecordCount());
}
}