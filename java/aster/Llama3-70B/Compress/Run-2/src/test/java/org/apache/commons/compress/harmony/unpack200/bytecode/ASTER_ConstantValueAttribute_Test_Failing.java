/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ConstantValueAttribute_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_withNullEntry_XBWd1() {
    ByteCode entry = new ByteCode(0);
    ConstantValueAttribute attribute = new ConstantValueAttribute(entry);
    int expected = 31 * (31 * attribute.getClass().hashCode() + entry.hashCode());
    assert expected == attribute.hashCode();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_withNonNullEntry_VcWt0_fid2() {
    ByteCode entry = new ByteCode(1);
    ConstantValueAttribute attribute = new ConstantValueAttribute(entry);
    int expected = 31 * attribute.getClass().hashCode() + entry.hashCode();
    assert expected == attribute.hashCode();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_withNullEntry_XBWd1_fid2() {
    ConstantValueAttribute attribute = new ConstantValueAttribute(null);
    int expected = 31 * attribute.getClass().hashCode();
    assert expected == attribute.hashCode();
}
}