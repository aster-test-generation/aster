/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AsiExtraField_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLinkedFile_fNjH0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    String result = asiExtraField.getLinkedFile();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryData_byVB0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] result = asiExtraField.getCentralDirectoryData();
    byte[] expected = asiExtraField.getLocalFileDataData();
    assertArrayEquals(expected, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_YRLj0_1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort headerId = asiExtraField.getHeaderId();
    assertNotNull(headerId);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_YRLj0_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort headerId = asiExtraField.getHeaderId();
    assertEquals(headerId.getValue(), asiExtraField.getHeaderId().getValue());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetGroupId_BtTI0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int groupId = asiExtraField.getGroupId();
    assertEquals(0, groupId);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetMode_WCfX0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setMode(1);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCentralDirectoryLength_oVpT0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort expected = asiExtraField.getLocalFileDataLength();
    ZipShort actual = asiExtraField.getCentralDirectoryLength();
    assertArrayEquals(expected.getBytes(), actual.getBytes());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetUserId_PqjC0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int expected = 0; // default value of uid
    int actual = asiExtraField.getUserId();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataData_wkTR0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setMode((short) 1);
    asiExtraField.setLinkedFile("linkedFile");
    asiExtraField.setUserId((short) 1);
    asiExtraField.setGroupId((short) 1);
    byte[] result = asiExtraField.getLocalFileDataData();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetGroupId_VkbP0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setGroupId(10);
    assertEquals(10, asiExtraField.getGroupId());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLink_true_wVRl0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setLinkedFile("someFile");
    assertTrue(asiExtraField.isLink());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLink_false_KuGl1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.setLinkedFile("");
    assertFalse(asiExtraField.isLink());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMode_DLIV0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int result = asiExtraField.getMode();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClone_ARuE0_1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    AsiExtraField cloned = (AsiExtraField) asiExtraField.clone();
    assertNotNull(cloned);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClone_ARuE0_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    AsiExtraField cloned = (AsiExtraField) asiExtraField.clone();
    assertNotSame(asiExtraField, cloned);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClone_ARuE0_3() {
    AsiExtraField asiExtraField = new AsiExtraField();
    AsiExtraField cloned = (AsiExtraField) asiExtraField.clone();
    assertEquals(asiExtraField.getClass(), cloned.getClass());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsDirectory_true_TttU0_SZUc0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    AsiExtraField clonedAsiExtraField = (AsiExtraField) asiExtraField.clone();
    assertTrue(clonedAsiExtraField instanceof AsiExtraField);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsDirectory_false_dirFlagFalse_bqIA1_MxXA0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    asiExtraField.clone(); // This is the only method available in AsiExtraField class
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClone_jgwX0_1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    AsiExtraField clonedAsiExtraField = (AsiExtraField) asiExtraField.clone();
    assertNotNull(clonedAsiExtraField);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClone_jgwX0_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    AsiExtraField clonedAsiExtraField = (AsiExtraField) asiExtraField.clone();
    assertNotSame(asiExtraField, clonedAsiExtraField);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_MinSize_zHPY0_nBCJ0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] data = new byte[4]; 
    try {
        asiExtraField.parseFromLocalFileData(data, 0, data.length);
        assert false;
    } catch (ZipException e) {
        assert true;
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_BadChecksum_rDtC1_LTgU0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] data = new byte[5]; 
    data[0] = 1;
    data[1] = 2;
    data[2] = 3;
    data[3] = 4;
    try {
        asiExtraField.parseFromLocalFileData(data, 0, data.length);
        assert false;
    } catch (ZipException e) {
        assert true;
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromLocalFileData_BadLinkArrayLength_jNUe2_YKXi0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] data = new byte[28]; 
    data[0] = 1;
    data[1] = 2;
    data[2] = 3;
    data[3] = 4;
    data[6] = 1;
    data[7] = 2;
    data[8] = 3;
    data[9] = 4;
    data[10] = (byte) 0xFF;
    try {
        asiExtraField.parseFromLocalFileData(data, 0, data.length);
        assert false;
    } catch (ZipException e) {
        assert true;
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMode_FileFlag_rAgo32768_VNid32768() {
    AsiExtraField asiExtraField = new AsiExtraField();
    int result = asiExtraField.getMode(32768);
    assertEquals(32768, result); 
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClone_mYsO0_LRDh0_1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    AsiExtraField clonedAsiExtraField = (AsiExtraField) asiExtraField.clone();
    assertEquals(asiExtraField.getClass(), clonedAsiExtraField.getClass());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testParseFromCentralDirectoryData_CuJd0_uYYU0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    try {
        asiExtraField.parseFromCentralDirectoryData(buffer, 0, 10);
    } catch (java.util.zip.ZipException e) {
        assert true; // add this line to assert that the exception is caught
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHeaderId_YRLj0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort headerId = asiExtraField.getHeaderId();
    assertNotNull(headerId);
    assertEquals(headerId.getValue(), asiExtraField.getHeaderId().getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClone_ARuE0() {
    AsiExtraField asiExtraField = new AsiExtraField();
    AsiExtraField cloned = (AsiExtraField) asiExtraField.clone();
    assertNotNull(cloned);
    assertNotSame(asiExtraField, cloned);
    assertEquals(asiExtraField.getClass(), cloned.getClass());
}
}