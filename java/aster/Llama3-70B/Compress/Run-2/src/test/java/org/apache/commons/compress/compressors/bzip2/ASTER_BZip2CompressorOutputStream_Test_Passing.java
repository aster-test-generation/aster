/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.bzip2;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BZip2CompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testChooseBlockSize_withPositiveInputLength_ydDL0() throws Exception {
    int result = BZip2CompressorOutputStream.chooseBlockSize(264000);
    assertEquals(3, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testChooseBlockSize_withZeroInputLength_kFgk1() throws Exception {
    int result = BZip2CompressorOutputStream.chooseBlockSize(0);
    assertEquals(BZip2CompressorOutputStream.MAX_BLOCKSIZE, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
        public void close_kFQO4() throws IOException {
            throw new IOException("Test exception");
        }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFlush_withNullOutputStream_FwUf1() throws IOException {
    BZip2CompressorOutputStream compressorOutputStream = new BZip2CompressorOutputStream(null);
    compressorOutputStream.flush();
    assertTrue(true); // no exception thrown
}
}