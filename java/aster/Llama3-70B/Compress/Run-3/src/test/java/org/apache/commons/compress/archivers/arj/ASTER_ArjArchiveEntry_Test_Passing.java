/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.arj;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ArjArchiveEntry_Test_Passing {
    private LocalFileHeader localFileHeader;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameObject_XiEl0() {
    ArjArchiveEntry entry = new ArjArchiveEntry();
    assert(entry.equals(entry));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_NullObject_ANZF1() {
    ArjArchiveEntry entry = new ArjArchiveEntry();
    assert(!entry.equals(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentClass_JDsC2() {
    ArjArchiveEntry entry = new ArjArchiveEntry();
    Object obj = new Object();
    assert(!entry.equals(obj));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMode_CTwe0() {
    ArjArchiveEntry arjArchiveEntry = new ArjArchiveEntry();
    LocalFileHeader localFileHeader = new LocalFileHeader();
    localFileHeader.fileAccessMode = 1; // set some mode
    try {
        java.lang.reflect.Field field = arjArchiveEntry.getClass().getDeclaredField("localFileHeader");
        field.setAccessible(true);
        field.set(arjArchiveEntry, localFileHeader);
    } catch (Exception e) {
    }
    assertEquals(1, arjArchiveEntry.getMode());
}
}