/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import java.io.DataOutputStream;
import java.util.ArrayList;
import java.util.List;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_NewAttribute_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetStartPCs_HMis0() {
    CPUTF8 attributeName = new CPUTF8("attributeName");
    NewAttribute newAttribute = new NewAttribute(attributeName, 0);
    int[] startPCs = newAttribute.getStartPCs();
    assertArrayEquals(null, startPCs);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLayoutIndex_uVsx0() {
    CPUTF8 attributeName = new CPUTF8("attributeName");
    NewAttribute newAttribute = new NewAttribute(attributeName, 10);
    assertEquals(10, newAttribute.getLayoutIndex());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_EmptyList_vocm0() {
    CPUTF8 attributeName = new CPUTF8("attributeName");
    NewAttribute newAttribute = new NewAttribute(attributeName, 0);
    assertEquals(0, newAttribute.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRenumber5_uJRL4() {
    NewAttribute newAttribute = new NewAttribute(new CPUTF8("attributeName", 1), 1);
    List<Integer> byteCodeOffsets = null;
    try {
        newAttribute.renumber(byteCodeOffsets);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRenumber6_waZG5() {
    NewAttribute newAttribute = new NewAttribute(new CPUTF8("attributeName", 1), 1);
    List<Integer> byteCodeOffsets = Arrays.asList(1, 2, null, 4, 5);
    try {
        newAttribute.renumber(byteCodeOffsets);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_mvdo0_wGFB0() {
    CPUTF8 attributeName = new CPUTF8("testString", 0);
    NewAttribute newAttribute = new NewAttribute(attributeName, 1);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWriteBody5_MmQO4_CGQe0() {
    CPUTF8 attributeName = new CPUTF8("attributeName");
    NewAttribute newAttribute = new NewAttribute(attributeName, 1);
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    java.io.DataOutputStream dos = new java.io.DataOutputStream(bos);
    newAttribute.addBCOffset(8, (int) Long.MAX_VALUE);
    assertEquals(8, bos.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLength_NonEmptyList_MYcj1_Ivwr0() {
    CPUTF8 attributeName = new CPUTF8("attributeName", 0);
    NewAttribute newAttribute = new NewAttribute(attributeName, 0);
    newAttribute.addBCOffset(1, 1);
    newAttribute.addBCOffset(2, 2);
    newAttribute.addBCOffset(3, 3);
    assertEquals(6, newAttribute.getLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRenumber2_cGdL1_GyZV0() {
    NewAttribute newAttribute = new NewAttribute(new CPUTF8("attributeName", 1), 1);
    List<Integer> byteCodeOffsets = Arrays.asList(1, 2, 3, 4, 5);
    newAttribute.addBCOffset(1, 1);
    newAttribute.addBCOffset(2, 2);
    newAttribute.addBCOffset(3, 3);
    newAttribute.addBCOffset(4, 4);
    newAttribute.addBCOffset(5, 5);
    newAttribute.renumber(byteCodeOffsets);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRenumber8_Fbcp7_qwif0_1() {
    NewAttribute newAttribute = new NewAttribute(new CPUTF8("attributeName", 1), 1);
    List<Integer> byteCodeOffsets = Arrays.asList(1, 2, 3, 4, 5);
    newAttribute.addBCOffset(1, 1);
    newAttribute.addBCOffset(2, 2);
    newAttribute.addBCOffset(3, 3);
    newAttribute.addBCOffset(4, 4);
    newAttribute.addBCOffset(5, 5);
    newAttribute.renumber(byteCodeOffsets);
    newAttribute.renumber(new ArrayList<>());
    assertEquals(true, true); }
}