/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.gzip;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_GzipParameters_Test_Passing {
    private String fileName;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetOperatingSystem_dasX0() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setOperatingSystem(1);
    assertEquals(1, gzipParameters.getOperatingSystem());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFileName_rvoJ0() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setFileName("testFile");
    assertEquals("testFile", gzipParameters.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetModificationTime_OZoB0() {
    GzipParameters gzipParameters = new GzipParameters();
    long modificationTime = 1643723400L;
    gzipParameters.setModificationTime(modificationTime);
    assertEquals(modificationTime, gzipParameters.getModificationTime());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetDeflateStrategy_HXTD0() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setDeflateStrategy(1);
    assertEquals(1, gzipParameters.getDeflateStrategy());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFilename_ghvf0() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setFilename("testFile");
    assertEquals("testFile", gzipParameters.getFileName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFileName_UJDC0() {
    GzipParameters gzipParameters = new GzipParameters();
    String fileName = gzipParameters.getFileName();
    assertNull(fileName);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFilename_TKoM0() {
    GzipParameters gzipParameters = new GzipParameters();
    String filename = gzipParameters.getFilename();
    assertNull(filename);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOperatingSystem_IqQC0() {
    GzipParameters gzipParameters = new GzipParameters();
    int result = gzipParameters.getOperatingSystem();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetDeflateStrategy_azYf0() {
    GzipParameters gzipParameters = new GzipParameters();
    int result = gzipParameters.getDeflateStrategy();
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCompressionLevel_valid_Yyxf0() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setCompressionLevel(5);
    assertEquals(5, gzipParameters.getCompressionLevel());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetComment_Qnjr0() {
    GzipParameters gzipParameters = new GzipParameters();
    String comment = gzipParameters.getComment();
    assertNull(comment);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetBufferSizeValid_NqFb0() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setBufferSize(1024);
    assertEquals(1024, gzipParameters.getBufferSize());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetComment_wpZV0() {
    GzipParameters gzipParameters = new GzipParameters();
    gzipParameters.setComment("test comment");
    assertEquals("test comment", gzipParameters.getComment());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompressionLevel_tKdP0_CFXy0() {
    GzipParameters gzipParameters = new GzipParameters();
}
}