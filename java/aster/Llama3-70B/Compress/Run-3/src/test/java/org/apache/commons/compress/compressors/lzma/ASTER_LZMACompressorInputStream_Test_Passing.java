/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.lzma;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LZMACompressorInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesNullSignature_syty0() {
    boolean result = LZMACompressorInputStream.matches(null, 3);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesLengthLessThan3_zahB1() {
    byte[] signature = new byte[3];
    boolean result = LZMACompressorInputStream.matches(signature, 2);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignatureNotMatching_PLwb2() {
    byte[] signature = new byte[3];
    signature[0] = 0x5d;
    signature[1] = 1;
    signature[2] = 0;
    boolean result = LZMACompressorInputStream.matches(signature, 3);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignatureMatching_kTcb3() {
    byte[] signature = new byte[3];
    signature[0] = 0x5d;
    signature[1] = 0;
    signature[2] = 0;
    boolean result = LZMACompressorInputStream.matches(signature, 3);
    assert result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatchesSignatureOkButLengthNotOk_cKvX5() {
    byte[] signature = new byte[3];
    signature[0] = 0x5d;
    signature[1] = 0;
    signature[2] = 0;
    boolean result = LZMACompressorInputStream.matches(signature, 2);
    assert !result;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSkip_yvgO0_reyz0() throws IOException {
    java.io.InputStream inputStream = new java.io.ByteArrayInputStream(new byte[1024]);
    LZMACompressorInputStream lzmaCompressorInputStream = new LZMACompressorInputStream(inputStream);
    long skipped = lzmaCompressorInputStream.skip(1024);
    assertEquals(1024, skipped);
    lzmaCompressorInputStream.close();
}
}