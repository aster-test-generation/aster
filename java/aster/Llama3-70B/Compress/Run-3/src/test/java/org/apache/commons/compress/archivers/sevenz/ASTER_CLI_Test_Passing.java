/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import java.io.File;
import java.io.IOException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CLI_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_withOneArgument_hdut1() throws Exception {
    String[] args = new String[1];
    args[0] = "testFile.txt";
    CLI.main(args);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_withTwoArguments_LISTMode_LYCd2() throws Exception {
    String[] args = new String[2];
    args[0] = "testFile.txt";
    args[1] = "LIST";
    CLI.main(args);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_withTwoArguments_EXTRACTMode_XQQm3() throws Exception {
    String[] args = new String[2];
    args[0] = "testFile.txt";
    args[1] = "EXTRACT";
    CLI.main(args);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_withInvalidFile_AfBT4() throws Exception {
    String[] args = new String[2];
    args[0] = "nonExistingFile.txt";
    args[1] = "LIST";
    CLI.main(args);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_withDirectory_OtYn5() throws Exception {
    String[] args = new String[2];
    args[0] = "testDirectory";
    args[1] = "LIST";
    CLI.main(args);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_withNoArguments_zliG0() throws Exception {
    String[] args = new String[0];
    CLI.main(args);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_InvalidFile_zyrK2_BoWW1() throws Exception {
    String[] args = new String[] {"non-existent-file"};
    CLI.main(args);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_InvalidArchive_xbDR4_kVUI0() throws Exception {
    String[] args = new String[] {"invalid-archive"};
    File file = new File("invalid-archive");
    try {
        file.createNewFile(); // create a new file
    } catch (IOException e) {
    }
    try {
        CLI.main(args);
    } catch (Exception e) {
    }
    file.delete(); // delete the file
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMain_ValidArchive_ikKK5_opUq0() throws Exception {
    String[] args = new String[] {"valid-archive"};
    File file = new File("valid-archive");
    try {
        file.createNewFile(); // create a new file
    } catch (IOException e) {
    }
    CLI.main(args);
    file.delete(); // delete the file
}
}