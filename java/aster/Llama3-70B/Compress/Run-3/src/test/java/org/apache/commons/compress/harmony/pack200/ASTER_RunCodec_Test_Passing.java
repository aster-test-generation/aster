/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import java.io.IOException;
import java.io.InputStream;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RunCodec_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDecode_Rmmb0_BKtB0() throws IOException, Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    RunCodec runCodec = new RunCodec(1, aCodec, bCodec);
    java.io.InputStream in = new java.io.ByteArrayInputStream(new byte[0]);
    int result = runCodec.decode(in);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBCodec_QroE0_sRti0() {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3, 4);
    RunCodec runCodec = null;
    try {
        runCodec = new RunCodec(1, aCodec, bCodec);
        Codec codec = runCodec.getBCodec();
        assertNotNull(codec);
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetACodec_rFEL0_VYQP0() {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3);
    RunCodec runCodec = null;
    try {
        runCodec = new RunCodec(1, aCodec, bCodec);
        assertNotNull(runCodec);
        Codec codec = runCodec.getACodec();
        assertNotNull(codec);
    } catch (Pack200Exception e) {
        fail("Pack200Exception should not be thrown");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_EROu0_RVSa0() throws Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(3, 4, 5);
    RunCodec runCodec = new RunCodec(6, aCodec, bCodec);
    assertEquals("RunCodec[k=" + 6 + ";aCodec=" + aCodec.toString() + ";bCodec=" + bCodec.toString() + "]", runCodec.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetK_NBWN0_OeHq0() throws Pack200Exception {
    BHSDCodec aCodec = new BHSDCodec(1, 2);
    BHSDCodec bCodec = new BHSDCodec(1, 2, 3, 4);
    RunCodec runCodec = new RunCodec(5, aCodec, bCodec);
    assertEquals(5, runCodec.getK());
}
}