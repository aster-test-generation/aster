/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.lz4;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FramedLZ4CompressorInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMatches_LongerMatchingSignature_True_kvXI2_STpo0() {
    byte[] signature = new byte[FramedLZ4CompressorInputStream.LZ4_SIGNATURE.length * 2];
    System.arraycopy(FramedLZ4CompressorInputStream.LZ4_SIGNATURE, 0, signature, 0, FramedLZ4CompressorInputStream.LZ4_SIGNATURE.length);
    assertTrue(FramedLZ4CompressorInputStream.matches(signature, signature.length));
}
}