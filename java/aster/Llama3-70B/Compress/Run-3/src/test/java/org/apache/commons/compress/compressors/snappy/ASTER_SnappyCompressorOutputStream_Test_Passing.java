/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;
import java.io.IOException;
import java.io.OutputStream;
import org.apache.commons.compress.compressors.lz77support.Parameters;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SnappyCompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateParameterBuilder_wfnQ0_1() {
    Parameters.Builder builder = SnappyCompressorOutputStream.createParameterBuilder(1024);
    Parameters params = builder.build();
    assertEquals(3, params.getMinBackReferenceLength());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateParameterBuilder_wfnQ0_2() {
    Parameters.Builder builder = SnappyCompressorOutputStream.createParameterBuilder(1024);
    Parameters params = builder.build();
    assertEquals(65535, params.getMaxBackReferenceLength());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateParameterBuilder_wfnQ0_3() {
    Parameters.Builder builder = SnappyCompressorOutputStream.createParameterBuilder(1024);
    Parameters params = builder.build();
    assertEquals(1024, params.getMaxOffset());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateParameterBuilder_wfnQ0_4() {
    Parameters.Builder builder = SnappyCompressorOutputStream.createParameterBuilder(1024);
    Parameters params = builder.build();
    assertEquals(1024, params.getMaxLiteralLength());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testWrite_MOGk0_Klro0() throws IOException {
    java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();
    SnappyCompressorOutputStream snappyCompressorOutputStream = new SnappyCompressorOutputStream(os, 10);
    byte[] data = new byte[5];
    snappyCompressorOutputStream.write(data, 0, 5);
    snappyCompressorOutputStream.close();
    assertEquals(5, os.toByteArray().length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClose_AQbo0_SvTX0() throws IOException {
    java.io.OutputStream os = new java.io.ByteArrayOutputStream();
    SnappyCompressorOutputStream scos = new SnappyCompressorOutputStream(os, 1024);
    scos.close();
    assertTrue(os instanceof java.io.Closeable);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateParameterBuilder_wfnQ0() {
    Parameters.Builder builder = SnappyCompressorOutputStream.createParameterBuilder(1024);
    Parameters params = builder.build();
    assertEquals(3, params.getMinBackReferenceLength());
    assertEquals(65535, params.getMaxBackReferenceLength());
    assertEquals(1024, params.getMaxOffset());
    assertEquals(1024, params.getMaxLiteralLength());
}
}