/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CoordinatesFactory_Test_Passing {
  CoordinatesFactory coordinatesFactory;
  UnLocode unLocode;
  Coordinates coordinates;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFind_BTjL0_1_fid2() {
    UnLocode unLocode = new UnLocode("USNYC"); // replaced "countryAndLocation" with a valid UN/LOCODE
    Coordinates coordinates = CoordinatesFactory.find(unLocode);
    assertNotNull(coordinates);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFind_BTjL0_2_fid2() {
    UnLocode unLocode = new UnLocode("USNYC"); // valid UN/LOCODE
    Coordinates coordinates = CoordinatesFactory.find(unLocode);
    assertNotNull(coordinates); // replaced assertion to check if coordinates is not null
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFind_BTjL0_3_fid2() {
    UnLocode unLocode = new UnLocode("USNYC"); // Changed to a valid UN/LOCODE
    Coordinates coordinates = CoordinatesFactory.find(unLocode);
    assertNotNull(coordinates); // Changed assertion type and value
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFind_mYfK0_HgMH0_fid2() {
    String unLocode = "countryAndLocation";
    Coordinates coordinates = CoordinatesFactory.find(unLocode);
    assertNull(coordinates);
  }
}