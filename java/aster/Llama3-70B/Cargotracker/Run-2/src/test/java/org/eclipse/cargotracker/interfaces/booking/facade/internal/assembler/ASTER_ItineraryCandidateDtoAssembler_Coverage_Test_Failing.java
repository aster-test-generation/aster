/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.LocationRepository;
import org.eclipse.cargotracker.domain.model.voyage.VoyageRepository;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.RouteCandidate;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_ItineraryCandidateDtoAssembler_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFromDTO_VoyageNumberCreation_exeq0_SBRy0() {
    ItineraryCandidateDtoAssembler assembler = new ItineraryCandidateDtoAssembler();
    RouteCandidate routeCandidateDTO = org.mockito.Mockito.mock(RouteCandidate.class);
    List<org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg> legs = new ArrayList<>();
    legs.add(org.mockito.Mockito.mock(org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg.class));
    org.mockito.Mockito.when(routeCandidateDTO.getLegs()).thenReturn(legs);
    org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg legDTO = legs.get(0);
    String voyageNumber = "Voyage123";
    org.mockito.Mockito.when(legDTO.getVoyageNumber()).thenReturn(voyageNumber);
    assembler.fromDTO(routeCandidateDTO, org.mockito.Mockito.mock(VoyageRepository.class), org.mockito.Mockito.mock(LocationRepository.class));
    org.mockito.Mockito.verify(legDTO, org.mockito.Mockito.times(1)).getVoyageNumber();
  }
}