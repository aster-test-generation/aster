/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.eclipse.cargotracker.domain.model.handling.HandlingHistory;
import org.eclipse.cargotracker.domain.model.voyage.Voyage;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_Delivery_Test_Passing {
  private HandlingEvent lastEvent;
  private RouteSpecification routeSpecification;
  private Itinerary itinerary;
  private HandlingHistory handlingHistory;
  @Mock
  private HandlingActivity nextExpectedActivityMock;
  @Mock
  private HandlingEvent lastEventMock;
  @Mock
  private Itinerary itineraryMock;
  @Mock
  private RouteSpecification routeSpecificationMock;
  private Voyage currentVoyage;
  private LocalDateTime eta;
  private LocalDateTime calculatedAt;
  private boolean isUnloadedAtDestination;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetLastEvent_QuIl0_Kcxv0() {
    Delivery delivery = new Delivery();
    HandlingEvent lastEvent = new HandlingEvent();
    delivery.setLastEvent(lastEvent);
    assertEquals(null, delivery.getTransportStatus());
  }
}