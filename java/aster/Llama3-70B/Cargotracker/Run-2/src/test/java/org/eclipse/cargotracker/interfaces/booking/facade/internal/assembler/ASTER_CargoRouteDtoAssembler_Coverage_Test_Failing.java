/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoRouteDtoAssembler_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDto_WhenCargoHasNoItinerary_ReturnsCargoRouteWithEmptyLegs_Ardb1() {
    CargoRouteDtoAssembler assembler = new CargoRouteDtoAssembler();
    Cargo cargo = new Cargo();
    CargoRoute cargoRoute = assembler.toDto(cargo);
    assertNotNull(cargoRoute);
    assertEquals(0, cargoRoute.getLegs().size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDto_WhenCargoHasNoItinerary_ReturnsCargoRouteWithEmptyLegs_Ardb1_1() {
    CargoRouteDtoAssembler assembler = new CargoRouteDtoAssembler();
    Cargo cargo = new Cargo();
    CargoRoute cargoRoute = assembler.toDto(cargo);
    assertNotNull(cargoRoute);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToDto_WhenCargoHasNoItinerary_ReturnsCargoRouteWithEmptyLegs_Ardb1_2() {
    CargoRouteDtoAssembler assembler = new CargoRouteDtoAssembler();
    Cargo cargo = new Cargo();
    CargoRoute cargoRoute = assembler.toDto(cargo);
    assertEquals(0, cargoRoute.getLegs().size());
  }
}