/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.dto;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoRoute_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTransportStatus_ggqL0() {
    Location origin = new Location("LOC1", "Origin");
    Location finalDestination = new Location("LOC2", "Final Destination");
    Location lastKnownLocation = new Location("LOC3", "Last Known Location");
    LocalDate arrivalDeadline = LocalDate.now();
    List<Leg> legs = new ArrayList<>();
    CargoRoute cargoRoute = new CargoRoute("TRK1", origin, finalDestination, arrivalDeadline, false, false, lastKnownLocation, "IN_TRANSIT", legs);
    assertEquals("IN_TRANSIT", cargoRoute.getTransportStatus());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLegs_IONL0() {
    Location origin = new Location("LOC1", "Origin");
    Location finalDestination = new Location("LOC2", "Final Destination");
    LocalDate arrivalDeadline = LocalDate.now();
    Location lastKnownLocation = new Location("LOC3", "Last Known Location");
    List<Leg> legs = new ArrayList<>();
    CargoRoute cargoRoute = new CargoRoute("TRK1", origin, finalDestination, arrivalDeadline, false, false, lastKnownLocation, "TRANS", legs);
    assertEquals(legs, cargoRoute.getLegs());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLastKnownLocationCode_UTYZ0() {
    Location location = new Location("LOC123", "Test Location");
    CargoRoute cargoRoute = new CargoRoute("TR123", location, location, LocalDate.now(), false, false, location, "In Transit", new ArrayList<>());
    assertEquals("LOC123", cargoRoute.getLastKnownLocationCode());
  }
}