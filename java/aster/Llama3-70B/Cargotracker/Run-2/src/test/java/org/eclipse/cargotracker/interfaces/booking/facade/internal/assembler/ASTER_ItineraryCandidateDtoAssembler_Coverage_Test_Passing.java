/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.LocationRepository;
import org.eclipse.cargotracker.domain.model.voyage.Voyage;
import org.eclipse.cargotracker.domain.model.voyage.VoyageNumber;
import org.eclipse.cargotracker.domain.model.voyage.VoyageRepository;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.RouteCandidate;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_ItineraryCandidateDtoAssembler_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFromDTO_VoyageRepositoryFind_gUbX1_mqEv0() {
    ItineraryCandidateDtoAssembler assembler = new ItineraryCandidateDtoAssembler();
    RouteCandidate routeCandidateDTO = mock(RouteCandidate.class);
    List<org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg> legs = new ArrayList<>();
    legs.add(mock(org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg.class));
    when(routeCandidateDTO.getLegs()).thenReturn(legs);
    org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg legDTO = legs.get(0);
    String voyageNumber = "Voyage123";
    when(legDTO.getVoyageNumber()).thenReturn(voyageNumber);
    VoyageNumber voyageNumberObject = new VoyageNumber(voyageNumber);
    VoyageRepository voyageRepository = mock(VoyageRepository.class);
    when(voyageRepository.find(voyageNumberObject)).thenReturn(mock(Voyage.class));
    assembler.fromDTO(routeCandidateDTO, voyageRepository, mock(LocationRepository.class));
    verify(voyageRepository, times(1)).find(voyageNumberObject);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFromDTO_VoyageNumberCreation_exeq0_SBRy0_fid3() {
    ItineraryCandidateDtoAssembler assembler = new ItineraryCandidateDtoAssembler();
    RouteCandidate routeCandidateDTO = mock(RouteCandidate.class);
    List<org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg> legs = new ArrayList<>();
    legs.add(mock(org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg.class));
    when(routeCandidateDTO.getLegs()).thenReturn(legs);
    org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg legDTO = legs.get(0);
    String voyageNumber = "Voyage123";
    when(legDTO.getVoyageNumber()).thenReturn(voyageNumber);
    assembler.fromDTO(routeCandidateDTO, mock(VoyageRepository.class), mock(LocationRepository.class));
    verify(legDTO, times(1)).getVoyageNumber();
  }
}