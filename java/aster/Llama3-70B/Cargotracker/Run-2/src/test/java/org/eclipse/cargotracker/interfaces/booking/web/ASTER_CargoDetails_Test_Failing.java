/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoDetails_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute);
    assertNotNull(cargoRoute.getTrackingId());
    assertNotNull(cargoRoute.getOrigin());
    assertNotNull(cargoRoute.getOriginCode());
    assertNotNull(cargoRoute.getOriginName());
    assertNotNull(cargoRoute.getFinalDestination());
    assertNotNull(cargoRoute.getFinalDestinationCode());
    assertNotNull(cargoRoute.getFinalDestinationName());
    assertNotNull(cargoRoute.getNextLocation());
    assertNotNull(cargoRoute.getLastKnownLocation());
    assertNotNull(cargoRoute.getLastKnownLocationCode());
    assertNotNull(cargoRoute.getLastKnownLocationName());
    assertNotNull(cargoRoute.getArrivalDeadline());
    assertNotNull(cargoRoute.getTransportStatus());
    assertNotNull(cargoRoute.getLegs());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_1() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_2() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_3() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_4() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getOriginCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_5() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_6() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getFinalDestination());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_7() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getFinalDestinationCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_8() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getFinalDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_9() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getNextLocation());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_10() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getLastKnownLocation());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_11() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getLastKnownLocationCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_12() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getLastKnownLocationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_13() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_14() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getTransportStatus());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_RmmJ0_15() {
    CargoDetails cargoDetails = new CargoDetails();
    CargoRoute cargoRoute = cargoDetails.getCargo();
    assertNotNull(cargoRoute.getLegs());
  }
}