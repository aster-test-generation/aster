/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.domain.model.location.LocationRepository;
import org.eclipse.cargotracker.domain.model.voyage.VoyageRepository;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.RouteCandidate;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ItineraryCandidateDtoAssembler_Test_Failing {
  @Mock
  private LocationDtoAssembler locationDtoAssembler;
  @InjectMocks
  private ItineraryCandidateDtoAssembler itineraryCandidateDtoAssembler;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFromDTO_EmptyLegs_ByGE1_kgJM0_fid3() {
    ItineraryCandidateDtoAssembler assembler = new ItineraryCandidateDtoAssembler();
    RouteCandidate routeCandidateDTO = new RouteCandidate(new ArrayList<>());
    VoyageRepository voyageRepository = Mockito.mock(VoyageRepository.class);
    LocationRepository locationRepository = Mockito.mock(LocationRepository.class);
    Itinerary itinerary = assembler.fromDTO(routeCandidateDTO, voyageRepository, locationRepository);
    assertEquals(0, itinerary.getLegs().size());
  }
}