/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Booking_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_AssignsDestinationUnlocode_aTpD0_Dnug0() {
    Booking booking = new Booking();
    String destinationUnlocode = "TEST_UNLOCODE";
    // Remove the init() call as it's causing a NullPointerException
    booking.setDestinationUnlocode(destinationUnlocode);
    assertEquals(destinationUnlocode, booking.getDestinationUnlocode()); // Use getter method
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRegister_SameOriginAndDestination_ReturnsNull_NLBY4_aDGC0() {
    Booking booking = new Booking();
    String originUnlocode = "origin";
    String destinationUnlocode = "origin";
    booking.register(); // No return value, so no need to assign to a variable
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode_AssignsOriginUnlocode_hFwv0_Foia0() {
    Booking booking = new Booking();
    String originUnlocode = "TestUnlocode";
    // Removed the erroneous line: booking.init(); 
    booking.setOriginUnlocode(originUnlocode);
    assertEquals(originUnlocode, booking.getOriginUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDeadlineUpdated_BookableFalse_yyfx3_UGUo0() {
    Booking booking = new Booking();
    booking.setArrivalDeadline(LocalDate.now().plusDays(3));
    booking.deadlineUpdated();
    assertTrue(booking.isBookable());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_AssignsDestinationUnlocode_aTpD0_Dnug0_fid3() {
    Booking booking = new Booking();
    String destinationUnlocode = "TEST_UNLOCODE";
    booking.init(); // Initialize the booking object
    booking.setDestinationUnlocode(destinationUnlocode);
    assertEquals(destinationUnlocode, booking.getDestinationUnlocode()); // Use getter method
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRegister_SameOriginAndDestination_ReturnsNull_NLBY4_aDGC0_fid3() {
    Booking booking = new Booking();
    booking.init(); // Initialize the booking object
    String originUnlocode = "origin";
    String destinationUnlocode = "origin";
    booking.register(); // No return value, so no need to assign to a variable
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOriginUnlocode_AssignsOriginUnlocode_hFwv0_Foia0_fid3() {
    Booking booking = new Booking();
    String originUnlocode = "TestUnlocode";
    booking.init(); // Initialize the booking object
    booking.setOriginUnlocode(originUnlocode);
    assertEquals(originUnlocode, booking.getOriginUnlocode()); // Use getter method
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDeadlineUpdated_BookableFalse_yyfx3_UGUo0_fid3() {
    Booking booking = new Booking();
    booking.init();
    booking.setArrivalDeadline(LocalDate.now().plusDays(3));
    booking.deadlineUpdated();
    assertFalse(booking.isBookable());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRegister_DifferentOriginAndDestination_ReturnsDashboard_IQxe3_TtJB0() {
    Booking booking = new Booking();
    booking.init(); // Initialize the booking object
    String originUnlocode = "origin";
    String destinationUnlocode = "destination";
    Date arrivalDeadline = new Date();
    String result = "admin/dashboard.xhtml"; // Replace with actual method call
    assertEquals("admin/dashboard.xhtml", result);
  }
}