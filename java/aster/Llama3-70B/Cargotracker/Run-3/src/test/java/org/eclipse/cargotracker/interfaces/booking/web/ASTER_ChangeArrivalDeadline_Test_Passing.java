/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ChangeArrivalDeadline_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetTrackingId_DTlD0() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    changeArrivalDeadline.setTrackingId("12345");
    assertEquals("12345", changeArrivalDeadline.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetArrivalDeadline_KGJn0() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    LocalDate arrivalDeadline = LocalDate.of(2022, 12, 31);
    changeArrivalDeadline.setArrivalDeadline(arrivalDeadline);
    assertEquals(arrivalDeadline, changeArrivalDeadline.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_1() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_2() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_3() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_4() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getOriginCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_5() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_6() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getFinalDestination());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_7() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getFinalDestinationCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_8() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getFinalDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_9() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_10() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getLastKnownLocation());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_11() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getLastKnownLocationCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_12() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getLastKnownLocationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_13() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getNextLocation());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_14() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getTransportStatus());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_YwxL0_15() throws Exception {
    ChangeArrivalDeadline changeArrivalDeadline = new ChangeArrivalDeadline();
    CargoRoute cargoRoute = changeArrivalDeadline.getCargo();
    assertNotNull(cargoRoute.getLegs());
  }
}