/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.application.BookingService;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoStatus;
import org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler.CargoRouteDtoAssembler;
import org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler.LocationDtoAssembler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingServiceFacade_Coverage_Test_Failing {
  private LocationDtoAssembler locationDtoAssembler;
  private CargoRouteDtoAssembler cargoRouteDtoAssembler;
  private BookingService bookingService;
  private DefaultBookingServiceFacade facade;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLoadCargoForTracking_WithInvalidTrackingIdValue_ReturnsNull_OxqR1() {
    DefaultBookingServiceFacade facade = new DefaultBookingServiceFacade();
    String trackingIdValue = "invalid";
    CargoStatus result = facade.loadCargoForTracking(trackingIdValue);
    assertNull(result);
  }
}