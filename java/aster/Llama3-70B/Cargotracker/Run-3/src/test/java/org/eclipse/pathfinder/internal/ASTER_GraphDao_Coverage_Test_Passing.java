/**
 * Generated by Aster
 */
package org.eclipse.pathfinder.internal;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_GraphDao_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case1_nDaU1_BpIf0_1() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case1_nDaU1_BpIf0_2() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("CNHKG", result.get(0));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_1() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_4() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("AUMEL", result.get(1));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_5() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("SESTO", result.get(2));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_6() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("FIHEL", result.get(3));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_7() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("USCHI", result.get(4));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_8() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("JNTKO", result.get(5));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_9() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("DEHAM", result.get(6));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_10() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("CNSHA", result.get(7));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_11() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("NLRTM", result.get(8));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_12() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("SEGOT", result.get(9));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_13() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("CNHGH", result.get(10));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case2_Ibnr2_OxdL0_14() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("USNYC", result.get(11));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case3_kBsK3_OovI0_2() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals(13, result.size());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_case3_kBsK3_OovI0_15() {
    GraphDao graphDao = new GraphDao();
    List<String> result = graphDao.listLocations();
    assertEquals("USDAL", result.get(12));
  }
}