/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.voyage.Voyage;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Itinerary_Test_Passing {
  private Voyage voyage;
  private Cargo cargo;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetInitialDepartureLocation_EmptyLegs_RQQa0() throws Exception {
    Itinerary itinerary = new Itinerary();
    Location location = itinerary.getInitialDepartureLocation();
    assertEquals(Location.UNKNOWN, location);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFinalArrivalDate_withoutLegs_OWho1() throws Exception {
    Itinerary itinerary = new Itinerary();
    assertEquals(LocalDateTime.MAX, itinerary.getFinalArrivalDate());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFinalArrivalLocation_EmptyLegs_BgSI0() throws Exception {
    Itinerary itinerary = new Itinerary();
    assertEquals(Location.UNKNOWN, itinerary.getFinalArrivalLocation());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_SameObject_ReturnsTrue_auaI0() throws Exception {
    Itinerary itinerary = new Itinerary();
    assertTrue(itinerary.equals(itinerary));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_NullObject_ReturnsFalse_NnWY1() throws Exception {
    Itinerary itinerary = new Itinerary();
    assertFalse(itinerary.equals(null));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_DifferentClass_ReturnsFalse_IIZq2() throws Exception {
    Itinerary itinerary = new Itinerary();
    assertFalse(itinerary.equals(new Object()));
  }
}