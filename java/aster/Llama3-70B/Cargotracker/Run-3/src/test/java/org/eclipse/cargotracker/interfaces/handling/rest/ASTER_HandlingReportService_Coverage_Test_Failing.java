/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.rest;

import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HandlingReportService_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_CompletionTimeNotNull_LpqP0() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = new HandlingReport();
    report.setCompletionTime("2022-01-01T12:00:00");
    service.submitReport(report);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_VoyageNumberNotNull_wCGh1() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = new HandlingReport();
    report.setVoyageNumber("V123");
    service.submitReport(report);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_VoyageNumberNull_hfBE2() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = new HandlingReport();
    report.setVoyageNumber(null);
    service.submitReport(report);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_EventTypeNotNull_uwAU3() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = new HandlingReport();
    report.setEventType("LOAD");
    service.submitReport(report);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_UnLocodeNotNull_ktME5() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = new HandlingReport();
    report.setUnLocode("UN123");
    service.submitReport(report);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_TrackingIdNotNull_ThpK6() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = new HandlingReport();
    report.setTrackingId("TR123");
    service.submitReport(report);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingEventRegistrationAttempt_HwWq7() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = new HandlingReport();
    report.setCompletionTime("2022-01-01T12:00:00");
    report.setVoyageNumber("V123");
    report.setEventType("LOAD");
    report.setUnLocode("UN123");
    report.setTrackingId("TR123");
    service.submitReport(report);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_LocalDateTimeNow_Wcrv9() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = new HandlingReport();
    report.setCompletionTime("2022-01-01T12:00:00");
    report.setVoyageNumber("V123");
    report.setEventType("LOAD");
    report.setUnLocode("UN123");
    report.setTrackingId("TR123");
    service.submitReport(report);
    assertNotNull(LocalDateTime.now());
  }
}