/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.Location;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ChangeDestination_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_ZIFZ0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String trackingId = changeDestination.getTrackingId();
    assertNotNull(trackingId);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDestinationUnlocode_VbOW0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    String expected = "";
    String actual = changeDestination.getDestinationUnlocode();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetDestinationUnlocode_eJRl0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setDestinationUnlocode("UNLOCODE123");
    assertEquals("UNLOCODE123", changeDestination.getDestinationUnlocode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLocations_wVeH0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    List<Location> locations = changeDestination.getLocations();
    assertNotNull(locations);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetTrackingId_MnGl0() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    changeDestination.setTrackingId("12345");
    assertEquals("12345", changeDestination.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_1() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertNotNull(cargoRoute);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_2() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedFinalDestinationName", cargoRoute.getFinalDestinationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_3() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedFinalDestination", cargoRoute.getFinalDestination());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_4() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedTrackingId", cargoRoute.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_5() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedFinalDestinationCode", cargoRoute.getFinalDestinationCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_6() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedOriginCode", cargoRoute.getOriginCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_7() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedNextLocation", cargoRoute.getNextLocation());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_8() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedOriginName", cargoRoute.getOriginName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_9() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedOrigin", cargoRoute.getOrigin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_10() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedArrivalDeadline", cargoRoute.getArrivalDeadline());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_11() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedLastKnownLocationName", cargoRoute.getLastKnownLocationName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_12() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedLastKnownLocation", cargoRoute.getLastKnownLocation());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_13() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedTransportStatus", cargoRoute.getTransportStatus());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_14() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertNotNull(cargoRoute.getLegs());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCargo_VUdk0_15() throws Exception {
    ChangeDestination changeDestination = new ChangeDestination();
    CargoRoute cargoRoute = changeDestination.getCargo();
    assertEquals("expectedLastKnownLocationCode", cargoRoute.getLastKnownLocationCode());
  }
}