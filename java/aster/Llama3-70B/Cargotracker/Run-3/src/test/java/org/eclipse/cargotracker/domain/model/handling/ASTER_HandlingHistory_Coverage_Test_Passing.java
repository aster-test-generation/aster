/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.handling;

import java.util.Collections;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HandlingHistory_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMostRecentlyCompletedEvent_EmptyList_sInL0() {
    HandlingHistory handlingHistory = new HandlingHistory(Collections.emptyList());
    HandlingEvent event = handlingHistory.getMostRecentlyCompletedEvent();
    assertNull(event);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_EmptyHandlingEvents_ReturnsTrue_NEzQ3() {
    HandlingHistory handlingHistory1 = new HandlingHistory(Collections.emptyList());
    HandlingHistory handlingHistory2 = new HandlingHistory(Collections.emptyList());
    assertTrue(handlingHistory1.equals(handlingHistory2));
  }
}