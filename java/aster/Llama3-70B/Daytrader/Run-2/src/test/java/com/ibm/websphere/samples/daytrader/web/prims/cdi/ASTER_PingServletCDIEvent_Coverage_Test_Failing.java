/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletCDIEvent_Coverage_Test_Failing {
private PingServletCDIEvent pingServletCDIEvent;
private ServletConfig servletConfig;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_GetWriter_xNwz2_YfcJ0() throws IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter printWriter = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(printWriter);
    PingServletCDIEvent pingServletCDIEvent = new PingServletCDIEvent();
    pingServletCDIEvent.doGet(request, response);
    verify(response, times(1)).getWriter();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_WriteHtml_LtgO3_Hbhb0() throws IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter printWriter = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(printWriter);
    // Assuming PingServletCDIEvent is in the package com.ibm.websphere.samples.daytrader.web.prims.cdi
    com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent pingServletCDIEvent = new com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent();
    pingServletCDIEvent.doGet(request, response);
    verify(printWriter).write(contains("<html>"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_Close_kjwF8_rbmp0() throws IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter printWriter = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(printWriter);
    PingServletCDIEvent pingServletCDIEvent = new PingServletCDIEvent();
    pingServletCDIEvent.doGet(request, response);
    verify(printWriter, times(1)).flush();
    verify(printWriter, times(1)).close();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_HitCount_TuVU10_oaCj0() throws IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter printWriter = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(printWriter);
    PingServletCDIEvent pingServletCDIEvent = new PingServletCDIEvent();
    pingServletCDIEvent.doGet(request, response);
    verify(printWriter).write(contains("hitCount1: 0"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setup_hIqS0() throws javax.servlet.ServletException {
        pingServletCDIEvent = new PingServletCDIEvent();
        servletConfig = mock(ServletConfig.class);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_SuperInitCalled_JNpk1() throws ServletException {
        pingServletCDIEvent.init(servletConfig);
        verify(servletConfig, times(1)).getServletContext();
    }
}