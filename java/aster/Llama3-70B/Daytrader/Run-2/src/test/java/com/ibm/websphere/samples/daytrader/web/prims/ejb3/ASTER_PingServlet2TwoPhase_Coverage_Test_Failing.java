/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet2TwoPhase_Coverage_Test_Failing {
    private PingServlet2TwoPhase pingServlet2TwoPhase;
    private ServletConfig servletConfig;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetServletInfo_ybgc0() {
        PingServlet2TwoPhase pingServlet2TwoPhase = new PingServlet2TwoPhase();
        String expected = "web primitive, tests Servlet to Session to Entity EJB and JMS -- 2-phase commit path";
        String actual = pingServlet2TwoPhase.getServletInfo();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_GbWE0() throws ServletException, IOException {
        PingServlet2TwoPhase servlet = new PingServlet2TwoPhase();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        servlet.doPost(req, res);
        verify(servlet).doGet(req, res);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setup_tinn0() throws javax.servlet.ServletException {
        pingServlet2TwoPhase = new PingServlet2TwoPhase();
        servletConfig = mock(ServletConfig.class);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_SuperInitCalled_FNcd1() throws ServletException {
        pingServlet2TwoPhase.init(servletConfig);
        verify(servletConfig).getServletContext();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_SetContentType_exzr2() throws IOException, ServletException {
        PingServlet2TwoPhase servlet = new PingServlet2TwoPhase();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        servlet.doGet(req, res);
        verify(res).setContentType("text/html");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_GetWriter_HIjE3() throws IOException, ServletException {
        PingServlet2TwoPhase servlet = new PingServlet2TwoPhase();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        servlet.doGet(req, res);
        verify(res).getWriter();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_AppendOutput_Knud7() throws IOException, ServletException {
        PingServlet2TwoPhase servlet = new PingServlet2TwoPhase();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        servlet.doGet(req, res);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
void testGetServletInfo_ybgc0_fid1() {
    try {
        PingServlet2TwoPhase pingServlet2TwoPhase = (PingServlet2TwoPhase) Class.forName("com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase").newInstance();
        String actual = pingServlet2TwoPhase.getServletInfo();
        assertNotNull(actual);
    } catch (Exception e) {
        fail("Exception occurred: " + e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_WhenDoGetThrowsException_Exre1() throws ServletException, IOException {
        PingServlet2TwoPhase servlet = new PingServlet2TwoPhase();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        doThrow(new ServletException()).when(servlet).doGet(req, res);
        servlet.doPost(req, res);
    }
}