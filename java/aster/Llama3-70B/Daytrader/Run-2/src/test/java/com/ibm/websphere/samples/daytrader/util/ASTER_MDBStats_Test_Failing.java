/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_MDBStats_Test_Failing {
@Test
@Timeout(value =13, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_FirstCall_rrWm0_lIzD0_1() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type",1300, 200);
    assertEquals(1, timerStat.getCount());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_FirstCall_rrWm0_lIzD0_2() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 100, 200);
    assertEquals(100, timerStat.getMin(), 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_FirstCall_rrWm0_lIzD0_3() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 100, 200);
    assertEquals(100, timerStat.getMax(), 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_FirstCall_rrWm0_lIzD0_4() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 100, 200);
    assertEquals(100, timerStat.getTotalTime(), 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_UpdateMax_TjwS1_BqlC0_1() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100,2200);
    TimerStat timerStat = mdbStats.addTiming("type", 50,2250);
    assertEquals(2, timerStat.getCount());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_UpdateMax_TjwS1_BqlC0_2() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    TimerStat timerStat = mdbStats.addTiming("type", 50, 250);
    assertEquals(250, timerStat.getMax(), 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_UpdateMin_CwKO2_UIzB0_1() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100,1800);
    TimerStat timerStat = mdbStats.addTiming("type", 150, 180);
    assertEquals(2, timerStat.getCount());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_UpdateMin_CwKO2_UIzB0_2() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    TimerStat timerStat = mdbStats.addTiming("type", 150, 180);
    assertEquals(80, timerStat.getMin(), 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_MultipleCalls_zwml3_pdIs0_1() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    mdbStats.addTiming("type", 50, 250);
    mdbStats.addTiming("type", 150, 180);
    TimerStat timerStat = mdbStats.addTiming("type", 120, 220);
    assertEquals(4, timerStat.getCount());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_MultipleCalls_zwml3_pdIs0_2() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    mdbStats.addTiming("type", 50, 250);
    mdbStats.addTiming("type", 150, 180);
    TimerStat timerStat = mdbStats.addTiming("type", 120, 220);
    assertEquals(150, timerStat.getMax(), 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_MultipleCalls_zwml3_pdIs0_3() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    mdbStats.addTiming("type", 50, 250);
    mdbStats.addTiming("type", 150, 180);
    TimerStat timerStat = mdbStats.addTiming("type", 120, 220);
    assertEquals(50, timerStat.getMin(), 0);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_FirstCall_rrWm0_lIzD0_1_fid3() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 100, 200);
    assertEquals(1, timerStat.getCount());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAddTiming_UpdateMin_CwKO2_UIzB0_1_fid3() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    TimerStat timerStat = mdbStats.addTiming("type", 150, 180);
    assertEquals(2, timerStat.getCount());}
}