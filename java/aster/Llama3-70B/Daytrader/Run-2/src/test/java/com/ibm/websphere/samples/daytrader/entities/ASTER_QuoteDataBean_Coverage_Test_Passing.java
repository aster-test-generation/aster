/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_QuoteDataBean_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SymbolNull_AUKQ0() {
        QuoteDataBean qdb1 = new QuoteDataBean("symbol1");
        QuoteDataBean qdb2 = new QuoteDataBean(null);
        assertFalse(qdb1.equals(qdb2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SymbolNotEqual_wBHC1() {
        QuoteDataBean qdb1 = new QuoteDataBean("symbol1");
        QuoteDataBean qdb2 = new QuoteDataBean("symbol2");
        assertFalse(qdb1.equals(qdb2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SymbolEqual_Scdx2() {
        QuoteDataBean qdb1 = new QuoteDataBean("symbol1");
        QuoteDataBean qdb2 = new QuoteDataBean("symbol1");
        assertTrue(qdb1.equals(qdb2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentClass_gucP3() {
        QuoteDataBean qdb1 = new QuoteDataBean("symbol1");
        Object obj = new Object();
        assertFalse(qdb1.equals(obj));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_Null_kDHR4() {
        QuoteDataBean qdb1 = new QuoteDataBean("symbol1");
        assertFalse(qdb1.equals(null));
    }
}