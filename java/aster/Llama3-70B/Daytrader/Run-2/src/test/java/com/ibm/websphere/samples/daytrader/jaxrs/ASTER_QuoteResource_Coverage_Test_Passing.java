/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.jaxrs;
import java.util.List;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_QuoteResource_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGetArrayListInitialization_szCi0() {
        QuoteResource quoteResource = new QuoteResource();
        String symbols = "AAPL,GOOG";
        List<QuoteDataBean> result = quoteResource.quotesGet(symbols);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGetSymbolsSplit_bOGR1() {
        QuoteResource quoteResource = new QuoteResource();
        String symbols = "AAPL,GOOG,MSFT";
        List<QuoteDataBean> result = quoteResource.quotesGet(symbols);
        assertEquals(0, result.size());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGetQuoteDataBeansAdd_hTXz4() {
        QuoteResource quoteResource = new QuoteResource();
        String symbols = "AAPL,GOOG";
        List<QuoteDataBean> result = quoteResource.quotesGet(symbols);
        assertEquals(0, result.size());
    }
}