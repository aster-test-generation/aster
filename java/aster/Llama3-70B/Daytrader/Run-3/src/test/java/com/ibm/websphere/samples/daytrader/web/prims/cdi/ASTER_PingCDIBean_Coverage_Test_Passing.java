/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;
import java.util.Set;
import javax.enterprise.inject.spi.Bean;
import javax.enterprise.inject.spi.BeanManager;
import javax.enterprise.inject.spi.CDI;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Set;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingCDIBean_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanMangerViaCDICurrent_Beans_size_greater_than_zero_Fioz2() throws Exception {
        PingCDIBean pingCDIBean = new PingCDIBean();
        BeanManager beanManager = mock(BeanManager.class);
        Set<Bean<?>> beans = mock(Set.class);
        when(CDI.current().getBeanManager()).thenReturn(beanManager);
        when(beanManager.getBeans(Object.class)).thenReturn(beans);
        when(beans.size()).thenReturn(1);
        int result = pingCDIBean.getBeanMangerViaCDICurrent();
        assertEquals(1, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanMangerViaCDICurrent_Beans_size_zero_oHmB3() throws Exception {
        PingCDIBean pingCDIBean = new PingCDIBean();
        BeanManager beanManager = mock(BeanManager.class);
        Set<Bean<?>> beans = mock(Set.class);
        when(CDI.current().getBeanManager()).thenReturn(beanManager);
        when(beanManager.getBeans(Object.class)).thenReturn(beans);
        when(beans.size()).thenReturn(0);
        int result = pingCDIBean.getBeanMangerViaCDICurrent();
        assertEquals(0, result);
    }
}