/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServlet2MDBTopic_Coverage_Test_Failing {
private HttpServletResponse response;
private PingServlet2MDBTopic servlet;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_appendInitTime_Zwnp6() throws IOException, ServletException {
        PingServlet2MDBTopic servlet = new PingServlet2MDBTopic();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        servlet.doGet(req, res);
        verify(res.getWriter(), times(1)).println(anyString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetServletInfo_AiiT0_fid1() {
        PingServlet2MDBTopic pingServlet2MDBTopic = new PingServlet2MDBTopic();
        String expected = "web primitive, configured with trade runtime configs, tests Servlet to Session EJB path";
        String actual = pingServlet2MDBTopic.getServletInfo();
        assertEquals(expected, actual);
    }
}