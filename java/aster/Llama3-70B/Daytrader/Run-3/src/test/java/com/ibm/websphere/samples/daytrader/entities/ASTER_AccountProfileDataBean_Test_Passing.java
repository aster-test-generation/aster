/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AccountProfileDataBean_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCreditCard_sNkm0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    assertEquals("creditCard", accountProfileDataBean.getCreditCard());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_oYVr0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    String expected = "\n\tAccount Profile Data for userID:userID\n\t\t   passwd:password\n\t\t   fullName:fullName\n\t\t    address:address\n\t\t      email:email\n\t\t creditCard:creditCard";
    assertEquals(expected, accountProfileDataBean.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetEmail_rgqv0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setEmail("newEmail");
    assertEquals("newEmail", accountProfileDataBean.getEmail());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRandomInstance_BHnD0_1() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRandomInstance_BHnD0_2() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getUserID());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRandomInstance_BHnD0_3() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getPassword());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRandomInstance_BHnD0_4() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getFullName());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRandomInstance_BHnD0_5() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getAddress());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRandomInstance_BHnD0_6() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getEmail());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRandomInstance_BHnD0_7() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean.getCreditCard());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetUserID_JcVp0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setUserID("newUserID");
    assertEquals("newUserID", accountProfileDataBean.getUserID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetEmail_gYZj0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email@example.com", "creditCard");
    assertEquals("email@example.com", accountProfileDataBean.getEmail());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetUserID_eoBB0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    assertEquals("user1", accountProfileDataBean.getUserID());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_WhenUserIDIsNull_ThenReturn0_GZHj0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
    assertEquals(0, accountProfileDataBean.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHashCode_WhenUserIDIsNotNull_ThenReturnUserIDHashCode_usSn1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "", "", "", "", "");
    assertEquals("user1".hashCode(), accountProfileDataBean.hashCode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetFullName_SBEn0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setFullName("newFullName");
    assertEquals("newFullName", accountProfileDataBean.getFullName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAddress_lAPM0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    assertEquals("address", accountProfileDataBean.getAddress());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPassword_YMTb0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    assertEquals("password", accountProfileDataBean.getPassword());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCreditCard_KDQi0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setCreditCard("newCreditCard");
    assertEquals("newCreditCard", accountProfileDataBean.getCreditCard());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToHTML_AFZK0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    String result = accountProfileDataBean.toHTML();
    assertEquals("<BR>Account Profile Data for userID: <B>userID</B>" + "<LI>   passwd:password</LI>" + "<LI>   fullName:fullName</LI>" + "<LI>    address:address</LI>" + "<LI>      email:email</LI>" + "<LI> creditCard:creditCard</LI>", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetFullName_srvr0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    assertEquals("fullName", accountProfileDataBean.getFullName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameObject_ReturnsTrue_OxqI0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    assertTrue(accountProfileDataBean.equals(accountProfileDataBean));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentClass_ReturnsFalse_qfJZ1() {
    Object object = new Object();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    assertFalse(accountProfileDataBean.equals(object));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameValues_ReturnsTrue_EeOD2() {
    AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountProfileDataBean accountProfileDataBean2 = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    assertTrue(accountProfileDataBean1.equals(accountProfileDataBean2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentUserID_ReturnsFalse_jirB3() {
    AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountProfileDataBean accountProfileDataBean2 = new AccountProfileDataBean("differentUserID", "password", "fullName", "address", "email", "creditCard");
    assertFalse(accountProfileDataBean1.equals(accountProfileDataBean2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_NullUserID_ReturnsFalse_wHgy4() {
    AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountProfileDataBean accountProfileDataBean2 = new AccountProfileDataBean(null, "password", "fullName", "address", "email", "creditCard");
    assertFalse(accountProfileDataBean1.equals(accountProfileDataBean2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAddress_Wqfn0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setAddress("newAddress");
    assertEquals("newAddress", accountProfileDataBean.getAddress());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetAccount_fJNk0_OVUR0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    accountProfileDataBean.setAccount(accountDataBean);
    assertEquals(accountDataBean, accountProfileDataBean.getAccount());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPassword_fxvE0_PxMJ0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.setPassword("newPassword");
    assertEquals("newPassword", accountProfileDataBean.getPassword());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_1() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_2() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean.getAccountID());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_3() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean.getProfileID());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_4() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean.getBalance());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_5() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean.getOpenBalance());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_6() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean.getLoginCount());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_7() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean.getLogoutCount());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_8() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean.getLastLogin());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetAccount_tcRM0_atuL0_9() {
    AccountDataBean accountDataBean = AccountDataBean.getRandomInstance();
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
    accountProfileDataBean.getAccount(); // This will return null as account is not set
    assertNotNull(accountDataBean.getCreationDate());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRandomInstance_BHnD0() {
    AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
    assertNotNull(accountProfileDataBean);
    assertNotNull(accountProfileDataBean.getUserID());
    assertNotNull(accountProfileDataBean.getPassword());
    assertNotNull(accountProfileDataBean.getFullName());
    assertNotNull(accountProfileDataBean.getAddress());
    assertNotNull(accountProfileDataBean.getEmail());
    assertNotNull(accountProfileDataBean.getCreditCard());
}
}