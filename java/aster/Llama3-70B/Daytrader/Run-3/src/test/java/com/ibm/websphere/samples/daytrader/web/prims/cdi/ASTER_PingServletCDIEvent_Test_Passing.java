/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;
import java.io.PrintWriter;
import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServletCDIEvent_Test_Passing {
private static int hitCount;
private static String initTime;
PingServletCDIEvent pingservletcdievent;
ServletConfig servletConfig;
HttpServletRequest httpservletrequest;
HttpServletResponse httpservletresponse;
PrintWriter printWriter;
CDIEventProducer cdiEventProducer;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdoGet() throws Exception {
    httpservletrequest = mock(HttpServletRequest.class);
    httpservletresponse = mock(HttpServletResponse.class);
    printWriter = mock(PrintWriter.class);
    cdiEventProducer = mock(CDIEventProducer.class);
    pingservletcdievent = new PingServletCDIEvent();
    when(httpservletresponse.getWriter()).thenReturn(printWriter);
    hitCount = 10;
    initTime = "2022-01-01 12:00:00";
    pingservletcdievent.doGet(httpservletrequest, httpservletresponse);
    verify(cdiEventProducer).produceSyncEvent();
    verify(printWriter).write("<html><head><title>Ping Servlet CDI Event</title></head>" + "<body><HR><BR><FONT size=\"+2\" color=\"#000066\">Ping Servlet CDI Event<BR></FONT><FONT size=\"+1\" color=\"#000066\">Init time : " + initTime + "<BR><BR></FONT>");
    verify(printWriter).write("<B>hitCount1: " + hitCount + "</B></body></html>");
    verify(printWriter).flush();
    verify(printWriter).close();
  }
}