/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import javax.servlet.AsyncContext;
import javax.servlet.ReadListener;
import javax.servlet.ServletConfig;
import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet31AsyncRead_Test_Passing {
private static String initTime;
private static int hitCount;
PingServlet31AsyncRead pingservlet31asyncread;
ServletConfig servletConfig;
HttpServlet httpservlet;
HttpServletResponse httpservletresponse;
HttpServletRequest httpservletrequest;
ServletInputStream servletinputstream;
AsyncContext asyncContext;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoPost() throws Exception {
        httpservletresponse = mock(HttpServletResponse.class);
        httpservletrequest = mock(HttpServletRequest.class);
        servletinputstream = mock(ServletInputStream.class);
        asyncContext = mock(AsyncContext.class);
        pingservlet31asyncread = new PingServlet31AsyncRead();
        when(httpservletrequest.getInputStream()).thenReturn(servletinputstream);
        when(httpservletrequest.startAsync()).thenReturn(asyncContext);
        pingservlet31asyncread.doPost(httpservletrequest, httpservletresponse);
        verify(httpservletresponse).setContentType("text/html");
        verify(httpservletrequest).startAsync();
        verify(servletinputstream).setReadListener(any(ReadListener.class));
    }
}