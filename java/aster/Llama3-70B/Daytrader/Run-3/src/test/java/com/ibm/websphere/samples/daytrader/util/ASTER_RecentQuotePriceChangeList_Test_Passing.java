/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;
import java.util.List;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RecentQuotePriceChangeList_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsEmpty_WhenListIsEmpty_ReturnTrue_gwPC0() {
    RecentQuotePriceChangeList recentQuotePriceChangeList = new RecentQuotePriceChangeList();
    assert(recentQuotePriceChangeList.isEmpty());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRecentList_hwaV0() {
    RecentQuotePriceChangeList recentQuotePriceChangeList = new RecentQuotePriceChangeList();
    List<QuoteDataBean> result = recentQuotePriceChangeList.recentList();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAdd_NullQuoteData_JfEa2() {
    RecentQuotePriceChangeList list = new RecentQuotePriceChangeList();
    assertTrue(list.add(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAdd_SymbolNumberGreaterThanMaxQuotes_eJxh1_jFvY0() {
    RecentQuotePriceChangeList list = new RecentQuotePriceChangeList();
    QuoteDataBean quoteData = new QuoteDataBean("SYMBOL" + (TradeConfig.getMAX_QUOTES() * TradeConfig.getListQuotePriceChangeFrequency() * 0.01 + 1));
    assertTrue(list.add(quoteData));
}
}