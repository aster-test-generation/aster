/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.jaxrs;
import java.util.List;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_QuoteResource_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGet_Initialization_Hvyy0() {
        QuoteResource quoteResource = new QuoteResource();
        List<QuoteDataBean> result = quoteResource.quotesGet("symbol1");
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGet_ReturnType_Quje8() {
        QuoteResource quoteResource = new QuoteResource();
        List<QuoteDataBean> result = quoteResource.quotesGet("symbol1");
        assertTrue(result instanceof List);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGet_SplitSymbols_zMtW1_fid2() {
        QuoteResource quoteResource = new QuoteResource();
        List<QuoteDataBean> result = quoteResource.quotesGet("symbol1,symbol0");
        assertEquals(0, result.size());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGet_ForLoop_KEjc2_fid2() {
        QuoteResource quoteResource = new QuoteResource();
        List<QuoteDataBean> result = quoteResource.quotesGet("symbol1,symbol2,symbol0");
        assertEquals(0, result.size());
    }
}