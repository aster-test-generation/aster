/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;
import java.util.Properties;
import javax.servlet.ServletContextEvent;
import com.ibm.websphere.samples.daytrader.util.Log;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Properties;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TradeWebContextListener_Coverage_Test_Passing {
    private Log log;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_OrderProcessingMode_SystemEnv_EnSE9() throws Exception {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = mock(ServletContextEvent.class);
        System.setProperty("ORDER_PROCESSING_MODE", "1");
        listener.contextInitialized(event);
        assertEquals(1, TradeConfig.getOrderProcessingMode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContextInitialized_OrderProcessingMode_Properties_Ecwg10() throws Exception {
        TradeWebContextListener listener = new TradeWebContextListener();
        ServletContextEvent event = mock(ServletContextEvent.class);
        Properties prop = new Properties();
        prop.setProperty("orderProcessingMode", "1");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void contextDestroyed(ServletContextEvent event) {
}
}