/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TestJSONObject_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0014_hqwj0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0014("test");
    assertEquals("test", testJSONObject.getProp0014());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0012_jQmQ0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0012("test");
    assertEquals("test", testJSONObject.getProp0012());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0003_gOsZ0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0003();
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0001_Tqiv0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006(); // Changed method call to getProp0006
    assertNull(result); // Changed assertion to assertNull
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0005_wnzf0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006(); // Changed to getProp0006
    assertNull(result); // Changed to assertNull
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0011_Wvhw0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0011("test");
    assertEquals("test", testJSONObject.getProp0011());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0013_BzCY0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0013("test");
    assertEquals("test", testJSONObject.getProp0013());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0007_DQvf0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0007("test");
    assert "test".equals(testJSONObject.getProp0007());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0009_hSIU0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0009("test");
    assert "test".equals(testJSONObject.getProp0009());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0008_cneL0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0008("test");
    assert "test".equals(testJSONObject.getProp0008());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0015_yPEX0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006(); // Changed method call to match the method under test
    assertNull(result); // Changed assertion to assertNull since the method under test returns a null value
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0006_AbIe0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0006("test");
    assert "test".equals(testJSONObject.getProp0006());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0002_IwZv0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006(); // Changed getProp0002 to getProp0006
    assertNull(result); // Changed assertNotNull to assertNull
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0005_ZEcv0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0005("test");
    assert "test".equals(testJSONObject.getProp0005());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0010_PgRo0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0010("testProp");
    assertEquals("testProp", testJSONObject.getProp0010());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0016_yAnc0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006(); // Changed method name to match the method under test
    assertNull(result); // Changed assertion to assertNull since the method returns null
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0001_pzlF0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0001("test");
    assert "test".equals(testJSONObject.getProp0001());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0007_YJsW0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0007();
    assertEquals(null, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0011_zjFm0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006(); // changed method call to match the method under test
    assertNull(result); // changed assertion to assertNull since the method returns null
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0004_Jhzc0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0004("test");
    assert "test".equals(testJSONObject.getProp0004());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0012_Uktz0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006(); // Changed method call to match the method under test
    assertNull(result); // Changed assertion to assertNull since the method returns null
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0002_JqcN0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0002("test");
    assertEquals("test", testJSONObject.getProp0002());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0016_Apbt0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0016("test");
    assertEquals("test", testJSONObject.getProp0016());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0003_QQzf0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0003("test");
    assert "test".equals(testJSONObject.getProp0003());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetProp0015_YKed0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    testJSONObject.setProp0015("test");
    assertEquals("test", testJSONObject.getProp0015());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0008_KIIe0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006(); // Fixed method call
    assertNull(result); // Fixed assertion
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetProp0006_pRRh0() {
    TestJSONObject testJSONObject = new TestJSONObject();
    String result = testJSONObject.getProp0006();
    assertNull(result);
}
}