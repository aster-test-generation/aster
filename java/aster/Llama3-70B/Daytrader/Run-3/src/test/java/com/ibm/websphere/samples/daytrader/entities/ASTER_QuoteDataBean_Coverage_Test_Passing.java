/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_QuoteDataBean_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SymbolNull_aIXz0() {
        QuoteDataBean obj1 = new QuoteDataBean("symbol1");
        QuoteDataBean obj2 = new QuoteDataBean(null);
        assertFalse(obj1.equals(obj2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SymbolNotEqual_bANz1() {
        QuoteDataBean obj1 = new QuoteDataBean("symbol1");
        QuoteDataBean obj2 = new QuoteDataBean("symbol2");
        assertFalse(obj1.equals(obj2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SymbolEqual_KJar2() {
        QuoteDataBean obj1 = new QuoteDataBean("symbol1");
        QuoteDataBean obj2 = new QuoteDataBean("symbol1");
        assertTrue(obj1.equals(obj2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_ObjIsNull_hmoU3() {
        QuoteDataBean obj1 = new QuoteDataBean("symbol1");
        assertFalse(obj1.equals(null));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_ObjIsDifferentClass_AaDW4() {
        QuoteDataBean obj1 = new QuoteDataBean("symbol1");
        String obj2 = "symbol1";
        assertFalse(obj1.equals(obj2));
    }
}