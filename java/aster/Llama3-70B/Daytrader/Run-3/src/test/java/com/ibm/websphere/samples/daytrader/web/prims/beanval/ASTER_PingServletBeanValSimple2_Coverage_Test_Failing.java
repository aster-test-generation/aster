/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.beanval;
import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.ibm.websphere.samples.daytrader.web.prims.PingServlet;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletBeanValSimple2_Coverage_Test_Failing {
private ServletConfig servletConfig;
private PingServletBeanValSimple2 pingServletBeanValSimple2;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetServletInfo_VlIU0() {
        PingServletBeanValSimple2 pingServletBeanValSimple2 = new PingServletBeanValSimple2();
        String expected = "Basic dynamic HTML generation through a servlet";
        String actual = pingServletBeanValSimple2.getServletInfo();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_CreateSimpleBean2_sqou2_bPRH0() throws Exception {
    PingServletBeanValSimple2 pingServletBeanValSimple2 = new PingServletBeanValSimple2();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    SimpleBean2 simpleBean2 = spy(new SimpleBean2()); 
    pingServletBeanValSimple2.doGet(req, res);
    verify(simpleBean2).checkInjectionValidation();
}
@Test
public void testDoGet_CheckInjectionValidation_WZHG2_mDow0() throws Exception {
    PingServletBeanValSimple2 pingServletBeanValSimple2 = new PingServletBeanValSimple2();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    pingServletBeanValSimple2.doGet(req, res);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_cKLX1_UASH0() throws ServletException, IOException {
    PingServletBeanValSimple2 servlet = new PingServletBeanValSimple2();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doGet(request, response);
    verify(response).setContentType("text/html");
    verify(response).getOutputStream();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setup_vMuy0() throws javax.servlet.ServletException {
        pingServletBeanValSimple2 = new PingServletBeanValSimple2();
        servletConfig = mock(ServletConfig.class);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_SuperInitCalled_mNdo1() throws Exception {
        pingServletBeanValSimple2.init(servletConfig);
        verify(servletConfig).getServletContext();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoGet_cKLX1_UASH0_fid2() throws ServletException, IOException {
    PingServlet servlet = new PingServlet();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doGet(request, response);
    verify(response).setContentType("text/html");
    verify(response).getWriter();
}
}