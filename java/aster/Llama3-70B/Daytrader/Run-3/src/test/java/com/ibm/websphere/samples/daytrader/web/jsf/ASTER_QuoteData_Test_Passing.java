/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;
import java.math.BigDecimal;
import com.ibm.websphere.samples.daytrader.util.FinancialUtils;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_QuoteData_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetRange_YpCY0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol");
    quoteData.setRange("1d");
    assertEquals("1d", quoteData.getRange());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetHigh_KPtI0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
    BigDecimal high = BigDecimal.ONE;
    quoteData.setHigh(high);
    assertEquals(high, quoteData.getHigh());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCompanyName_ZqZS0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "symbol", new BigDecimal("12.0"), new BigDecimal("9.0"), "companyName", 100.0, 1.0);
    assertEquals("companyName", quoteData.getCompanyName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetVolume_Gyxq0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("10.0"), "symbol");
    quoteData.setVolume(100.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetSymbol_QnvP0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "ABC");
    quoteData.setSymbol("XYZ");
    assertEquals("XYZ", quoteData.getSymbol());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetRange_BNOb0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol");
    String range = quoteData.getRange();
    assertNull(range);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetGainHTML_brpM0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol", BigDecimal.valueOf(15.0), BigDecimal.valueOf(3.0), "companyName", 100.0, 2.0);
    String result = quoteData.getGainHTML();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetGain_RITX0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol");
    BigDecimal gain = BigDecimal.valueOf(2.0);
    quoteData.setGain(gain);
    assertEquals(gain, quoteData.getGain());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPrice_DJaW0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("9.0"), "symbol");
    assertEquals(new BigDecimal("10.0"), quoteData.getPrice());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPrice2_ZiDU1() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "symbol", new BigDecimal("12.0"), new BigDecimal("9.0"), "companyName", 100.0, 1.0);
    assertEquals(new BigDecimal("11.0"), quoteData.getPrice());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetChange_zSHh0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("15.0"), "ABC", new BigDecimal("20.0"), new BigDecimal("5.0"), "ABC Company", 100.0, 5.0);
    assertEquals(5.0, quoteData.getChange(), 0.0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOpen_YSRa0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("15.0"), new BigDecimal("15.0"), "symbol");
    assertEquals(new BigDecimal("15.0"), quoteData.getOpen());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLow_wbjj0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("15.0"), "symbol", new BigDecimal("20.0"), new BigDecimal("5.0"), "companyName", 100.0, 5.0);
    assertEquals(new BigDecimal("5.0"), quoteData.getLow());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetHigh_SFLz0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("15.0"), "symbol", new BigDecimal("20.0"), new BigDecimal("5.0"), "companyName", 100.0, 5.0);
    assertEquals(new BigDecimal("20.0"), quoteData.getHigh());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetChangeHTML_PositiveChange_Kcbk0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(12.0), "symbol", BigDecimal.valueOf(15.0), BigDecimal.valueOf(8.0), "companyName", 100.0, 2.0);
    String result = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#009900\">2.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetChangeHTML_NegativeChange_QFoD1() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(8.0), "symbol", BigDecimal.valueOf(12.0), BigDecimal.valueOf(6.0), "companyName", 100.0, -2.0);
    String result = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#cc0000\">-2.00</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPrice_JKZE0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol");
    BigDecimal price = BigDecimal.valueOf(20.0);
    quoteData.setPrice(price);
    assertEquals(price, quoteData.getPrice());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetGainPercent_MoQE0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("5.0"), "symbol", new BigDecimal("15.0"), new BigDecimal("3.0"), "companyName", 100.0, 2.0);
    BigDecimal gainPercent = quoteData.getGainPercent();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetGainPercentHTML_ASlE0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol", BigDecimal.valueOf(15.0), BigDecimal.valueOf(3.0), "companyName", 100.0, 2.0);
    String result = quoteData.getGainPercentHTML();
    assertEquals(FinancialUtils.printGainPercentHTML(quoteData.getGainPercent()), result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetCompanyName_jaZJ0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "symbol");
    quoteData.setCompanyName("Test Company");
    assertEquals("Test Company", quoteData.getCompanyName());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetLow_ycyR0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
    BigDecimal low = BigDecimal.ONE;
    quoteData.setLow(low);
    assertEquals(low, quoteData.getLow());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetOpen_Udgg0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
    BigDecimal open = BigDecimal.ONE;
    quoteData.setOpen(open);
    assertEquals(open, quoteData.getOpen());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetVolume_uGME0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("15.0"), "symbol", new BigDecimal("20.0"), new BigDecimal("5.0"), "companyName", 100.0, 5.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetChange_DUIw0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
    quoteData.setChange(10.0);
    assertEquals(10.0, quoteData.getChange(), 0.0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSymbol_NOEh0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "ABC");
    assertEquals("ABC", quoteData.getSymbol());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSymbol2_uNxn1() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(5.0), BigDecimal.valueOf(10.0), "ABC", BigDecimal.valueOf(15.0), BigDecimal.valueOf(3.0), "ABC Company", 100.0, 2.0);
    assertEquals("ABC", quoteData.getSymbol());
}
}