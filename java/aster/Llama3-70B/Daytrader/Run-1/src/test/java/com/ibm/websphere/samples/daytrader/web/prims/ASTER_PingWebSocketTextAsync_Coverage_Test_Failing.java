/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.util.concurrent.TimeUnit;
import javax.websocket.CloseReason;
import javax.websocket.SendResult;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

public class Aster_PingWebSocketTextAsync_Coverage_Test_Failing {
  private int hitCount;
  private CloseReason reason;
  private SendResult sendResult;
  private PingWebSocketTextAsync pingWebSocketTextAsync;

  private int getHitCount(PingWebSocketTextAsync pingWebSocketTextAsync) throws Exception {
    return PingWebSocketTextAsync.class.getDeclaredField("hitCount").getInt(pingWebSocketTextAsync);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResultIsOK_hUUU4() {
    when(sendResult.isOK()).thenReturn(true);
    pingWebSocketTextAsync.ping("text");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResultIsNotOK_EghJ5() {
    when(sendResult.isOK()).thenReturn(false);
    pingWebSocketTextAsync.ping("text");
  }
}