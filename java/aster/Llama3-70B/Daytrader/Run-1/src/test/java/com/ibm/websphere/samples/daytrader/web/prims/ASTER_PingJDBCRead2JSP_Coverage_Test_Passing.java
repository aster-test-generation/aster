/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import com.ibm.websphere.samples.daytrader.util.Log;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingJDBCRead2JSP_Coverage_Test_Passing {
  private PingJDBCRead2JSP pingJDBCRead2JSP;
  private ServletConfig servletConfig;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_QuoteDataInitialization_tvZO3_vzJN0() throws ServletException, IOException {
    PingJDBCRead2JSP pingJDBCRead2JSP = null;
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    try {
      pingJDBCRead2JSP = new PingJDBCRead2JSP();
      pingJDBCRead2JSP.doGet(req, res);
    } catch (ExceptionInInitializerError e) {
      // Handle the exception
    }
    Object quoteData = req.getAttribute("quoteData");
    assertNull(quoteData);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_LogError_SHGh0_QZfE0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    Exception e = new Exception("Test Exception");
    Log log = mock(Log.class);
    PingJDBCRead2JSP pingJDBCRead2JSP = mock(PingJDBCRead2JSP.class);
    doThrow(e).when(pingJDBCRead2JSP).doGet(req, res);
    doNothing().when(log).error(e, "PingJDBCRead2JPS -- error getting quote for symbol", "symbol");
    try {
      pingJDBCRead2JSP.doGet(req, res);
    } catch (Exception ex) {
      verify(log, times(1)).error(e, "PingJDBCRead2JPS -- error getting quote for symbol", "symbol");
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_SendError_POSp1_iNEe0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    PingJDBCRead2JSP pingJDBCRead2JSP = mock(PingJDBCRead2JSP.class);
    Exception e = new Exception("Test Exception");
    doThrow(e).when(pingJDBCRead2JSP).doGet(req, res);
    try {
      pingJDBCRead2JSP.doGet(req, res);
    } catch (Exception ex) {
    }
    verify(res, times(1)).sendError(500, "PingJDBCRead2JSP Exception caught: Test Exception");
  }
}