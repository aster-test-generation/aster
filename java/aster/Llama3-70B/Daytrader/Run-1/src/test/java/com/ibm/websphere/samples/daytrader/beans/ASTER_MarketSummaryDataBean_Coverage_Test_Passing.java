/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.beans;

import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_MarketSummaryDataBean_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersNotNull_TopLosersNotNull_EsnW0() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        new ArrayList<QuoteDataBean>(), new ArrayList<QuoteDataBean>());
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersNotNull_TopLosersNull_ctNn1() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        new ArrayList<QuoteDataBean>(), null);
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersNull_TopLosersNotNull_ypHg2() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        null, new ArrayList<QuoteDataBean>());
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersNull_TopLosersNull_EdqE3() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        null, null);
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersHasElements_TopLosersHasElements_jodr4() {
    Collection<QuoteDataBean> topGainers = new ArrayList<QuoteDataBean>();
    topGainers.add(new QuoteDataBean());
    Collection<QuoteDataBean> topLosers = new ArrayList<QuoteDataBean>();
    topLosers.add(new QuoteDataBean());
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        topGainers, topLosers);
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersHasElements_TopLosersIsEmpty_cpby5() {
    Collection<QuoteDataBean> topGainers = new ArrayList<QuoteDataBean>();
    topGainers.add(new QuoteDataBean());
    Collection<QuoteDataBean> topLosers = new ArrayList<QuoteDataBean>();
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        topGainers, topLosers);
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersIsEmpty_TopLosersHasElements_eAMN6() {
    Collection<QuoteDataBean> topGainers = new ArrayList<QuoteDataBean>();
    Collection<QuoteDataBean> topLosers = new ArrayList<QuoteDataBean>();
    topLosers.add(new QuoteDataBean());
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        topGainers, topLosers);
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersIsEmpty_TopLosersIsEmpty_felu7() {
    Collection<QuoteDataBean> topGainers = new ArrayList<QuoteDataBean>();
    Collection<QuoteDataBean> topLosers = new ArrayList<QuoteDataBean>();
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        topGainers, topLosers);
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TopGainersHasMultipleElements_TopLosersHasMultipleElements_TtAD8() {
    Collection<QuoteDataBean> topGainers = new ArrayList<QuoteDataBean>();
    topGainers.add(new QuoteDataBean());
    topGainers.add(new QuoteDataBean());
    Collection<QuoteDataBean> topLosers = new ArrayList<QuoteDataBean>();
    topLosers.add(new QuoteDataBean());
    topLosers.add(new QuoteDataBean());
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(
        new BigDecimal("100.0"), new BigDecimal("90.0"), 100.0,
        topGainers, topLosers);
    marketSummaryDataBean.toString();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_TopGainersNull_ghFX0() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.valueOf(10), BigDecimal.valueOf(10), 100, null, Arrays.asList(new QuoteDataBean()));
    String result = marketSummaryDataBean.toHTML();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_TopLosersNull_aiqo1() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.valueOf(10), BigDecimal.valueOf(10), 100, Arrays.asList(new QuoteDataBean()), null);
    String result = marketSummaryDataBean.toHTML();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_TopGainersEmpty_CueH2() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.valueOf(10), BigDecimal.valueOf(10), 100, new ArrayList<>(), Arrays.asList(new QuoteDataBean()));
    String result = marketSummaryDataBean.toHTML();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_TopLosersEmpty_BMeJ3() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.valueOf(10), BigDecimal.valueOf(10), 100, Arrays.asList(new QuoteDataBean()), new ArrayList<>());
    String result = marketSummaryDataBean.toHTML();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_TopGainersHasNext_nnRc4() {
    QuoteDataBean quoteDataBean = new QuoteDataBean();
    quoteDataBean.setSymbol("symbol");
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.valueOf(10), BigDecimal.valueOf(10), 100, Arrays.asList(quoteDataBean), Arrays.asList(new QuoteDataBean()));
    String result = marketSummaryDataBean.toHTML();
    assertTrue(result.contains("symbol"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_TopLosersHasNext_CvHk5() {
    QuoteDataBean quoteDataBean = new QuoteDataBean();
    quoteDataBean.setSymbol("symbol");
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.valueOf(10), BigDecimal.valueOf(10), 100, Arrays.asList(new QuoteDataBean()), Arrays.asList(quoteDataBean));
    String result = marketSummaryDataBean.toHTML();
    assertTrue(result.contains("symbol"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_TopGainersIterator_TgbZ6() {
    QuoteDataBean quoteDataBean = new QuoteDataBean();
    quoteDataBean.setSymbol("symbol");
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.valueOf(10), BigDecimal.valueOf(10), 100, Arrays.asList(quoteDataBean), Arrays.asList(new QuoteDataBean()));
    String result = marketSummaryDataBean.toHTML();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_TopLosersIterator_YRFj7() {
    QuoteDataBean quoteDataBean = new QuoteDataBean();
    quoteDataBean.setSymbol("symbol");
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.valueOf(10), BigDecimal.valueOf(10), 100, Arrays.asList(new QuoteDataBean()), Arrays.asList(quoteDataBean));
    String result = marketSummaryDataBean.toHTML();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercent_WhenGainPercentIsNull_ZYUP0_gsdC0_1() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.ZERO, BigDecimal.ZERO, 0, null, null);
    BigDecimal result = marketSummaryDataBean.getGainPercent();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainPercent_WhenGainPercentIsNull_ZYUP0_gsdC0_2() {
    MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(BigDecimal.ZERO, BigDecimal.ZERO, 0, null, null);
    BigDecimal result = marketSummaryDataBean.getGainPercent();
  }
}