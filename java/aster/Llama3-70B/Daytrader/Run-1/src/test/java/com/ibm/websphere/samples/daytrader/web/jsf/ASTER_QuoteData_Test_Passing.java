/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import com.ibm.websphere.samples.daytrader.util.FinancialUtils;
import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteData_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetRange_RBbC0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "symbol");
    quoteData.setRange("1d");
    assertEquals("1d", quoteData.getRange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetGainHTML_hqLb0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("9.0"), "symbol", new BigDecimal("11.0"), new BigDecimal("8.0"), "companyName", 100.0, 1.0);
    assertEquals(FinancialUtils.printGainHTML(quoteData.getGain()), quoteData.getGainHTML());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetSymbol_NtoO0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "ABC");
    quoteData.setSymbol("XYZ");
    assertEquals("XYZ", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetHigh_ZTyN0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
    BigDecimal high = BigDecimal.ONE;
    quoteData.setHigh(high);
    assertEquals(high, quoteData.getHigh());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGainPercent_kgyM0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol");
    quoteData.setGainPercent(BigDecimal.valueOf(0.05));
    assertEquals(BigDecimal.valueOf(0.05).setScale(2), quoteData.getGainPercent());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChangeHTML_PositiveChange_KFBM0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("12.0"), "symbol", new BigDecimal("15.0"), new BigDecimal("5.0"), "companyName", 100.0, 2.0);
    String result = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#009900\">2.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChangeHTML_NegativeChange_SHyA1() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("8.0"), "symbol", new BigDecimal("15.0"), new BigDecimal("5.0"), "companyName", 100.0, -2.0);
    String result = quoteData.getChangeHTML();
    assertEquals("<FONT color=\"#cc0000\">-2.00</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetCompanyName_ebqK0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("15.0"), "ABC", new BigDecimal("20.0"), new BigDecimal("5.0"), "ABC Company", 100.0, 5.0);
    assertEquals("ABC Company", quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetGain_ZmtV0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol");
    BigDecimal gain = BigDecimal.valueOf(2.0);
    quoteData.setGain(gain);
    assertEquals(gain, quoteData.getGain());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetVolume_VyNN0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "symbol");
    quoteData.setVolume(100.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRange_pSSj0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "symbol");
    String range = quoteData.getRange();
    assertNull(range);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPrice_stCk0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("5.0"), "symbol");
    assertEquals(new BigDecimal("10.0"), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPrice2_iuZV1() {
    QuoteData quoteData = new QuoteData(new BigDecimal("5.0"), new BigDecimal("10.0"), "symbol", new BigDecimal("15.0"), new BigDecimal("1.0"), "companyName", 100.0, 2.0);
    assertEquals(new BigDecimal("10.0"), quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetOpen_VFRo0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(20.0), "symbol");
    BigDecimal open = BigDecimal.valueOf(30.0);
    quoteData.setOpen(open);
    assertEquals(open, quoteData.getOpen());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetChange_mhDq0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
    quoteData.setChange(10.0);
    assertEquals(10.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOpen2_gQaU1() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "symbol", new BigDecimal("12.0"), new BigDecimal("9.0"), "companyName", 100.0, 1.0);
    assertEquals(new BigDecimal("10.0"), quoteData.getOpen());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLow_VZhT0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("15.0"), "symbol", new BigDecimal("20.0"), new BigDecimal("5.0"), "companyName", 100.0, 5.0);
    assertEquals(new BigDecimal("5.0"), quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetChange_pkqD0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("9.0"), "symbol", new BigDecimal("11.0"), new BigDecimal("8.0"), "companyName", 100.0, 1.0);
    assertEquals(1.0, quoteData.getChange(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetHigh_IcLQ0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "symbol", new BigDecimal("12.0"), new BigDecimal("9.0"), "companyName", 100.0, 1.0);
    assertEquals(new BigDecimal("12.0"), quoteData.getHigh());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetPrice_FpFq0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
    quoteData.setPrice(BigDecimal.ONE);
    assertEquals(BigDecimal.ONE, quoteData.getPrice());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbol_WTgY0() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(10.0), BigDecimal.valueOf(5.0), "ABC");
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetSymbol2_UkmJ1() {
    QuoteData quoteData = new QuoteData(BigDecimal.valueOf(5.0), BigDecimal.valueOf(10.0), "ABC", BigDecimal.valueOf(15.0), BigDecimal.valueOf(3.0), "ABC Company", 100.0, 2.0);
    assertEquals("ABC", quoteData.getSymbol());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetLow_MLVt0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("10.0"), "symbol");
    BigDecimal low = new BigDecimal("5.0");
    quoteData.setLow(low);
    assertEquals(low, quoteData.getLow());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetCompanyName_Adon0() {
    QuoteData quoteData = new QuoteData(BigDecimal.ZERO, BigDecimal.ZERO, "symbol");
    quoteData.setCompanyName("New Company Name");
    assertEquals("New Company Name", quoteData.getCompanyName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVolume_XuwF0() {
    QuoteData quoteData = new QuoteData(new BigDecimal("10.0"), new BigDecimal("15.0"), "symbol", new BigDecimal("20.0"), new BigDecimal("5.0"), "companyName", 100.0, 5.0);
    assertEquals(100.0, quoteData.getVolume(), 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOpen_iUpQ0_fid1() {
    QuoteData quoteData = new QuoteData(new BigDecimal("11.0"), new BigDecimal("11.0"), "symbol");
    assertEquals(new BigDecimal("11.0"), quoteData.getOpen());
  }
}