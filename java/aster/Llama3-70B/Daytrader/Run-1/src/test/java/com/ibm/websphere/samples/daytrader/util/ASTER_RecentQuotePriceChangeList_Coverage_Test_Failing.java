/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_RecentQuotePriceChangeList_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAdd_ValidQuoteData_ReturnsTrue_Efed7() {
    RecentQuotePriceChangeList list = new RecentQuotePriceChangeList();
    QuoteDataBean quoteData = new QuoteDataBean("SYMBOL123");
    assertTrue(list.add(quoteData));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAdd_SymbolNumberLessThanThreshold_AddsToBeginningOfList_YjNg0_izss0_2() {
    RecentQuotePriceChangeList list = new RecentQuotePriceChangeList();
    QuoteDataBean quoteData = new QuoteDataBean("SYMBOL123");
    assertEquals(quoteData, list.recentList().get(0));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAdd_SymbolNumberGreaterThanThreshold_DoesNotAddToList_nXjF1_rkFg0_1() {
    RecentQuotePriceChangeList list = new RecentQuotePriceChangeList();
    QuoteDataBean quoteData = new QuoteDataBean("SYMBOL" + (TradeConfig.getMAX_QUOTES() * TradeConfig.getListQuotePriceChangeFrequency() * 0.01 + 1));
    assertTrue(list.add(quoteData));
  }
}