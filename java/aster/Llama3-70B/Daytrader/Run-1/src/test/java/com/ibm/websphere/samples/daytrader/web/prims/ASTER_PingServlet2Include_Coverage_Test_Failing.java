/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServlet2Include_Coverage_Test_Failing {
  private ServletConfig servletConfig;
  private PingServlet2Include pingServlet2Include;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_VkFK0() throws ServletException, IOException {
    PingServlet2Include servlet = new PingServlet2Include();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    servlet.doPost(req, res);
    verify(req).getAttributeNames();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_NoException_hCAP1() throws ServletException, IOException {
    PingServlet2Include servlet = new PingServlet2Include();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    servlet.doPost(req, res);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_sBvO0() throws javax.servlet.ServletException {
    pingServlet2Include = new PingServlet2Include();
    servletConfig = mock(ServletConfig.class);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_SuperInitCalled_nVIr1() throws ServletException {
    pingServlet2Include.init(servletConfig);
    HttpServlet httpServlet = mock(HttpServlet.class);
    PingServlet2Include spyPingServlet2Include = spy(pingServlet2Include);
    doCallRealMethod().when(spyPingServlet2Include).init(servletConfig);
    spyPingServlet2Include.init(servletConfig);
    verify(httpServlet).init(servletConfig);
  }
}