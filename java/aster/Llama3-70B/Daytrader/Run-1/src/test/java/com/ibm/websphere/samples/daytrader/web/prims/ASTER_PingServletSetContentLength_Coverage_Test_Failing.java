/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

public class Aster_PingServletSetContentLength_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_XkRh0() throws ServletException {
    PingServletSetContentLength pingServletSetContentLength = new PingServletSetContentLength();
    ServletConfig config = mock(ServletConfig.class);
    pingServletSetContentLength.init(config);
    assertNotNull(pingServletSetContentLength);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitCallsSuperInit_NQtg1() throws ServletException {
    PingServletSetContentLength pingServletSetContentLength = new PingServletSetContentLength();
    ServletConfig config = mock(ServletConfig.class);
    pingServletSetContentLength.init(config);
    verify((javax.servlet.GenericServlet) pingServletSetContentLength).init(config);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_LLWq0() throws IOException, ServletException {
    PingServletSetContentLength servlet = new PingServletSetContentLength();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    servlet.doPost(req, res);
    verify(res).setStatus(200); // default status
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostCallsDoGet_zGOv1() throws IOException, ServletException {
    PingServletSetContentLength servlet = new PingServletSetContentLength();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    servlet.doPost(req, res);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testGetServletInfo_wPrC0() {
    PingServletSetContentLength pingServletSetContentLength = new PingServletSetContentLength();
    String expected = "Basic dynamic HTML generation through a servlet, with contentLength set by contentLength parameter.";
    String actual = pingServletSetContentLength.getServletInfo();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_MhPs0_RvaL0_fid2() throws javax.servlet.ServletException, java.io.IOException {
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    PingServletSetContentLength pingServlet = new PingServletSetContentLength();
    pingServlet.doGet(req, res);
  }
}