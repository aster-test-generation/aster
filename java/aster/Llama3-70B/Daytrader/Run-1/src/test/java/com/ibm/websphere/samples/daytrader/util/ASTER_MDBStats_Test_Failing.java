/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_MDBStats_Test_Failing {
  @Test
  @Timeout(value = 17, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_FirstCall_bOhA0_jnFt0_1() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 1700, 200);
    assertEquals(1, timerStat.getCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_FirstCall_bOhA0_jnFt0_2() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 100, 200);
    assertEquals(100, timerStat.getMin(), 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_FirstCall_bOhA0_jnFt0_3() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 100, 200);
    assertEquals(100, timerStat.getMax(), 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_FirstCall_bOhA0_jnFt0_4() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 100, 200);
    assertEquals(100, timerStat.getTotalTime(), 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_UpdateMax_KZao1_siZE0_2() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    TimerStat timerStat = mdbStats.addTiming("type", 50, 250);
    assertEquals(150, timerStat.getMax(), 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_UpdateMin_yPTP2_izEl0_1() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 2200);
    TimerStat timerStat = mdbStats.addTiming("type", 150, 180);
    assertEquals(2, timerStat.getCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_UpdateMin_yPTP2_izEl0_2() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    TimerStat timerStat = mdbStats.addTiming("type", 150, 180);
    assertEquals(50, timerStat.getMin(), 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_MultipleCalls_skrs3_hNsF0_2() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    mdbStats.addTiming("type", 50, 250);
    mdbStats.addTiming("type", 150, 180);
    TimerStat timerStat = mdbStats.addTiming("type", 120, 220);
    assertEquals(150, timerStat.getMax(), 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_MultipleCalls_skrs3_hNsF0_3() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    mdbStats.addTiming("type", 50, 250);
    mdbStats.addTiming("type", 150, 180);
    TimerStat timerStat = mdbStats.addTiming("type", 120, 220);
    assertEquals(50, timerStat.getMin(), 0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_FirstCall_bOhA0_jnFt0_1_fid3() {
    MDBStats mdbStats = MDBStats.getInstance();
    TimerStat timerStat = mdbStats.addTiming("type", 100, 200);
    assertEquals(1, timerStat.getCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_UpdateMin_yPTP2_izEl0_1_fid3() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    TimerStat timerStat = mdbStats.addTiming("type", 150, 180);
    assertEquals(2, timerStat.getCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddTiming_MultipleCalls_skrs3_hNsF0_1_fid3() {
    MDBStats mdbStats = MDBStats.getInstance();
    mdbStats.addTiming("type", 100, 200);
    mdbStats.addTiming("type", 50, 250);
    mdbStats.addTiming("type", 150, 180);
    TimerStat timerStat = mdbStats.addTiming("type", 120, 220);
    assertEquals(4, timerStat.getCount());
  }
}