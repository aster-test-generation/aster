/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect;
import java.sql.Connection;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2DB_Test_Passing {
  private static int expectedHitCount;
  private static String expectedInitTime;
  PingServlet2DB pingservlet2db;
  ServletConfig servletConfig;
  HttpServletResponse httpservletresponse;
  Connection connection;
  TradeDirect tradedirect;
  HttpServletRequest httpservletrequest;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdoPost() throws Exception {
    httpservletresponse = mock(HttpServletResponse.class);
    connection = mock(Connection.class);
    tradedirect = mock(TradeDirect.class);
    httpservletrequest = mock(HttpServletRequest.class);
    pingservlet2db = new PingServlet2DB();
    pingservlet2db.doPost(httpservletrequest, httpservletresponse);
    verify(pingservlet2db).doGet(httpservletrequest, httpservletresponse);
  }
}