/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.math.BigDecimal;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.ejb.EJBException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountDataBean_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLogin_ProfileIsNull_ThrowsEJBException_NoYi0() {
    AccountDataBean accountDataBean = new AccountDataBean();
    accountDataBean.setProfile(null);
    try {
      accountDataBean.login("password");
      fail("Expected EJBException");
    } catch (EJBException e) {
      assertEquals("AccountBean:Login failure for account: nullnull AccountProfile", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLogin_ProfileNotNullAndPasswordCorrect_LoginSuccess_AcVM2() {
    AccountDataBean accountDataBean = new AccountDataBean();
    AccountProfileDataBean profile = new AccountProfileDataBean();
    profile.setPassword("password");
    accountDataBean.setProfile(profile);
    accountDataBean.login("password");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLogin_GetProfile_ReturnsProfile_PwjE3() {
    AccountDataBean accountDataBean = new AccountDataBean();
    AccountProfileDataBean profile = new AccountProfileDataBean();
    accountDataBean.setProfile(profile);
    assertEquals(profile, accountDataBean.getProfile());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLogin_GetAccountID_ReturnsAccountID_rEsQ4() {
    AccountDataBean accountDataBean = new AccountDataBean(1, 0, 0, new Date(), new Date(), BigDecimal.ZERO, BigDecimal.ZERO, "profileID");
    assertEquals(Integer.valueOf(1), accountDataBean.getAccountID());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLogin_SetLastLogin_UpdatesLastLogin_BNkQ5() {
    AccountDataBean accountDataBean = new AccountDataBean();
    Date lastLogin = new Date();
    accountDataBean.setLastLogin(lastLogin);
    assertEquals(lastLogin, accountDataBean.getLastLogin());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLogin_SetLoginCount_IncrementsLoginCount_Lfre6() {
    AccountDataBean accountDataBean = new AccountDataBean();
    int loginCount = 1;
    accountDataBean.setLoginCount(loginCount);
    assertEquals(loginCount, accountDataBean.getLoginCount());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_DifferentAccountID_ReturnsFalse_Mmvp0() {
    AccountDataBean account1 = new AccountDataBean(1, 0, 0, new Date(), new Date(), new BigDecimal(0), new BigDecimal(0), "profileID");
    AccountDataBean account2 = new AccountDataBean(2, 0, 0, new Date(), new Date(), new BigDecimal(0), new BigDecimal(0), "profileID");
    assertFalse(account1.equals(account2));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_NullAccountID_ReturnsFalse_zthW1() {
    AccountDataBean account1 = new AccountDataBean(null, 0, 0, new Date(), new Date(), new BigDecimal(0), new BigDecimal(0), "profileID");
    AccountDataBean account2 = new AccountDataBean(1, 0, 0, new Date(), new Date(), new BigDecimal(0), new BigDecimal(0), "profileID");
    assertFalse(account1.equals(account2));
  }
}