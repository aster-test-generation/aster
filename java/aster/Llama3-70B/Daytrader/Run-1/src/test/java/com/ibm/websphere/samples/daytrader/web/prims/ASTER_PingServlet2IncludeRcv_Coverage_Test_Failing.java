/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServlet2IncludeRcv_Coverage_Test_Failing {
  private PingServlet2IncludeRcv servlet;
  private HttpServletResponse response;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_NoException_bhgI2_QUnr0() throws ServletException, IOException {
    // Assuming PingServlet2IncludeRcv is in the package com.ibm.websphere.samples.daytrader.web.prims
    com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv servlet = new com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doGet(request, response);
    // No assertion is needed as the test case is checking for NoException
}

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_CallsDoGet_fQnH1_ZOMJ0() throws ServletException, IOException {
    PingServlet2IncludeRcv doGetSpy = spy(new PingServlet2IncludeRcv());
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    doCallRealMethod().when(doGetSpy).doGet(request, response);
    doGetSpy.doPost(request, response);
    verify(doGetSpy).doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_NoException_bhgI2_QUnr0_fid1() throws ServletException, IOException {
    PingServlet2IncludeRcv servlet = new PingServlet2IncludeRcv();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_CallsDoGet_fQnH1_ZOMJ0_fid1() throws ServletException, IOException {
    PingServlet2IncludeRcv servlet = new PingServlet2IncludeRcv();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PingServlet2IncludeRcv doGetSpy = spy(servlet);
    doCallRealMethod().when(doGetSpy).doGet(request, response);
    doGetSpy.doPost(request, response);
    verify(doGetSpy).doGet(request, response);
  }
}