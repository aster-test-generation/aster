/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TradeConfig_Test_Failing {
  private TradeConfig tradeConfig;
  private static int MAX_HOLDINGS;
  private static boolean publishQuotePriceChange;
  private int maxQuotes;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetListQuotePriceChangeFrequency_iqAh10() {
    TradeConfig tradeConfig = new TradeConfig();
    int result = TradeConfig.getListQuotePriceChangeFrequency();
    assertEquals(10, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserID_RND_USER_true_zSks0() {
    TradeConfig tradeConfig = new TradeConfig();
    TradeConfig.RND_USER = true;
    String result = TradeConfig.getUserID();
    assertEquals("uid:" + tradeConfig.rndUserID().substring(3), result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetScenarioCount_TXUu0() {
    TradeConfig tradeConfig = new TradeConfig();
    int expected = 7; // assuming default value of scenarioCount is7
    int actual = TradeConfig.getScenarioCount();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPrimIterations_dFGO0_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    int result = TradeConfig.getPrimIterations();
    assertEquals(0, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMAX_USERS_VRRV0_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    int expected = 0; // assuming default value of MAX_USERS is 0
    int actual = TradeConfig.getMAX_USERS();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetListQuotePriceChangeFrequency_iqAh0() {
    TradeConfig tradeConfig = new TradeConfig();
    int result = TradeConfig.getListQuotePriceChangeFrequency();
    assertEquals(0, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetJDBCDriverNeedsGlobalTransation_FeQd0_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    boolean result = TradeConfig.getJDBCDriverNeedsGlobalTransation();
    assertTrue(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMAX_HOLDINGS_TdtO0_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    int expected = 0; // assuming default value of MAX_HOLDINGS is 0
    int actual = TradeConfig.getMAX_HOLDINGS();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetPage_ONrU0_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    String result = TradeConfig.getPage(1);
    assertEquals("expectedPage", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_NullParm_DhjP0() {
    TradeConfig.setConfigParam(null, "value");
    assertEquals(0, TradeConfig.getOrderProcessingMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_AccessMode_RyQd5_fid1() {
    TradeConfig.setConfigParam("accessMode", "mode1");
    assertEquals(0, TradeConfig.getAccessMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_WebInterface_zHvC6_fid1() {
    TradeConfig.setConfigParam("WebInterface", "interface1");
    assertEquals(0, TradeConfig.getWebInterface());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_AccessMode_CaseInsensitive_rKUH13_fid1() {
    TradeConfig.setConfigParam("ACCESSMODE", "MODE1");
    assertEquals(0, TradeConfig.getAccessMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_WebInterface_CaseInsensitive_nQMz14_fid1() {
    TradeConfig.setConfigParam("WEBINTERFACE", "INTERFACE1");
    assertEquals(0, TradeConfig.getWebInterface());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWebInterface_arsh0_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    int expectedResult = 0; // assuming default value
    int actualResult = TradeConfig.getWebInterface();
    assertEquals(expectedResult, actualResult);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserID_RND_USER_true_zSks0_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    TradeConfig.RND_USER = true;
    String result = TradeConfig.getUserID();
    assertEquals(tradeConfig.rndUserID(), result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserID_RND_USER_false_Swjq1_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    TradeConfig.RND_USER = false;
    String result = TradeConfig.getUserID();
    assertEquals(tradeConfig.nextUserID(), result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetScenarioCount_TXUu0_fid1() {
    TradeConfig tradeConfig = new TradeConfig();
    int expected = 0; // assuming default value of scenarioCount is 0
    int actual = TradeConfig.getScenarioCount();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRunTimeMode_eRcs0() {
    TradeConfig tradeConfig = new TradeConfig();
    int result = TradeConfig.getRunTimeMode();
    assertEquals(0, result);
  }
}