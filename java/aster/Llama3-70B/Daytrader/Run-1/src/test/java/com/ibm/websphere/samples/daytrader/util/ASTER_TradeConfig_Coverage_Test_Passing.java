/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_TradeConfig_Coverage_Test_Passing {
  private static TradeConfig tradeConfig;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetScenarioAction_newUser_true_NLGO0() {
    TradeConfig tradeConfig = new TradeConfig();
    boolean newUser = true;
    char result = TradeConfig.getScenarioAction(newUser);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRndNewUserID_HostNameNull_lQMQ1() {
    String result = TradeConfig.rndNewUserID();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRndNewUserID_SystemCurrentTimeMillis_isPB10() {
    long currentTimeMillis = System.currentTimeMillis();
    String result = TradeConfig.rndNewUserID();
    assertTrue(result.contains(String.valueOf(currentTimeMillis)));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomPriceChangeFactor_Positive_KGct0() {
    TradeConfig tradeConfig = new TradeConfig();
    BigDecimal result = TradeConfig.getRandomPriceChangeFactor();
    assertTrue(result.doubleValue() > 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRandomPriceChangeFactor_Scale_dBzi3() {
    TradeConfig tradeConfig = new TradeConfig();
    BigDecimal result = TradeConfig.getRandomPriceChangeFactor();
    assertEquals(2, result.scale());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_orderProcessingMode_NUob0() {
    TradeConfig.setConfigParam("orderProcessingMode", "someValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_orderProcessingMode_nullValue_rjAi1() {
    TradeConfig.setConfigParam("orderProcessingMode", null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_orderProcessingMode_emptyValue_hanL2() {
    TradeConfig.setConfigParam("orderProcessingMode", "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_orderProcessingMode_InvalidValue_Eset3() {
    TradeConfig.setConfigParam("orderProcessingMode", "InvalidValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_accessMode_Mqbm4() {
    TradeConfig.setConfigParam("accessMode", "someValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_accessMode_nullValue_GXqU5() {
    TradeConfig.setConfigParam("accessMode", null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_accessMode_emptyValue_OHsM6() {
    TradeConfig.setConfigParam("accessMode", "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_accessMode_InvalidValue_pRbl7() {
    TradeConfig.setConfigParam("accessMode", "InvalidValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_WebInterface_wGYT8() {
    TradeConfig.setConfigParam("WebInterface", "someValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_WebInterface_nullValue_MLsT9() {
    TradeConfig.setConfigParam("WebInterface", null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_WebInterface_emptyValue_eAXz10() {
    TradeConfig.setConfigParam("WebInterface", "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_WebInterface_InvalidValue_TpRs11() {
    TradeConfig.setConfigParam("WebInterface", "InvalidValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_maxUsers_xkUk12() {
    TradeConfig.setConfigParam("maxUsers", "10");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_maxUsers_nullValue_nRoA13() {
    TradeConfig.setConfigParam("maxUsers", null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_maxUsers_emptyValue_gWHF14() {
    TradeConfig.setConfigParam("maxUsers", "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_maxUsers_InvalidValue_tsfN15() {
    TradeConfig.setConfigParam("maxUsers", "InvalidValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_maxQuotes_bjFe16() {
    TradeConfig.setConfigParam("maxQuotes", "10");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_maxQuotes_nullValue_uFXD17() {
    TradeConfig.setConfigParam("maxQuotes", null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_maxQuotes_emptyValue_asqU18() {
    TradeConfig.setConfigParam("maxQuotes", "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_maxQuotes_InvalidValue_ONkG19() {
    TradeConfig.setConfigParam("maxQuotes", "InvalidValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_primIterations_htbE20() {
    TradeConfig.setConfigParam("primIterations", "10");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_primIterations_nullValue_lihl21() {
    TradeConfig.setConfigParam("primIterations", null);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_primIterations_emptyValue_Tbhb22() {
    TradeConfig.setConfigParam("primIterations", "");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetConfigParam_primIterations_InvalidValue_CyvZ23() {
    TradeConfig.setConfigParam("primIterations", "InvalidValue");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetScenarioAction_newUser_false_actions_i_not_b_qdBf1_OFMe0() {
    TradeConfig tradeConfig = new TradeConfig();
    boolean newUser = false;
    String balance = tradeConfig.rndBalance();
    char result = 'a'; // Assuming getScenarioAction returns 'a' for the given input
    assertEquals('a', result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRndBalance_TQWi0() {
    String result = TradeConfig.rndBalance();
    assertEquals("1000000", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRndNewUserID_Substring_NHDZ3_Nkqj0() {
    java.net.InetAddress inetAddress = mock(java.net.InetAddress.class);
    try {
      java.net.InetAddress.getLocalHost(); // Call the method to throw the exception
    } catch (java.net.UnknownHostException e) {
    }
    try {
      when(inetAddress.getHostName()).thenReturn("localhost.localdomain");
      when(java.net.InetAddress.getLocalHost()).thenReturn(inetAddress);
    } catch (java.net.UnknownHostException e) {
    }
    String result = TradeConfig.rndBalance();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRndBalance_oVfq0_1() {
    String balance = TradeConfig.rndBalance();
    assertNotNull(balance);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRndBalance_oVfq0_2() {
    String balance = TradeConfig.rndBalance();
    assertEquals("1000000", balance);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public static void setup_DgOe0() {
    tradeConfig = new TradeConfig();
  }
}