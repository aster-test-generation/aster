/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContextEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_TradeWebContextListener_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_CatchException_KFFh3() throws Exception {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = mock(ServletContextEvent.class);
    when(event.getServletContext().getResourceAsStream("/properties/daytrader.properties")).thenReturn(null);
    listener.contextInitialized(event);
    verify(System.out).println("daytrader.properties not found");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_RuntimeMode_SystemEnv_YGPJ7() throws Exception {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = mock(ServletContextEvent.class);
    System.setProperty("RUNTIME_MODE", "1");
    listener.contextInitialized(event);
    assertEquals(1, TradeConfig.getRunTimeMode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testContextInitialized_OrderProcessingMode_SystemEnv_KMWe9() throws Exception {
    TradeWebContextListener listener = new TradeWebContextListener();
    ServletContextEvent event = mock(ServletContextEvent.class);
    System.setProperty("ORDER_PROCESSING_MODE", "1");
    listener.contextInitialized(event);
    assertEquals(1, TradeConfig.getOrderProcessingMode());
  }
}