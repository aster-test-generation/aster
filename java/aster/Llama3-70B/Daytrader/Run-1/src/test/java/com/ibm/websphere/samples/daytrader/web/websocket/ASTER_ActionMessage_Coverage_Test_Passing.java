/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ActionMessage_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_EmptyJsonText_NoException_uQXi1() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "";
    actionMessage.doDecoding(jsonText);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_ValidJsonText_KeyNameNotFound_TDkX4() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"other\":\"myAction\"}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_ValidJsonText_NestedJson_YWKP6() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"action\":{\"inner\":\"myAction\"}}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_ValidJsonText_ArrayJson_QuHS7() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"action\":[\"myAction\"]}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_ValidJsonText_NullValue_WcNB8() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"action\":null}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_ValidJsonText_KeyNameFound_CKSt3_fid1() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"action\":\"myAction\"}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_ValidJsonText_MultipleKeyValuePairs_gGKD5_fid1() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"action\":\"myAction\",\"other\":\"otherValue\"}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_ValidJsonText_EmptyStringValue_triv9_fid1() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"action\":\"\"}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }
}