/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServlet_Coverage_Test_Failing {
  private PingServlet pingServlet;
  private ServletConfig servletConfig;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testGetServletInfo_CjZi0() {
    PingServlet pingServlet = new PingServlet();
    String expected = "Basic dynamic HTML generation through a servlet";
    String actual = pingServlet.getServletInfo();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_ipik0() throws IOException, ServletException {
    PingServlet pingServlet = new PingServlet();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    pingServlet.doPost(req, res);
    verify(req).getAttributeNames();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_CallsDoGet_nzjc1() throws IOException, ServletException {
    PingServlet pingServlet = new PingServlet();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    pingServlet.doPost(req, res);
    verify(res).setStatus(200); // or any other status code you expect
  }

  @Test
  public void testDoGet_EtUX0() throws ServletException, IOException {
    PingServlet pingServlet = new PingServlet();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    pingServlet.doGet(req, res);
    verify(res).setContentType("text/html");
    verify(res).getOutputStream();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testGetServletInfo_CjZi0_fid1() {
    PingServlet pingServlet = new PingServlet();
    String actual = pingServlet.getServletInfo();
    assertNotNull(actual);
  }

  @Test
  public void testDoPost_CallsDoGet_nzjc1_wFnw0_fid1() throws IOException, ServletException {
    // assuming PingServlet is in the same package
    PingServlet pingServlet = new com.ibm.websphere.samples.daytrader.web.prims.PingServlet();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    pingServlet.doPost(req, res);
    verify(res).setStatus(anyInt()); // or any other status code you expect
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_dBuH0() throws javax.servlet.ServletException {
    pingServlet = new PingServlet();
    servletConfig = mock(ServletConfig.class);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_SuperInitCalled_XThm1() throws ServletException {
    pingServlet.init(servletConfig);
    verify(servletConfig).getServletContext(); // assuming super.init(config) calls getServletContext()
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_WkdN0() throws javax.servlet.ServletException, java.io.IOException {
    pingServlet = new PingServlet();
  }
}