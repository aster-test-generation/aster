/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

public class Aster_PingServlet2JNDI_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testGetServletInfo_ddNp0() {
    try {
      PingServlet2JNDI pingServlet2JNDI = (PingServlet2JNDI) Class.forName("com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI").newInstance();
      String actual = pingServlet2JNDI.getServletInfo();
      assertNotNull(actual);
    } catch (Exception e) {
      fail("Exception occurred: " + e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_CallsDoGet_yQOK0() throws Exception {
    PingServlet2JNDI servlet = new PingServlet2JNDI();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    servlet.doPost(req, res);
    verify(req).getMethod(); // This will fail if doGet is not called
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_NoException_ygua1() throws Exception {
    PingServlet2JNDI servlet = new PingServlet2JNDI();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    servlet.doPost(req, res); // This should not throw any exception
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_ZgCV0_QnIm0() throws javax.servlet.ServletException, ClassNotFoundException {
    try {
      Class.forName("com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI");
      PingServlet2JNDI pingServlet2JNDI = new PingServlet2JNDI();
      javax.servlet.ServletConfig servletConfig = org.mockito.Mockito.mock(javax.servlet.ServletConfig.class);
      pingServlet2JNDI.init(servletConfig);
    } catch (ClassNotFoundException e) {
      // Class is not found
      assert true;
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testGetServletInfo_ddNp0_fid1() {
    PingServlet2JNDI pingServlet2JNDI = new PingServlet2JNDI();
    String expected = "Basic JNDI look up of a JDBC DataSource";
    String actual = pingServlet2JNDI.getServletInfo();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_ZgCV0_QnIm0_fid2() throws javax.servlet.ServletException {
    PingServlet2JNDI pingServlet2JNDI = new PingServlet2JNDI();
    javax.servlet.ServletConfig servletConfig = org.mockito.Mockito.mock(javax.servlet.ServletConfig.class);
    pingServlet2JNDI.init(servletConfig);
  }
}