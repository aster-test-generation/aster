/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import com.ibm.websphere.samples.daytrader.util.Log;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServlet2ServletRcv_Coverage_Test_Failing {
  private PrintWriter out;
  private HttpServletResponse response;
  private PingServlet2ServletRcv servlet;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_qrFo0() throws javax.servlet.ServletException, java.io.IOException {
    servlet = new PingServlet2ServletRcv();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_GetWriter_XUdf3_ULYM0() throws Exception {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    PrintWriter writer = mock(PrintWriter.class);
    when(res.getWriter()).thenReturn(writer);
    PingServlet2ServletRcv servlet = new PingServlet2ServletRcv();
    servlet.doGet(req, res);
    verify(res, times(1)).getWriter();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_Exception_lKzy7_taSE0() throws Exception {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    Log log = mock(Log.class);
    PingServlet2ServletRcv servlet = spy(new PingServlet2ServletRcv());
    doNothing().when(log).error(any(Exception.class), anyString());
    when(req.getAttribute("ab")).thenThrow(new Exception());
    servlet.doGet(req, res);
    verify(log, times(1)).error(any(Exception.class), eq("PingServlet2ServletRcv.doGet(...): general exception"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_CatchException_kcmr9_nMDk0() throws Exception {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    Log log = mock(Log.class);
    PingServlet2ServletRcv servlet = spy(new PingServlet2ServletRcv());
    doNothing().when(log).error(any(Exception.class), anyString());
    when(req.getAttribute("ab")).thenThrow(new Exception());
    servlet.doGet(req, res);
    verify(log).error(any(Exception.class), eq("PingServlet2ServletRcv.doGet(...): general exception" + anyString()));
    verify(res).sendError(500, "PingServlet2ServletRcv.doGet(...): general exception" + anyString());
  }
}