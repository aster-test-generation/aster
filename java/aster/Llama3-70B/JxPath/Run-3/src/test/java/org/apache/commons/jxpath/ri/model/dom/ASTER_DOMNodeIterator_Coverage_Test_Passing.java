/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.w3c.dom.Node;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DOMNodeIterator_Coverage_Test_Passing {
    private int position = 0;
    DOMNodeIterator domNodeIterator;
    Node node;
    NodePointer nodePointer;
    NodeTypeTest nodeTypeTest;
@BeforeEach
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setup_QgZE0() throws Exception {
        node = mock(Node.class);
        nodePointer = mock(NodePointer.class);
        nodeTypeTest = mock(NodeTypeTest.class);
        domNodeIterator = new DOMNodeIterator(nodePointer, nodeTypeTest, false, nodePointer);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testsetPosition_EqualPosition_ReturnsTrue_IWct5_gGDJ0_1() throws Exception {
    DOMNodeIterator domNodeIterator = new DOMNodeIterator(new DOMNodePointer(null, null, null), new NodeTypeTest(0), false, null);
    domNodeIterator.setPosition(5);
    NodePointer nodePointer = domNodeIterator.getNodePointer();
    assertNotNull(nodePointer);}
}