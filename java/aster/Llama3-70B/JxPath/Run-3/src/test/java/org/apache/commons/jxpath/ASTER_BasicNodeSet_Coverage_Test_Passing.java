/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import java.util.HashSet;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BasicNodeSet_Coverage_Test_Passing {
private HashSet<Pointer> pointers = new HashSet<>();
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValues_PointersIsEmpty_yVbI1() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<String> values = basicNodeSet.getValues();
        assertNotNull(values);
        assertEquals(0, values.size());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValues_PointersIsEmpty_yVbI1_1() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<String> values = basicNodeSet.getValues();
        assertNotNull(values);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValues_PointersIsEmpty_yVbI1_2() {
        BasicNodeSet basicNodeSet = new BasicNodeSet();
        List<String> values = basicNodeSet.getValues();
        assertEquals(0, values.size());}
}