/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JXPathContextReferenceImpl_Coverage_Test_Passing {
    JXPathContextReferenceImpl jxpathcontextreferenceimpl;
    JXPathContext parentContext;
    Object contextBean;
    NodePointer contextPointer;
@BeforeEach
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setup_npkO0() throws Exception {
        parentContext = mock(JXPathContext.class);
        contextBean = new Object();
        contextPointer = mock(NodePointer.class);
        jxpathcontextreferenceimpl = new JXPathContextReferenceImpl(parentContext, contextBean, contextPointer);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAllocateConditionally_ReturnNull_QUcA1() {
        Object result = JXPathContextReferenceImpl.allocateConditionally("NonExistingClass", "NonExistingClass");
        assert result == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_NullXPath_kABq4() throws Exception {
        String xpath = null;
        Expression expr = mock(Expression.class);
        Object value = new Object();
        try {
            jxpathcontextreferenceimpl.setValue(xpath, expr, value);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            assertNotNull(e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_NullExpr_YpAD5() throws Exception {
        String xpath = "xpath";
        Expression expr = null;
        Object value = new Object();
        try {
            jxpathcontextreferenceimpl.setValue(xpath, expr, value);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            assertNotNull(e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreatePath_IIkX0_xIiK0() {
    JXPathContextReferenceImpl parentContext = new JXPathContextReferenceImpl(null, new Object());
    JXPathContextReferenceImpl jXPathContextReferenceImpl = new JXPathContextReferenceImpl(parentContext, new Object());
    String xpath = "some_xpath";
    NamespaceResolver namespaceResolver = jXPathContextReferenceImpl.getNamespaceResolver();
    assertNotNull(namespaceResolver);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPointer_gPzP0_REqd0() {
    JXPathContextReferenceImpl parentContext = new JXPathContextReferenceImpl(null, null);
    Object contextBean = new Object();
    JXPathContextReferenceImpl jXPathContextReferenceImpl = new JXPathContextReferenceImpl(parentContext, contextBean);
    String xpath = "some_xpath";
    NamespaceResolver namespaceResolver = jXPathContextReferenceImpl.getNamespaceResolver();
    assertNotNull(namespaceResolver);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetNamespaceContextPointer_NullPointer_foGa3_CfrR0() throws Exception {
    JXPathContextReferenceImpl impl = new JXPathContextReferenceImpl(new JXPathContextReferenceImpl(null, null), null, null);
    NamespaceResolver resolver = new NamespaceResolver();
    impl.namespaceResolver = resolver;
    try {
        impl.getNamespaceResolver().getNamespaceContextPointer();
        impl.setNamespaceContextPointer(null);
        assert false; // Should throw NullPointerException
    } catch (NullPointerException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNamespaceResolver_QjCs0() {
    JXPathContextReferenceImpl impl = new JXPathContextReferenceImpl(null, null);
    NamespaceResolver namespaceResolver = impl.getNamespaceResolver();
    assertNotNull(namespaceResolver);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNamespaceResolver_sZFt0() {
    JXPathContextReferenceImpl impl = new JXPathContextReferenceImpl(null, null);
    NamespaceResolver resolver = impl.getNamespaceResolver();
    assertNotNull(resolver);
}
}