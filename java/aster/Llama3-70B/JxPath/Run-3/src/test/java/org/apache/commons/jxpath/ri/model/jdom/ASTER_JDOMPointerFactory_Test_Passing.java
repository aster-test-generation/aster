/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.jdom.Document;
import org.jdom.Element;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JDOMPointerFactory_Test_Passing {
    @Mock
    private NodePointer parent;
    @Mock
    private QName name;
    @Mock
    private Document document;
    @Mock
    private Element element;
    private JDOMPointerFactory jdompointerfactory;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_Document_1() throws Exception {
        jdompointerfactory = new JDOMPointerFactory();
        NodePointer result = jdompointerfactory.createNodePointer(parent, name, document);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_Document_2() throws Exception {
        jdompointerfactory = new JDOMPointerFactory();
        NodePointer result = jdompointerfactory.createNodePointer(parent, name, document);
        assertTrue(result instanceof JDOMNodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_Element_1() throws Exception {
        jdompointerfactory = new JDOMPointerFactory();
        NodePointer result = jdompointerfactory.createNodePointer(parent, name, element);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_Element_2() throws Exception {
        jdompointerfactory = new JDOMPointerFactory();
        NodePointer result = jdompointerfactory.createNodePointer(parent, name, element);
        assertTrue(result instanceof JDOMNodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_Null() throws Exception {
        jdompointerfactory = new JDOMPointerFactory();
        NodePointer result = jdompointerfactory.createNodePointer(parent, name, null);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_Other() throws Exception {
        jdompointerfactory = new JDOMPointerFactory();
        Object other = new Object();
        NodePointer result = jdompointerfactory.createNodePointer(parent, name, other);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_bmdf0() {
        JDOMPointerFactory jdomPointerFactory = new JDOMPointerFactory();
        int result = jdomPointerFactory.getOrder();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_Document_QXDK0() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("qualifiedName");
        Document document = null; // Initialize document object
        NodePointer pointer = factory.createNodePointer(null, name, document);
        assertNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_Element_RsUN1() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("prefix", "localName");
        Element element = new Element("element"); // Initialize element object
        NodePointer pointer = factory.createNodePointer(null, name, element);
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_Null_eIjG2() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("qualifiedName");
        Object bean = null;
        Locale locale = Locale.US;
        NodePointer pointer = factory.createNodePointer(name, bean, locale);
        assertNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_Document() throws Exception {
        jdompointerfactory = new JDOMPointerFactory();
        NodePointer result = jdompointerfactory.createNodePointer(parent, name, document);
        assertNotNull(result);
        assertTrue(result instanceof JDOMNodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_Element() throws Exception {
        jdompointerfactory = new JDOMPointerFactory();
        NodePointer result = jdompointerfactory.createNodePointer(parent, name, element);
        assertNotNull(result);
        assertTrue(result instanceof JDOMNodePointer);
    }
}