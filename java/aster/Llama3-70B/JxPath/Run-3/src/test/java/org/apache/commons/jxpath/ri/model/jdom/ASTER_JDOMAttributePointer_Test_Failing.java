/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.jdom.Attribute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JDOMAttributePointer_Test_Failing {
    JDOMAttributePointer jdomattributepointer;
    DOMNodePointer parent;
    Attribute attr;
    NodePointer pointer1;
    NodePointer pointer2;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetName_1() throws Exception {
        when(JDOMNodePointer.getPrefix(attr)).thenReturn("prefix");
        when(JDOMNodePointer.getLocalName(attr)).thenReturn("localName");
        jdomattributepointer = new JDOMAttributePointer(parent, attr);
        QName result = jdomattributepointer.getName();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetName_2() throws Exception {
        when(JDOMNodePointer.getPrefix(attr)).thenReturn("prefix");
        when(JDOMNodePointer.getLocalName(attr)).thenReturn("localName");
        jdomattributepointer = new JDOMAttributePointer(parent, attr);
        QName result = jdomattributepointer.getName();
        assertEquals("prefix", result.getPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetName_3() throws Exception {
        when(JDOMNodePointer.getPrefix(attr)).thenReturn("prefix");
        when(JDOMNodePointer.getLocalName(attr)).thenReturn("localName");
        jdomattributepointer = new JDOMAttributePointer(parent, attr);
        QName result = jdomattributepointer.getName();
        assertEquals("localName", result.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetName() throws Exception {
        when(JDOMNodePointer.getPrefix(attr)).thenReturn("prefix");
        when(JDOMNodePointer.getLocalName(attr)).thenReturn("localName");
        jdomattributepointer = new JDOMAttributePointer(parent, attr);
        QName result = jdomattributepointer.getName();
        assertNotNull(result);
        assertEquals("prefix", result.getPrefix());
        assertEquals("localName", result.getName());
    }
}