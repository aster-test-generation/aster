/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;

import java.util.List;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.w3c.dom.Attr;
import org.w3c.dom.Node;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DOMNamespaceIterator_Test_Passing {
    private int position = 0;
    DOMNamespaceIterator domnamespaceiterator;
    Node node;
    DOMNodePointer nodepointer;
    private List<String> attributes;
    private NodePointer parent;
    Attr attr;
    List list;
    DOMNodePointer domNodePointer;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition() throws Exception {
        node = mock(Node.class);
        nodepointer = new DOMNodePointer(node, Locale.US, "id");
        domnamespaceiterator = new DOMNamespaceIterator(nodepointer);
        assertEquals(0, domnamespaceiterator.getPosition());
        domnamespaceiterator.getPosition(); // verify no exception
    }
}