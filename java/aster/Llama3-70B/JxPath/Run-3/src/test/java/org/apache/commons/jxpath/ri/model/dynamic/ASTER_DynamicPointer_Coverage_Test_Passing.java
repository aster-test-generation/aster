/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;
import java.util.Locale;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DynamicPointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NameIsNotNull_Qxif1() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.US);
        DynamicPointer other = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.US);
        assertFalse(dynamicPointer.equals(other));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NameIsDifferent_Lbpe2() {
        DynamicPointer dynamicPointer = new DynamicPointer(new QName("name1"), new Object(), new PageContextHandler(), Locale.US);
        DynamicPointer other = new DynamicPointer(new QName("name2"), new Object(), new PageContextHandler(), Locale.US);
        assertFalse(dynamicPointer.equals(other));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAsPath_ParentIsNull_ReturnsSlash_HwaJ0() {
    QName name = new QName("test");
    Object bean = new Object();
    PageContextHandler handler = new PageContextHandler();
    Locale locale = Locale.US;
    DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
    String result = dynamicPointer.asPath();
    assertEquals("/", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_Vjkx0() {
        PageContextHandler handler = new PageContextHandler();
        Locale locale = new Locale("en", "US");
        QName name = new QName("qualifiedName");
        Object bean = new Object();
        DynamicPointer dynamicPointer = new DynamicPointer(name, bean, handler, locale);
        int hashCode = dynamicPointer.hashCode();
        assert hashCode != 0;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_NameIsNull_dZBx0_dZRJ0() {
    DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), new Object(), new PageContextHandler(), Locale.US);
    DynamicPointer other = new DynamicPointer(new QName(""), new Object(), new PageContextHandler(), Locale.US);
    assertFalse(dynamicPointer.equals(other));
}
}