/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanAttributeIterator_Test_Failing {
    private int position = 0;
    BeanAttributeIterator beanattributeiterator;
    private boolean includeXmlLang;
    BeanPointer parent;
    QName name;
    @Mock
    private NodePointer mockParent;
    @Mock
    private LangAttributePointer mockLangAttributePointer;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer1_aVog0() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class);
        Object bean = new Object();
        QName name = new QName("prefix", "localName");
        BeanPointer parent = new BeanPointer(name, bean, beanInfo, Locale.US);
        BeanAttributeIterator iterator = new BeanAttributeIterator(parent, name);
        NodePointer nodePointer = iterator.getNodePointer();
        assertNotNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPosition_Lanj0() throws Exception {
        QName name = new QName("test");
        Object bean = new Object();
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class, true);
        Locale locale = Locale.US;
        BeanPointer parent = new BeanPointer(name, bean, beanInfo, locale);
        BeanAttributeIterator beanAttributeIterator = new BeanAttributeIterator(parent, name);
        NodePointer nodePointer = beanAttributeIterator.getNodePointer();
        assertNotNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetNodePointer_tiaj0() throws Exception {
        BeanPointer mockParent = mock(BeanPointer.class);
        includeXmlLang = true;
        position = 1;
        beanattributeiterator = new BeanAttributeIterator(mockParent, new QName("name"));
        NodePointer result = beanattributeiterator.getNodePointer();
        assertNotNull(result);
    }
}