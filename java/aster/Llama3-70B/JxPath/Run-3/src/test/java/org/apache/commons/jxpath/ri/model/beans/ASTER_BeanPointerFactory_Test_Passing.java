/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPointerFactory_Test_Passing {
    @Mock
    private NodePointer parent;
    @Mock
    private QName name;
    @Mock
    private Object bean;
    @Mock
    private JXPathBeanInfo bi;
    private BeanPointerFactory beanpointerfactory;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_withNullBean_1() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        // When
        NodePointer result = beanpointerfactory.createNodePointer(parent, name, null);
        // Then
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_withNullBean_2() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        // When
        NodePointer result = beanpointerfactory.createNodePointer(parent, name, null);
        // Then
        assertTrue(result instanceof NullPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_rCGQ0_1() {
        BeanPointerFactory factory = new BeanPointerFactory();
        QName name = new QName("prefix", "localName");
        Object bean = new Object();
        Locale locale = Locale.US;
        NodePointer pointer = factory.createNodePointer(name, bean, locale);
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_rCGQ0_2() {
        BeanPointerFactory factory = new BeanPointerFactory();
        QName name = new QName("prefix", "localName");
        Object bean = new Object();
        Locale locale = Locale.US;
        NodePointer pointer = factory.createNodePointer(name, bean, locale);
        assertEquals(name, pointer.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_rCGQ0_3() {
        BeanPointerFactory factory = new BeanPointerFactory();
        QName name = new QName("prefix", "localName");
        Object bean = new Object();
        Locale locale = Locale.US;
        NodePointer pointer = factory.createNodePointer(name, bean, locale);
        assertEquals(bean, pointer.getNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_rCGQ0_4() {
        BeanPointerFactory factory = new BeanPointerFactory();
        QName name = new QName("prefix", "localName");
        Object bean = new Object();
        Locale locale = Locale.US;
        NodePointer pointer = factory.createNodePointer(name, bean, locale);
        assertEquals(locale, pointer.getLocale());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_Cbqp0_pJEl0() {
        BeanPointerFactory beanPointerFactory = new BeanPointerFactory();
        int result = beanPointerFactory.getOrder();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_withNullBean() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        // When
        NodePointer result = beanpointerfactory.createNodePointer(parent, name, null);
        // Then
        assertNotNull(result);
        assertTrue(result instanceof NullPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_rCGQ0() {
        BeanPointerFactory factory = new BeanPointerFactory();
        QName name = new QName("prefix", "localName");
        Object bean = new Object();
        Locale locale = Locale.US;
        NodePointer pointer = factory.createNodePointer(name, bean, locale);
        assertNotNull(pointer);
        assertEquals(name, pointer.getName());
        assertEquals(bean, pointer.getNode());
        assertEquals(locale, pointer.getLocale());
    }
}