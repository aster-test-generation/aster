/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.beanutils.LazyDynaBean;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_StrictLazyDynaBeanPointerFactory_Test_Passing {
    StrictLazyDynaBeanPointerFactory strictlazydynabeanpointerfactory;
    NodePointer parent;
    QName name;
    LazyDynaBean object;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_null() throws Exception {
        strictlazydynabeanpointerfactory = new StrictLazyDynaBeanPointerFactory();
        parent = mock(NodePointer.class);
        name = new QName("test");
        object = mock(LazyDynaBean.class);
        NodePointer result = strictlazydynabeanpointerfactory.createNodePointer(parent, name, new Object());
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_lCmB0() {
        StrictLazyDynaBeanPointerFactory factory = new StrictLazyDynaBeanPointerFactory();
        int order = factory.getOrder();
        assertEquals(DynaBeanPointerFactory.DYNA_BEAN_POINTER_FACTORY_ORDER - 1, order);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerLazyDynaBean_XaMx0() {
        StrictLazyDynaBeanPointerFactory factory = new StrictLazyDynaBeanPointerFactory();
        QName name = new QName("prefix", "localName");
        LazyDynaBean object = new LazyDynaBean();
        Locale locale = Locale.US;
        NodePointer pointer = factory.createNodePointer(name, object, locale);
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerNotLazyDynaBean_zxRX1() {
        StrictLazyDynaBeanPointerFactory factory = new StrictLazyDynaBeanPointerFactory();
        QName name = new QName("prefix", "localName");
        Object object = new Object();
        Locale locale = Locale.US;
        NodePointer pointer = factory.createNodePointer(name, object, locale);
        assertNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_hzEz0_1() throws Exception {
        StrictLazyDynaBeanPointerFactory strictlazydynabeanpointerfactory = new StrictLazyDynaBeanPointerFactory();
        NodePointer parent = mock(NodePointer.class);
        QName name = new QName("test");
        LazyDynaBean object = mock(LazyDynaBean.class);
        NodePointer result = strictlazydynabeanpointerfactory.createNodePointer(parent, name, object);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_hzEz0_2() throws Exception {
        StrictLazyDynaBeanPointerFactory strictlazydynabeanpointerfactory = new StrictLazyDynaBeanPointerFactory();
        NodePointer parent = mock(NodePointer.class);
        QName name = new QName("test");
        LazyDynaBean object = mock(LazyDynaBean.class);
        NodePointer result = strictlazydynabeanpointerfactory.createNodePointer(parent, name, object);
        assertTrue(result instanceof NodePointer);
    }
}