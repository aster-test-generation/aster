/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TokenMgrError_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes1_xCYl0() {
        String str = "Hello World";
        String result = TokenMgrError.addEscapes(str);
        assertEquals("Hello World", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes2_GJef1() {
        String str = "Hello\nWorld";
        String result = TokenMgrError.addEscapes(str);
        assertEquals("Hello\\nWorld", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes3_oZBn2() {
        String str = "Hello\tWorld";
        String result = TokenMgrError.addEscapes(str);
        assertEquals("Hello\\tWorld", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLexicalError_EOFSeen_uPia0() {
        String result = TokenMgrError.LexicalError(true, 0, 1, 1, "errorAfter", 'a');
        assertEquals("Lexical error at line 1, column 1.  Encountered: <EOF> after : \"errorAfter\"", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLexicalError_notEOFSeen_GoET1() {
        String result = TokenMgrError.LexicalError(false, 0, 1, 1, "errorAfter", 'a');
        assertEquals("Lexical error at line 1, column 1.  Encountered: \"a\" (97), after : \"errorAfter\"", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes4_fXDi3_fid2() {
        String str = "Hello\u0000World";
        String result = TokenMgrError.addEscapes(str);
    }
}