/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ExpressionPath_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_AppendExpressionWithoutParenthesis_bhkl7() {
        ExpressionPath expressionPath = new ExpressionPath(new Constant(1), new Expression[0], new Step[0]);
        assertEquals(expressionPath.getExpression().toString(), expressionPath.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsSimpleExpressionPath_BasicKnownFalse_BasicFalse_SxPb2_CjCf0() {
    ExpressionPath expressionPath = new ExpressionPath(new Constant("string"), new Expression[0], new Step[0]);
    boolean result = expressionPath.isSimpleExpressionPath();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testComputeContextDependent_ExpressionIsNotContextDependent_PredicatesIsNull_pbOc1_eBdF0() {
    Constant expression = new Constant("string");
    ExpressionPath expressionPath = new ExpressionPath(expression, null, null);
    boolean result = expressionPath.computeContextDependent();
    assertFalse(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsSimpleExpressionPath_BasicKnownFalse_BasicTrue_OLEp1_OeGp0() {
    ExpressionPath expressionPath = new ExpressionPath(new Constant("string"), new Expression[0], new Step[0]);
    boolean result = expressionPath.isSimpleExpressionPath();
    assert(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testComputeContextDependent_ExpressionIsNotContextDependent_PredicatesIsNotNull_PredicateIsNotContextDependent_KeyK3_IiZF0() {
    Constant expression = new Constant("string");
    Constant predicate = new Constant("string");
    Expression[] predicates = {predicate};
    ExpressionPath expressionPath = new ExpressionPath(expression, predicates, null);
    boolean result = expressionPath.computeContextDependent();
    assertFalse(result);
}
}