/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CollectionPointer_Coverage_Test_Passing {
private CollectionPointer collectionPointer;
private JXPathContext context;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLength_zcVz0() {
        Object collection = new Object();
        Locale locale = new Locale("en", "US");
        CollectionPointer collectionPointer = new CollectionPointer(collection, locale);
        int length = collectionPointer.getLength();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_AtomicValue_rwCu1() {
        Object atomicValue = "atomicValue";
        CollectionPointer collectionPointer = new CollectionPointer(atomicValue, new Locale("en"));
        boolean result = collectionPointer.isLeaf();
        assert(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_NonAtomicValue_qcBB2() {
        Object nonAtomicValue = new Object();
        CollectionPointer collectionPointer = new CollectionPointer(nonAtomicValue, new Locale("en"));
        boolean result = collectionPointer.isLeaf();
        assert(!result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameCollectionAndIndex_ReturnsTrue_TtFh0() {
        Object collection = new Object();
        Locale locale = new Locale("en", "US");
        CollectionPointer collectionPointer1 = new CollectionPointer(collection, locale);
        CollectionPointer collectionPointer2 = new CollectionPointer(collection, locale);
        boolean result = collectionPointer1.equals(collectionPointer2);
        assert(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentCollectionAndSameIndex_ReturnsFalse_CfQb1() {
        Object collection1 = new Object();
        Object collection2 = new Object();
        Locale locale = new Locale("en", "US");
        CollectionPointer collectionPointer1 = new CollectionPointer(collection1, locale);
        CollectionPointer collectionPointer2 = new CollectionPointer(collection2, locale);
        boolean result = collectionPointer1.equals(collectionPointer2);
        assert(!result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNode_NullTest_ugLj1() {
        CollectionPointer collectionPointer = new CollectionPointer(new Object(), new Locale("en"));
        boolean result = collectionPointer.testNode(null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_1_leTX0() {
        CollectionPointer collectionPointer = new CollectionPointer(new Object(), new Locale("en"));
        String result = collectionPointer.asPath();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_5_WkjI4() {
        CollectionPointer collectionPointer = new CollectionPointer(new Object(), new Locale("en"));
        collectionPointer.setIndex(1);
        String result = collectionPointer.asPath();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_8_VkEE7() {
        CollectionPointer collectionPointer = new CollectionPointer(new Object(), new Locale("en"));
        collectionPointer.setIndex(0);
        String result = collectionPointer.asPath();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_10_uPdC9() {
        CollectionPointer collectionPointer = new CollectionPointer(new Object(), new Locale("en"));
        collectionPointer.setIndex(-1);
        String result = collectionPointer.asPath();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAttributeIterator_WHOLE_COLLECTION_iPgo0_qePW0_1() {
    CollectionPointer collectionPointer = new CollectionPointer(new Object(), Locale.US);
    QName name = new QName("prefix", "localName");
    ((NodePointer) collectionPointer).setIndex(NodePointer.WHOLE_COLLECTION);
    NodeIterator iterator = collectionPointer.attributeIterator(name);
    assertNotNull(iterator);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAttributeIterator_WHOLE_COLLECTION_iPgo0_qePW0_2() {
    CollectionPointer collectionPointer = new CollectionPointer(new Object(), Locale.US);
    QName name = new QName("prefix", "localName");
    ((NodePointer) collectionPointer).setIndex(NodePointer.WHOLE_COLLECTION);
    NodeIterator iterator = collectionPointer.attributeIterator(name);
    assertTrue(iterator instanceof CollectionAttributeNodeIterator);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNamespaceIterator_WHOLE_COLLECTION_Fint0_KLLg0() {
    CollectionPointer collectionPointer = new CollectionPointer(new Object(), Locale.US);
    NodeIterator result = collectionPointer.namespaceIterator();
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_Clone_YKRo0_bMKr0() {
    CollectionPointer collectionPointer = new CollectionPointer(new Object(), Locale.US);
    JXPathContext context = JXPathContext.newContext(new Object());
    QName name = new QName("test");
    int index = 0;
    Object value = new Object();
    NodePointer ptr = collectionPointer.createChild(context, name, index, value);
    assertNotNull(ptr); // Verify that ptr is not null
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValuePointer_valuePointerIsNull_ciiG0_ehsJ0() {
    CollectionPointer collectionPointer = new CollectionPointer(new Object(), Locale.US);
    collectionPointer.setIndex(CollectionPointer.WHOLE_COLLECTION);
    NodePointer result = collectionPointer.getValuePointer();
    assertSame(collectionPointer, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_CreatePath_JUWA2_MPSy0() {
    CollectionPointer collectionPointer = new CollectionPointer(new Object(), Locale.US);
    JXPathContext context = JXPathContext.newContext(new Object());
    QName name = new QName("test");
    int index = 0;
    Object value = new Object();
    NodePointer ptr = collectionPointer.createChild(context, name, index, value);
    assertNotNull(ptr.getValue()); // Verify that createPath returns a NodePointer with a value
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsContainer_aNhI0_ieOj0_fid2() {
    CollectionPointer collectionPointer = new CollectionPointer(new Object(), Locale.US);
    assertFalse(collectionPointer.isContainer());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_CreatePath_NodePointer_geWK2_zBte0_1_fid2() {
    Object obj = new Object[2]; // Initialize an array of size 2
    JXPathContext context = JXPathContext.newContext(obj);
    QName name = new QName("test");
    int index = 1;
    CollectionPointer collectionPointer = new CollectionPointer(obj, Locale.US);
    NodePointer result = collectionPointer.createChild(context, name, index);
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_CreatePath_NodePointer_geWK2_zBte0_2_fid2() {
    Object obj = new Object[2]; // Changed from new Object() to new Object[2]
    JXPathContext context = JXPathContext.newContext(obj);
    QName name = new QName("test");
    int index = 1;
    CollectionPointer collectionPointer = new CollectionPointer(obj, Locale.US);
    NodePointer result = collectionPointer.createChild(context, name, index);
    assertNotNull(result.createPath(context));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_Clone_NodePointer_ldjW0_nqQQ0_1_fid2() {
    Object obj = new Object[2]; // changed from new Object() to new Object[2]
    JXPathContext context = JXPathContext.newContext(obj);
    QName name = new QName("test");
    int index = 1;
    CollectionPointer collectionPointer = new CollectionPointer(obj, Locale.US);
    NodePointer result = collectionPointer.createChild(context, name, index);
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_Clone_NodePointer_ldjW0_nqQQ0_2_fid2() {
    Object obj = new Object[2];
    JXPathContext context = JXPathContext.newContext(obj);
    QName name = new QName("test");
    int index = 1;
    CollectionPointer collectionPointer = new CollectionPointer(obj, Locale.US);
    NodePointer result = collectionPointer.createChild(context, name, index);
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_SetIndex_JgMq1_wnkr0_fid2() {
    Object bean = new Object[2]; // Initialize an array of size 2
    CollectionPointer collectionPointer = new CollectionPointer(bean, Locale.US);
    JXPathContext context = JXPathContext.newContext(bean);
    QName name = new QName("test");
    int index = 1;
    Object value = new Object();
    NodePointer ptr = collectionPointer.createChild(context, name, index, value);
    assertNotNull(ptr); // Replace the erroneous assertion
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_SetIndex_NodePointer_JzLS1_LLky0_fid2() {
    Object obj = new Object[2]; // Initialize an array of size 2
    JXPathContext context = JXPathContext.newContext(obj);
    QName name = new QName("test");
    int index = 1;
    CollectionPointer collectionPointer = new CollectionPointer(obj, Locale.US);
    NodePointer result = collectionPointer.createChild(context, name, index);
    assertNotNull(result); // Replace the assertion with a valid one
}
}