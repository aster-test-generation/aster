/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JDOMNodeIterator_Test_Passing {
    private int position = 0;
    JDOMNodeIterator jdomnodeiterator;
    @Mock
    private DOMNodePointer parent;
    @Mock
    private NodeTypeTest nodeTest;
    @Mock
    private DOMNodePointer startWith;
    private Object child;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition() throws Exception {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        NodeTypeTest nodeTest = mock(NodeTypeTest.class);
        DOMNodePointer startWith = mock(DOMNodePointer.class);
        jdomnodeiterator = new JDOMNodeIterator(parent, nodeTest, false, startWith);
        assertEquals(0, jdomnodeiterator.getPosition());
    }
}