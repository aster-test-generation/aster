/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.ArrayList;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.Compiler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_XPathParser_Test_Passing {
    private int[] jj_la1 = new int[39];
    private Compiler compiler;
    private int jj_gen;
    @Mock
    private Compiler compilerMock;
    @Mock
    private XPathParserTokenManager tokenManagerMock;
    @Mock
    private SimpleCharStream streamMock;
    XPathParser xpathparser;
    @Mock
    private Object ex;
    @Mock
    private Object p;
    @Mock
    private ArrayList ps;
    @Mock
    private ArrayList steps;
    XPathParserTokenManager tokenManager;
    SimpleCharStream stream;
    private int jj_endpos;
    static private int[] jj_la1_1;
    static private int[] jj_la1_2;
    private int jj_kind = -1;
    private java.util.Vector jj_expentries = new java.util.Vector();
    private int[] jj_expentry;
    static private int[] jj_la1_0;
    @Mock
    private Token token;
    SimpleCharStream simpleCharStream;
    @Mock
    private Token tokenMock;
    @Mock
    private Token jj_nt;
    private Token jj_scanpos, jj_lastpos;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_vFhD2() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_oBoN0() {
        XPathParser parser = new XPathParser(new java.io.StringReader("input"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_FoxD4() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_Arhz6() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.InputStreamReader(new java.io.ByteArrayInputStream(new byte[]{})), 1, 1)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException8_rLBg7() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.InputStreamReader(new java.io.ByteArrayInputStream(new byte[]{})), 1, 1, 1024)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_jOvf2() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1)));
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_AeIj5() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024)));
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_ipIU4() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1)));
        ParseException e = parser.generateParseException();
        assertNotEquals(null, e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_WcGl5() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024)));
        ParseException e = parser.generateParseException();
        assertNotEquals(null, e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEnableTracing_HYaQ0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        parser.enable_tracing();
        assertTrue(true); // assert that no exception is thrown
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDisableTracing_qDqx0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        parser.disable_tracing();
        assertTrue(true); // assert that no exception is thrown
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_Rqui4_VNUx0() {
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(new SimpleCharStream(new java.io.InputStreamReader(new java.io.ByteArrayInputStream(new byte[]{})), 1, 1, 1024));
        XPathParser parser = new XPathParser(tokenManager);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_JIin11_dmCL0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_nWfU6_NTwP0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 1;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_Cnuq0_PKMT0() {
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_KKpn10_OUaF0() {
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tokenManager);
        parser.token = new Token();
        parser.token.kind = 5;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_yfGQ6_kSMr0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = null;
        try {
            parser.QName_Without_CoreFunctions();
        } catch (ParseException e) {
            exception = e;
        }
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_GnUt8_JFZm0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_yxDf11_PNmd0() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""))));
        ParseException exception = null;
        try {
            parser.QName_Without_CoreFunctions();
        } catch (ParseException e) {
            exception = e;
        }
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_mjav10_KAbv0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        try {
            parser.QName_Without_CoreFunctions();
        } catch (ParseException e) {
            ParseException exception = parser.generateParseException();
            assertNotNull(exception);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_ObWH1_NWuS0_1() {
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_bQLe9_DCCB0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 4;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_DeJZ9_Zgkg0_1() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 3;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_lnFN4_ByPQ0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.InputStreamReader(new java.io.ByteArrayInputStream(new byte[]{})), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_uLSE3_nEho0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_yFrU11_iWHR0() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_AOIw6_ryUm0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("abc")));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_WeTu4_IpGm0_1() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_hILb5_PRFO0_1() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_MBCr9_gaqQ0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        try {
            parser.QName_Without_CoreFunctions();
        } catch (ParseException e) {
            assertNotNull(e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_YDWl8_doVS0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_sGUf11_igwd0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getMessage());
        try {
            parser.QName_Without_CoreFunctions();
        } catch (ParseException e) {
            assertNotNull(e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_uILm0_EjoG0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException8_rXzp7_QQCL0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("abc"), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 1;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_bYmq9_rVVF0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("abc"), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 85;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_cDeD11_Gbfw0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("abc"), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = -1;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_FLUA4_tEhL0() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""))));
        parser.token = new Token();
        parser.token.kind = -1;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_wBHA4_CrDh0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 89;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_crwf3_Hrln0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 10;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_ZUEC0_APcG0() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""))));
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_AWIA3_CJMA0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 0;
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_jXpG4_bIsZ0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = -1;
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_iOgp8_NCqT0() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_yxWN11_JfIi0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_ozaJ4_pXqG0() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        parser.token = new Token();
        parser.token.kind = -1;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_aSHr10_nqgV0() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""))));
        try {
            parser.QName_Without_CoreFunctions(); // calling the method under test
        } catch (ParseException e) {
            ParseException exception = parser.generateParseException();
            assertNotNull(exception);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_mEgt4_prSh0() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        parser.token = new Token();
        parser.token.kind = -1;
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_iCef4_jxYy0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 89;
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_DjRu8_bSCQ0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        try {
            parser.QName_Without_CoreFunctions();
        } catch (ParseException e) {
            assertNotNull(e);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_RItq11_NTHI0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = -1;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_MpUP1_WXSX0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.InputStreamReader(new java.io.ByteArrayInputStream(new byte[0]))));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_JbJc4_BOci0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0])));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_xtZQ8_HyWm0_1() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 3;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_QlXw10_YqZD0_1() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 5;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetToken4_TaTi3_gLBt0() {
        java.io.InputStream inputStream = new java.io.ByteArrayInputStream("".getBytes());
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(inputStream, 1, 1, 1024));
        XPathParser parser = new XPathParser(tm);
        assertNotNull(parser);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAbbreviatedAxisSpecifier_PWOZ0_gFwN0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        try {
            int result = parser.AbbreviatedAxisSpecifier();
            assertEquals(Compiler.AXIS_CHILD, result);
        } catch (ParseException e) {
            fail("ParseException should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_aJXT6_vOUM0_fid2() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 89;
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_ttSy6_ebHR0_fid2() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 1;
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_IeQY11_eThM0_fid2() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tm);
        parser.token = new Token();
        parser.token.kind = 6;
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_ObWH1_NWuS0_2_fid2() {
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("")));
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
    }
}