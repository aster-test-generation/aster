/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TokenMgrError_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_Backslash_b_XkRq0() {
        String input = "\b";
        String expected = "\\b";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_Tab_ACMd1() {
        String input = "\t";
        String expected = "\\t";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_Newline_JvdF2() {
        String input = "\n";
        String expected = "\\n";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_FormFeed_NmvW3() {
        String input = "\f";
        String expected = "\\f";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_CarriageReturn_IREj4() {
        String input = "\r";
        String expected = "\\r";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_DoubleQuote_XeAT5() {
        String input = "\"";
        String expected = "\\\"";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_SingleQuote_ojYp6() {
        String input = "'";
        String expected = "\\'";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_Backslash_zGTj7() {
        String input = "\\";
        String expected = "\\\\";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_ControlCharacter_tYUs8() {
        String input = String.valueOf((char) 0x1F);
        String expected = "\\u001f";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_SwitchDefault_nDjq9() {
        String input = "a";
        String expected = "a";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_Switch_RQFq10() {
        String input = "\b\t\n\f\r\"'\\";
        String expected = "\\b\\t\\n\\f\\r\\\"\\'\\\\";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapes_CharGreaterThan0x7e_hGzb13() {
        String input = String.valueOf((char) 0x80);
        String expected = "\\u0080";
        assertEquals(expected, TokenMgrError.addEscapes(input));
    }
}