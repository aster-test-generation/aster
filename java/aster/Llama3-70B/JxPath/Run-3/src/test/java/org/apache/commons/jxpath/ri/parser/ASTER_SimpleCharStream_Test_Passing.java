/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleCharStream_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImage1_tDpH0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        String result = scs.GetImage();
        assert result != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImage2_dbwN1() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.ByteArrayInputStream("".getBytes()), 1, 1, 10);
        String result = scs.GetImage();
        assert result != null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit_Veqz0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""));
        simpleCharStream.ReInit(new java.io.ByteArrayInputStream("".getBytes()), 1, 1, 4096);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit_VGyi0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""));
        java.io.ByteArrayInputStream bais = new java.io.ByteArrayInputStream(new byte[0]);
        scs.ReInit(bais);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit_IisS0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        scs.ReInit(new java.io.ByteArrayInputStream("".getBytes()), 1, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit_Liwl0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        scs.ReInit(new java.io.StringReader(""), 2, 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInit_KTzC0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader(""));
        simpleCharStream.ReInit(new java.io.StringReader(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn4_YEHx3() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.ByteArrayInputStream("".getBytes()));
        assertEquals(0, scs.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn5_wmMs4() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""));
        assertEquals(0, scs.getBeginColumn());
    }

    @Test
    public void testFillBuff7_noQA6_oJDP0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""));
        try {
            scs.getColumn();
            fail("Expected RuntimeException not thrown");
        } catch (RuntimeException e) {
        }
    }

    @Test
    public void testFillBuff8_WywJ7_JSEt0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""));
        try {
            scs.getColumn();
            assert false; // IOException should be thrown
        } catch (RuntimeException e) {
        }
    }

    @Test
    public void testFillBuff9_wwuS8_wSYH0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        try {
            scs.getColumn();
            assert false;
        } catch (Exception e) {
            assert true;
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBackup2_VNMN1_rdVh0() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 10);
        scs.backup(3);
        assertEquals(0, scs.getColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone_PXsA0_XzPg0_1() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        scs.bufpos = 0; // Initialize bufpos
        scs.bufline = new int[1]; // Initialize bufline
        scs.bufcolumn = new int[1]; // Initialize bufcolumn
        scs.buffer = new char[1]; // Initialize buffer
        scs.Done();
        assertNull(scs.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone_PXsA0_XzPg0_2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        scs.bufpos = 0; // Initialize bufpos
        scs.bufline = new int[1]; // Initialize bufline
        scs.bufcolumn = new int[1]; // Initialize bufcolumn
        scs.buffer = new char[1]; // Initialize buffer
        scs.Done();
        assertNull(scs.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone_PXsA0_XzPg0_3() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        scs.bufpos = 0; // Initialize bufpos
        scs.bufline = new int[1]; // Initialize bufline
        scs.bufcolumn = new int[1]; // Initialize bufcolumn
        scs.buffer = new char[1]; // Initialize buffer
        scs.Done();
        assertNull(scs.bufcolumn);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSuffix1_ORtL0_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader("Hello World"), 1, 1);
        char[] suffix = scs.GetSuffix(5);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSuffix2_HNwo1_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.ByteArrayInputStream("Hello World".getBytes()), 1, 1, 10);
        scs.bufpos = 5;
        char[] suffix = scs.GetSuffix(5);
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginLine_jFsm0_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 0, 0);
        assertEquals(1, scs.getBeginLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEndColumn1_cerm0_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEndColumn2_biNP1_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.ByteArrayInputStream("".getBytes()), 1, 1, 10);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEndColumn6_rAlx5_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 10);
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn1_lIzu0_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 0, 0);
        assertEquals(1, scs.getBeginColumn());
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn2_WDyI1_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.ByteArrayInputStream("".getBytes()), 0, 0, 0024);
        assertEquals(1, scs.getBeginColumn());
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn3_yuAQ2_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.ByteArrayInputStream("".getBytes()), 0, 0);
        assertEquals(1, scs.getBeginColumn());
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeginColumn6_lkJB5_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.StringReader(""), 0, 0, 0024);
        assertEquals(1, scs.getBeginColumn());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEndLine3_FFPt2_fid2() {
        SimpleCharStream scs = new SimpleCharStream(new java.io.ByteArrayInputStream("".getBytes()), 1, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAdjustBeginLineColumn2_txMI1_VcvA0_fid2() {
    }
}