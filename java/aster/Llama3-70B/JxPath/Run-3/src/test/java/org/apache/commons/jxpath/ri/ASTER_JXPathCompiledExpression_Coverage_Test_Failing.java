/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import java.util.Iterator;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.compiler.Constant;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.Iterator;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JXPathCompiledExpression_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathAndSetValueWithContextReferenceImpl_UVLP0() {
        JXPathContext context = new JXPathContextReferenceImpl(null, null);
        JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
        Pointer pointer = expression.createPathAndSetValue(context, "value");
        assertNotNull(pointer);
    }
@Test
public void testCreatePathWithContext_kjBc1_zglW0() {
    JXPathContext context = mock(JXPathContext.class);
    JXPathContextReferenceImpl parentContext = mock(JXPathContextReferenceImpl.class);
    when(context.getParentContext()).thenReturn(parentContext);
    Iterator iterator = mock(Iterator.class);
    when(parentContext.iterate(anyString(), any())).thenReturn(iterator);
    JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
    Iterator result = expression.iterate(context);
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreatePathAndSetValueWithCreatePathAndSetValueCall_leEL1_zHXo0() {
    JXPathContext context = mock(JXPathContext.class);
    JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
    expression.iterate(context);
    verify(context).createPathAndSetValue("xpath", "string");
}
@Test
public void testIterateWithContextNotReferenceImpl_STtg1_OBiv0() {
    JXPathContext context = new JXPathContextReferenceImpl(null, null);
    JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
    try {
        expression.iterate(context);
        assert false;
    } catch (ClassCastException e) {
        assert true;
    }
}
@Test
public void testGetValueWithInvalidContext_LPlE1_BcFm0() {
    JXPathContext context = JXPathContext.newContext(new Object());
    JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
    try {
        Object result = expression.getValue(context);
        assert false;
    } catch (ClassCastException e) {
        assert true;
    }
}
@Test
public void testCreatePathWithContext_kjBc1_zglW0_fid2() {
    JXPathContext context = mock(JXPathContext.class);
    JXPathContextReferenceImpl parentContext = mock(JXPathContextReferenceImpl.class);
    when(context.getParentContext()).thenReturn(parentContext);
    Iterator iterator = mock(Iterator.class);
    when(parentContext.iterate(anyString(), any())).thenReturn(iterator);
    JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
    Iterator result = expression.iterate(context);
    assertTrue(result instanceof Iterator);
}
@Test
public void testGetValueWithInvalidContext_LPlE1_BcFm0_fid2() {
    JXPathContext context = JXPathContext.newContext(new Object());
    JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("string"));
    try {
        Object result = expression.getValue(context);
        assert null == result;
    } catch (ClassCastException e) {
        assert true;
    }
}
}