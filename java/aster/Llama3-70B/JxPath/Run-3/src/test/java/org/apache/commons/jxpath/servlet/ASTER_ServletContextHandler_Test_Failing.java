/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockServletContext;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ServletContextHandler_Test_Failing {
    private static int DEFAULT_PROPERTY_COUNT = 16;
    ServletContextHandler servletcontexthandler;
    ServletContext servletContextMock;
    HashSet<String> set;
    ServletContext servletContext;
    HttpSessionAndServletContext httpSessionAndServletContext;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_jeVe0() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        Object context = new Object();
        String[] propertyNames = servletContextHandler.getPropertyNames(context);
        assertNotNull(propertyNames);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNames_jeVe0_fid1() {
        ServletContextHandler servletContextHandler = new ServletContextHandler();
        ServletContext context = new MockServletContext();
        HashSet set = new HashSet();
        servletContextHandler.collectPropertyNames(set, context);
        assertNotNull(set);
    }
}