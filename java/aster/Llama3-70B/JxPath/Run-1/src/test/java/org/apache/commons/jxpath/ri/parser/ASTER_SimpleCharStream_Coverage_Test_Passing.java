/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleCharStream_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffWrapAroundBuffer_hHhL0() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.buffer = new char[10];
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        simpleCharStream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffWrapAroundBufline_yDvk1() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.bufline = new int[10];
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        simpleCharStream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffWrapAroundBufcolumn_nJsD2() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.bufcolumn = new int[10];
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        simpleCharStream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffWrapAroundMaxNextCharInd_qkhf3() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        simpleCharStream.ExpandBuff(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffNoWrapAroundBuffer_XYWl4() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.buffer = new char[10];
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        simpleCharStream.ExpandBuff(false);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffNoWrapAroundBufline_lsGW5() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.bufline = new int[10];
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        simpleCharStream.ExpandBuff(false);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffNoWrapAroundBufcolumn_MFSL6() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.bufcolumn = new int[10];
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        simpleCharStream.ExpandBuff(false);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffNoWrapAroundMaxNextCharInd_gyJD7() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        simpleCharStream.ExpandBuff(false);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffException_qakK8() {
        SimpleCharStream simpleCharStream = new SimpleCharStream(new java.io.StringReader("test"));
        simpleCharStream.buffer = new char[10];
        simpleCharStream.tokenBegin = 5;
        simpleCharStream.bufpos = 8;
        simpleCharStream.bufsize = 10;
        try {
            simpleCharStream.ExpandBuff(true);
            assert false; // should throw an exception
        } catch (Error e) {
        }
    }
}