/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_LocationPath_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_WithAbsoluteAndNoSteps_OlHq2() {
        LocationPath locationPath = new LocationPath(true, new Step[0]);
        assertEquals("", locationPath.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_WithoutAbsoluteAndNoSteps_lHct3() {
        LocationPath locationPath = new LocationPath(false, new Step[0]);
        assertEquals("", locationPath.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_WithNullSteps_BUmW4() {
        LocationPath locationPath = new LocationPath(true, null);
        assertEquals("", locationPath.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_WithSingleStep_qTkM5_vtcV0() {
        LocationPath locationPath = new LocationPath(true, new Step[]{});
        assertTrue(locationPath.isAbsolute());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_WithoutAbsoluteAndSteps_cAKZ1_IVtm0() {
        LocationPath locationPath = new LocationPath(false, new Step[]{});
        assertTrue(locationPath.isAbsolute() == false);
    }
}