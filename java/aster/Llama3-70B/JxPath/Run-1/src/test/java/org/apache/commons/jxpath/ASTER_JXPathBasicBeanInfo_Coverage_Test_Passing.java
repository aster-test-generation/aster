/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.beans.IntrospectionException;
import java.beans.Introspector;
import java.beans.PropertyDescriptor;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_JXPathBasicBeanInfo_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptors_PrintStackTrace_BKYV3() throws IntrospectionException {
        Class clazz = mock(Class.class);
        when(Introspector.getBeanInfo(clazz)).thenThrow(new IntrospectionException("Test Exception"));
        JXPathBasicBeanInfo jXPathBasicBeanInfo = new JXPathBasicBeanInfo(clazz);
        PropertyDescriptor[] propertyDescriptors = jXPathBasicBeanInfo.getPropertyDescriptors();
        assertNotNull(propertyDescriptors);
        assertArrayEquals(new PropertyDescriptor[0], propertyDescriptors);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptors_ReturnEmptyArray_NmpR4() throws IntrospectionException {
        Class clazz = Object.class;
        JXPathBasicBeanInfo jXPathBasicBeanInfo = new JXPathBasicBeanInfo(clazz);
        PropertyDescriptor[] propertyDescriptors = jXPathBasicBeanInfo.getPropertyDescriptors();
        assertNotNull(propertyDescriptors);
        assertArrayEquals(new PropertyDescriptor[0], propertyDescriptors);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptors_ReturnEmptyArray_NmpR4_1() throws IntrospectionException {
        Class clazz = Object.class;
        JXPathBasicBeanInfo jXPathBasicBeanInfo = new JXPathBasicBeanInfo(clazz);
        PropertyDescriptor[] propertyDescriptors = jXPathBasicBeanInfo.getPropertyDescriptors();
        assertNotNull(propertyDescriptors);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptors_ReturnEmptyArray_NmpR4_2() throws IntrospectionException {
        Class clazz = Object.class;
        JXPathBasicBeanInfo jXPathBasicBeanInfo = new JXPathBasicBeanInfo(clazz);
        PropertyDescriptor[] propertyDescriptors = jXPathBasicBeanInfo.getPropertyDescriptors();
        assertArrayEquals(new PropertyDescriptor[0], propertyDescriptors);
    }
}