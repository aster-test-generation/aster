/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PackageFunctions_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction1_vBiQ0() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{};
        Function function = packageFunctions.getFunction("namespace", "name", parameters);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction8_dbJX7() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{};
        Function function = packageFunctions.getFunction("differentNamespace", "name", parameters);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespaces_bmtI0() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Set<String> usedNamespaces = packageFunctions.getUsedNamespaces();
        assertEquals(Collections.singleton("namespace"), usedNamespaces);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction2_iDga1_fid1() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction3_pwLI2_lIVI1_1() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new HashSet()};
        Set usedNamespaces = packageFunctions.getUsedNamespaces();
        assertNotNull(usedNamespaces);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction3_pwLI2_lIVI1_2() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new HashSet()};
        Set usedNamespaces = packageFunctions.getUsedNamespaces();
        assertEquals(1, usedNamespaces.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction3_pwLI2_lIVI1_3() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new HashSet()};
        Set usedNamespaces = packageFunctions.getUsedNamespaces();
        assertTrue(usedNamespaces.contains("namespace"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction4_uanv3_keeI0() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new ArrayList<>()};
        Set usedNamespaces = packageFunctions.getUsedNamespaces();
        assertNotNull(usedNamespaces);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction5_qThE4_qKBP0_1() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Set usedNamespaces = packageFunctions.getUsedNamespaces();
        assertNotNull(usedNamespaces);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction5_qThE4_qKBP0_2() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Set usedNamespaces = packageFunctions.getUsedNamespaces();
        assertEquals(1, usedNamespaces.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction5_qThE4_qKBP0_3() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Set usedNamespaces = packageFunctions.getUsedNamespaces();
        assertTrue(usedNamespaces.contains("namespace"));
    }
}