/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.BasicNodeSet;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_NodeSetContext_Coverage_Test_Passing {
    private List<NodePointer> nodePointers;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCurrentNodePointer_PositionZero_DnRt0() {
        NamespaceContext parentContext = new NamespaceContext(new SelfContext(null, new NodeTypeTest(1)), new NodeTypeTest(1));
        BasicNodeSet nodeSet = new BasicNodeSet();
        NodeSetContext nodeSetContext = new NodeSetContext(parentContext, nodeSet);
        nodeSetContext.setPosition(0); // set position to 0
        NodePointer nodePointer = nodeSetContext.getCurrentNodePointer();
        assertNull(nodePointer); // assert null because setPosition(1) returns false
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition_WithinRange_aAhf0() {
        BasicNodeSet nodeSet = new BasicNodeSet();
        NodeTypeTest nodeTypeTest = new NodeTypeTest(1);
        NamespaceContext namespaceContext = new NamespaceContext(null, nodeTypeTest);
        NodeSetContext nodeSetContext = new NodeSetContext(namespaceContext, nodeSet);
        assertFalse(nodeSetContext.setPosition(3));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition_OutOfRange_LessThanOne_KweH1() {
        BasicNodeSet nodeSet = new BasicNodeSet();
        NodeTypeTest nodeTypeTest = new NodeTypeTest(1);
        NamespaceContext namespaceContext = new NamespaceContext(null, nodeTypeTest);
        NodeSetContext nodeSetContext = new NodeSetContext(namespaceContext, nodeSet);
        assertFalse(nodeSetContext.setPosition(0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition_OutOfRange_GreaterThanSize_QcFX2() {
        BasicNodeSet nodeSet = new BasicNodeSet();
        NodeTypeTest nodeTypeTest = new NodeTypeTest(1);
        NamespaceContext namespaceContext = new NamespaceContext(null, nodeTypeTest);
        NodeSetContext nodeSetContext = new NodeSetContext(namespaceContext, nodeSet);
        assertFalse(nodeSetContext.setPosition(6));
    }
}