/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.ArrayList;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.Compiler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_XPathParser_Test_Passing {
    private int[] jj_la1 = new int[39];
    private Compiler compiler;
    private int jj_gen;
    XPathParser xpathparser;
    SimpleCharStream simpleCharStream;
    XPathParserTokenManager xpathParserTokenManager;
    XPathParserTokenManager tokenManager;
    private int jj_endpos;
    static private int[] jj_la1_1;
    static private int[] jj_la1_2;
    private int jj_kind = -1;
    private java.util.Vector jj_expentries = new java.util.Vector();
    private int[] jj_expentry;
    static private int[] jj_la1_0;
    Token token;
    SimpleCharStream stream;
    XPathParserTokenManager tm;
    Compiler compilerMock;
    SimpleCharStream simpleCharStreamMock;
    private ArrayList stepsMock;
    SimpleCharStream charStream;
    Object expressionResult;
    ArrayList steps;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_NPss11() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        parser.token = new Token();
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_iINa11() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        parser.token = new Token();
        ParseException ex = parser.generateParseException();
        assertNotNull(ex);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_GXBY11() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        parser.token = new Token();
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_sDzh0() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_QfXQ4() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 4096)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_cRWJ5() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_tzrx0() {
        XPathParser parser = new XPathParser(new java.io.StringReader("input"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_aLbl1() {
        XPathParser parser = new XPathParser(new java.io.StringReader("test"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_Hjgt5() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("test"), 1, 1)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_SdZp2() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""))));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_PIcW3() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("test"))));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_bolj2() {
        XPathParser parser = new XPathParser(new java.io.StringReader("abc"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_nePp3() {
        XPathParser parser = new XPathParser(new java.io.StringReader("def"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_Hchm4() {
        XPathParser parser = new XPathParser(new java.io.StringReader("ghi"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_ZNlb5() {
        XPathParser parser = new XPathParser(new java.io.StringReader("jkl"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_DdyP6() {
        XPathParser parser = new XPathParser(new java.io.StringReader("mno"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException8_dqJu7() {
        XPathParser parser = new XPathParser(new java.io.StringReader("pqr"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_MOFm8() {
        XPathParser parser = new XPathParser(new java.io.StringReader("stu"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_xACT9() {
        XPathParser parser = new XPathParser(new java.io.StringReader("vwx"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_bbEk10() {
        XPathParser parser = new XPathParser(new java.io.StringReader("yz"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_lAna11() {
        XPathParser parser = new XPathParser(new java.io.StringReader("123"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_olbr3() {
        XPathParser parser = new XPathParser(new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024)));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_flGV4() {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_NOT"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_uoGs5() {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_NOT abc"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_jicf6() {
        XPathParser parser = new XPathParser(new java.io.StringReader("FUNCTION_NOT def"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException8_NdTo7() {
        XPathParser parser = new XPathParser(new java.io.StringReader("abc FUNCTION_NOT"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_KVeH8() {
        XPathParser parser = new XPathParser(new java.io.StringReader("def FUNCTION_NOT"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_RheX9() {
        XPathParser parser = new XPathParser(new java.io.StringReader("abc def"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_lntt10() {
        XPathParser parser = new XPathParser(new java.io.StringReader("def abc"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_oyZj11() {
        XPathParser parser = new XPathParser(new java.io.StringReader("abc def FUNCTION_NOT"));
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_aNsL0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_zFvd0() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1), 0);
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_inaM11() {
        XPathParser parser = new XPathParser(new java.io.StringReader("input"));
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("input"), 1, 1));
        parser.token = new Token();
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_NCName_Without_CoreFunctions_NCName_hKfn0() throws ParseException {
        XPathParser parser = new XPathParser(new java.io.StringReader("ncname"));
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader("ncname")));
        parser = new XPathParser(tm);
        assertEquals("ncname", parser.NCName_Without_CoreFunctions());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEnableTracing_TZLB0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        parser.enable_tracing();
        assertTrue(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDisableTracing_Wsmy0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        parser.disable_tracing();
        assertTrue(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_kjps2_qlNV0() {
        XPathParser parser = new XPathParser(new java.io.StringReader("input"));
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_qLHY11_cVmn0() {
        XPathParser parser = new XPathParser(new java.io.StringReader("input"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_zVCD9_fid2() {
        XPathParser parser = new XPathParser(new java.io.StringReader(""));
        parser.generateParseException();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_NCName_lean0_fid2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        try {
            parser.QName_Without_CoreFunctions();
        } catch (ParseException e) {
            // Expected
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAxisName_AIQR0_fid2() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1, 4096));
        XPathParser parser = new XPathParser(tm);
        try {
            int result = parser.AxisName();
            assertEquals(Compiler.AXIS_SELF, result);
        } catch (ParseException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_Xjyv0_pCED0_fid2() {
        XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(new java.io.StringReader(""), 1, 1));
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
}