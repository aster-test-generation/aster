/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.axes.UnionContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_CoreOperationUnion_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ArgsLengthIsOne_lZEp1_1() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[1]);
        EvalContext context = mock(EvalContext.class);
        Object result = union.computeValue(context);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ArgsLengthIsOne_lZEp1_2() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[1]);
        EvalContext context = mock(EvalContext.class);
        Object result = union.computeValue(context);
        assertTrue(result instanceof UnionContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ValueIsEvalContext_TdSv2_1() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[1]);
        EvalContext context = mock(EvalContext.class);
        Expression expr = mock(Expression.class);
        when(expr.compute(context)).thenReturn(context);
        Object result = union.computeValue(context);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ValueIsEvalContext_TdSv2_2() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[1]);
        EvalContext context = mock(EvalContext.class);
        Expression expr = mock(Expression.class);
        when(expr.compute(context)).thenReturn(context);
        Object result = union.computeValue(context);
        assertTrue(result instanceof UnionContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ValueIsNotEvalContext_lEtZ3_1() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[1]);
        EvalContext context = mock(EvalContext.class);
        RootContext rootContext = mock(RootContext.class);
        when(context.getRootContext()).thenReturn(rootContext);
        Expression expr = mock(Expression.class);
        when(expr.compute(context)).thenReturn("test");
        Object result = union.computeValue(context);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ValueIsNotEvalContext_lEtZ3_2() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[1]);
        EvalContext context = mock(EvalContext.class);
        RootContext rootContext = mock(RootContext.class);
        when(context.getRootContext()).thenReturn(rootContext);
        Expression expr = mock(Expression.class);
        when(expr.compute(context)).thenReturn("test");
        Object result = union.computeValue(context);
        assertTrue(result instanceof UnionContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ArgsIsNull_udFo6() {
        try {
            new CoreOperationUnion(null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }
}