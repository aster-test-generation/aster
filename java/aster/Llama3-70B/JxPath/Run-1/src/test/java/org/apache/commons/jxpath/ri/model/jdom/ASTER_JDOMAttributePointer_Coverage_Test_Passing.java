/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.jdom.Attribute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_JDOMAttributePointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPath_BufferLengthZero_lsdA1() {
        Attribute attr = new Attribute("attrName", "attrValue");
        JDOMAttributePointer pointer = new JDOMAttributePointer(null, attr);
        String path = pointer.asPath();
        assertEquals("@attrName", path);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_Jrhq0_oQmN0_1() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        Attribute attr = mock(Attribute.class);
        org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
        when(attr.getValue()).thenReturn("attributeValue");
        JDOMAttributePointer pointer = new JDOMAttributePointer(parent, attr);
        Object result = pointer.getValue();
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_Jrhq0_oQmN0_2() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        Attribute attr = mock(Attribute.class);
        org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
        when(attr.getValue()).thenReturn("attributeValue");
        JDOMAttributePointer pointer = new JDOMAttributePointer(parent, attr);
        Object result = pointer.getValue();
        assertEquals("attributeValue", result);
    }
}