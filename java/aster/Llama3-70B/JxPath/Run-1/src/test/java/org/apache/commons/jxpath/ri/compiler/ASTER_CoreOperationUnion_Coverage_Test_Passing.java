/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.axes.UnionContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_CoreOperationUnion_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetSymbol_NXoD0() {
        CoreOperationUnion coreOperationUnion = new CoreOperationUnion(new Expression[]{});
        String symbol = coreOperationUnion.getSymbol();
        assertEquals("|", symbol);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testIsSymmetric_qyfP0() {
        CoreOperationUnion coreOperationUnion = new CoreOperationUnion(new Expression[0]);
        boolean result = coreOperationUnion.isSymmetric();
        assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetPrecedence_TLvk0() {
        CoreOperationUnion coreOperationUnion = new CoreOperationUnion(new Expression[]{});
        int precedence = coreOperationUnion.getPrecedence();
        assertEquals(CoreOperationUnion.UNION_PRECEDENCE, precedence);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ArgsLengthIsZero_zxSU0_1() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[0]);
        EvalContext context = mock(EvalContext.class);
        Object result = union.computeValue(context);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ArgsLengthIsZero_zxSU0_2() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[0]);
        EvalContext context = mock(EvalContext.class);
        Object result = union.computeValue(context);
        assertTrue(result instanceof UnionContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ArgsLengthIsGreaterThanOne_ZsOd4_1() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[2]);
        EvalContext context = mock(EvalContext.class);
        Object result = union.computeValue(context);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ArgsLengthIsGreaterThanOne_ZsOd4_2() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[2]);
        EvalContext context = mock(EvalContext.class);
        Object result = union.computeValue(context);
        assertTrue(result instanceof UnionContext);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeValue_ContextIsNull_UsUc5() {
        CoreOperationUnion union = new CoreOperationUnion(new Expression[1]);
        try {
            union.computeValue(null);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }
}