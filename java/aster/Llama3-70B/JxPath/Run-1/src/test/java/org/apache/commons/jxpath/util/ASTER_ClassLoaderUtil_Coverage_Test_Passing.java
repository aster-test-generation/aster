/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ClassLoaderUtil_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ContextCLNotNull_joEv0() throws ClassNotFoundException {
        ClassLoader originalContextCL = Thread.currentThread().getContextClassLoader();
        Thread.currentThread().setContextClassLoader(ClassLoader.getSystemClassLoader());
        Class<?> clazz = ClassLoaderUtil.getClass("java.lang.String", true);
        assertNotNull(clazz);
        Thread.currentThread().setContextClassLoader(originalContextCL);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ContextCLNull_sXOG1() throws java.lang.ClassNotFoundException {
        Thread.currentThread().setContextClassLoader(null);
        ClassNotFoundException exception = assertThrows(ClassNotFoundException.class, () -> ClassLoaderUtil.getClass("NonExistingClass", true));
        assertNotNull(exception);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ContextCLNull_sXOG1_1() throws java.lang.ClassNotFoundException {
        Thread.currentThread().setContextClassLoader(null);
        ClassNotFoundException exception = assertThrows(ClassNotFoundException.class, () -> ClassLoaderUtil.getClass("NonExistingClass", true));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ArrayType_MYsx0_kaxr0() throws ClassNotFoundException {
        String className = "java.lang.String[]";
        Class<?> clazz = ClassLoaderUtil.getClass(className);
        assertEquals(clazz.getComponentType(), String.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_PrimitiveArrayType_kIdO2_Cvuu0() throws ClassNotFoundException {
        String className = "int[]";
        Class<?> clazz = ClassLoaderUtil.getClass(className);
        assertEquals(clazz.getComponentType(), int.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_MultiDimensionalArrayType_oirR1_FeyR0() throws ClassNotFoundException {
        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        String className = "java.lang.String[][]";
        Class<?> clazz = ClassLoaderUtil.getClass(className);
        assertEquals(clazz.getComponentType().getComponentType(), String.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_MultiDimensionalArrayType_oirR1_kZRq1() throws ClassNotFoundException {
        ClassLoader classLoader = this.getClass().getClassLoader();
        String className = "java.lang.String[][]";
        Class<?> clazz = ClassLoaderUtil.getClass(className);
        assertEquals(clazz.getComponentType().getComponentType(), String.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ArrayType_WithAbbreviation_artk4_Hfrl0() throws ClassNotFoundException {
        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        String className = "[I";
        Class<?> clazz = ClassLoaderUtil.getClass(className);
        assertEquals(clazz.getComponentType(), int.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ArrayType_WithAbbreviation_artk4_vNEr1() throws ClassNotFoundException {
        ClassLoader classLoader = this.getClass().getClassLoader();
        String className = "[I";
        Class<?> clazz = ClassLoaderUtil.getClass(className);
        assertEquals(clazz.getComponentType(), int.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ArrayType_InitializeTrue_qUuO7_gGZo0() throws ClassNotFoundException {
        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        String className = "java.lang.String[]";
        Class<?> clazz = ClassLoaderUtil.getClass(className);
        assertEquals(clazz.getComponentType(), String.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_ArrayType_InitializeTrue_qUuO7_MbyZ1() throws ClassNotFoundException {
        ClassLoader classLoader = this.getClass().getClassLoader();
        String className = "java.lang.String[]";
        Class<?> clazz = ClassLoaderUtil.getClass(className);
        assertEquals(clazz.getComponentType(), String.class);
    }
}