/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullElementPointer_Test_Failing {
    @Mock
    private DOMNodePointer parentPointer;
    @Mock
    private DOMNodePointer otherParentPointer;
    private NullElementPointer nullelementpointer;
    private JXPathContext context;
    @Mock
    private NodePointer nodePointer;
    @Mock
    private NodePointer immediateParentPointer;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentParent_nIJB0() throws Exception {
        DOMNodePointer parentPointer = mock(DOMNodePointer.class);
        DOMNodePointer otherParentPointer = mock(DOMNodePointer.class);
        when(parentPointer.equals(any())).thenReturn(false);
        NullElementPointer nullelementpointer = new NullElementPointer(parentPointer, 1);
        NullElementPointer otherNullelementpointer = new NullElementPointer(otherParentPointer, 1);
        boolean result = nullelementpointer.equals(otherNullelementpointer);
        assertFalse(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetValuePointer_xaYj0_2() throws Exception {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        QName name = new QName("prefix", "localName");
        VariablePointer variablePointer = new VariablePointer(name);
        NullElementPointer nullelementpointer = new NullElementPointer(parent, 0);
        NodePointer result = nullelementpointer.getValuePointer();
        assertSame(nullelementpointer, result.getParent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testhashCode_Peuu0_fid3() throws Exception {
        DOMNodePointer parentPointer = mock(DOMNodePointer.class);
        when(parentPointer.hashCode()).thenReturn(123);
        NullElementPointer nullelementpointer = new NullElementPointer(parentPointer, 42);
        int hashCode = nullelementpointer.hashCode();
        assertEquals(165, hashCode); // 123 (parentPointer's hashCode) + 42 (index)
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentParent_nIJB0_fid3() throws Exception {
        DOMNodePointer parentPointer = mock(DOMNodePointer.class);
        DOMNodePointer otherParentPointer = mock(DOMNodePointer.class);
        NullElementPointer nullelementpointer = new NullElementPointer(parentPointer, 1);
        NullElementPointer otherNullelementpointer = new NullElementPointer(otherParentPointer, 1);
        when(parentPointer.equals(otherParentPointer)).thenReturn(false);
        boolean result = nullelementpointer.equals(otherNullelementpointer);
        assertTrue(!result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentIndex_OSsl0_1_fid3() throws Exception {
        DOMNodePointer parentPointer = mock(DOMNodePointer.class);
        DOMNodePointer otherParentPointer = mock(DOMNodePointer.class);
        NullElementPointer nullelementpointer = new NullElementPointer(parentPointer, 1);
        NullElementPointer otherNullelementpointer = new NullElementPointer(otherParentPointer, 1);
        otherNullelementpointer = new NullElementPointer(parentPointer, 1);
        otherNullelementpointer = new NullElementPointer(parentPointer, 2);
        assertTrue(nullelementpointer.equals(otherNullelementpointer));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetValuePointer_xaYj0_3_fid3() throws Exception {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        QName name = new QName("prefix", "localName");
        VariablePointer variablePointer = new VariablePointer(name);
        NullElementPointer nullelementpointer = new NullElementPointer(parent, 0);
        NodePointer result = nullelementpointer.getValuePointer();
        assertSame(variablePointer, result.getParent().getParent());
    }
}