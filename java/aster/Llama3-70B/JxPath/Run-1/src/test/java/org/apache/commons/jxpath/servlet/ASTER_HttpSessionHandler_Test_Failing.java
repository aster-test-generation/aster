/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockServletContext;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_HttpSessionHandler_Test_Failing {
    HttpSessionHandler httpsessionhandler;
    HttpSession httpsession;
    HttpSessionAndServletContext httpsessionandservletcontext;
    HashSet<String> set;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNamesNullSession_keEK0_oBXp0() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HashSet<String> set = new HashSet<>();
        handler.collectPropertyNames(set, null);
        assertTrue(set.isEmpty());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNamesNullSession_keEK0_oBXp0_fid2() {
        HttpSessionHandler handler = new HttpSessionHandler();
        HashSet<String> set = new HashSet<>();
        HttpSessionAndServletContext bean = new HttpSessionAndServletContext(null, new MockServletContext());
        handler.collectPropertyNames(set, bean);
        assertEquals(0, set.size());
    }
}