/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CoreOperationSubtract_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetSymbol_niuJ0() {
        CoreOperationSubtract coreOperationSubtract = new CoreOperationSubtract(new Constant("1"), new Constant(2));
        String symbol = coreOperationSubtract.getSymbol();
        assertEquals("-", symbol);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetPrecedence_cNkn0() {
        CoreOperationSubtract coreOperationSubtract = new CoreOperationSubtract(new Constant("string"), new Constant(1));
        int precedence = coreOperationSubtract.getPrecedence();
        assertEquals(CoreOperationSubtract.ADD_PRECEDENCE, precedence);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSymmetric_HJkq0() {
        CoreOperationSubtract coreOperationSubtract = new CoreOperationSubtract(new Constant("string"), new Constant(1));
        boolean result = coreOperationSubtract.isSymmetric();
        assert (!result);
    }
}