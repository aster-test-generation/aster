/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_KeywordVariables_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVariable_DeclaredVariable_ReturnsObject_boZw0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        when(keywordVariables.isDeclaredVariable("variable")).thenReturn(true);
        Object result = keywordVariables.getVariable("variable");
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVariable_UndeclaredVariable_ReturnsNull_ZzWI1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        when(keywordVariables.isDeclaredVariable("variable")).thenReturn(false);
        Object result = keywordVariables.getVariable("variable");
        assertNull(result);
    }
}