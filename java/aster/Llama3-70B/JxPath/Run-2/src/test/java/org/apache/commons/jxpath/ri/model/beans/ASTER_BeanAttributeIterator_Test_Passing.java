/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanAttributeIterator_Test_Passing {
    private int position = 0;
    BeanAttributeIterator beanattributeiterator;
    BeanPointer beanPointer;
    QName qName;
    private boolean includeXmlLang;
    BeanPointer parent;
    QName name;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPosition() throws Exception {
        qName = new QName("test");
        beanPointer = new BeanPointer(new QName("test"), new Object(), new JXPathBasicBeanInfo(Object.class), Locale.US);
        beanattributeiterator = new BeanAttributeIterator(beanPointer, qName);
        assertEquals(0, beanattributeiterator.getPosition());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPosition_fTKt0() {
        QName name = new QName("qualifiedName");
        BeanPointer parent = new BeanPointer(name, new Object(), new JXPathBasicBeanInfo(Object.class), Locale.US);
        BeanAttributeIterator beanAttributeIterator = new BeanAttributeIterator(parent, name);
        assertEquals(0, beanAttributeIterator.getPosition());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer3_dMZV2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class);
        Object bean = new Object();
        QName name = new QName("prefix", "localName");
        BeanPointer parent = new BeanPointer(name, bean, beanInfo, Locale.US);
        BeanAttributeIterator iterator = new BeanAttributeIterator(parent, name);
        iterator.setPosition(2);
        NodePointer pointer = iterator.getNodePointer();
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition1_BOun0_fid1() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class);
        QName name = new QName("prefix", "localName");
        Object bean = new Object();
        BeanPointer parent = new BeanPointer(name, bean, beanInfo, Locale.US);
        BeanAttributeIterator iterator = new BeanAttributeIterator(parent, name);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer1_nWXe0_fid1() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class);
        Object bean = new Object();
        QName name = new QName("prefix", "localName");
        BeanPointer parent = new BeanPointer(name, bean, beanInfo, Locale.US);
        BeanAttributeIterator iterator = new BeanAttributeIterator(parent, name);
        NodePointer pointer = iterator.getNodePointer();
        assertNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition3_rBKU2_YZPC0_1() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class);
        QName name = new QName("prefix", "localName");
        Object bean = new Object();
        BeanPointer parent = new BeanPointer(name, bean, beanInfo, Locale.US);
        BeanAttributeIterator iterator = new BeanAttributeIterator(parent, name);
        boolean includeXmlLang = true;
        iterator.setPosition(1);
        NodePointer nodePointer = iterator.getNodePointer();
        assertFalse(iterator.setPosition(2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition3_rBKU2_YZPC0_2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(Object.class);
        QName name = new QName("prefix", "localName");
        Object bean = new Object();
        BeanPointer parent = new BeanPointer(name, bean, beanInfo, Locale.US);
        BeanAttributeIterator iterator = new BeanAttributeIterator(parent, name);
        boolean includeXmlLang = true;
        iterator.setPosition(1);
        NodePointer nodePointer = iterator.getNodePointer();
        assertNotNull(nodePointer);
    }
}