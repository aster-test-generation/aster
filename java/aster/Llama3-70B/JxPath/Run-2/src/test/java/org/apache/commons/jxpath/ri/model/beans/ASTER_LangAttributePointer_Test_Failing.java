/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_LangAttributePointer_Test_Failing {
    LangAttributePointer langattributepointer;
    DOMNodePointer parent;
    NodePointer pointer1;
    NodePointer pointer2;
    LangAttributePointer langAttributePointer;
    DOMNodePointer domNodePointer;
    VariablePointer variablePointer;
    @Mock
    NodeTest nodeTest;
    @Mock
    Locale locale;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetImmediateNode_MRkc0() throws Exception {
        DOMNodePointer domNodePointer = mock(DOMNodePointer.class);
        LangAttributePointer langattributepointer = new LangAttributePointer(domNodePointer);
        org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
        when(domNodePointer.getBaseValue()).thenReturn(node);
        Object result = langattributepointer.getImmediateNode();
        assertEquals(node, result);
    }
}