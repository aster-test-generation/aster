/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.w3c.dom.Node;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DOMNodeIterator_Coverage_Test_Passing {
    private int position = 0;
    DOMNodeIterator domNodeIterator;
    Node node;
    NodePointer nodePointer;
@BeforeEach
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setup_KCeQ0() throws Exception {
        node = mock(Node.class);
        nodePointer = mock(NodePointer.class);
        domNodeIterator = new DOMNodeIterator(nodePointer, new NodeTypeTest(1), false, null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetPosition_EqualPosition_ReturnsTrue_FDoc5() throws Exception {
        assertTrue(domNodeIterator.setPosition(0));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_ChildIsNull_EutA2_nWIv0() {
    DOMNodePointer parent = new DOMNodePointer(null, null, null);
    NodeTypeTest nodeTest = new NodeTypeTest(0);
    DOMNodeIterator iterator = new DOMNodeIterator(parent, nodeTest, false, null);
    try {
        iterator.getNodePointer();
        fail("Expected NullPointerException to be thrown");
    } catch (NullPointerException e) {
        // Expected
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_PositionNotZero_EUrt1_GHCY0_fid2() {
    DOMNodeIterator iterator = new DOMNodeIterator(new DOMNodePointer(null, null, null), new NodeTypeTest(0), false, null);
    iterator.setPosition(1);
    NodePointer pointer = iterator.getNodePointer();
    assertNotNull(pointer);
}
}