/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ChildContext_Coverage_Test_Passing {
    private NodeIterator iterator;
    private ChildContext childContext;
    private NamespaceContext namespaceContext;
    private NodeTypeTest nodeTypeTest;
    private SelfContext selfContext;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCurrentNodePointer_PositionZero_PVhG0_xDvZ0() {
    NamespaceContext parentContext = new NamespaceContext(null, new NodeTypeTest(1));
    NodeTypeTest nodeTest = new NodeTypeTest(1);
    ChildContext childContext = new ChildContext(parentContext, nodeTest, true, true);
    childContext.setPosition(0);
    NodePointer nodePointer = childContext.getCurrentNodePointer();
    assert (nodePointer == null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCurrentNodePointer_IteratorIsNull_tIsN1_neEh0() {
    NamespaceContext parentContext = new NamespaceContext(null, new NodeTypeTest(1));
    NodeTypeTest nodeTest = new NodeTypeTest(1);
    ChildContext childContext = new ChildContext(parentContext, nodeTest, true, true);
    childContext.nextNode(); // Call nextNode to set the internal state
    NodePointer nodePointer = childContext.getCurrentNodePointer();
    assert (nodePointer == null);
}
}