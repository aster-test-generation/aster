/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import org.jdom.Attribute;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JDOMAttributePointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue_dfps0_nmWU0_1() {
    DOMNodePointer parent = mock(DOMNodePointer.class);
    Attribute attr = mock(Attribute.class);
    org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
    when(attr.getValue()).thenReturn("attributeValue");
    JDOMAttributePointer jdomAttributePointer = new JDOMAttributePointer(parent, attr);
    Object result = jdomAttributePointer.getValue();
    assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue_dfps0_nmWU0_2() {
    DOMNodePointer parent = mock(DOMNodePointer.class);
    Attribute attr = mock(Attribute.class);
    org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
    when(attr.getValue()).thenReturn("attributeValue");
    JDOMAttributePointer jdomAttributePointer = new JDOMAttributePointer(parent, attr);
    Object result = jdomAttributePointer.getValue();
    assertEquals("attributeValue", result);}
}