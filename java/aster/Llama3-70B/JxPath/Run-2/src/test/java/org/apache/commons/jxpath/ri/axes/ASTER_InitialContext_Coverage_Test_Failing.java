/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_InitialContext_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testNextSet_StartedFalse_ReturnsTrue_Lybi0() {
        InitialContext initialContext = new InitialContext(new NamespaceContext(null, new NodeTypeTest(1)));
        boolean result = initialContext.nextSet();
        assert result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testNextSet_StartedTrue_ReturnsFalse_LLiI1() {
        InitialContext initialContext = new InitialContext(new NamespaceContext(null, new NodeTypeTest(1)));
        initialContext.nextSet(); // set started to true
        boolean result = initialContext.nextSet();
        assert !result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNextSet_FirstCall_StartedSetToTrue_SMqx2_xsFI0_1() {
    InitialContext initialContext = new InitialContext(new NamespaceContext(null, new NodeTypeTest(1)));
    boolean result = initialContext.nextSet();
    assertTrue(result);}
}