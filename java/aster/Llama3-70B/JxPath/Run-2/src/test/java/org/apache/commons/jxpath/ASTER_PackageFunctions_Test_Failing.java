/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PackageFunctions_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction2_iDga1() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new Object()};
        Function function = packageFunctions.getFunction("namespace", "name", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction6_BFtG5() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new Object(), new Object()};
        Function function = packageFunctions.getFunction("namespace", "name", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction7_RODX6() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = null;
        Function function = packageFunctions.getFunction("namespace", "name", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction9_PnRJ8() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new Object()};
        Function function = packageFunctions.getFunction("namespace", "fullName", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction10_PIVD9() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new Object()};
        Function function = packageFunctions.getFunction("namespace", "className.methodName", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction11_INNG10() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new Object()};
        Function function = packageFunctions.getFunction("namespace", "className.new", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction13_IIfV12() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new Object(), new Object()};
        Function function = packageFunctions.getFunction("namespace", "className.methodName", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction17_Zmbb16() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = null;
        Function function = packageFunctions.getFunction("namespace", "className.methodName", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction3_pwLI2_WYwU0() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new HashSet()};
        Function function = packageFunctions.getFunction("namespace", "name", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction14_CyKb13_EhpB0() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new HashSet()};
        Function function = packageFunctions.getFunction("namespace", "className.methodName", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunction15_IVAX14_pfDD0() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Object[] parameters = new Object[]{new ArrayList<>()};
        Function function = packageFunctions.getFunction("namespace", "className.methodName", parameters);
        assertNotNull(function);
    }
}