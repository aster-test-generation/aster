/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CoreOperationLessThan_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEvaluateCompare_LessThanZero_ReturnTrue_cMHE0() {
        CoreOperationLessThan coreOperationLessThan = new CoreOperationLessThan(new Constant(1), new Constant(2));
        boolean result = coreOperationLessThan.evaluateCompare(-1);
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetSymbol_WmHW0() {
        CoreOperationLessThan coreOperationLessThan = new CoreOperationLessThan(new Constant("string"), new Constant(1));
        String symbol = coreOperationLessThan.getSymbol();
        assertEquals("<", symbol);
    }
}