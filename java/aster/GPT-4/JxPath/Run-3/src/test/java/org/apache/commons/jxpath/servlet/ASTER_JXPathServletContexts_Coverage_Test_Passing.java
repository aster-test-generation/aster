/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;
import javax.servlet.http.HttpSession;
import javax.servlet.jsp.PageContext;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathContextFactory;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JXPathServletContexts_Coverage_Test_Passing {
    private JXPathContextFactory factory;
    private HttpSession httpSession;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPageContext_ExistingContextReturned_ewnY1_1() {
        PageContext mockPageContext = mock(PageContext.class);
        JXPathContext mockContext = mock(JXPathContext.class);
        when(mockPageContext.getAttribute(Constants.JXPATH_CONTEXT)).thenReturn(mockContext);
        JXPathContext result = JXPathServletContexts.getPageContext(mockPageContext);
        verify(mockPageContext, never()).setAttribute(anyString(), any());
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPageContext_ExistingContextReturned_ewnY1_2() {
        PageContext mockPageContext = mock(PageContext.class);
        JXPathContext mockContext = mock(JXPathContext.class);
        when(mockPageContext.getAttribute(Constants.JXPATH_CONTEXT)).thenReturn(mockContext);
        JXPathContext result = JXPathServletContexts.getPageContext(mockPageContext);
        verify(mockPageContext, never()).setAttribute(anyString(), any());
        assertEquals(mockContext, result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPageContext_ExistingContextReturned_ewnY1() {
        PageContext mockPageContext = mock(PageContext.class);
        JXPathContext mockContext = mock(JXPathContext.class);
        when(mockPageContext.getAttribute(Constants.JXPATH_CONTEXT)).thenReturn(mockContext);
        JXPathContext result = JXPathServletContexts.getPageContext(mockPageContext);
        verify(mockPageContext, never()).setAttribute(anyString(), any());
        assertNotNull(result);
        assertEquals(mockContext, result);
    }
}