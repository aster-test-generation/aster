/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import java.util.Locale;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.jdom.Document;
import org.jdom.Element;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JDOMPointerFactory_Test_Passing {
private JDOMPointerFactory jdomPointerFactory;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument_tthw0_1() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("test");
        Document document = new Document();
        Locale locale = Locale.getDefault();
        NodePointer result = factory.createNodePointer(name, document, locale);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument_tthw0_2() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("test");
        Document document = new Document();
        Locale locale = Locale.getDefault();
        NodePointer result = factory.createNodePointer(name, document, locale);
        assertTrue(result instanceof JDOMNodePointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement_zbfR1_1() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("test");
        Element element = new Element("element");
        Locale locale = Locale.getDefault();
        NodePointer result = factory.createNodePointer(name, element, locale);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement_zbfR1_2() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("test");
        Element element = new Element("element");
        Locale locale = Locale.getDefault();
        NodePointer result = factory.createNodePointer(name, element, locale);
        assertTrue(result instanceof JDOMNodePointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNonJDOMObject_lUKV2() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("test");
        Object nonJDOMObject = new Object();
        Locale locale = Locale.getDefault();
        NodePointer result = factory.createNodePointer(name, nonJDOMObject, locale);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument_1() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        // Arrange
        NodePointer mockParent = mock(NodePointer.class);
        QName mockQName = mock(QName.class);
        Document mockDocument = mock(Document.class);
        // Act
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockDocument);
        // Assert
        assertNotNull(result, "Expected non-null NodePointer for Document");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument_2() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        // Arrange
        NodePointer mockParent = mock(NodePointer.class);
        QName mockQName = mock(QName.class);
        Document mockDocument = mock(Document.class);
        // Act
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockDocument);
        // Assert
        assertTrue(result instanceof JDOMNodePointer, "Expected instance of JDOMNodePointer");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement_1() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        // Arrange
        NodePointer mockParent = mock(NodePointer.class);
        QName mockQName = mock(QName.class);
        Element mockElement = mock(Element.class);
        // Act
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockElement);
        // Assert
        assertNotNull(result, "Expected non-null NodePointer for Element");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement_2() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        // Arrange
        NodePointer mockParent = mock(NodePointer.class);
        QName mockQName = mock(QName.class);
        Element mockElement = mock(Element.class);
        // Act
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockElement);
        // Assert
        assertTrue(result instanceof JDOMNodePointer, "Expected instance of JDOMNodePointer");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithUnsupportedBean() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        // Arrange
        NodePointer mockParent = mock(NodePointer.class);
        QName mockQName = mock(QName.class);
        Object unsupportedBean = new Object();
        // Act
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, unsupportedBean);
        // Assert
        assertNull(result, "Expected null NodePointer for unsupported bean type");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOrder_QBwG0_uXau0() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    int expected = 100; // Assuming 100 as the expected order for JDOMPointerFactory
    assertEquals(expected, factory.getOrder());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument_tthw0() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("test");
        Document document = new Document();
        Locale locale = Locale.getDefault();
        NodePointer result = factory.createNodePointer(name, document, locale);
        assertNotNull(result);
        assertTrue(result instanceof JDOMNodePointer);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement_zbfR1() {
        JDOMPointerFactory factory = new JDOMPointerFactory();
        QName name = new QName("test");
        Element element = new Element("element");
        Locale locale = Locale.getDefault();
        NodePointer result = factory.createNodePointer(name, element, locale);
        assertNotNull(result);
        assertTrue(result instanceof JDOMNodePointer);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        // Arrange
        NodePointer mockParent = mock(NodePointer.class);
        QName mockQName = mock(QName.class);
        Document mockDocument = mock(Document.class);
        // Act
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockDocument);
        // Assert
        assertNotNull(result, "Expected non-null NodePointer for Document");
        assertTrue(result instanceof JDOMNodePointer, "Expected instance of JDOMNodePointer");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        // Arrange
        NodePointer mockParent = mock(NodePointer.class);
        QName mockQName = mock(QName.class);
        Element mockElement = mock(Element.class);
        // Act
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockElement);
        // Assert
        assertNotNull(result, "Expected non-null NodePointer for Element");
        assertTrue(result instanceof JDOMNodePointer, "Expected instance of JDOMNodePointer");
    }
}