/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathBeanInfo;
import org.apache.commons.jxpath.JXPathIntrospector;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPointerFactory_Test_Passing {
@InjectMocks
    private BeanPointerFactory beanPointerFactory;
@Mock
    private NodePointer parentMock;
@Mock
    private QName nameMock;
@Mock
    private Object beanMock;
@Mock
    private JXPathBeanInfo beanInfoMock;
@Mock
    private BeanPointer beanPointerMock;
@Mock
    private NullPointer nullPointerMock;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_qRzn0_1() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used here as a placeholder for any bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_qRzn0_2() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used here as a placeholder for any bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertEquals(name, result.getName());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_qRzn0_3() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used here as a placeholder for any bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertEquals(bean, result.getImmediateNode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_qRzn0_4() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used here as a placeholder for any bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertEquals(locale, result.getLocale());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean_1() throws Exception {
        // Setup common mock interactions
        when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
        // Act
        NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, null);
        // Assert
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean_2() throws Exception {
        // Setup common mock interactions
        when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
        // Act
        NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, null);
        // Assert
        assertTrue(result instanceof NullPointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean_3() throws Exception {
        // Setup common mock interactions
        when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
        // Act
        NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, null);
        // Assert
        assertEquals(parentMock, result.getParent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean_4() throws Exception {
        // Setup common mock interactions
        when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
        // Act
        NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, null);
        // Assert
        assertEquals(nameMock, result.getName());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNullBean_PCIC0_1() {
    BeanPointerFactory factory = new BeanPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("testName");
    NodePointer result = factory.createNodePointer(parent, name, null);
    assertTrue(result instanceof NullPointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNullBean_PCIC0_2() {
    BeanPointerFactory factory = new BeanPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("testName");
    NodePointer result = factory.createNodePointer(parent, name, null);
    assertEquals(name, result.getName());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOrder_GOtz0_temW0() {
    BeanPointerFactory factory = new BeanPointerFactory();
    int expectedOrder = 0; // Assuming default order as 0 since BEAN_POINTER_FACTORY_ORDER is not defined
    assertEquals(expectedOrder, 0); // Corrected to compare expectedOrder with 0 directly
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_NJht0_1() throws Exception {
    JXPathBeanInfo beanInfoMock = mock(JXPathBeanInfo.class);
    when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
    NodePointer parentMock = mock(NodePointer.class);
    QName nameMock = mock(QName.class);
    Object beanMock = new Object();
    BeanPointerFactory beanPointerFactory = new BeanPointerFactory();
    NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, beanMock);
    assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_NJht0_2() throws Exception {
    JXPathBeanInfo beanInfoMock = mock(JXPathBeanInfo.class);
    when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
    NodePointer parentMock = mock(NodePointer.class);
    QName nameMock = mock(QName.class);
    Object beanMock = new Object();
    BeanPointerFactory beanPointerFactory = new BeanPointerFactory();
    NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, beanMock);
    assertTrue(result instanceof BeanPointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_NJht0_3() throws Exception {
    JXPathBeanInfo beanInfoMock = mock(JXPathBeanInfo.class);
    when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
    NodePointer parentMock = mock(NodePointer.class);
    QName nameMock = mock(QName.class);
    Object beanMock = new Object();
    BeanPointerFactory beanPointerFactory = new BeanPointerFactory();
    NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, beanMock);
    assertEquals(parentMock, result.getParent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_NJht0_4() throws Exception {
    JXPathBeanInfo beanInfoMock = mock(JXPathBeanInfo.class);
    when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
    NodePointer parentMock = mock(NodePointer.class);
    QName nameMock = mock(QName.class);
    Object beanMock = new Object();
    BeanPointerFactory beanPointerFactory = new BeanPointerFactory();
    NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, beanMock);
    assertEquals(nameMock, result.getName());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_NJht0_5() throws Exception {
    JXPathBeanInfo beanInfoMock = mock(JXPathBeanInfo.class);
    when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
    NodePointer parentMock = mock(NodePointer.class);
    QName nameMock = mock(QName.class);
    Object beanMock = new Object();
    BeanPointerFactory beanPointerFactory = new BeanPointerFactory();
    NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, beanMock);
    assertEquals(beanMock, result.getImmediateNode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_sDSd1_Vhei0_1() {
    BeanPointerFactory factory = new BeanPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("testName");
    Object bean = new Object();
    NodePointer result = factory.createNodePointer(parent, name, bean);
    assertTrue(result instanceof BeanPointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_sDSd1_Vhei0_2() {
    BeanPointerFactory factory = new BeanPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("testName");
    Object bean = new Object();
    NodePointer result = factory.createNodePointer(parent, name, bean);
    assertEquals(name, result.getName());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_sDSd1_Vhei0_3() {
    BeanPointerFactory factory = new BeanPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("testName");
    Object bean = new Object();
    NodePointer result = factory.createNodePointer(parent, name, bean);
    assertEquals(bean, result.getImmediateNode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_qRzn0() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used here as a placeholder for any bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertNotNull(result);
    assertEquals(name, result.getName());
    assertEquals(bean, result.getImmediateNode());
    assertEquals(locale, result.getLocale());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean() throws Exception {
        // Setup common mock interactions
        when(JXPathIntrospector.getBeanInfo(any(Class.class))).thenReturn(beanInfoMock);
        // Act
        NodePointer result = beanPointerFactory.createNodePointer(parentMock, nameMock, null);
        // Assert
        assertNotNull(result);
        assertTrue(result instanceof NullPointer);
        assertEquals(parentMock, result.getParent());
        assertEquals(nameMock, result.getName());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNullBean_PCIC0() {
    BeanPointerFactory factory = new BeanPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("testName");
    NodePointer result = factory.createNodePointer(parent, name, null);
    assertTrue(result instanceof NullPointer);
    assertEquals(name, result.getName());
}
}