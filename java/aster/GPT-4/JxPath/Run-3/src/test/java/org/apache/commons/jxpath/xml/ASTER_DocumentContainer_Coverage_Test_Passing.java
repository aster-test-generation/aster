/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.xml;
import java.io.InputStream;
import java.net.URL;
import org.apache.commons.jxpath.JXPathException;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DocumentContainer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueThrowsUnsupportedOperationException_tMmv0() {
        try {
            URL testUrl = new URL("http://example.com");
            DocumentContainer documentContainer = new DocumentContainer(testUrl);
            assertThrows(UnsupportedOperationException.class, () -> documentContainer.setValue(new Object()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParseXML_WithSupportedModel_TyFr1() throws Exception {
        URL xmlURL = new URL("http://example.com");
        DocumentContainer container = new DocumentContainer(xmlURL, "supportedModel");
        InputStream stream = mock(InputStream.class);
        container.parseXML(stream);
    }
@Test
public void testParseXML_WithUnsupportedModel_vvAo0_ktdS0() throws Exception {
    URL xmlURL = new URL("http://example.com");
    DocumentContainer container = new DocumentContainer(xmlURL, "unsupportedModel");
    InputStream stream = mock(InputStream.class);
    assertThrows(JXPathException.class, () -> container.parseXML(stream));
}
@Test
public void testParseXML_WithNullModel_EndL5_IThN0() throws Exception {
    URL xmlURL = new URL("http://example.com");
    DocumentContainer container = new DocumentContainer(xmlURL, null);
    InputStream stream = mock(InputStream.class);
    try {
        container.parseXML(stream);
        fail("Expected JXPathException was not thrown.");
    } catch (JXPathException e) {
    }
}
@Test
public void testParseXML_WithEmptyModel_DnJV6_hgXd0() throws Exception {
    URL xmlURL = new URL("http://example.com");
    DocumentContainer container = new DocumentContainer(xmlURL, "");
    InputStream stream = mock(InputStream.class);
    assertThrows(JXPathException.class, () -> container.parseXML(stream));
}
@Test
public void testParseXML_WithExceptionDuringParserCreation_qxXf7_madG0() throws Exception {
    URL xmlURL = new URL("http://example.com");
    DocumentContainer container = new DocumentContainer(xmlURL, "exceptionModel");
    InputStream stream = mock(InputStream.class);
    try {
        container.parseXML(stream);
        fail("Expected a JXPathException to be thrown");
    } catch (JXPathException e) {
    }
}
}