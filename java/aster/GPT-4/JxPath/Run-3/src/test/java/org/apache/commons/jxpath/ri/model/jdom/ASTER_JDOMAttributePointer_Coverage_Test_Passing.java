/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import org.jdom.Attribute;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import java.util.Locale;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JDOMAttributePointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetImmediateNode_mOef0_nYIb0() {
    org.w3c.dom.Node node = mock(org.w3c.dom.Node.class); // Corrected by using a mock of org.w3c.dom.Node
    Locale locale = Locale.getDefault();
    String id = "testId";
    DOMNodePointer domNodePointer = new DOMNodePointer(node, locale, id);
    Attribute attribute = new Attribute("name", "value"); // Assuming Attribute is correctly instantiated
    JDOMAttributePointer jdomAttributePointer = new JDOMAttributePointer(domNodePointer, attribute);
    Object result = jdomAttributePointer.getImmediateNode();
    assertEquals(attribute, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNamespaceURI_ReturnsNonNullNonEmpty_uXkZ0_mJwj0() {
    Attribute attr = mock(Attribute.class);
    when(attr.getNamespaceURI()).thenReturn("http://example.com");
    org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
    DOMNodePointer parent = new DOMNodePointer(node, Locale.getDefault());
    JDOMAttributePointer pointer = new JDOMAttributePointer(parent, attr);
    String result = pointer.getNamespaceURI();
    assertEquals("http://example.com", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNamespaceURI_ReturnsNull_fzkH1_eraQ0() {
    Attribute attr = mock(Attribute.class);
    when(attr.getNamespaceURI()).thenReturn(null);
    org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
    DOMNodePointer parent = new DOMNodePointer(node, Locale.getDefault());
    JDOMAttributePointer pointer = new JDOMAttributePointer(parent, attr);
    String result = pointer.getNamespaceURI();
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNamespaceURI_ReturnsEmptyAsNull_Lflr2_PGDM0() {
    Attribute attr = mock(Attribute.class);
    when(attr.getNamespaceURI()).thenReturn("");
    org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
    DOMNodePointer parent = new DOMNodePointer(node, Locale.getDefault());
    JDOMAttributePointer pointer = new JDOMAttributePointer(parent, attr);
    String result = pointer.getNamespaceURI();
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNamespaceURI_ReturnsNonNullButEmpty_GqNR3_vVif0() {
    Attribute attr = mock(Attribute.class);
    when(attr.getNamespaceURI()).thenReturn("   ");
    org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);
    DOMNodePointer parent = new DOMNodePointer(node, Locale.getDefault());
    JDOMAttributePointer pointer = new JDOMAttributePointer(parent, attr);
    String result = pointer.getNamespaceURI();
    assertEquals("   ", result);
}
}