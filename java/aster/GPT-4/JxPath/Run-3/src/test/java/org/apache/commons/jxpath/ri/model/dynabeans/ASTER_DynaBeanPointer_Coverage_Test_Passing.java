/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;
import java.util.Locale;
import org.apache.commons.beanutils.DynaBean;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import java.util.Locale;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DynaBeanPointer_Coverage_Test_Passing {
    private QName name;
    private DynaBean dynaBean;
    private DynaBeanPointer dynaBeanPointer;
    private DOMNodePointer parent;
    private static final int WHOLE_COLLECTION = -1;
@BeforeEach
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_fHjw0() {
        QName name = new QName("testName");
        DynaBean dynaBean = new org.apache.commons.beanutils.LazyDynaBean(); // Using a simple implementation of DynaBean
        Locale locale = Locale.ENGLISH;
        DynaBeanPointer dynaBeanPointer = new DynaBeanPointer(name, dynaBean, locale);
        Object result = dynaBeanPointer.getImmediateNode();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCodeWhenNameIsNull_NchJ0() {
        QName name = null;
        Locale locale = Locale.getDefault();
        DynaBeanPointer dynaBeanPointer = new DynaBeanPointer(name, dynaBean, locale);
        int hashCode = dynaBeanPointer.hashCode();
        assertEquals(0, hashCode);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLeaf_ikAf0_ezMe0() {
    QName name = new QName("testName");
    Locale locale = Locale.getDefault();
    DynaBean dynaBean = null; // Assuming dynaBean is defined elsewhere or mocked
    DynaBeanPointer dynaBeanPointer = new DynaBeanPointer(name, dynaBean, locale);
    assertFalse(dynaBeanPointer.isLeaf(), "isLeaf should return false");
}
}