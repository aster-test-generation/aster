/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;
import java.util.Locale;
import org.apache.commons.beanutils.DynaBean;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynaBeanPointerFactory_Test_Passing {
@InjectMocks
    private DynaBeanPointerFactory dynaBeanPointerFactory;
@Mock
    private NodePointer parentMock;
@Mock
    private QName nameMock;
@Mock
    private DynaBean dynaBeanMock;
@Mock
    private DynaBeanPointer dynaBeanPointerMock;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonDynaBean_zDBN1() {
    DynaBeanPointerFactory factory = new DynaBeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object nonDynaBean = new Object();
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, nonDynaBean, locale);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDynaBean() {
        // Setup is handled by Mockito annotations
        // Arrange
        when(dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, dynaBeanMock)).thenReturn(dynaBeanPointerMock);
        // Act
        NodePointer result = dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, dynaBeanMock);
        // Assert
        assertNotNull(result);
        assertTrue(result instanceof DynaBeanPointer);
        assertEquals(dynaBeanPointerMock, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNonDynaBean() {
        // Setup is handled by Mockito annotations
        // Arrange
        Object nonDynaBean = new Object();
        when(dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, nonDynaBean)).thenReturn(null);
        // Act
        NodePointer result = dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, nonDynaBean);
        // Assert
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDynaBean_1() {
        // Setup is handled by Mockito annotations
        // Arrange
        when(dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, dynaBeanMock)).thenReturn(dynaBeanPointerMock);
        // Act
        NodePointer result = dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, dynaBeanMock);
        // Assert
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDynaBean_2() {
        // Setup is handled by Mockito annotations
        // Arrange
        when(dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, dynaBeanMock)).thenReturn(dynaBeanPointerMock);
        // Act
        NodePointer result = dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, dynaBeanMock);
        // Assert
        assertTrue(result instanceof DynaBeanPointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDynaBean_3() {
        // Setup is handled by Mockito annotations
        // Arrange
        when(dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, dynaBeanMock)).thenReturn(dynaBeanPointerMock);
        // Act
        NodePointer result = dynaBeanPointerFactory.createNodePointer(parentMock, nameMock, dynaBeanMock);
        // Assert
        assertEquals(dynaBeanPointerMock, result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOrder_bmFx0_PPbm0() {
    DynaBeanPointerFactory factory = new DynaBeanPointerFactory();
    int expected = 0; // Assuming default order as 0 since DYNA_BEAN_POINTER_FACTORY_ORDER is not defined
    assertEquals(expected, factory.getOrder());
}
}