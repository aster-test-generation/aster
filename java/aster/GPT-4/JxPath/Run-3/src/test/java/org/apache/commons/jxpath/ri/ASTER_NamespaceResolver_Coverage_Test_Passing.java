/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_NamespaceResolver_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrefix_WhenPrefixIsNullAndPointerIsNotNull_QCry0() {
        NamespaceResolver mockParent = mock(NamespaceResolver.class);
        when(mockParent.getPrefix("http://example.com")).thenReturn("example");
        NamespaceResolver resolver = new NamespaceResolver(mockParent);
        NamespaceResolver spyResolver = spy(resolver);
        when(spyResolver.getExternallyRegisteredPrefix("http://example.com")).thenReturn(null);
        String result = spyResolver.getPrefix("http://example.com");
    assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPrefix_NonEmptyPrefix_eEay0_pOTA0() {
    QName qName = new QName("prefix", "localName");
    NodePointer nodePointer = mock(NodePointer.class);
    NodeIterator nodeIterator = mock(NodeIterator.class);
    NodePointer namespacePointer = mock(NodePointer.class);
    when(nodePointer.namespaceIterator()).thenReturn(nodeIterator);
    when(nodeIterator.setPosition(1)).thenReturn(true);
    when(nodeIterator.getNodePointer()).thenReturn(namespacePointer);
    when(namespacePointer.getNamespaceURI()).thenReturn("http://example.com");
    when(namespacePointer.getName()).thenReturn(qName);
    when(nodePointer.getParent()).thenReturn(null);
    String result = NamespaceResolver.getPrefix(nodePointer, "http://example.com");
    assertEquals("prefix", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrefix_WhenPrefixIsNullAndPointerIsNotNull_QCry0_fid2() {
        NamespaceResolver mockParent = mock(NamespaceResolver.class);
        when(mockParent.getPrefix("http://example.com")).thenReturn("example");
        NamespaceResolver resolver = new NamespaceResolver(mockParent);
        NamespaceResolver spyResolver = spy(resolver);
        when(spyResolver.getExternallyRegisteredPrefix("http://example.com")).thenReturn(null);
        String result = spyResolver.getPrefix("http://example.com");
        assertEquals("example", result);
    }
}