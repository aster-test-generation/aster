/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_BasicVariables_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToStringReturnsCorrectFormat_qoyZ0() {
    BasicVariables basicVariables = new BasicVariables();
    assertEquals("{}", basicVariables.toString());
}
@Test
public void testGetVariableNonExistingKey_ncaj1_zdlI0() {
    BasicVariables basicVariables = new BasicVariables();
    assertThrows(IllegalArgumentException.class, () -> basicVariables.getVariable("nonExistingKey"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsDeclaredVariable_ExistingKey_wDAn0_MUVi0() {
    BasicVariables basicVariables = new BasicVariables();
    basicVariables.declareVariable("testKey", "testValue");
    assertTrue(basicVariables.isDeclaredVariable("testKey"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDeclareVariable_kHNr0_GOlD0() {
    BasicVariables basicVariables = new BasicVariables();
    String testVarName = "testKey";
    Integer testValue = 123;
    basicVariables.declareVariable(testVarName, testValue);
    assertEquals(testValue, basicVariables.getVariable(testVarName));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetVariableExistingKey_DPzY0_bugS0() {
    BasicVariables basicVariables = new BasicVariables();
    basicVariables.declareVariable("key1", "value1");
    Object result = basicVariables.getVariable("key1");
    assertEquals("value1", result);
}
}