/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JXPathContextReferenceImpl_Coverage_Test_Failing {
    JXPathContextReferenceImpl jxpathcontextreferenceimpl;
    JXPathContext mockParentContext;
    Object contextBean;
    NodePointer mockContextPointer;
@BeforeEach
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPointerWithEvalContextResult_Hhap0_1() {
        JXPathContextReferenceImpl context = new JXPathContextReferenceImpl(null, new Object());
        String xpath = "/test";
        Expression expr = mock(Expression.class);
        EvalContext evalContext = mock(EvalContext.class);
        NodePointer nodePointer = mock(NodePointer.class);
        when(expr.computeValue(any())).thenReturn(evalContext);
        when(evalContext.getSingleNodePointer()).thenReturn(nodePointer);
        Pointer result = context.getPointer(xpath, expr);
        assertNotNull(result);}
}