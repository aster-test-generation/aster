/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import org.apache.commons.jxpath.AbstractFactory;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
public class Aster_NullPropertyPointer_Coverage_Test_Failing {
@ExtendWith(MockitoExtension.class)
    @Mock
    NodePointer parent1;
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithNullParent_LtSw0() {
        NullPropertyPointer pointer = new NullPropertyPointer(null);
        pointer.setValue(new Object());
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithContainerParent_dhap1() {
        DOMNodePointer mockParent = mock(DOMNodePointer.class);
        when(mockParent.isContainer()).thenReturn(true);
        NullPropertyPointer pointer = new NullPropertyPointer(mockParent);
        pointer.setValue(new Object());
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithNonPropertyOwnerPointerParent_Wlnw2() {
        DOMNodePointer mockParent = mock(DOMNodePointer.class);
        when(mockParent.isContainer()).thenReturn(false);
        NullPropertyPointer pointer = new NullPropertyPointer(mockParent);
        pointer.setValue(new Object());
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithPropertyOwnerPointerNoDynamicSupport_SnnL4() {
        PropertyOwnerPointer mockParent = mock(PropertyOwnerPointer.class);
        when(mockParent.isContainer()).thenReturn(false);
        when(mockParent instanceof PropertyOwnerPointer).thenReturn(true);
        when(mockParent.isDynamicPropertyDeclarationSupported()).thenReturn(false);
        NullPropertyPointer pointer = new NullPropertyPointer(mockParent);
        pointer.setValue(new Object());
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithPropertyOwnerPointerNullPropertyPointer_UUvj5() {
        PropertyOwnerPointer mockParent = mock(PropertyOwnerPointer.class);
        when(mockParent.isContainer()).thenReturn(false);
        when(mockParent instanceof PropertyOwnerPointer).thenReturn(true);
        when(mockParent.isDynamicPropertyDeclarationSupported()).thenReturn(true);
        when(mockParent.getPropertyPointer()).thenReturn(null);
        NullPropertyPointer pointer = new NullPropertyPointer(mockParent);
        pointer.setValue(new Object());
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithPropertyOwnerPointerAndExceptionOnSetPropertyName_VYHr6() {
        PropertyOwnerPointer mockParent = mock(PropertyOwnerPointer.class);
        PropertyPointer mockPropertyPointer = mock(PropertyPointer.class);
        when(mockParent.isContainer()).thenReturn(false);
        when(mockParent instanceof PropertyOwnerPointer).thenReturn(true);
        when(mockParent.isDynamicPropertyDeclarationSupported()).thenReturn(true);
        when(mockParent.getPropertyPointer()).thenReturn(mockPropertyPointer);
        doThrow(new RuntimeException()).when(mockPropertyPointer).setPropertyName(anyString());
        NullPropertyPointer pointer = new NullPropertyPointer(mockParent);
        pointer.setValue(new Object());
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithPropertyOwnerPointerAndExceptionOnSetValue_EcFo7() {
        PropertyOwnerPointer mockParent = mock(PropertyOwnerPointer.class);
        PropertyPointer mockPropertyPointer = mock(PropertyPointer.class);
        when(mockParent.isContainer()).thenReturn(false);
        when(mockParent instanceof PropertyOwnerPointer).thenReturn(true);
        when(mockParent.isDynamicPropertyDeclarationSupported()).thenReturn(true);
        when(mockParent.getPropertyPointer()).thenReturn(mockPropertyPointer);
        doThrow(new RuntimeException()).when(mockPropertyPointer).setValue(any());
        NullPropertyPointer pointer = new NullPropertyPointer(mockParent);
        pointer.setValue(new Object());
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithPropertyOwnerPointerAndNullValue_BMmG8() {
        PropertyOwnerPointer mockParent = mock(PropertyOwnerPointer.class);
        PropertyPointer mockPropertyPointer = mock(PropertyPointer.class);
        when(mockParent.isContainer()).thenReturn(false);
        when(mockParent instanceof PropertyOwnerPointer).thenReturn(true);
        when(mockParent.isDynamicPropertyDeclarationSupported()).thenReturn(true);
        when(mockParent.getPropertyPointer()).thenReturn(mockPropertyPointer);
        NullPropertyPointer pointer = new NullPropertyPointer(mockParent);
        pointer.setValue(null);
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithPropertyOwnerPointerAndInvalidPath_GzUp9() {
        PropertyOwnerPointer mockParent = mock(PropertyOwnerPointer.class);
        PropertyPointer mockPropertyPointer = mock(PropertyPointer.class);
        when(mockParent.isContainer()).thenReturn(false);
        when(mockParent instanceof PropertyOwnerPointer).thenReturn(true);
        when(mockParent.isDynamicPropertyDeclarationSupported()).thenReturn(true);
        when(mockParent.getPropertyPointer()).thenReturn(mockPropertyPointer);
        when(mockParent.asPath()).thenReturn("invalid/path");
        NullPropertyPointer pointer = new NullPropertyPointer(mockParent);
        pointer.setValue(new Object());
    }
    @Mock
    NodePointer parent;
    @Mock
    JXPathContext context;
    @Mock
    AbstractFactory factory;
    @Mock
    PropertyOwnerPointer propertyOwnerPointer;
    @InjectMocks
    NullPropertyPointer nullPropertyPointer;
}