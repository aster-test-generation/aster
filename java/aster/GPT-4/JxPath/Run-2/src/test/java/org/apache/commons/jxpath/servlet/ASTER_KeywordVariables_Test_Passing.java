/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_KeywordVariables_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsDeclaredVariable_MatchingKeyword_VqNM0() {
    KeywordVariables kv = new KeywordVariables("testKeyword", new Object());
    assertTrue(kv.isDeclaredVariable("testKeyword"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetVariableWhenVariableIsDeclared_hIzb0() {
    KeywordVariables kv = new KeywordVariables("testKeyword", "testObject");
    assertEquals("testObject", kv.getVariable("testKeyword"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetVariableWhenVariableIsNotDeclared_lFYx1() {
    KeywordVariables kv = new KeywordVariables("testKeyword", "testObject");
    assertNull(kv.getVariable("nonExistentVariable"));
}
}