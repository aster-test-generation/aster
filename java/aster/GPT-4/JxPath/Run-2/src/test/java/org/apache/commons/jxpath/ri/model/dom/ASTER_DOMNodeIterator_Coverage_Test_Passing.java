/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DOMNodeIterator_Coverage_Test_Passing {
    private DOMNodePointer startWith;
    private DOMNodeIterator domNodeIterator;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_PositionIsZeroAndChildIsNull_XeLd0() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NodeTypeTest nodeTest = new NodeTypeTest(1);
        DOMNodeIterator iterator = new DOMNodeIterator(parent, nodeTest, false, null);
        NodePointer result = iterator.getNodePointer();
        assertNull(result);
        assertEquals(1, iterator.getPosition()); // Assuming getPosition method exists to check the position
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_PositionIsZeroAndChildIsNull_XeLd0_1() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NodeTypeTest nodeTest = new NodeTypeTest(1);
        DOMNodeIterator iterator = new DOMNodeIterator(parent, nodeTest, false, null);
        NodePointer result = iterator.getNodePointer();
        assertNull(result);}
}