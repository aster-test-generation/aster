/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.w3c.dom.Node;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DOMAttributeIterator_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointer_positionReset_YXjs7_DPjJ0_1_fid2() {
    DOMNodePointer parent = mock(DOMNodePointer.class);
    QName name = new QName("test");
    when(parent.getNode()).thenReturn(mock(Node.class));
    DOMAttributeIterator iterator = new DOMAttributeIterator(parent, name);
    when(iterator.setPosition(1)).thenReturn(true);
    NodePointer result = iterator.getNodePointer();
    assertNotNull(result);
}
}