/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.ri.Compiler;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.Step;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
public class Aster_SimplePathInterpreter_Coverage_Test_Passing {
@ExtendWith(MockitoExtension.class)
    @Mock
    private EvalContext mockContext;
@ExtendWith(MockitoExtension.class)
    @Mock
    private EvalContext mockContext1;
    @Mock
    private NodePointer mockRoot;
    @Mock
    private NodePointer mockResultPointer;
    @Mock
    private Step[] mockSteps;

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNullPointer_StepRetrieved_tToE2() {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step[] steps = new Step[1];
        steps[0] = mock(Step.class);
        int currentStep = 0;
        SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertEquals(steps[currentStep], steps[0]);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNullPointer_AxisRetrieved_bfji3() {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step step = mock(Step.class);
        Step[] steps = new Step[] { step };
        int currentStep = 0;
        when(step.getAxis()).thenReturn(Compiler.AXIS_CHILD);
        SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        verify(step).getAxis();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNullPointer_NullPropertyPointerCreatedForChildAxis_MHBn4() {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step step = mock(Step.class);
        NodeNameTest nodeNameTest = mock(NodeNameTest.class);
        QName qName = new QName("test");
        Step[] steps = new Step[] { step };
        int currentStep = 0;
        when(step.getAxis()).thenReturn(Compiler.AXIS_CHILD);
        when(step.getNodeTest()).thenReturn(nodeNameTest);
        when(nodeNameTest.getNodeName()).thenReturn(qName);
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertTrue(result instanceof NullPropertyPointer);
    }

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNullPointer_ParentUpdatedWithPointer_GxnW7() {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        NullPropertyPointer pointer = new NullPropertyPointer(parent);
        Step step = mock(Step.class);
        Step[] steps = new Step[] { step };
        int currentStep = 0;
        when(step.getAxis()).thenReturn(Compiler.AXIS_CHILD);
        NodePointer result = SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        assertEquals(pointer, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNullPointer_PredicatesProcessed_ietT8() {
        EvalContext context = mock(EvalContext.class);
        NodePointer parent = mock(NodePointer.class);
        Step step = mock(Step.class);
        Expression[] predicates = new Expression[0];
        Step[] steps = new Step[] { step };
        int currentStep = 0;
        when(step.getPredicates()).thenReturn(predicates);
        SimplePathInterpreter.createNullPointer(context, parent, steps, currentStep);
        verify(step).getPredicates();
    }

}