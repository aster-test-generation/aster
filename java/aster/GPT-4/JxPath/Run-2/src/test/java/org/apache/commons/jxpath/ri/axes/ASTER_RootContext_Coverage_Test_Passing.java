/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.NodeSet;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RootContext_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNodeSet_cxJi0_1() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        NodeSet nodeSet = mock(NodeSet.class);
        EvalContext result = rootContext.getConstantContext(nodeSet);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNodeSet_cxJi0_2() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        NodeSet nodeSet = mock(NodeSet.class);
        EvalContext result = rootContext.getConstantContext(nodeSet);
        assertTrue(result instanceof NodeSetContext);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNodePointer_heKN1_1() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        NodePointer nodePointer = mock(NodePointer.class);
        EvalContext result = rootContext.getConstantContext(nodePointer);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNodePointer_heKN1_2() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        NodePointer nodePointer = mock(NodePointer.class);
        EvalContext result = rootContext.getConstantContext(nodePointer);
        assertTrue(result instanceof InitialContext);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithOtherObject_nQUW2_1() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        Object otherObject = new Object();
        EvalContext result = rootContext.getConstantContext(otherObject);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithOtherObject_nQUW2_2() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        Object otherObject = new Object();
        EvalContext result = rootContext.getConstantContext(otherObject);
        assertTrue(result instanceof InitialContext);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNewNodePointerCreation_vbII4_1() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        String nonNodePointerObject = "Test String";
        EvalContext result = rootContext.getConstantContext(nonNodePointerObject);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNewNodePointerCreation_vbII4_2() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        String nonNodePointerObject = "Test String";
        EvalContext result = rootContext.getConstantContext(nonNodePointerObject);
        assertTrue(((InitialContext) result).getContextNodePointer() instanceof NodePointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNodeSet_cxJi0() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        NodeSet nodeSet = mock(NodeSet.class);
        EvalContext result = rootContext.getConstantContext(nodeSet);
        assertNotNull(result);
        assertTrue(result instanceof NodeSetContext);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNodePointer_heKN1() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        NodePointer nodePointer = mock(NodePointer.class);
        EvalContext result = rootContext.getConstantContext(nodePointer);
        assertNotNull(result);
        assertTrue(result instanceof InitialContext);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithOtherObject_nQUW2() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        Object otherObject = new Object();
        EvalContext result = rootContext.getConstantContext(otherObject);
        assertNotNull(result);
        assertTrue(result instanceof InitialContext);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNewNodePointerCreation_vbII4() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        String nonNodePointerObject = "Test String";
        EvalContext result = rootContext.getConstantContext(nonNodePointerObject);
        assertNotNull(result);
        assertTrue(((InitialContext) result).getContextNodePointer() instanceof NodePointer);
    }
}