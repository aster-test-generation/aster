/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import java.util.Collection;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.ArrayList;
import java.util.Collection;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PackageFunctions_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNullParameters_Xibp1() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Function result = packageFunctions.getFunction("com.example", "methodName", null);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithEmptyParameters_KlCz2() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Function result = packageFunctions.getFunction("com.example", "methodName", new Object[]{});
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithCollection_Ysxr5() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Collection collection = new ArrayList();
        Object[] parameters = new Object[]{collection};
        Function result = packageFunctions.getFunction("com.example", "isEmpty", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithConstructor_PaDq7() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("com.example", "new", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithStaticMethod_dCZB8() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("com.example", "staticMethod", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNonExistentMethod_NgFj10() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{new Object()};
        Function result = packageFunctions.getFunction("com.example", "nonExistentMethod", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithInvalidConstructor_jyBK11() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{1, "test"};
        Function result = packageFunctions.getFunction("com.example", "new", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithValidStaticMethod_iSjX12() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{1};
        Function result = packageFunctions.getFunction("com.example", "valueOf", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithInvalidStaticMethod_sNly13() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{"test"};
        Function result = packageFunctions.getFunction("com.example", "parse", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithValidConstructorAndParameters_trKW14() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{10};
        Function result = packageFunctions.getFunction("com.example", "new", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithStaticMethodAndParameters_UvxE15() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{10, 20};
        Function result = packageFunctions.getFunction("com.example", "add", parameters);
        assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNonStaticMethod_MgNr16() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "com.example");
        Object[] parameters = new Object[]{new Object()};
        Function result = packageFunctions.getFunction("com.example", "instanceMethod", parameters);
        assertNull(result);
    }
}