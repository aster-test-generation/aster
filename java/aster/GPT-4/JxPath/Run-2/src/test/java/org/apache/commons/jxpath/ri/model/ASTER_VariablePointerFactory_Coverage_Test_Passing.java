/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model;
import java.util.Locale;
import org.apache.commons.jxpath.ri.QName;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_VariablePointerFactory_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_nmfV0() {
        VariablePointerFactory factory = new VariablePointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        QName mockName = mock(QName.class);
        Object testObject = new Object();
        NodePointer result = factory.createNodePointer(mockParent, mockName, testObject);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNonVariableContextWrapper_IvRh0() {
        VariablePointerFactory factory = new VariablePointerFactory();
        QName name = new QName("test");
        Object object = new Object(); // Not a VariableContextWrapper
        Locale locale = Locale.getDefault();
        NodePointer result = factory.createNodePointer(name, object, locale);
        assertNull(result);
    }

}