/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import java.net.URL;
import javax.xml.transform.Source;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_XMLDocumentContainer_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValueWithNullSourceAndDelegate_YOjl0_PVAf0() {
    XMLDocumentContainer container = new XMLDocumentContainer((Source) null);
    assertNull(container.getValue(), "Document should be null when source and delegate are null");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValueWithValidURL_AFmK2_Htqd0() throws Exception {
    URL xmlURL = new URL("http://example.com/sample.xml");
    XMLDocumentContainer container = new XMLDocumentContainer(xmlURL);
    assertNotNull(container.getValue(), "Document should not be null when a valid URL is provided");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValueWithNullURL_JtoB4_NWWx0() {
    XMLDocumentContainer container = new XMLDocumentContainer((URL) null);
    assertNull(container.getValue(), "Document should be null when URL is null");
}
}