/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JXPathCompiledExpression_Coverage_Test_Passing {
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveAllInvalidContext_jSRm1() {
        JXPathContext context = mock(JXPathContext.class); // This mock is not of type JXPathContextReferenceImpl
        JXPathCompiledExpression expression = new JXPathCompiledExpression("some/xpath", new Constant(123));
        expression.removeAll(context);
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPointerWithInvalidContextType_YVmj1() {
        JXPathContext context = mock(JXPathContext.class); // This is not a JXPathContextReferenceImpl
        String xpath = "/some/path";
        Constant expression = new Constant("expression");
        JXPathCompiledExpression compiledExpression = new JXPathCompiledExpression(xpath, expression);
        compiledExpression.getPointer(context, xpath); // This should throw ClassCastException
    }
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIterateWithInvalidContext_ZdkY1() {
        String xpath = "/some/path";
        Constant expression = new Constant("expression");
        JXPathCompiledExpression compiledExpression = new JXPathCompiledExpression(xpath, expression);
        JXPathContext mockContext = mock(JXPathContext.class);
        compiledExpression.iterate(mockContext);
    }

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_oSaI0() {
        JXPathContext context = mock(JXPathContextReferenceImpl.class);
        Object value = new Object();
        String xpath = "/some/path";
        Constant expression = new Constant("expression");
        JXPathCompiledExpression compiledExpression = new JXPathCompiledExpression(xpath, expression);
        compiledExpression.setValue(context, value);
        verify((JXPathContextReferenceImpl) context).setValue(xpath, expression, value);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithDifferentParameters_OUQg1() {
        JXPathContext context = mock(JXPathContextReferenceImpl.class);
        Object value = "new value";
        String xpath = "/another/path";
        Constant expression = new Constant(123);
        JXPathCompiledExpression compiledExpression = new JXPathCompiledExpression(xpath, expression);
        compiledExpression.setValue(context, value);
        verify((JXPathContextReferenceImpl) context).setValue(xpath, expression, value);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveAllValidContext_wEIP0() {
        JXPathContext context = mock(JXPathContextReferenceImpl.class);
        JXPathCompiledExpression expression = new JXPathCompiledExpression("some/xpath", new Constant("expression"));
        expression.removeAll(context);
        verify((JXPathContextReferenceImpl)context).removeAll("some/xpath", new Constant("expression"));
    }
}