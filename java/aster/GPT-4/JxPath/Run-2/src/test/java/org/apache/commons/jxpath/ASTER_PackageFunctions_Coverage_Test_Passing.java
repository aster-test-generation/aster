/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PackageFunctions_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionDifferentNamespace_VbUv0() {
        PackageFunctions pf = new PackageFunctions("com.example.", "http://example.com");
        Function result = pf.getFunction("http://different.com", "methodName", new Object[]{});
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNodeSet_EpBt2() {
        NodeSet nodeSet = mock(NodeSet.class);
        when(nodeSet.getPointers()).thenReturn(new ArrayList<>());
        PackageFunctions pf = new PackageFunctions("com.example.", "http://example.com");
        Function result = pf.getFunction("http://example.com", "methodName", new Object[]{nodeSet});
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionClassNotFoundException_EceE8() {
        PackageFunctions pf = new PackageFunctions("com.example.", "http://example.com");
        try {
            Function result = pf.getFunction("http://example.com", "unknownClass.methodName", new Object[]{new Object()});
            fail("Expected JXPathException");
        } catch (JXPathException ex) {
            assertNotNull(ex.getMessage());
        }
    }
}