/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;
import org.apache.commons.beanutils.DynaBean;
import org.apache.commons.jxpath.util.ValueUtils;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.Collection;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DynaBeanPropertyPointer_Coverage_Test_Passing {
    private DynaBean dynaBean;
    private DynaBeanPropertyPointer dynaBeanPropertyPointer;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValue_WithNullValue_FbPF2() {
        Object expectedValue = null;
        dynaBeanPropertyPointer.setValue(expectedValue);
        verify(dynaBean).set("property", expectedValue); // Assuming there's a method set in DynaBean to handle null values
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBaseValue_mWVs0() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        String expectedPropertyName = "testProperty";
        Object expectedValue = "expectedValue";
        when(pointer.getPropertyName()).thenReturn(expectedPropertyName);
        when(dynaBean.get(expectedPropertyName)).thenReturn(expectedValue);
        Object result = pointer.getBaseValue();
        verify(dynaBean).get(expectedPropertyName); // Verify that dynaBean.get was called with the correct property name
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_PropertyNameIsAsterisk_GINd0() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        when(pointer.getPropertyName()).thenReturn("*");
        assertNull(pointer.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_WholeCollection_heRt1() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        when(pointer.getPropertyName()).thenReturn("propertyName");
        when(pointer.getIndex()).thenReturn(DynaBeanPropertyPointer.WHOLE_COLLECTION);
        when(dynaBean.get("propertyName")).thenReturn(new Object());
        when(ValueUtils.getValue(any())).thenReturn(new Object());
        assertNotNull(pointer.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_IndexedProperty_ValidIndex_XIcI2() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        when(pointer.getPropertyName()).thenReturn("propertyName");
        when(pointer.isIndexedProperty()).thenReturn(true);
        when(pointer.getIndex()).thenReturn(1);
        when(dynaBean.get("propertyName", 1)).thenReturn(new Object());
        when(ValueUtils.getValue(any())).thenReturn(new Object());
        assertNotNull(pointer.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_IndexedProperty_ArrayIndexOutOfBoundsException_DLFz3() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        when(pointer.getPropertyName()).thenReturn("propertyName");
        when(pointer.isIndexedProperty()).thenReturn(true);
        when(pointer.getIndex()).thenReturn(1);
        when(dynaBean.get("propertyName", 1)).thenThrow(new ArrayIndexOutOfBoundsException());
        assertNull(pointer.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_IndexedProperty_IllegalArgumentException_ihpw4() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        when(pointer.getPropertyName()).thenReturn("propertyName");
        when(pointer.isIndexedProperty()).thenReturn(true);
        when(pointer.getIndex()).thenReturn(1);
        when(dynaBean.get("propertyName", 1)).thenThrow(new IllegalArgumentException());
        when(dynaBean.get("propertyName")).thenReturn(new Object());
        when(ValueUtils.getValue(any(), anyInt())).thenReturn(new Object());
        assertNotNull(pointer.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_NonIndexedProperty_NsMG5() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        when(pointer.getPropertyName()).thenReturn("propertyName");
        when(pointer.getIndex()).thenReturn(0);
        when(dynaBean.get("propertyName")).thenReturn(new Object());
        assertNotNull(pointer.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_NonIndexedProperty_CollectionValue_lfSl6() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        when(pointer.getPropertyName()).thenReturn("propertyName");
        when(pointer.getIndex()).thenReturn(1);
        Object collection = mock(Collection.class);
        when(dynaBean.get("propertyName")).thenReturn(collection);
        when(ValueUtils.isCollection(collection)).thenReturn(true);
        when(ValueUtils.getValue(collection, 1)).thenReturn(new Object());
        assertNotNull(pointer.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNode_NonIndexedProperty_NonCollectionValue_NonZeroIndex_gfTA7() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parent, dynaBean);
        when(pointer.getPropertyName()).thenReturn("propertyName");
        when(pointer.getIndex()).thenReturn(1);
        when(dynaBean.get("propertyName")).thenReturn(new Object());
        assertNull(pointer.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_WholeCollection_bdwc0() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.getIndex()).thenReturn(DynaBeanPropertyPointer.WHOLE_COLLECTION);
        pointer.remove();
        verify(dynaBean).set(pointer.getPropertyName(), null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_IndexedProperty_Rzvn1() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.isIndexedProperty()).thenReturn(true);
        when(pointer.getIndex()).thenReturn(1);
        pointer.remove();
        verify(dynaBean).set(pointer.getPropertyName(), 1, null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_Collection_UflH2() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.isCollection()).thenReturn(true);
        when(pointer.getIndex()).thenReturn(1);
        Object baseValue = new Object();
        when(pointer.getBaseValue()).thenReturn(baseValue);
        Object modifiedCollection = new Object();
        when(ValueUtils.remove(baseValue, 1)).thenReturn(modifiedCollection);
        pointer.remove();
        verify(dynaBean).set(pointer.getPropertyName(), modifiedCollection);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_IndexZero_sMhM3() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.getIndex()).thenReturn(0);
        when(pointer.isIndexedProperty()).thenReturn(false);
        when(pointer.isCollection()).thenReturn(false);
        pointer.remove();
        verify(dynaBean).set(pointer.getPropertyName(), null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_IndexZeroButIndexed_oTRE4() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.getIndex()).thenReturn(0);
        when(pointer.isIndexedProperty()).thenReturn(true);
        pointer.remove();
        verify(dynaBean).set(pointer.getPropertyName(), 0, null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_IndexZeroButCollection_VwMd5() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.getIndex()).thenReturn(0);
        when(pointer.isCollection()).thenReturn(true);
        Object baseValue = new Object();
        when(pointer.getBaseValue()).thenReturn(baseValue);
        Object modifiedCollection = new Object();
        when(ValueUtils.remove(baseValue, 0)).thenReturn(modifiedCollection);
        pointer.remove();
        verify(dynaBean).set(pointer.getPropertyName(), modifiedCollection);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_NonIndexedNonCollectionIndexNonZero_ItMH7() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.getIndex()).thenReturn(1);
        when(pointer.isIndexedProperty()).thenReturn(false);
        when(pointer.isCollection()).thenReturn(false);
        pointer.remove();
        verify(dynaBean, never()).set(anyString(), any());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_WholeCollectionWithDifferentIndex_lDGF8() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.getIndex()).thenReturn(DynaBeanPropertyPointer.WHOLE_COLLECTION + 1);
        pointer.remove();
        verify(dynaBean, never()).set(anyString(), any());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemove_CollectionWithNonCollectionProperty_tdmn9() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        DynaBean dynaBean = mock(DynaBean.class);
        DynaBeanPropertyPointer pointer = new DynaBeanPropertyPointer(parentNode, dynaBean);
        when(pointer.isCollection()).thenReturn(false);
        when(pointer.getIndex()).thenReturn(1);
        pointer.remove();
        verify(dynaBean, never()).set(anyString(), any());
    }
}