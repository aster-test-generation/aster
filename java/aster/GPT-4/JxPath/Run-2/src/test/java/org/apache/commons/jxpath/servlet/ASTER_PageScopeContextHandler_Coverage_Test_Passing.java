/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PageScopeContextHandler_Coverage_Test_Passing {
    @Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithInvalidType_Jyug1() {
        Object invalidPageScope = new Object();
        PageScopeContextHandler handler = new PageScopeContextHandler();
        String property = "anotherProperty";
        String value = "anotherValue";
        handler.setProperty(invalidPageScope, property, value);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProperty_WCYK0() {
        PageScopeContext mockPageScopeContext = mock(PageScopeContext.class);
        when(mockPageScopeContext.getAttribute("testProperty")).thenReturn("testValue");
        PageScopeContextHandler handler = new PageScopeContextHandler();
        Object result = handler.getProperty(mockPageScopeContext, "testProperty");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyValidInput_orsv0() {
        PageScopeContext mockPageScope = mock(PageScopeContext.class);
        PageScopeContextHandler handler = new PageScopeContextHandler();
        String property = "someProperty";
        String value = "someValue";
        handler.setProperty(mockPageScope, property, value);
        verify(mockPageScope).setAttribute(property, value);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyNamesWithNullPageScope_oLwt3() {
        try {
            PageScopeContextHandler handler = new PageScopeContextHandler();
            handler.getPropertyNames(null);
            fail("Expected an exception to be thrown");
        } catch (NullPointerException e) {
        }
    }
}