/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertSame;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RootContext_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNodePointerDirectly_SOuW3_2() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        NodePointer nodePointer = mock(NodePointer.class);
        EvalContext result = rootContext.getConstantContext(nodePointer);
        assertSame(nodePointer, ((InitialContext) result).getContextNodePointer());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantContextWithNodePointerDirectly_SOuW3() {
        JXPathContextReferenceImpl jxpathContext = mock(JXPathContextReferenceImpl.class);
        RootContext rootContext = new RootContext(jxpathContext, null);
        NodePointer nodePointer = mock(NodePointer.class);
        EvalContext result = rootContext.getConstantContext(nodePointer);
        assertNotNull(result);
        assertSame(nodePointer, ((InitialContext) result).getContextNodePointer());
    }
}