/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ChildContext_Coverage_Test_Failing {
    private NodeIterator iterator;
    private ChildContext childContext;
    private NamespaceContext namespaceContext;
    private NodeTypeTest nodeTypeTest;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPosition_ReturnsTrue_WhenIteratorIsNotNullAndCanSetPosition_agIG3_OCek0() throws Exception {
    ChildContext childContext = mock(ChildContext.class);
    when(childContext.setPosition(anyInt())).thenReturn(true);
    boolean result = childContext.nextNode();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPosition_WhenOldPositionIsZero_hOXr1_ArBX0() throws Exception {
    ChildContext childContext = mock(ChildContext.class);
    when(childContext.getCurrentPosition()).thenReturn(0);
    when(childContext.setPosition(anyInt())).thenReturn(true);
    boolean result = childContext.nextNode();
    verify(childContext).setPosition(1);
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionNotZero_ggkv4_Cfyf0() {
    ChildContext context = mock(ChildContext.class);
    when(context.getSingleNodePointer()).thenCallRealMethod();
    when(context.getCurrentPosition()).thenReturn(1);
    NodePointer mockNodePointer = mock(NodePointer.class);
    when(context.getCurrentNodePointer()).thenReturn(mockNodePointer);
    assertEquals(mockNodePointer, context.getSingleNodePointer());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSingleNodePointer_PositionNotZero_ggkv4_Cfyf0_fid1() {
    ChildContext context = mock(ChildContext.class);
    when(context.getSingleNodePointer()).thenCallRealMethod();
    when(context.getCurrentPosition()).thenReturn(1);
    NodePointer mockNodePointer = mock(NodePointer.class);
    when(context.getCurrentNodePointer()).thenReturn(mockNodePointer);
    assertNull(mockNodePointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNextNode_WJtX0() {
        NodeTypeTest nodeTest = mock(NodeTypeTest.class);
        NamespaceContext parentContext = mock(NamespaceContext.class);
        ChildContext childContext = new ChildContext(parentContext, nodeTest, true, false);
        ChildContext spyChildContext = spy(childContext);
        when(spyChildContext.getCurrentPosition()).thenReturn(1);
        when(spyChildContext.setPosition(2)).thenReturn(true);
        boolean result = spyChildContext.nextNode();
        assertTrue(result);
        verify(spyChildContext).setPosition(2);
    }
}