/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JDOMNodeIterator_Coverage_Test_Passing {

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPositionNoChange_oEtb4() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        NodeTypeTest nodeTest = new NodeTypeTest(1);
        DOMNodePointer startWith = mock(DOMNodePointer.class);
        JDOMNodeIterator iterator = new JDOMNodeIterator(parent, nodeTest, false, startWith);
        boolean result = iterator.setPosition(0);
        assertTrue(result);
    }

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointerChildIsNullAndSetPositionReturnsFalse_oKpE0() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        NodeTypeTest nodeTest = new NodeTypeTest(1);
        JDOMNodeIterator iterator = new JDOMNodeIterator(parent, nodeTest, false, null);
        JDOMNodeIterator spyIterator = spy(iterator);
        doReturn(false).when(spyIterator).setPosition(1);
        NodePointer result = spyIterator.getNodePointer();
        assertNull(result);
        verify(spyIterator).setPosition(1);
    }

}