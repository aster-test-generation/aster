/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JDOMNodeIterator_Coverage_Test_Passing {
    private JDOMNodeIterator jdomNodeIterator;
    private DOMNodePointer mockParent;
    private NodeTypeTest mockNodeTest;
    private DOMNodePointer mockStartWith;
@BeforeEach
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPositionNoChange_BOHF5() {
        assertTrue(jdomNodeIterator.setPosition(0));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointerWhenChildIsNullAndSetPositionReturnsFalse_woJx0_YhBM0() {
    DOMNodePointer parent = mock(DOMNodePointer.class);
    NodeTypeTest nodeTest = new NodeTypeTest(1); // Assuming 1 represents Node.ELEMENT_NODE
    JDOMNodeIterator iterator = new JDOMNodeIterator(parent, nodeTest, false, null);
    JDOMNodeIterator spyIterator = spy(iterator);
    doReturn(false).when(spyIterator).setPosition(1);
    NodePointer result = spyIterator.getNodePointer();
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodePointerWhenChildIsNullAndSetPositionNotCalled_WCFg4_tjgM0() {
    DOMNodePointer parent = mock(DOMNodePointer.class);
    NodeTypeTest nodeTest = new NodeTypeTest(1); // Assuming 1 represents Node.ELEMENT_NODE
    JDOMNodeIterator iterator = new JDOMNodeIterator(parent, nodeTest, false, null);
    JDOMNodeIterator spyIterator = spy(iterator);
    doReturn(false).when(spyIterator).setPosition(anyInt());
    NodePointer result = spyIterator.getNodePointer();
    assertNull(result);
}
}