/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_XPathParserTokenManager_Coverage_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithValidStreamAndState_mCfY0() {
        SimpleCharStream mockStream = mock(SimpleCharStream.class);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(mockStream);
        doNothing().when(tokenManager).ReInit(mockStream);
        doNothing().when(tokenManager).SwitchTo(anyInt());
        tokenManager.ReInit(mockStream, 1);
        verify(tokenManager).ReInit(mockStream);
        verify(tokenManager).SwitchTo(1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithNullStream_gvMP1() {
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(null);
        doNothing().when(tokenManager).ReInit(null);
        doNothing().when(tokenManager).SwitchTo(anyInt());
        tokenManager.ReInit(null, 0);
        verify(tokenManager).ReInit(null);
        verify(tokenManager).SwitchTo(0);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithDifferentLexState_CuCx2() {
        SimpleCharStream mockStream = mock(SimpleCharStream.class);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(mockStream);
        doNothing().when(tokenManager).ReInit(mockStream);
        doNothing().when(tokenManager).SwitchTo(anyInt());
        tokenManager.ReInit(mockStream, 5);
        verify(tokenManager).ReInit(mockStream);
        verify(tokenManager).SwitchTo(5);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_Coverage4_oiLy3() {
        java.io.StringReader reader = new java.io.StringReader("@");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        try {
            fail("Expected an exception to be thrown");
        } catch (TokenMgrError e) {
            assertTrue(e.getMessage().contains("Lexical error"));
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextTokenWithNoMatchingState_XpuA2() {
        java.io.StringReader reader = new java.io.StringReader("@");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        try {
            fail("Expected TokenMgrError to be thrown");
        } catch (TokenMgrError e) {
            assertEquals(TokenMgrError.LEXICAL_ERROR, e.errorCode);
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextTokenWithEOF_qPVZ4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        try {
            manager.getNextToken();
            fail("Expected TokenMgrError");
        } catch (TokenMgrError e) {
            assertTrue(e.getMessage().contains("Lexical error"));
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharExclamation_gagJ0() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('!');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharDollar_mDPQ1() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('$');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharLeftParenthesis_QbNB2() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('(');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharRightParenthesis_apuL3() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn(')');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharAsterisk_rKYe4() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('*');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharPlus_wjYm5() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('+');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharComma_rGAf6() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn(',');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharMinus_QGnc7() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('-');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharDot_SNye8() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('.');
        when(stream.readChar()).thenReturn('.');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharSlash_XQjv9() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('/');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharColon_ibmX10() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn(':');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharLessThan_OFnx11() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('<');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharEqual_SERV12() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('=');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharGreaterThan_VTcm13() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('>');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharAt_uvVE14() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('@');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharLeftBracket_QKPo15() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('[');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharRightBracket_UGjV16() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn(']');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharPipe_tjAD17() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('|');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharA_mohF18() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharB_fFxD19() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('b');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharC_ZFPW20() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('c');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharD_vxhn21() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('d');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharE_ocNc22() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('e');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharF_sgJB23() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('f');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharI_GLrg24() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('i');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharK_bOdc25() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('k');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharL_Zaez26() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('l');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharM_WShC27() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('m');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharN_MGFT28() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('n');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharO_rbLw29() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('o');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharP_AGek30() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('p');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharR_woWI31() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('r');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharS_RBlr32() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('s');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharT_vVJt33() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('t');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_CurCharU_DHwN34() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('u');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken2_zLze1() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenThrow(new java.io.IOException());
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken3_RDtw2() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('.');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken9_igFf8() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('h');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken18_UnMU17() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('z'); // character that leads to default case in switch
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken19_fQop18() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('b'); // sequence to trigger specific DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken20_FcUu19() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('c'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken21_NeuC20() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('d'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken22_NIkO21() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('e'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken23_XSvh22() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('f'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken24_XJxF23() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('g'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken25_WBnj24() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('h'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken26_jrmw25() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('i'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken27_ikdx26() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('j'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken28_uebX27() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('k'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken29_npeh28() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('l'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken30_ftQa29() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('m'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken31_HoYg30() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('a');
        when(stream.readChar()).thenReturn('n'); // another sequence for DFA transitions
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken15_MGLj14() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('v');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken16_jdLU15() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('x');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken17_sTtV16() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn('y');
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken18_lTOb17() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2000); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken19_gtzE18() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2001); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken20_Kqhe19() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2002); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken21_yidb20() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2003); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken22_POGs21() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2004); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken23_FFmz22() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2005); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken24_uADV23() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2006); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken25_Yllq24() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2007); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken26_IuFT25() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2008); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken27_qBFH26() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x2009); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken28_opsQ27() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0x200A); // Non-matching character
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case1_WYSQ0() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 0);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case2_XSFK1() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 1);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case3_XKBD2() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 2);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case4_OQed3() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 3);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case5_cFck4() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 4);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case6_yJOg5() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 5);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case7_crWN6() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 6);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case8_EsHz7() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 7);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case9_RFZO8() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 8);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case10_aSRf9() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 9);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case11_HwcK10() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 10);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case12_gdgQ11() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 11);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case13_uoit12() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 12);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case14_IDwK13() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 13);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case15_IISb14() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 14);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case16_jFrQ15() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 15);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case17_YvSL16() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 16);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case18_bSyZ17() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 17);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case19_pXgj18() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 18);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case20_WbPC19() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 19);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case21_QelS20() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 20);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case22_yILx21() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 21);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case23_iFts22() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 22);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case24_ZZPT23() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 23);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case25_PPbR24() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 24);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case26_IFNo25() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 25);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case27_DPLp26() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 26);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case28_Pcfk27() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 27);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case29_ZZoI28() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 28);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case30_BmIF29() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 29);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case31_ZFWu30() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 30);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case32_hPLQ31() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 31);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case33_pIDJ32() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 32);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case34_vFQF33() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 33);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case35_BCoo34() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 34);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case36_nJWc35() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 35);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken_case37_znMc36() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 36);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken1_oZzL0() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 97); // 'a'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken2_xGeX1() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 98); // 'b'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken3_vXTv2() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 99); // 'c'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken4_rWLt3() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 100); // 'd'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken6_RMdE5() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 102); // 'f'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken7_CkKG6() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 103); // 'g'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken8_hRQg7() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 104); // 'h'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken9_OFOK8() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 105); // 'i'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken10_WYNm9() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 106); // 'j'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken11_WedR10() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 107); // 'k'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken12_zDey11() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 108); // 'l'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken13_uwLe12() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 109); // 'm'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken14_ZrzY13() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 110); // 'n'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken15_fjot14() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 111); // 'o'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken16_Gduz15() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 112); // 'p'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken17_AhNm16() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 113); // 'q'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken18_qKse17() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 114); // 'r'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken19_dQxE18() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 115); // 's'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken20_qdng19() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 116); // 't'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken21_GHso20() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 117); // 'u'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken22_cZMQ21() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 118); // 'v'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken23_wkqf22() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 119); // 'w'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken24_ZmEr23() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 120); // 'x'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken25_Gaav24() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 121); // 'y'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken26_PIpY25() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 122); // 'z'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken27_QHtA26() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 123); // '{'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken28_kpEM27() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 124); // '|'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken30_RgXj29() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 126); // '~'
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken31_YwjA30() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 127); // DEL
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken32_vwQU31() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 128); // Extended ASCII
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken33_uOkN32() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 129); // Extended ASCII
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken34_TzPi33() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 130); // Extended ASCII
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken35_zWlK34() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 131); // Extended ASCII
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken36_ZlPE35() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 132); // Extended ASCII
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken37_SqMz36() throws Exception {
        SimpleCharStream stream = mock(SimpleCharStream.class);
        when(stream.readChar()).thenReturn((char) 133); // Extended ASCII
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.getNextToken();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNextToken1_Irbj0_qpgH0() throws Exception {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("!"), 1, 1);
    XPathParserTokenManager manager = new XPathParserTokenManager(stream);
    Token token = manager.getNextToken();
    assertEquals(token.kind, XPathParserConstants.EOF);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNextToken1_Irbj0_qpgH0_fid3() throws Exception {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("!"), 1, 1);
    XPathParserTokenManager manager = new XPathParserTokenManager(stream);
    manager.getNextToken();
}
}