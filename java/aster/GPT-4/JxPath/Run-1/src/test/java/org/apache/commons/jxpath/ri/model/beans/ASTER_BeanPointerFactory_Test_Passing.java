/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPointerFactory_Test_Passing {
@InjectMocks
    private BeanPointerFactory beanPointerFactory;
@Mock
    private NodePointer parent;
@Mock
    private QName name;
@Mock
    private Object bean;
@Mock
    private JXPathBeanInfo beanInfo;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean() throws Exception {
        // Initialize mocks and inject mocks setup is handled by MockitoExtension
        // Test the scenario where the bean is null
        NodePointer result = beanPointerFactory.createNodePointer(parent, name, null);
        assertTrue(result instanceof NullPointer, "Expected a NullPointer when bean is null");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_WAyk0_1() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used as a bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_WAyk0_2() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used as a bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertEquals(name, result.getName());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_WAyk0_3() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used as a bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertEquals(bean, result.getImmediateNode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_WAyk0_4() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used as a bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertEquals(locale, result.getLocale());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNullBean_OCla0() {
    BeanPointerFactory factory = new BeanPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("test");
    NodePointer result = factory.createNodePointer(parent, name, null);
    assertTrue(result instanceof NullPointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonNullBean_Jtjw1() {
    BeanPointerFactory factory = new BeanPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("test");
    Object bean = new Object();
    NodePointer result = factory.createNodePointer(parent, name, bean);
    assertTrue(result instanceof BeanPointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOrder_xnuG0_cwAZ0() {
    BeanPointerFactory factory = new BeanPointerFactory();
    int expected =900; // Assuming default order as900 since BEAN_POINTER_FACTORY_ORDER is not defined
    assertEquals(expected, factory.getOrder());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointer_WAyk0() {
    BeanPointerFactory factory = new BeanPointerFactory();
    QName name = new QName("testPrefix", "testLocalName");
    Object bean = new Object(); // Assuming Object can be used as a bean
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(name, bean, locale);
    assertNotNull(result);
    assertEquals(name, result.getName());
    assertEquals(bean, result.getImmediateNode());
    assertEquals(locale, result.getLocale());
}
}