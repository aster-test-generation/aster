/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ParseException_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMessageSpecialConstructorFalse_lCfj0() {
        ParseException pe = new ParseException("Test message");
        assertEquals("Test message", pe.getMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesEmptyString_Tqyk0() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("");
        assertEquals("", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesBackspace_rFIY1() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\b");
        assertEquals("\\b", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesTab_Asnr2() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\t");
        assertEquals("\\t", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesNewline_SxPO3() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\n");
        assertEquals("\\n", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesFormFeed_RAyW4() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\f");
        assertEquals("\\f", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesCarriageReturn_AYRQ5() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\r");
        assertEquals("\\r", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesDoubleQuote_Tgqf6() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\"");
        assertEquals("\\\"", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesSingleQuote_FnBY7() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("'");
        assertEquals("\\\'", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesBackslash_sCKx8() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\\");
        assertEquals("\\\\", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesNonPrintable_HpAN9() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes(String.valueOf((char) 0x1F));
        assertEquals("\\u001f", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesAscii_Ktek10() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("A");
        assertEquals("A", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesExtendedAscii_BgtS11() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes(String.valueOf((char) 0x80));
        assertEquals("\\u0080", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesMultipleCharacters_IrST12() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\b\t\n\f\r\"'\\A");
        assertEquals("\\b\\t\\n\\f\\r\\\"\\'\\\\A", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesUnicode_vLyb13() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes(String.valueOf((char) 0x1234));
        assertEquals("\\u1234", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesHighUnicode_SKCK14() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes(String.valueOf((char) 0xABCD));
        assertEquals("\\uabcd", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesNullCharacter_vETQ16() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes(String.valueOf((char) 0));
        assertEquals("", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesStringWithNullCharacter_FBGq17() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("A" + (char) 0 + "B");
        assertEquals("AB", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesStringWithMultipleSpecialCharacters_YQas18() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("\b\t\n\f\r\"'\\");
        assertEquals("\\b\\t\\n\\f\\r\\\"\\'\\\\", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesStringWithMixedCharacters_LENe19() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("Hello, World!\nThis is a test: \b\t\f\r\"'\\");
        assertEquals("Hello, World!\\nThis is a test: \\b\\t\\f\\r\\\"\\'\\\\", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddEscapesStringWithAsciiAndExtended_NzSx20() {
        ParseException pe = new ParseException();
        String result = pe.add_escapes("Normal ASCII and \u0080\u00FF");
        assertEquals("Normal ASCII and \\u0080\\u00ff", result);
    }
}