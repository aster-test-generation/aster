/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_XPathParserTokenManager_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSwitchToValidState_uBQc2() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        manager.SwitchTo(0);
        assertEquals(0, manager.curLexState);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextToken4_CCEW3() {
        java.io.StringReader reader = new java.io.StringReader("!");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetDebugStream_JTYp0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager manager = new XPathParserTokenManager(stream);
    java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
    java.io.PrintStream ps = new java.io.PrintStream(baos);
    manager.setDebugStream(ps);
    assertEquals(ps, manager.debugStream);
}
@Test
    public void testSwitchToInvalidStateNegative_HgfD0_wxCq0() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager manager = new XPathParserTokenManager(stream);
        try {
            manager.SwitchTo(-1);
            fail("Expected an exception to be thrown");
        } catch (TokenMgrError e) {
        }
    }
@Test
    public void testSwitchToInvalidStatePositive_fprd1_dkTP0() {
        assertThrows(TokenMgrError.class, () -> {
            SimpleCharStream stream = new SimpleCharStream(System.in);
            XPathParserTokenManager manager = new XPathParserTokenManager(stream);
            manager.SwitchTo(1);
        });
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInit_yIBp0_HOuv0_fid2() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager manager = new XPathParserTokenManager(stream);
    manager.ReInit(stream, 0); // Changed the state to 0, which is a valid state
    assertEquals(0, manager.curLexState);
}
}