/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_NullPointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCodeWhenNameIsNull_vQdX0() {
        Locale locale = new Locale("en", "US");
        NullPointer nullPointer = new NullPointer(locale, "testId");
        int expectedHashCode = 0;
        int actualHashCode = nullPointer.hashCode();
        assertEquals(expectedHashCode, actualHashCode);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameObject_SOvF0() {
        Locale locale = new Locale("en", "US");
        QName name = new QName("testName");
        NullPointer pointer = new NullPointer(name, locale);
        assertTrue(pointer.equals(pointer));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentClass_xPuE1() {
        Locale locale = new Locale("en", "US");
        QName name = new QName("testName");
        NullPointer pointer = new NullPointer(name, locale);
        Object other = new Object();
        assertFalse(pointer.equals(other));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_NullObject_QggM2() {
        Locale locale = new Locale("en", "US");
        QName name = new QName("testName");
        NullPointer pointer = new NullPointer(name, locale);
        assertFalse(pointer.equals(null));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentName_bWAY3() {
        Locale locale = new Locale("en", "US");
        QName name1 = new QName("testName1");
        QName name2 = new QName("testName2");
        NullPointer pointer1 = new NullPointer(name1, locale);
        NullPointer pointer2 = new NullPointer(name2, locale);
        assertFalse(pointer1.equals(pointer2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_SameName_lRAy4() {
        Locale locale = new Locale("en", "US");
        QName name = new QName("testName");
        NullPointer pointer1 = new NullPointer(name, locale);
        NullPointer pointer2 = new NullPointer(name, locale);
        assertTrue(pointer1.equals(pointer2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_EquivalentName_lAfC5() {
        Locale locale = new Locale("en", "US");
        QName name1 = new QName("testName");
        QName name2 = new QName("testName");
        NullPointer pointer1 = new NullPointer(name1, locale);
        NullPointer pointer2 = new NullPointer(name2, locale);
        assertTrue(pointer1.equals(pointer2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateChild_acjU0() {
        Locale locale = new Locale("en", "US");
        String id = "testId";
        QName name = new QName("testName");
        int index = 0;
        JXPathContext context = mock(JXPathContext.class);
        NodePointer mockedNodePointer = mock(NodePointer.class);
        NullPointer nullPointer = new NullPointer(locale, id);
        when(nullPointer.createPath(context)).thenReturn(mockedNodePointer);
        when(mockedNodePointer.createChild(context, name, index)).thenReturn(mock(NodePointer.class));
        NodePointer result = nullPointer.createChild(context, name, index);
        verify(mockedNodePointer).createChild(context, name, index);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_tNBk0() {
        QName expectedName = new QName("testName");
        Locale locale = new Locale("en", "US");
        NullPointer nullPointer = new NullPointer(expectedName, locale);
        QName actualName = nullPointer.getName();
        assertEquals(expectedName, actualName);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithNonNullParent_Mfcg1() {
        Locale locale = new Locale("en", "US");
        QName name = new QName("testName");
        DOMNodePointer parent = mock(DOMNodePointer.class);
        NullPointer nullPointer = new NullPointer(parent, name);
        JXPathContext context = mock(JXPathContext.class);
        Object value = new Object();
        NodePointer mockNodePointer = mock(NodePointer.class);
        when(parent.createPath(context, value)).thenReturn(mockNodePointer);
        when(mockNodePointer.getValuePointer()).thenReturn(mockNodePointer);
        NodePointer result = nullPointer.createPath(context, value);
        assertNotNull(result);
        assertEquals(mockNodePointer, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathParentNotNull_eiLg3() {
        Locale locale = new Locale("en", "US");
        QName name = new QName("testName");
        DOMNodePointer parent = mock(DOMNodePointer.class);
        NullPointer nullPointer = new NullPointer(parent, name);
        JXPathContext context = mock(JXPathContext.class);
        Object value = new Object();
        NodePointer mockNodePointer = mock(NodePointer.class);
        when(parent.createPath(context, value)).thenReturn(mockNodePointer);
        when(mockNodePointer.getValuePointer()).thenReturn(mockNodePointer);
        NodePointer result = nullPointer.createPath(context, value);
        verify(parent, times(1)).createPath(context, value);
        assertNotNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithNonNullParent_qLuy0() {
        JXPathContext context = mock(JXPathContext.class);
        NodePointer mockedParentNodePointer = mock(NodePointer.class);
        NodePointer mockedResultNodePointer = mock(NodePointer.class);
        when(mockedParentNodePointer.createPath(context)).thenReturn(mockedResultNodePointer);
        when(mockedResultNodePointer.getValuePointer()).thenReturn(mockedResultNodePointer);
        QName qName = new QName("test");
        NullPointer nullPointer = new NullPointer(mockedParentNodePointer, qName);
        NodePointer result = nullPointer.createPath(context);
        assertNotNull(result);
        assertEquals(mockedResultNodePointer, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathThrowsUnsupportedOperationException_WtWb2() {
        JXPathContext context = mock(JXPathContext.class);
        QName qName = new QName("test");
        Locale locale = Locale.getDefault();
        NullPointer nullPointer = new NullPointer(qName, locale);
        try {
            nullPointer.createPath(context);
            fail("Expected an UnsupportedOperationException to be thrown");
        } catch (UnsupportedOperationException e) {
            assertEquals("Cannot create the root object: /test", e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithNonNullParentAndCheckReturnValue_iUwa3() {
        JXPathContext context = mock(JXPathContext.class);
        NodePointer mockedParentNodePointer = mock(NodePointer.class);
        NodePointer mockedResultNodePointer = mock(NodePointer.class);
        when(mockedParentNodePointer.createPath(context)).thenReturn(mockedResultNodePointer);
        when(mockedResultNodePointer.getValuePointer()).thenReturn(mockedResultNodePointer);
        QName qName = new QName("test");
        NullPointer nullPointer = new NullPointer(mockedParentNodePointer, qName);
        NodePointer result = nullPointer.createPath(context);
        assertSame(mockedResultNodePointer, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithNonNullParent_Mfcg1_1() {
        Locale locale = new Locale("en", "US");
        QName name = new QName("testName");
        DOMNodePointer parent = mock(DOMNodePointer.class);
        NullPointer nullPointer = new NullPointer(parent, name);
        JXPathContext context = mock(JXPathContext.class);
        Object value = new Object();
        NodePointer mockNodePointer = mock(NodePointer.class);
        when(parent.createPath(context, value)).thenReturn(mockNodePointer);
        when(mockNodePointer.getValuePointer()).thenReturn(mockNodePointer);
        NodePointer result = nullPointer.createPath(context, value);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithNonNullParent_Mfcg1_2() {
        Locale locale = new Locale("en", "US");
        QName name = new QName("testName");
        DOMNodePointer parent = mock(DOMNodePointer.class);
        NullPointer nullPointer = new NullPointer(parent, name);
        JXPathContext context = mock(JXPathContext.class);
        Object value = new Object();
        NodePointer mockNodePointer = mock(NodePointer.class);
        when(parent.createPath(context, value)).thenReturn(mockNodePointer);
        when(mockNodePointer.getValuePointer()).thenReturn(mockNodePointer);
        NodePointer result = nullPointer.createPath(context, value);
        assertEquals(mockNodePointer, result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithNonNullParent_qLuy0_1() {
        JXPathContext context = mock(JXPathContext.class);
        NodePointer mockedParentNodePointer = mock(NodePointer.class);
        NodePointer mockedResultNodePointer = mock(NodePointer.class);
        when(mockedParentNodePointer.createPath(context)).thenReturn(mockedResultNodePointer);
        when(mockedResultNodePointer.getValuePointer()).thenReturn(mockedResultNodePointer);
        QName qName = new QName("test");
        NullPointer nullPointer = new NullPointer(mockedParentNodePointer, qName);
        NodePointer result = nullPointer.createPath(context);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithNonNullParent_qLuy0_2() {
        JXPathContext context = mock(JXPathContext.class);
        NodePointer mockedParentNodePointer = mock(NodePointer.class);
        NodePointer mockedResultNodePointer = mock(NodePointer.class);
        when(mockedParentNodePointer.createPath(context)).thenReturn(mockedResultNodePointer);
        when(mockedResultNodePointer.getValuePointer()).thenReturn(mockedResultNodePointer);
        QName qName = new QName("test");
        NullPointer nullPointer = new NullPointer(mockedParentNodePointer, qName);
        NodePointer result = nullPointer.createPath(context);
        assertEquals(mockedResultNodePointer, result);}
@Test
    public void testCreatePathWithNullParent_bBdT0_yvNy0() {
        assertThrows(UnsupportedOperationException.class, () -> {
            Locale locale = new Locale("en", "US");
            QName name = new QName("testName");
            NullPointer nullPointer = new NullPointer(name, locale);
            JXPathContext context = mock(JXPathContext.class);
            Object value = new Object();
            nullPointer.createPath(context, value);
        });
    }
@Test
    public void testCreatePathWithNullParent_MuSP1_cSdZ0() {
        assertThrows(UnsupportedOperationException.class, () -> {
            JXPathContext context = mock(JXPathContext.class);
            QName qName = new QName("test");
            Locale locale = Locale.getDefault();
            NullPointer nullPointer = new NullPointer(qName, locale);
            nullPointer.createPath(context);
        });
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsCollectionReturnsFalse_udlX0_rjmd0() {
    QName name = new QName("dummy");
    Locale locale = new Locale("en");
    NullPointer nullPointer = new NullPointer(name, locale);
    assertFalse(nullPointer.isLeaf());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPropertyPointer_MMzC0_eNzc0_1() {
    Locale locale = new Locale("en", "US");
    QName name = new QName("testName");
    NullPointer nullPointer = new NullPointer(name, locale);
    PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
    assertNotNull(propertyPointer, "PropertyPointer should not be null");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetPropertyPointer_MMzC0_eNzc0_2() {
    Locale locale = new Locale("en", "US");
    QName name = new QName("testName");
    NullPointer nullPointer = new NullPointer(name, locale);
    PropertyPointer propertyPointer = nullPointer.getPropertyPointer();
    assertTrue(propertyPointer instanceof NullPropertyPointer, "Returned object should be an instance of NullPropertyPointer");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthReturnsZero_QUXN0_xBso0() {
    QName name = new QName("");
    Locale locale = new Locale("");
    NullPointer nullPointer = new NullPointer(name, locale);
    int length = nullPointer.getLength();
    assertEquals(0, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetBaseValueReturnsNull_Ohkk0_lGyf0() {
    QName name = new QName("");
    Locale locale = null;
    NullPointer nullPointer = new NullPointer(name, locale);
    assertNull(nullPointer.getBaseValue(), "getBaseValue should return null");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAsPathWithNonNullId_miFy0_hSKZ0() {
    Locale locale = new Locale("en", "US");
    NullPointer np = new NullPointer(locale, "123");
    String result = np.asPath();
    assertEquals("id(123)", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAsPathWithNullIdAndNullParent_Duue1_kUXb0() {
    QName name = new QName("null");
    Locale locale = new Locale("und");
    NullPointer np = new NullPointer(name, locale);
    String result = np.asPath();
    assertEquals("null()", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsActualReturnsFalse_YfXJ0_eKlS0() {
    QName name = new QName("");
    Locale locale = new Locale("");
    NullPointer nullPointer = new NullPointer(name, locale);
    assertFalse(nullPointer.isActual());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLeafReturnsTrue_hmwz0_TnWx0() {
    QName name = new QName("");
    Locale locale = null;
    NullPointer nullPointer = new NullPointer(name, locale);
    assertEquals(true, nullPointer.isLeaf());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateChild_YTwQ0_thRs0() {
    Locale locale = new Locale("en", "US");
    String id = "testID";
    QName name = new QName("testName");
    int index = 0;
    Object value = new Object();
    JXPathContext context = mock(JXPathContext.class);
    NodePointer mockedNodePointer = mock(NodePointer.class);
    NullPointer nullPointer = new NullPointer(locale, id);
    when(nullPointer.createPath(context)).thenReturn(mockedNodePointer);
    when(mockedNodePointer.createChild(context, name, index, value)).thenReturn(mockedNodePointer);
    NodePointer result = nullPointer.createChild(context, name, index, value);
    verify(mockedNodePointer).createChild(context, name, index, value);
    assertSame(mockedNodePointer, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testAsPathWithNullIdAndNonNullParent_Xads2_LEjI0() {
    Locale locale = null; // Explicitly define locale as null
    DOMNodePointer parent = new DOMNodePointer(null, locale, null); // Use the constructor that accepts Node, Locale, and id
    NullPointer np = new NullPointer(parent, new QName("test"));
    String result = np.asPath();
    assertEquals(np.asPath(), result); // Corrected to use the instance's own asPath method
}
}