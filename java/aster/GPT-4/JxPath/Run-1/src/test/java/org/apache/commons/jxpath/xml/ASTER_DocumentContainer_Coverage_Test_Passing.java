/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.xml;
import java.io.IOException;
import java.net.URL;
import org.apache.commons.jxpath.JXPathException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DocumentContainer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetValue_IOExceptionOnStreamOpen_UakD3_DIrT0() throws Exception {
    URL mockUrl = new URL("http://example.com");
    when(mockUrl.openStream()).thenThrow(new IOException("Failed to open stream"));
    DocumentContainer container = new DocumentContainer(mockUrl);
    try {
        container.getValue();
        fail("Expected JXPathException was not thrown");
    } catch (JXPathException ex) {
        assertTrue(ex.getMessage().contains(mockUrl.toString()), "Exception message should contain URL info");
        assertNotNull(ex.getCause(), "Cause should be IOException");
        assertTrue(ex.getCause() instanceof IOException, "Cause should be IOException");
    }
}
}