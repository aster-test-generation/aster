/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.axes;
import java.util.Iterator;
import org.apache.commons.jxpath.BasicNodeSet;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.util.Iterator;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_UnionContext_Test_Failing {
@Mock
    private NamespaceContext namespaceContext;
@Mock
    private EvalContext evalContext;
@Mock
    private BasicNodeSet nodeSet;
@Mock
    private NodePointer nodePointer;
@Mock
    private Iterator pointerIterator;
@InjectMocks
    private UnionContext unionContext;
@Mock
    private EvalContext evalContext1;
@Mock
    private EvalContext evalContext2;
    private boolean prepared;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetPositionWithEmptyContexts_rSPB0_AJtC0_fid2() {
    NamespaceContext namespaceContext = new NamespaceContext(null, new NodeTypeTest(1));
    EvalContext[] contexts = new EvalContext[0];
    UnionContext unionContext = new UnionContext(namespaceContext, contexts);
    assertTrue(unionContext.setPosition(1), "Expected true when setting position on empty contexts");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPosition_aRnL0_fid2() {
        NamespaceContext namespaceContext = new NamespaceContext(null, new NodeTypeTest(1));
        EvalContext[] contexts = new EvalContext[0];
        UnionContext unionContext = new UnionContext(namespaceContext, contexts);
        assertTrue(unionContext.setPosition(1));
    }
}