/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import java.util.Collection;
import org.apache.commons.jxpath.functions.ConstructorFunction;
import org.apache.commons.jxpath.functions.MethodFunction;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.Collection;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PackageFunctions_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNullParameters_bcKc1() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Function result = packageFunctions.getFunction("http://example.com", "someMethod", null);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithEmptyParameters_KnrT2() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Function result = packageFunctions.getFunction("http://example.com", "someMethod", new Object[]{});
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithCollection_bChl5() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Collection collection = new ArrayList();
        Object[] parameters = new Object[]{collection};
        Function result = packageFunctions.getFunction("http://example.com", "someMethod", parameters);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithInvalidClassName_xXNY7() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "invalidClass.someMethod", parameters);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithConstructor_veRk8() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "com.example.SomeClass.new", parameters);
        assertNotNull(result);
        assertTrue(result instanceof ConstructorFunction);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithStaticMethod_KdWb9() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "com.example.SomeClass.someStaticMethod", parameters);
        assertNotNull(result);
        assertTrue(result instanceof MethodFunction);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNonExistentMethod_Cgso10() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{new Object()};
        Function result = packageFunctions.getFunction("http://example.com", "nonExistentMethod", parameters);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNonExistentStaticMethod_mlMV11() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "com.example.SomeClass.nonExistentStaticMethod", parameters);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithInvalidConstructor_bydV12() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{new Object()};
        Function result = packageFunctions.getFunction("http://example.com", "com.example.SomeClass.new", parameters);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNonExistentClass_zWWz15() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "com.nonexistent.SomeClass.someMethod", parameters);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithConstructor_veRk8_1() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "com.example.SomeClass.new", parameters);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithConstructor_veRk8_2() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "com.example.SomeClass.new", parameters);
        assertTrue(result instanceof ConstructorFunction);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithStaticMethod_KdWb9_1() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "com.example.SomeClass.someStaticMethod", parameters);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithStaticMethod_KdWb9_2() {
        PackageFunctions packageFunctions = new PackageFunctions("com.example.", "http://example.com");
        Object[] parameters = new Object[]{};
        Function result = packageFunctions.getFunction("http://example.com", "com.example.SomeClass.someStaticMethod", parameters);
        assertTrue(result instanceof MethodFunction);}
}