/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CollectionAttributeNodeIterator_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetElementNodeIterator_fvdk0() {
        QName name = new QName("testName");
        NodePointer mockNodePointer = mock(NodePointer.class);
        NodeIterator expectedIterator = mock(NodeIterator.class);
        when(mockNodePointer.attributeIterator(name)).thenReturn(expectedIterator);
        CollectionPointer collectionPointer = new CollectionPointer(new Object(), Locale.getDefault());
        CollectionAttributeNodeIterator iterator = new CollectionAttributeNodeIterator(collectionPointer, name);
        NodeIterator resultIterator = iterator.getElementNodeIterator(mockNodePointer);
    }
}