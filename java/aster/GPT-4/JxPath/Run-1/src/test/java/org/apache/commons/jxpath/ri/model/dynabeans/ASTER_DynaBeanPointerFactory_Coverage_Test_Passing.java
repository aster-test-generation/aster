/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynabeans;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DynaBeanPointerFactory_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_sNMq0() {
        final int expectedOrder = 10; // You should replace 10 with the actual value of DYNA_BEAN_POINTER_FACTORY_ORDER
        DynaBeanPointerFactory factory = new DynaBeanPointerFactory();
        int order = factory.getOrder();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonDynaBean_ngHk0_nAfe0() {
    DynaBeanPointerFactory factory = new DynaBeanPointerFactory();
    NodePointer parent = null; // Assuming NodePointer can be null for this test
    QName name = new QName("testName");
    Object nonDynaBean = new Object(); // This is not a DynaBean
    NodePointer result = factory.createNodePointer(parent, name, nonDynaBean);
    assertNull(result, "Expected null when bean is not an instance of DynaBean");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonDynaBean_UPQZ1_nzaA0() {
    Object nonDynaBean = new Object(); // A regular Object, not a DynaBean
    QName name = new QName("testPrefix", "testLocalName");
    NodePointer parent = null; // Assuming parent is null for this test
    DynaBeanPointerFactory factory = new DynaBeanPointerFactory();
    NodePointer result = factory.createNodePointer(parent, name, nonDynaBean);
    assertNull(result, "NodePointer should be null for non-DynaBean instances");
}
}