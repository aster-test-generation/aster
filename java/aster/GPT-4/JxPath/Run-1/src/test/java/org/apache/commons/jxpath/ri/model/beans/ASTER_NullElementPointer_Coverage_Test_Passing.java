/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_NullElementPointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValuePointer_ricF0() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        QName mockQName = mock(QName.class);
        when(parentNode.getName()).thenReturn(mockQName);
        NullElementPointer nullElementPointer = new NullElementPointer(parentNode, 0);
        NodePointer result = nullElementPointer.getValuePointer();
        assertTrue(result instanceof NullPointer);
        assertEquals(mockQName, ((NullPointer) result).getName());
        assertEquals(nullElementPointer, ((NullPointer) result).getParent());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetImmediateNodeReturnsNull_MOcm0() {
        DOMNodePointer parent = new DOMNodePointer(null, null, null);
        NullElementPointer nullElementPointer = new NullElementPointer(parent, 0);
        Object result = nullElementPointer.getImmediateNode();
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_VWrd0() {
        DOMNodePointer mockedParent = mock(DOMNodePointer.class);
        JXPathContext mockedContext = mock(JXPathContext.class);
        NodePointer expectedNodePointer = mock(NodePointer.class);
        when(mockedParent.createChild(any(JXPathContext.class), isNull(), anyInt())).thenReturn(expectedNodePointer);
        NullElementPointer nullElementPointer = new NullElementPointer(mockedParent, 1);
        NodePointer result = nullElementPointer.createPath(mockedContext);
        assertNotNull(result);
        assertEquals(expectedNodePointer, result);
        verify(mockedParent).createChild(mockedContext, null, 1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_AYcQ0() {
        DOMNodePointer mockParent = mock(DOMNodePointer.class);
        JXPathContext mockContext = mock(JXPathContext.class);
        NullElementPointer nullElementPointer = new NullElementPointer(mockParent, 1);
        NodePointer expectedNodePointer = mock(NodePointer.class);
        when(mockParent.createChild(any(JXPathContext.class), eq(null), eq(1), any())).thenReturn(expectedNodePointer);
        NodePointer result = nullElementPointer.createPath(mockContext, "testValue");
        verify(mockParent).createChild(mockContext, null, 1, "testValue");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndValidIndex_yzxo0() {
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        when(mockParent.getIndex()).thenReturn(1);
        when(mockParent.getImmediateParentPointer()).thenReturn(null);
        NullElementPointer pointer = new NullElementPointer(mockParent, 2);
        String result = pointer.asPath();
        assertEquals("/parent/path/[3]", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNullParent_wiHx1() {
        NullElementPointer pointer = new NullElementPointer(null, 2);
        String result = pointer.asPath();
        assertEquals("[3]", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndWholeCollectionIndex_kBNz2() {
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        NullElementPointer pointer = new NullElementPointer(mockParent, NullElementPointer.WHOLE_COLLECTION);
        String result = pointer.asPath();
        assertEquals("/parent/path", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndParentIndexNotWholeCollection_DQKu3() {
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        when(mockParent.getIndex()).thenReturn(NullElementPointer.WHOLE_COLLECTION);
        when(mockParent.getImmediateParentPointer()).thenReturn(null);
        NullElementPointer pointer = new NullElementPointer(mockParent, 2);
        String result = pointer.asPath();
        assertEquals("/parent/path/[3]", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndParentIndexWholeCollection_MpMn4() {
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        when(mockParent.getIndex()).thenReturn(NullElementPointer.WHOLE_COLLECTION);
        when(mockParent.getImmediateParentPointer()).thenReturn(null);
        NullElementPointer pointer = new NullElementPointer(mockParent, NullElementPointer.WHOLE_COLLECTION);
        String result = pointer.asPath();
        assertEquals("/parent/path", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndGrandParentIndexNotWholeCollection_URvY5() {
        NodePointer mockGrandParent = mock(NodePointer.class);
        when(mockGrandParent.getIndex()).thenReturn(1);
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        when(mockParent.getIndex()).thenReturn(NullElementPointer.WHOLE_COLLECTION);
        when(mockParent.getImmediateParentPointer()).thenReturn(mockGrandParent);
        NullElementPointer pointer = new NullElementPointer(mockParent, 2);
        String result = pointer.asPath();
        assertEquals("/parent/path/[3]", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndGrandParentIndexWholeCollection_XuOM6() {
        NodePointer mockGrandParent = mock(NodePointer.class);
        when(mockGrandParent.getIndex()).thenReturn(NullElementPointer.WHOLE_COLLECTION);
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        when(mockParent.getIndex()).thenReturn(NullElementPointer.WHOLE_COLLECTION);
        when(mockParent.getImmediateParentPointer()).thenReturn(mockGrandParent);
        NullElementPointer pointer = new NullElementPointer(mockParent, NullElementPointer.WHOLE_COLLECTION);
        String result = pointer.asPath();
        assertEquals("/parent/path", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndIndexNotWholeCollection_MZUw8() {
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        when(mockParent.getIndex()).thenReturn(1);
        NullElementPointer pointer = new NullElementPointer(mockParent, 2);
        String result = pointer.asPath();
        assertEquals("/parent/path/.[3]", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndParentIndexWholeCollectionAndGrandParentIndexNotWholeCollection_wyls9() {
        NodePointer mockGrandParent = mock(NodePointer.class);
        when(mockGrandParent.getIndex()).thenReturn(1);
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        when(mockParent.getIndex()).thenReturn(NullElementPointer.WHOLE_COLLECTION);
        when(mockParent.getImmediateParentPointer()).thenReturn(mockGrandParent);
        NullElementPointer pointer = new NullElementPointer(mockParent, 2);
        String result = pointer.asPath();
        assertEquals("/parent/path/.[3]", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNonNullParentAndParentIndexWholeCollectionAndGrandParentIndexWholeCollection_oQEU10() {
        NodePointer mockGrandParent = mock(NodePointer.class);
        when(mockGrandParent.getIndex()).thenReturn(NullElementPointer.WHOLE_COLLECTION);
        NodePointer mockParent = mock(NodePointer.class);
        when(mockParent.asPath()).thenReturn("/parent/path");
        when(mockParent.getIndex()).thenReturn(NullElementPointer.WHOLE_COLLECTION);
        when(mockParent.getImmediateParentPointer()).thenReturn(mockGrandParent);
        NullElementPointer pointer = new NullElementPointer(mockParent, 2);
        String result = pointer.asPath();
        assertEquals("/parent/path/[3]", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValuePointer_ricF0_1() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        QName mockQName = mock(QName.class);
        when(parentNode.getName()).thenReturn(mockQName);
        NullElementPointer nullElementPointer = new NullElementPointer(parentNode, 0);
        NodePointer result = nullElementPointer.getValuePointer();
        assertTrue(result instanceof NullPointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValuePointer_ricF0_2() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        QName mockQName = mock(QName.class);
        when(parentNode.getName()).thenReturn(mockQName);
        NullElementPointer nullElementPointer = new NullElementPointer(parentNode, 0);
        NodePointer result = nullElementPointer.getValuePointer();
        assertEquals(mockQName, ((NullPointer) result).getName());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValuePointer_ricF0_3() {
        DOMNodePointer parentNode = mock(DOMNodePointer.class);
        QName mockQName = mock(QName.class);
        when(parentNode.getName()).thenReturn(mockQName);
        NullElementPointer nullElementPointer = new NullElementPointer(parentNode, 0);
        NodePointer result = nullElementPointer.getValuePointer();
        assertEquals(nullElementPointer, ((NullPointer) result).getParent());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_VWrd0_1() {
        DOMNodePointer mockedParent = mock(DOMNodePointer.class);
        JXPathContext mockedContext = mock(JXPathContext.class);
        NodePointer expectedNodePointer = mock(NodePointer.class);
        when(mockedParent.createChild(any(JXPathContext.class), isNull(), anyInt())).thenReturn(expectedNodePointer);
        NullElementPointer nullElementPointer = new NullElementPointer(mockedParent, 1);
        NodePointer result = nullElementPointer.createPath(mockedContext);
        verify(mockedParent).createChild(mockedContext, null, 1);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_VWrd0_2() {
        DOMNodePointer mockedParent = mock(DOMNodePointer.class);
        JXPathContext mockedContext = mock(JXPathContext.class);
        NodePointer expectedNodePointer = mock(NodePointer.class);
        when(mockedParent.createChild(any(JXPathContext.class), isNull(), anyInt())).thenReturn(expectedNodePointer);
        NullElementPointer nullElementPointer = new NullElementPointer(mockedParent, 1);
        NodePointer result = nullElementPointer.createPath(mockedContext);
        verify(mockedParent).createChild(mockedContext, null, 1);
        assertEquals(expectedNodePointer, result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentClass_PPEp1_PFzL0() {
    DOMNodePointer parent = new DOMNodePointer(null, Locale.getDefault(), null);
    NullElementPointer pointer = new NullElementPointer(parent, 0);
    assertFalse(pointer.equals(new Object()));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameObject_QJYI0_vvtZ0() {
    DOMNodePointer parent = new DOMNodePointer(null, Locale.getDefault(), null);
    NullElementPointer pointer = new NullElementPointer(parent, 0);
    assertTrue(pointer.equals(pointer));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_Null_sCeS2_tQaP0() {
    DOMNodePointer parent = new DOMNodePointer(null, Locale.getDefault(), null);
    NullElementPointer pointer = new NullElementPointer(parent, 0);
    assertFalse(pointer.equals(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameParentPointerDifferentIndex_suGD4_oWQt0() {
    DOMNodePointer parent = new DOMNodePointer(null, Locale.getDefault(), null);
    NullElementPointer pointer1 = new NullElementPointer(parent, 0);
    NullElementPointer pointer2 = new NullElementPointer(parent, 1);
    assertFalse(pointer1.equals(pointer2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_SameParentPointerSameIndex_ZlWu5_xlGP0() {
    DOMNodePointer parent = new DOMNodePointer(null, Locale.getDefault(), null);
    NullElementPointer pointer1 = new NullElementPointer(parent, 0);
    NullElementPointer pointer2 = new NullElementPointer(parent, 0);
    assertTrue(pointer1.equals(pointer2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEquals_DifferentParentPointer_pKSU3_vViB0() {
    DOMNodePointer parent1 = new DOMNodePointer(null, Locale.getDefault(), null);
    DOMNodePointer parent2 = new DOMNodePointer(null, Locale.getDefault(), null);
    NullElementPointer pointer1 = new NullElementPointer(parent1, 0);
    NullElementPointer pointer2 = new NullElementPointer(parent2, 0);
    assertFalse(pointer1.equals(pointer2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLengthReturnsZero_Bogy0_mhuz0() {
    DOMNodePointer parent = new DOMNodePointer(null, null, null);
    NullElementPointer nullElementPointer = new NullElementPointer(parent, 0);
    int length = nullElementPointer.getLength();
    assertEquals(0, length, "Length should be 0");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsLeaf_SfZS0_LgDk0() {
    DOMNodePointer domNodePointer = new DOMNodePointer(null, Locale.getDefault(), "0");
    NullElementPointer nullElementPointer = new NullElementPointer(domNodePointer, 0);
    boolean result = nullElementPointer.isLeaf();
    assertTrue(result);
}
}