/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.container;
import org.apache.commons.jxpath.Container;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ContainerPointerFactory_Test_Failing {
@InjectMocks
    private ContainerPointerFactory containerPointerFactory;
@Mock
    private NodePointer parentMock;
@Mock
    private QName nameMock;
@Mock
    private Container containerMock;
@Mock
    private ContainerPointer containerPointerMock;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOrder_SLmx0_zGsj0_fid3() {
    ContainerPointerFactory factory = new ContainerPointerFactory();
    int expectedOrder = 0; // Assuming default order as 0 since CONTAINER_POINTER_FACTORY_ORDER is undefined
    assertEquals(expectedOrder, factory.getOrder());
}
}