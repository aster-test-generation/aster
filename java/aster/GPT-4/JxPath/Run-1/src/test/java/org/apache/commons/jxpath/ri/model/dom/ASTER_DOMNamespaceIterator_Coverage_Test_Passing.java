/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;
import org.w3c.dom.Attr;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DOMNamespaceIterator_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_AttributeIndexNegative_duxg3() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        DOMNamespaceIterator iterator = new DOMNamespaceIterator(parent);
        iterator.setPosition(-1);
        assertNotNull(iterator.getNodePointer());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNodePointer_AttributePrefixXmlns_NoLocalName_hKYW10() {
        DOMNodePointer parent = mock(DOMNodePointer.class);
        Attr attr = mock(Attr.class);
        when(attr.getPrefix()).thenReturn("xmlns");
        when(attr.getValue()).thenReturn("http://example.com");
        when(DOMNodePointer.getLocalName(attr)).thenReturn("");
        DOMNamespaceIterator iterator = new DOMNamespaceIterator(parent);
        iterator.setPosition(1);
        assertNotNull(iterator.getNodePointer());
    }
}