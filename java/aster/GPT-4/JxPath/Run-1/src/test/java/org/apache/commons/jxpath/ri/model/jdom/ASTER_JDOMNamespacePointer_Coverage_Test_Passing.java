/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import java.util.Locale;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JDOMNamespacePointer_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_aAMp0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, "testId");
        String prefix = "testPrefix";
        JDOMNamespacePointer jdomNamespacePointer = new JDOMNamespacePointer(domNodePointer, prefix);
        int result = jdomNamespacePointer.hashCode();
        assertEquals(prefix.hashCode(), result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeafReturnsTrue_YnDZ0() {
        DOMNodePointer domNodePointer = new DOMNodePointer(null, null, null);
        JDOMNamespacePointer jdomNamespacePointer = new JDOMNamespacePointer(domNodePointer, "prefix");
        boolean result = jdomNamespacePointer.isLeaf();
        assertTrue(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_WhenNamespaceURIIsNull_bzIi0() {
        DOMNodePointer mockParent = mock(DOMNodePointer.class);
        when(mockParent.getNamespaceURI("testPrefix")).thenReturn("http://example.com");
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(mockParent, "testPrefix");
        String result = pointer.getNamespaceURI();
        verify(mockParent).getNamespaceURI("testPrefix");
        assertEquals("http://example.com", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_WhenNamespaceURIIsNotNull_edNg1() {
        DOMNodePointer mockParent = mock(DOMNodePointer.class);
        when(mockParent.getNamespaceURI("testPrefix")).thenReturn("http://example.com");
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(mockParent, "testPrefix", "http://initial.com");
        String result = pointer.getNamespaceURI();
        verify(mockParent, never()).getNamespaceURI("testPrefix");
        assertEquals("http://initial.com", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNamespaceURI_WhenParentReturnsNull_hnTo2() {
        DOMNodePointer mockParent = mock(DOMNodePointer.class);
        when(mockParent.getNamespaceURI("testPrefix")).thenReturn(null);
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(mockParent, "testPrefix");
        String result = pointer.getNamespaceURI();
        verify(mockParent).getNamespaceURI("testPrefix");
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithNullParent_jpZH0() {
        JDOMNamespacePointer pointer = new JDOMNamespacePointer(null, "testPrefix");
        String result = pointer.asPath();
        assertEquals("namespace::testPrefix", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetImmediateNode_FHQv0_oROr0() {
    DOMNodePointer mockedParent = mock(DOMNodePointer.class);
    String prefix = "example";
    String namespaceURI = "http://www.example.com";
    JDOMNamespacePointer pointer = new JDOMNamespacePointer(mockedParent, prefix, namespaceURI);
    assertEquals(namespaceURI, pointer.getImmediateNode());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCompareChildNodePointersAlwaysReturnsZero_sqtV0_PtrO0() {
    Locale locale = null; // Assuming Locale can be null as per the original erroneous call
    DOMNodePointer domNodePointer = new DOMNodePointer(null, locale);
    JDOMNamespacePointer jdomNamespacePointer = new JDOMNamespacePointer(domNodePointer, "prefix");
    DOMNodePointer pointer1 = new DOMNodePointer(null, locale);
    DOMNodePointer pointer2 = new DOMNodePointer(null, locale);
    int result = jdomNamespacePointer.compareChildNodePointers(pointer1, pointer2);
    assertEquals(0, result);
}
}