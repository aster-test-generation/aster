/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;
import java.util.HashMap;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TypeUtils_Coverage_Test_Passing {
    static {
        Map<Class<?>, Class<?>> PRIMITIVE_TYPE_MAP = new HashMap<>();
        PRIMITIVE_TYPE_MAP.put(int.class, Integer.class);
        PRIMITIVE_TYPE_MAP.put(double.class, Double.class);
        PRIMITIVE_TYPE_MAP.put(float.class, Float.class);
        PRIMITIVE_TYPE_MAP.put(long.class, Long.class);
        PRIMITIVE_TYPE_MAP.put(short.class, Short.class);
        PRIMITIVE_TYPE_MAP.put(byte.class, Byte.class);
        PRIMITIVE_TYPE_MAP.put(char.class, Character.class);
        PRIMITIVE_TYPE_MAP.put(boolean.class, Boolean.class);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrapPrimitiveWithPrimitiveType_oQym0() {
        Class<?> wrappedClass = TypeUtils.wrapPrimitive(int.class);
    }
}