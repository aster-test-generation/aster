/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.axes.RootContext;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CoreOperationUnion_Test_Passing {
private CoreOperationUnion coreOperationUnion;
private Expression[] expressions;
private EvalContext context;
private RootContext rootContext;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSymbol_TgEE0() {
    Expression[] expressions = new Expression[0];
    CoreOperationUnion coreOperationUnion = new CoreOperationUnion(expressions);
    assertEquals("|", coreOperationUnion.getSymbol());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsSymmetricReturnsTrue_PreQ0() {
    Expression[] expressions = new Expression[0]; // Assuming Expression is defined elsewhere
    CoreOperationUnion coreOperationUnion = new CoreOperationUnion(expressions);
    assertTrue(coreOperationUnion.isSymmetric());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrecedence_OvXH0() {
        Expression[] expressions = new Expression[0]; // Assuming Expression is defined elsewhere
        CoreOperationUnion coreOperationUnion = new CoreOperationUnion(expressions);
        int expectedPrecedence = CoreOperationUnion.UNION_PRECEDENCE;
        assertEquals(expectedPrecedence, coreOperationUnion.getPrecedence());
    }
}