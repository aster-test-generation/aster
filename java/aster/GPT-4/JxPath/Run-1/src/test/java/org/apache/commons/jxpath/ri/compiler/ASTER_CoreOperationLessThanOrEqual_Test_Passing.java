/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CoreOperationLessThanOrEqual_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSymbol_XGTM0() {
    Constant arg1 = new Constant(10);
    Constant arg2 = new Constant(20);
    CoreOperationLessThanOrEqual operation = new CoreOperationLessThanOrEqual(arg1, arg2);
    assertEquals("<=", operation.getSymbol());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEvaluateCompareTrue_laud0() {
        CoreOperationLessThanOrEqual operation = new CoreOperationLessThanOrEqual(new Constant("test"), new Constant(10));
        assertTrue(operation.evaluateCompare(0));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEvaluateCompareFalse_iXXy1() {
        CoreOperationLessThanOrEqual operation = new CoreOperationLessThanOrEqual(new Constant("test"), new Constant(10));
        assertFalse(operation.evaluateCompare(1));
    }
}