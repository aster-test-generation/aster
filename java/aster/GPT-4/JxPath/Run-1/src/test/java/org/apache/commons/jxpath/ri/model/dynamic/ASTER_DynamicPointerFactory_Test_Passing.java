/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;
import java.util.Locale;
import org.apache.commons.jxpath.DynamicPropertyHandler;
import org.apache.commons.jxpath.JXPathBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynamicPointerFactory_Test_Passing {
@InjectMocks
    private DynamicPointerFactory dynamicPointerFactory;
@Mock
    private NodePointer parent;
@Mock
    private QName name;
@Mock
    private JXPathBeanInfo beanInfo;
@Mock
    private DynamicPropertyHandler handler;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean() throws Exception {
        dynamicPointerFactory = new DynamicPointerFactory();
        NodePointer result = dynamicPointerFactory.createNodePointer(parent, name, null);
        assertTrue(result instanceof NullPointer, "Expected a NullPointer when bean is null");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNullBean_YlMN0() {
    DynamicPointerFactory factory = new DynamicPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    QName name = new QName("testName");
    NodePointer result = factory.createNodePointer(parent, name, null);
    assertTrue(result instanceof NullPointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonDynamicBean_IUYB1_eOpH0() {
    DynamicPointerFactory factory = new DynamicPointerFactory();
    QName name = new QName("testName");
    Object nonDynamicBean = new Object();
    NodePointer parent = null; // Assuming parent can be null for this test
    NodePointer result = factory.createNodePointer(parent, name, nonDynamicBean);
    assertNull(result, "Expected null NodePointer for non-dynamic bean");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOrder_Qtnq0_JKcC0_fid2() {
    DynamicPointerFactory factory = new DynamicPointerFactory();
    int expected =800; // Assuming default order as800 since DYNAMIC_POINTER_FACTORY_ORDER is not defined
    assertEquals(expected, factory.getOrder());
}
}