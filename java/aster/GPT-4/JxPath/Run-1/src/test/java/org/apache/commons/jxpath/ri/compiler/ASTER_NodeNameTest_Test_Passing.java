/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import org.apache.commons.jxpath.ri.QName;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_NodeNameTest_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNamespaceURI_gnve0() {
    QName qname = new QName("prefix", "localName");
    NodeNameTest nodeNameTest = new NodeNameTest(qname, "http://example.com");
    String expected = "http://example.com";
    String actual = nodeNameTest.getNamespaceURI();
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToString_ttjE0() {
    QName qname = new QName("prefix", "localName");
    NodeNameTest nodeNameTest = new NodeNameTest(qname);
    assertEquals("prefix:localName", nodeNameTest.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetNodeName_OsUN0() {
    QName qname = new QName("prefix", "localName");
    NodeNameTest nodeNameTest = new NodeNameTest(qname);
    QName result = nodeNameTest.getNodeName();
    assertEquals(qname, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsWildcardTrue_fGBW0() {
    QName qname = new QName("*");
    NodeNameTest nodeNameTest = new NodeNameTest(qname);
    assertTrue(nodeNameTest.isWildcard());
}
}