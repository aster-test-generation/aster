/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CoreOperationGreaterThan_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSymbol_HekC0() {
    Constant arg1 = new Constant(5);
    Constant arg2 = new Constant(10);
    CoreOperationGreaterThan operation = new CoreOperationGreaterThan(arg1, arg2);
    assertEquals(">", operation.getSymbol());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEvaluateCompareGreaterThanZero_iuvU0() {
    Constant arg1 = new Constant("test");
    Constant arg2 = new Constant(123);
    CoreOperationGreaterThan operation = new CoreOperationGreaterThan(arg1, arg2);
    assertTrue(operation.evaluateCompare(1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEvaluateCompareLessThanZero_oxOl1() {
    Constant arg1 = new Constant("test");
    Constant arg2 = new Constant(123);
    CoreOperationGreaterThan operation = new CoreOperationGreaterThan(arg1, arg2);
    assertFalse(operation.evaluateCompare(-1));
}
}