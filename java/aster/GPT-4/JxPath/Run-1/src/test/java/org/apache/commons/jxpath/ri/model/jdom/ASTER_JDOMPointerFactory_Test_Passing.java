/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;
import java.util.Locale;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.jdom.Document;
import org.jdom.Element;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Locale;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.mock;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JDOMPointerFactory_Test_Passing {
private JDOMPointerFactory jdomPointerFactory;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Document mockDocument = mock(Document.class);
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockDocument);
        assertNotNull(result);
        assertTrue(result instanceof JDOMNodePointer);
        assertSame(mockDocument, result.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Element mockElement = mock(Element.class);
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockElement);
        assertNotNull(result);
        assertTrue(result instanceof JDOMNodePointer);
        assertSame(mockElement, result.getImmediateNode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithUnsupportedType() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Object unsupportedBean = new Object();
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, unsupportedBean);
        assertNull(result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithDocument_BFgJ0() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    Document document = new Document();
    NodePointer result = factory.createNodePointer(parent, new QName("test"), document);
    assertNotNull(result);
    assertTrue(result instanceof JDOMNodePointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithElement_XuPp1() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    Element element = new Element("testElement");
    NodePointer result = factory.createNodePointer(parent, new QName("test"), element);
    assertNotNull(result);
    assertTrue(result instanceof JDOMNodePointer);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNonSupportedBean_mcJD2() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    String nonSupportedBean = "This is a string, not a Document or Element";
    NodePointer result = factory.createNodePointer(parent, new QName("test"), nonSupportedBean);
    assertNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument_1() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Document mockDocument = mock(Document.class);
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockDocument);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument_2() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Document mockDocument = mock(Document.class);
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockDocument);
        assertTrue(result instanceof JDOMNodePointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithDocument_3() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Document mockDocument = mock(Document.class);
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockDocument);
        assertSame(mockDocument, result.getImmediateNode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement_1() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Element mockElement = mock(Element.class);
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockElement);
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement_2() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Element mockElement = mock(Element.class);
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockElement);
        assertTrue(result instanceof JDOMNodePointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithElement_3() throws Exception {
        jdomPointerFactory = new JDOMPointerFactory();
        NodePointer mockParent = mock(NodePointer.class);
        Element mockElement = mock(Element.class);
        QName mockQName = mock(QName.class);
        NodePointer result = jdomPointerFactory.createNodePointer(mockParent, mockQName, mockElement);
        assertSame(mockElement, result.getImmediateNode());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithDocument_BFgJ0_1() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    Document document = new Document();
    NodePointer result = factory.createNodePointer(parent, new QName("test"), document);
    assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithDocument_BFgJ0_2() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    Document document = new Document();
    NodePointer result = factory.createNodePointer(parent, new QName("test"), document);
    assertTrue(result instanceof JDOMNodePointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithElement_XuPp1_1() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    Element element = new Element("testElement");
    NodePointer result = factory.createNodePointer(parent, new QName("test"), element);
    assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithElement_XuPp1_2() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    NodePointer parent = new DOMNodePointer(null, Locale.getDefault());
    Element element = new Element("testElement");
    NodePointer result = factory.createNodePointer(parent, new QName("test"), element);
    assertTrue(result instanceof JDOMNodePointer);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithDocument_DIWR0_MxRj0() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    QName name = new QName("testName");
    Document document = new Document();
    Locale locale = Locale.getDefault();
    NodePointer parent = null; // Assuming null parent for the test
    NodePointer result = factory.createNodePointer(parent, name, document);
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithElement_DDUy1_MmhA0() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    QName name = new QName("testName");
    Element element = new Element("testElement");
    Locale locale = Locale.getDefault();
    NodePointer parent = null; // Assuming parent is null for this test case
    NodePointer result = factory.createNodePointer(parent, name, element);
    assertNotNull(result, "NodePointer should not be null for Element");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateNodePointerWithNull_vlpB2_aBEC0() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    QName name = new QName("testName");
    Object bean = null;
    Locale locale = Locale.getDefault();
    NodePointer result = factory.createNodePointer(null, name, bean);
    assertNull(result, "NodePointer should be null for non-Document/Element beans");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOrder_tnoN0_cxLl0_fid2() {
    JDOMPointerFactory factory = new JDOMPointerFactory();
    int expectedOrder =110; // Assuming110 as the expected order for the purpose of this test
    assertEquals(expectedOrder, factory.getOrder());
}
}