/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import org.apache.commons.jxpath.functions.ConstructorFunction;
import org.apache.commons.jxpath.functions.MethodFunction;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ClassFunctions_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithConstructor_DsgJ2_1() throws NoSuchMethodException {
        Constructor<Function> constructor = Function.class.getConstructor();
        ClassFunctions classFunctions = new ClassFunctions(Function.class, null);
        Function result = classFunctions.getFunction(null, "new", new Object[]{});
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithConstructor_DsgJ2_2() throws NoSuchMethodException {
        Constructor<Function> constructor = Function.class.getConstructor();
        ClassFunctions classFunctions = new ClassFunctions(Function.class, null);
        Function result = classFunctions.getFunction(null, "new", new Object[]{});
        assertTrue(result instanceof ConstructorFunction);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithStaticMethod_PWzY3_1() throws NoSuchMethodException {
        Method method = Function.class.getMethod("staticMethodName", String.class);
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "testNamespace");
        Function result = classFunctions.getFunction("testNamespace", "staticMethodName", new Object[]{String.class});
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithStaticMethod_PWzY3_2() throws NoSuchMethodException {
        Method method = Function.class.getMethod("staticMethodName", String.class);
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "testNamespace");
        Function result = classFunctions.getFunction("testNamespace", "staticMethodName", new Object[]{String.class});
        assertTrue(result instanceof MethodFunction);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithInstanceMethod_cadj4_1() throws NoSuchMethodException {
        Method method = Function.class.getMethod("instanceMethodName", Integer.class);
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "testNamespace");
        Function result = classFunctions.getFunction("testNamespace", "instanceMethodName", new Object[]{Integer.class});
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithInstanceMethod_cadj4_2() throws NoSuchMethodException {
        Method method = Function.class.getMethod("instanceMethodName", Integer.class);
        ClassFunctions classFunctions = new ClassFunctions(Function.class, "testNamespace");
        Function result = classFunctions.getFunction("testNamespace", "instanceMethodName", new Object[]{Integer.class});
        assertTrue(result instanceof MethodFunction);}
}