/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;
import java.util.ArrayList;
import org.apache.commons.jxpath.ri.Compiler;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.Vector;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.InjectMocks;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.*;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_XPathParser_Test_Passing {
private int jj_gen;
@Mock
    private XPathParserTokenManager token_source;
@Mock
    private SimpleCharStream jj_input_stream;
@Mock
    private SimpleCharStream mockStream;
@Mock
    private Token mockToken;
private int[] jj_la1 = new int[39];
@Mock
    private SimpleCharStream charStream;
@Mock
    private Compiler compiler;
@Mock
    private Token jj_nt;
@InjectMocks
    private XPathParser xpathParser;
@Mock
    private SimpleCharStream stream;
@Mock
    private XPathParserTokenManager tokenManager;
@Mock
    private Token token;
@Mock
    private XPathParserTokenManager tokenManagerMock;
@Mock
    private Token nextToken;
private final int JJTOKENTYPE_80 = 80;
  static private int[] jj_la1_0;
  private int[] jj_expentry;
  private final java.util.Vector jj_expentries = new java.util.Vector();
  private int jj_kind = -1;
  static private int[] jj_la1_2;
  static private int[] jj_la1_1;
  private int jj_endpos;
  private Token jj_scanpos, jj_lastpos;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFunctionName_EmwP0() throws ParseException {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        Object expected = parser.QName_Without_CoreFunctions();
        Object result = parser.FunctionName();
        assertEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_FdGU0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException2_ZwPo1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_MrYr2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_ZlmP3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_PyZm4() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_lXCo5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_Pqft6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_ovHD7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_JykF8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_MguE9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_UkTb10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_xdig11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_bIet2() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_nkcn5() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_StPq8() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_MQzE9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_BCpR10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_XdXW11() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_oXQn0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException2_NLmY1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_QwOM2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_iAlT3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_HxzX4() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_sokP5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_Hhov6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_ndEc7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_cZbz8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_tlSB9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_GFrC10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_fSLB11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_ZHgZ3() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_PZzE4() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_EXnB5() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 2048);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_CqQR11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_aSNI0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException2_lOsS1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_BLMZ2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_EwzU3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_lEMK4() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_LEEk5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_YgBT6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_VwwU7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_WCxw8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_NhaA9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_eBxz10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_ERiS11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_GjRL5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 512);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_Jphb10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_ghVK0() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_qxto1() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_ztww2() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_MOps3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_foea4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_zQyg5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_WAue8() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_WAag9() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_WZny5() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 2048);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_oRii5() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 1024);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_yOVl6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_lpDX8() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_EfiU11() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_zSUh8() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 512);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_BaBg3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"));
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_Hygy4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_iGlj5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 1024);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_Cbzq0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_FQiL2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_orqX3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_cjxh6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_Waub8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_sCsu9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_jlfD11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_pDvM8() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_dSlA9() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_HrdK10() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_ytlx11() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"));
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_uIEg10() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 512);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_JDcN11() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 2048);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_lnTX6() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 256);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_cldh5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 2048);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_Hztp3() {
        java.io.Reader reader = new java.io.StringReader("input");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_aqWA4() {
        java.io.Reader reader = new java.io.StringReader("input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_Ozns5() {
        java.io.Reader reader = new java.io.StringReader("input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 1024);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_yWdY0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException2_IHPD1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_gtlo2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_hucy3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_YnHn4() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_homJ5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_LYCu6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_icWR7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_JUVR8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_WwBf9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_GVEf10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_mLoL11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_Jlop0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_oipX2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_qZKX5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_kbMg5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 512);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_oquC8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_NMae11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 2048);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_Ewov5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 2048);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_VFPf7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 512);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_Guhi11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 128);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException2_wIip1_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_OJGC2_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("6"));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_iQau3_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("6".getBytes()));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_tqxF4_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("<tag>"));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_tbCn5_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("<tag>".getBytes()));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_oUQS7_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(" ".getBytes()));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_viyN8_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("\n"));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_RRlJ9_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("\n".getBytes()));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_FwoE10_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("\t"));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_TBQZ11_1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("\t".getBytes()));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_SWGW0() {
    XPathParser parser = new XPathParser(new java.io.ByteArrayInputStream(new byte[]{}));
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException2_yswM1() {
    XPathParser parser = new XPathParser(new java.io.StringReader(""));
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_Mzju2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_azqN4() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_UDjT6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_yLuA7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_PsFF8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_oLhA10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_NFNr0() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_aeTI1() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_DlBa2() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 256);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_vHPG3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"));
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_eBgj4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_mIki5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 256);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_Ydom8() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_aVaN10() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_eJAP11() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_miNN0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_ffQI4() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_XmoE5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_xMwr6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{85, 86}));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_aVvH7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{85, 86}), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_xBzg8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{85, 86}), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_Ilmw0_2() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertEquals("TokenMgrError", e.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_cnVH1_2() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertEquals("TokenMgrError", e.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_bfac2_2() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertEquals("TokenMgrError", e.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_IShT8_2() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertEquals("TokenMgrError", e.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_HReT9_2() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertEquals("TokenMgrError", e.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_XCde10_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_gBWt11_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 1024);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_qjhc5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 512);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_iQza8() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 512);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_JZVJ2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_YPRi3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_eqcd6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_DGGD7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_iNvp8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_Ywjh9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_eSOK10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_zxsK11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException8_xrMO7() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_Koke8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 512);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_llEN10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 128);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_mesa5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 2048);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_Xgok3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_LCrx5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_eANv5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 256);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_sfuq3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"));
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_Qdrg4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"), 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_ZPht5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"), 1, 1, 2048);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_jcEG9() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"));
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_RwUS1() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_FJne2() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertTrue(exception instanceof ParseException);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_ZBQI3() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertEquals("ParseException", exception.getClass().getSimpleName());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_jUYG4() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.toString());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_oWzl5() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotEquals("", exception.getMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_ZrLq6() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getLocalizedMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException8_RleL7() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getCause());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_mQUG8() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getStackTrace());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_aUDD9() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.fillInStackTrace());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_qtGn10() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.getSuppressed());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_odXQ11() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception.hashCode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_srbR8() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 256);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_GMlL11() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 4096);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_mWFA0() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_nglA1() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_bSGg2() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_PRPh3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_nNPV4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_ZYVC5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 2048);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_AfGG6() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException8_eZmx7() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_UZAX8() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_Wbjc9() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_jXwA10() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_JUXU11() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 2048);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException2_Orxo1() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertEquals("Token error.", e.getMessage());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_NvRP7() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertEquals("Unexpected token encountered.", e.getMessage());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_PKDp8() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e.toString());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_lSUB9() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertTrue(e.toString().contains("ParseException"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_iIZk10() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e.getLocalizedMessage());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_mCLW11() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertTrue(e.getLocalizedMessage().contains("error"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_mcuH9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 512);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_uMXD3() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_lSpB4() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_FOXk5() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_IXUw9() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_Oeyl10() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_OrcQ11() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException exception = parser.generateParseException();
        assertNotNull(exception);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_pFSl10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException4_ZeeP3() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_FWkw4() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_Xdxb5() {
        java.io.Reader reader = new java.io.StringReader("test input");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 2048);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_QUOI5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 1024);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_vyRY11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 2048);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_rHTl8() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 512);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_ADhK9() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_ypxk10() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_PbVl11() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1, 256);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_OzwM9() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()));
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException11_xdNw10() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException12_wwmz11() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream("test input".getBytes()), 1, 1, 256);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_OnEq0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_tqix2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_YnvA4() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[]{}), 1, 1, 256);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_tDcq5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("input"), 1, 1, 1024);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_almu5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException1_eXWx0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException2_YfrJ1() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_ULYq2() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_EGTa3() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException5_jTVC4() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_Cldo5() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_bsQa6() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_yfcQ7() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_MFYQ8() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_WTRO9() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_xdPQ10() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_ZtCK11() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream, 0);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException result = parser.generateParseException();
    assertNotNull(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEnableTracing() throws Exception {
        xpathParser = new XPathParser(tokenManagerMock);
        // Since enable_tracing() has no output or state change, we can only test if it runs without exceptions
        xpathParser.enable_tracing();
        // No exception means it passed
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException8_EfRp7() {
        java.io.Reader reader = new java.io.StringReader("test input");
        XPathParser parser = new XPathParser(reader);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEnableTracing_iTuo0() {
    java.io.InputStream inputStream = new java.io.ByteArrayInputStream(new byte[0]);
    XPathParser parser = new XPathParser(inputStream);
    parser.enable_tracing();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException5_PeCy4() {
        java.io.Reader reader = new java.io.StringReader("");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException6_ynZd5() {
        java.io.Reader reader = new java.io.StringReader("");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException7_fwxa6() {
        java.io.Reader reader = new java.io.StringReader("");
        SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 2048);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_zWtL2_2() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertEquals("Token error.", exception.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_JfIc7_2() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertEquals("Token error.", exception.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_Gtjw8_2() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 512);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertEquals("Token error.", exception.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_QVsi11_2() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertEquals("Token error.", exception.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextTokenWithInputStream_XnOj0() {
        java.io.InputStream inputStream = new java.io.ByteArrayInputStream(new byte[0]);
        SimpleCharStream stream = new SimpleCharStream(inputStream);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetNextTokenWithReader_MlRZ1() {
        java.io.Reader reader = new java.io.StringReader("");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDisableTracing() throws Exception {
        xpathParser = new XPathParser(tokenManagerMock);
        // Call the method to test
        xpathParser.disable_tracing();
        // Verify internal state changes or interactions
        // Since disable_tracing() is empty and does not interact with any objects or change state,
        // there is nothing specific to verify here. This test ensures there are no exceptions thrown.
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNCName_PPTv0() throws ParseException {
        java.io.StringReader reader = new java.io.StringReader("NCName");
        SimpleCharStream stream = new SimpleCharStream(reader);
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        String result = parser.NCName();
        assertEquals("NCName", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDisableTracing_lvIZ0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    parser.disable_tracing();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAbbreviatedAxisSpecifier_DefaultChildAxis_XVXV0() throws ParseException {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        int result = parser.AbbreviatedAxisSpecifier();
        assertEquals(Compiler.AXIS_CHILD, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQName_Without_CoreFunctions_ThrowsParseException_slJI2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tokenManager);
        assertThrows(ParseException.class, () -> {
            parser.QName_Without_CoreFunctions();
        });
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testOrExpr_multipleExpressions_OGgV0() throws Exception {
    jj_nt.kind = 10; // Assuming 10 is the constant value for Token.OR
    XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(System.in));
    XPathParser xpathParser = new XPathParser(tm);
    Object firstExpr = new Object();
    Object secondExpr = new Object();
    ArrayList<Object> exprList = new ArrayList<>();
    exprList.add(firstExpr);
    exprList.add(secondExpr);
    when(xpathParser.AndExpr()).thenReturn(firstExpr, secondExpr);
    when(compiler.or(any())).thenReturn(firstExpr); // Assuming 'or' method returns the first item for simplicity
    Object result = xpathParser.OrExpr();
    verify(xpathParser, times(2)).AndExpr();
    verify(compiler).or(any(Object[].class));
    assertEquals(firstExpr, result, "Result should match the expected combined expression");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testOrExprNoValidToken_rbxp2_yUqQ0() throws ParseException {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    try {
        parser.OrExpr();
        fail("Expected ParseException");
    } catch (ParseException e) {
        assertNotNull(e, "ParseException expected when no valid tokens are present");
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_IFbB2_YpEd0() {
    java.io.StringReader reader = new java.io.StringReader("");
    XPathParser parser = new XPathParser(reader);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_Jexq11_yVHB0() {
    java.io.Reader reader = new java.io.StringReader("test input");
    SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_RURA10_HNry0() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 256);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_ttkx7_rpvG0() {
    java.io.Reader reader = new java.io.StringReader("input");
    SimpleCharStream stream = new SimpleCharStream(reader);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_MThy10_GXTS0() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 512);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_ARJd9_ypvK0() {
    java.io.Reader reader = new java.io.StringReader("input");
    SimpleCharStream stream = new SimpleCharStream(reader, 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_eCAv11_AgSW0() {
    java.io.Reader reader = new java.io.StringReader("input");
    SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 512);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException7_CljW6_ewIN0_2() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertEquals("TokenMgrError", e.getMessage());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_ltWZ7_Btvp0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_kVWc11_YVFn0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test input"), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_Xwui2_NhZR0_1() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e.currentToken);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_Xwui2_NhZR0_2() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertNotNull(e.expectedTokenSequences);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException4_rrHj3_kaCj0() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertTrue(e.expectedTokenSequences.length > 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException6_ewUm5_aQwi0() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    ParseException e = parser.generateParseException();
    assertEquals(0, e.currentToken.next.kind);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException10_CigL9_KDZA0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.InputStreamReader(System.in));
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException11_EJLE10_aZlR0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.InputStreamReader(System.in), 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_juXp11_vfnp0() {
    SimpleCharStream stream = new SimpleCharStream(new java.io.InputStreamReader(System.in), 1, 1, 2048);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testNCName_Without_CoreFunctions_NCName_MeFF0_pPzF0() throws ParseException {
    java.io.StringReader reader = new java.io.StringReader("NCName");
    SimpleCharStream stream = new SimpleCharStream(reader);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    String result = parser.NCName_Without_CoreFunctions();
    assertEquals("NCName", result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_zzqE11_WkiN0() {
    java.io.Reader reader = new java.io.StringReader("input");
    SimpleCharStream stream = new SimpleCharStream(reader, 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException e = parser.generateParseException();
    assertNotNull(e);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetTokenWithNoNextToken_rqOB2_CdyV0() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tm = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tm);
    assertNull(parser.token);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInitWithEmptyReader_gzmQ1_ijPX0_1() {
    java.io.StringReader reader = new java.io.StringReader("");
    XPathParser parser = new XPathParser(reader);
    parser.ReInit(reader);
    assertNotNull(parser.token, "Token should not be null even with empty reader");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testMultiplicativeExpr_Modulus_ZTtn0() throws Exception {
    XPathParserTokenManager tm = new XPathParserTokenManager(new SimpleCharStream(System.in));
    XPathParser xpathParser = new XPathParser(tm);
    Compiler compiler = mock(Compiler.class);
    when(jj_nt.kind).thenReturn(XPathParser.MOD, XPathParser.EOF);
    xpathParser.jj_nt = jj_nt;
    Object exInitial = new Object();
    Object exResult = new Object();
    Object r = new Object();
    when(xpathParser.UnaryExpr()).thenReturn(exInitial, r);
    when(compiler.mod(exInitial, r)).thenReturn(exResult);
    Object result = xpathParser.MultiplicativeExpr();
    verify(compiler).mod(exInitial, r);
    assertEquals(exResult, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testLocationPath_WYqC0_CNNK0() throws ParseException {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    Object result = parser.LocationPath();
    assertNotNull(result, "LocationPath should not return null");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFunctionCallWithNullArguments_RmDB0_Usvg0() throws ParseException {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    Object result = parser.FunctionCall();
    assertNull(result, "Expected null arguments to result in a null return");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInitWithEmptyStream_bgWb0_auOj0_1() {
    java.io.ByteArrayInputStream stream = new java.io.ByteArrayInputStream(new byte[0]);
    XPathParser parser = new XPathParser(stream);
    parser.ReInit(stream);
    assertNotNull(parser.token, "Token should not be null after ReInit");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInitWithEmptyStream_bgWb0_auOj0_2() {
    java.io.ByteArrayInputStream stream = new java.io.ByteArrayInputStream(new byte[0]);
    XPathParser parser = new XPathParser(stream);
    parser.ReInit(stream);
    assertEquals(parser.token.next, parser.jj_nt, "Token next should be the first token from token source");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testFunctionCallWithNonEmptyArguments_TXmp1_iEnm0() throws ParseException {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    Object result = parser.FunctionCall();
    assert result != null : "Expected non-null arguments to result in a non-null return";
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInitWithSimpleContent_MJQx1_QLwI0_1() {
    String data = "simple test data";
    java.io.ByteArrayInputStream stream = new java.io.ByteArrayInputStream(data.getBytes());
    XPathParser parser = new XPathParser(stream);
    parser.ReInit(stream);
    assertNotNull(parser.token, "Token should not be null after ReInit");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReInitWithSimpleContent_MJQx1_QLwI0_2() {
    String data = "simple test data";
    java.io.ByteArrayInputStream stream = new java.io.ByteArrayInputStream(data.getBytes());
    XPathParser parser = new XPathParser(stream);
    parser.ReInit(stream);
    assertNotNull(parser.token.next, "Token next should not be null after ReInit");}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException1_Ilmw0() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
        assertEquals("TokenMgrError", e.getMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException2_cnVH1() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
        assertEquals("TokenMgrError", e.getMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException3_bfac2() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
        assertEquals("TokenMgrError", e.getMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException9_IShT8() {
        SimpleCharStream stream = new SimpleCharStream(System.in);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
        assertEquals("TokenMgrError", e.getMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGenerateParseException10_HReT9() {
        SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
        XPathParserTokenManager tm = new XPathParserTokenManager(stream, 0);
        XPathParser parser = new XPathParser(tm);
        ParseException e = parser.generateParseException();
        assertNotNull(e);
        assertEquals("TokenMgrError", e.getMessage());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException3_zWtL2() {
    SimpleCharStream stream = new SimpleCharStream(System.in);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
    assertEquals("Token error.", exception.getMessage());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException8_JfIc7() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
    assertEquals("Token error.", exception.getMessage());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException9_Gtjw8() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 512);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
    assertEquals("Token error.", exception.getMessage());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGenerateParseException12_QVsi11() {
    SimpleCharStream stream = new SimpleCharStream(System.in, 1, 1, 1024);
    XPathParserTokenManager tokenManager = new XPathParserTokenManager(stream);
    XPathParser parser = new XPathParser(tokenManager);
    ParseException exception = parser.generateParseException();
    assertNotNull(exception);
    assertEquals("Token error.", exception.getMessage());
}
}