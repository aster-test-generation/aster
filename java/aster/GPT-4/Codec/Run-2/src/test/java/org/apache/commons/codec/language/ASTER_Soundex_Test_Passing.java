/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Soundex_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifference_XDRW0() throws EncoderException {
        Soundex soundex = new Soundex();
        String s1 = "Robert";
        String s2 = "Rupert";
        int result = soundex.difference(s1, s2);
        assertEquals(4, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeBasic_yrlD0() {
        Soundex soundex = new Soundex();
        String result = soundex.encode("example");
        assertEquals("E251", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithValidString_HWqO0() throws EncoderException {
        Soundex soundex = new Soundex();
        String input = "Example";
        String expected = "E251"; // Assuming soundex method implementation for "Example" returns "E251"
        assertEquals(expected, soundex.encode(input));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_NullInput_yTCM0() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex(null);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_EmptyString_uNsG1() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_NormalCase_cQuG3() {
        Soundex soundex = new Soundex("01230120022455012623010202");
        String result = soundex.soundex("Jackson");
        assertEquals("J250", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_SpecialCaseHW_LRot4() {
        Soundex soundex = new Soundex("01230120022455012623010202", true);
        String result = soundex.soundex("Ashcraft");
        assertEquals("A261", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_IgnoreNonAlphabetic_BVyC5() {
        Soundex soundex = new Soundex("01230120022455012623010202");
        String result = soundex.soundex("J@#$$%^&*()!");
        assertEquals("J000", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_SameCharacters_JspV6() {
        Soundex soundex = new Soundex("01230120022455012623010202");
        String result = soundex.soundex("TTTTT");
        assertEquals("T000", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_WithSpecialCharacters_GYBy9() {
        Soundex soundex = new Soundex("01230120022455012623010202");
        String result = soundex.soundex("Jack-son!");
        assertEquals("J250", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLength_DefaultConstructor_EUgg0_fid1() {
        Soundex soundex = new Soundex();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_AllSilentMarkers_RHto2_fid1() {
        Soundex soundex = new Soundex("00000000000000000000000000");
        String result = soundex.soundex("AEIOU");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_DifferentCaseLetters_iZUW7_fid1() {
        Soundex soundex = new Soundex("01230120022455012623010202");
        String result = soundex.soundex("JacksonJACKSON");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_WithNumbers_efPl8_fid1() {
        Soundex soundex = new Soundex("01230120022455012623010202");
        String result = soundex.soundex("J4cks0n");
        assertEquals("J500", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_LongString_ssjp10_fid1() {
        Soundex soundex = new Soundex("01230120022455012623010202");
        String result = soundex.soundex("Pneumonoultramicroscopicsilicovolcanoconiosis");
        assertEquals("P555", result);
    }
}