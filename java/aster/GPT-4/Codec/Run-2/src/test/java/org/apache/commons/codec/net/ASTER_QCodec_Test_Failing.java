/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QCodec_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithValidInput_YIMd0() throws DecoderException {
        QCodec codec = new QCodec();
        String input = "=?UTF-8?Q?This_is_a_test_string?= ";
        String expected = "This is a test string";
        String result = codec.decode(input);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithDefaultCharset_LukJ0() throws EncoderException {
        QCodec codec = new QCodec();
        String sourceStr = "Hello World!";
        String expected = "=?UTF-8?Q?Hello_World!?=";
        String result = codec.encode(sourceStr);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithStringInput_UFUD1_iJOX0() {
        QCodec qCodec = new QCodec("UTF-8");
        String input = "Hello World";
        try {
            String result = qCodec.decode(input);
            assertEquals("Expected decoded string", result);
        } catch (DecoderException e) {
            fail("DecoderException should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithValidInput_YIMd0_fid1() throws DecoderException {
        QCodec codec = new QCodec();
        String input = "=?UTF-8?Q?This_is_a_test_string?=";
        byte[] expected = "This is a test string".getBytes(StandardCharsets.UTF_8);
        byte[] result = codec.doDecoding(input.getBytes(StandardCharsets.UTF_8));
        assertArrayEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithStringInput_UFUD1_iJOX0_fid1() {
        QCodec qCodec = new QCodec("UTF-8");
        String input = "Hello World";
        try {
            String result = qCodec.decode(input);
            assertEquals("Hello World", result);
        } catch (DecoderException e) {
            fail("DecoderException should not be thrown");
        }
    }
}