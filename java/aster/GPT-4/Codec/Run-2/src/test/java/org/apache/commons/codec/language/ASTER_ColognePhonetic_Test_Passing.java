/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ColognePhonetic_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqualWithSimilarSounds_TJeI0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        boolean result = colognePhonetic.isEncodeEqual("Meyer", "Meier");
        assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithEmptyString_cApa0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String result = colognePhonetic.encode("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithValidString_beqO0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String input = "Test";
        Object result = colognePhonetic.encode(input);
        assertTrue(result instanceof String);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithInvalidType_HUiv1() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        try {
            colognePhonetic.encode(new Integer(123));
            fail("Expected an EncoderException to be thrown");
        } catch (EncoderException e) {
            assertEquals("This method's parameter was expected to be of the type java.lang.String. But actually it was of the type java.lang.Integer.", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_NullInput_aGKD0() {
        ColognePhonetic cp = new ColognePhonetic();
        assertNull(cp.colognePhonetic(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_EmptyString_MqGN1() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("", cp.colognePhonetic(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_IgnoreNonAlphabetic_Oxxj2() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("", cp.colognePhonetic("1234"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_AEIJOUY_EleH3() {
        ColognePhonetic cp = new ColognePhonetic();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_B_eUcp4() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("1", cp.colognePhonetic("B"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_P_kier5() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("1", cp.colognePhonetic("P"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_DT_FQMX7() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("2", cp.colognePhonetic("DT"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_DTC_ZAVn8() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("28", cp.colognePhonetic("DTC"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_FPVW_wAcb9() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("313", cp.colognePhonetic("FPVW"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_GKQ_OZVN10() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("4", cp.colognePhonetic("GKQ"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_X_RAvS11() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("48", cp.colognePhonetic("X"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_S_Paee12() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("8", cp.colognePhonetic("S"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_Z_BPKw13() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("8", cp.colognePhonetic("Z"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_CInitial_ATBA14() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("4", cp.colognePhonetic("CA"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_CAfterS_ZqFp15() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("8", cp.colognePhonetic("SC"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_R_KvfL16() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("7", cp.colognePhonetic("R"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_L_CIOr17() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("5", cp.colognePhonetic("L"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_MN_bbTM18() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("6", cp.colognePhonetic("MN"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_H_VXwa19() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("", cp.colognePhonetic("H"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_NumbersAndLetters_wRDT22() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("4813", cp.colognePhonetic("123XBF456"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_SpecialCharacters_KLvc23() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("4813", cp.colognePhonetic("@XBF#"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_LongString_ufby24() {
        ColognePhonetic cp = new ColognePhonetic();
        assertEquals("482", cp.colognePhonetic("XDT"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithNullInput_wofm0() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic(null);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithEmptyString_emJs1() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithB_TpsZ5() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("B");
        assertEquals("1", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithP_KpJu6() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("P");
        assertEquals("1", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithPH_KllJ7() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("PH");
        assertEquals("3", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithD_HPhh8() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("D");
        assertEquals("2", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithT_uawG9() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("T");
        assertEquals("2", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithF_aezn10() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("F");
        assertEquals("3", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithV_GRYX11() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("V");
        assertEquals("3", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithW_RjGq12() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("W");
        assertEquals("3", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithG_tTkT13() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("G");
        assertEquals("4", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithK_WPxX14() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("K");
        assertEquals("4", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithQ_gpul15() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("Q");
        assertEquals("4", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithX_FpQK16() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("X");
        assertEquals("48", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithS_gxnU17() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("S");
        assertEquals("8", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithZ_iYnF18() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("Z");
        assertEquals("8", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithCAtStart_mHWF19() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("CA");
        assertEquals("4", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithCAfterS_yyJq20() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("SC");
        assertEquals("8", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithR_vyIC21() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("R");
        assertEquals("7", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithL_KzVi22() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("L");
        assertEquals("5", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithM_jGPJ23() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("M");
        assertEquals("6", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithN_yHro24() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("N");
        assertEquals("6", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithH_NRHb25() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("H");
        assertEquals("", result);
    }
}