/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_XXHash32_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueEmptyBuffer_FfhS0() {
        XXHash32 xxHash = new XXHash32();
        long result = xxHash.getValue();
        assertEquals(0, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueSingleByte_sBhJ1_SwkX0() {
        XXHash32 xxHash = new XXHash32();
        xxHash.update(new byte[]{0x01}, 0, 1);
        long result = xxHash.getValue();
        assertEquals(0x02C8BF35, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueMultipleBytes_EOWa2_tSts0() {
        XXHash32 xxHash = new XXHash32();
        byte[] input = new byte[]{0x01, 0x02, 0x03, 0x04};
        xxHash.update(input, 0, input.length);
        long result = xxHash.getValue();
        assertEquals(0x1892F1F8, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueFullBufferProcess_DmiK3_CkrX0() {
        XXHash32 xxHash = new XXHash32();
        byte[] buffer = new byte[]{0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};
        xxHash.update(buffer, 0, buffer.length);
        long result = xxHash.getValue();
        assertEquals(0x3EDEA862, result);
    }
}