/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Nysiis_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsStrictTrue_UFiD0() {
        Nysiis nysiis = new Nysiis(true);
        assertTrue(nysiis.isStrict());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_NullInput_tdvs0() {
        Nysiis nysiis = new Nysiis();
        assertNull(nysiis.nysiis(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_EmptyString_uTaE1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("", nysiis.nysiis(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_NullInput_osNH0() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis(null);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_EmptyString_Tjnl1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_VowelConversion_NojU8() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Abe");
        assertEquals("AB", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithValidString_kCqd0() {
        Nysiis nysiis = new Nysiis();
        String input = "John";
        String expected = "JAN"; // Assuming 'nysiis' method processes "John" to "JAN"
        String result = (String) nysiis.encode(input);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithInvalidType_fAQV1() {
        Nysiis nysiis = new Nysiis();
        Object input = new Object();
        try {
            nysiis.encode(input);
            fail("Expected an EncoderException to be thrown");
        } catch (EncoderException e) {
            assertEquals("Parameter supplied to Nysiis encode is not of type java.lang.String", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MacPrefix_RQKC2_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("MCARTY", nysiis.nysiis("MacCarthy"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_KnPrefix_KjhF3_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("NAGT", nysiis.nysiis("Knight"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_KPrefix_FQiG4_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("CANG", nysiis.nysiis("King"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_PhPfPrefix_FvNN5_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("FALAP", nysiis.nysiis("Philip"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_SchPrefix_RvHZ6_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("SALT", nysiis.nysiis("Schultz"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_EvToAf_Omij7_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("STAFAN", nysiis.nysiis("Steven"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_VowelsToA_sRhp8_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ELAN", nysiis.nysiis("Ellen"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_QToG_PPKe9_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("QAC", nysiis.nysiis("Quack"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_ZToS_eNbr10_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ZASAN", nysiis.nysiis("Zuzan"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MToN_eCVK11_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("MANCY", nysiis.nysiis("Mancy"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_HHandling_rzQl12_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("SNAT", nysiis.nysiis("Smith"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_WHandling_jkxc13_fid1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("CR", nysiis.nysiis("Crew"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MacPrefix_sBHR2_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("MacDonald");
        assertEquals("MCDANA", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_KnPrefix_RBuZ3_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Knight");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_PhPfPrefix_wSGw4_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Pfister");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_SchPrefix_GfFx5_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Schmidt");
        assertEquals("SNAD", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_EeIeSuffix_afBi6_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Rosie");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_QToG_EiQl9_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Quincy");
        assertEquals("QANCY", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_MToN_tPmW11_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Moo");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_KToC_aIkO12_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Kite");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_KnToNn_IvBW13_fid1() {
        Nysiis nysiis = new Nysiis();
        String result = nysiis.nysiis("Knack");
        assertEquals("NAC", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeBasic_lFqZ0_fid1() {
        Nysiis nysiis = new Nysiis();
        String input = "encoding";
        String expected = "ENCADA"; // Assuming "ENCADA" is the expected NYSIIS code for "encoding"
        String result = nysiis.encode(input);
        assertEquals(expected, result);
    }
}