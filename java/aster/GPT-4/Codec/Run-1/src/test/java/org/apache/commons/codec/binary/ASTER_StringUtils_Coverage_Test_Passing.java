/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.nio.ByteBuffer;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_StringUtils_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetByteBufferUtf8WithNullInput_FcPU0() {
        ByteBuffer result = StringUtils.getByteBufferUtf8(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_DifferentLengthCharSequences_tHYw1_GxWD0() {
        StringBuilder cs1 = new StringBuilder("hello");
        StringBuilder cs2 = new StringBuilder("world!");
        assertFalse(StringUtils.equals(cs1, cs2), "CharSequences with different lengths should not be equal");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_BothStrings_kqKT0_RSFd0_fid1() {
        String cs1 = "hello";
        String cs2 = "hello";
        assertEquals("hello", cs1, cs2);
    }
}