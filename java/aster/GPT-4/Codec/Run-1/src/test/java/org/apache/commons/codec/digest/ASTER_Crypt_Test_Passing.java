/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Crypt_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCryptWithValidInputs_BvAY0() {
        String key = "testKey";
        String salt = "testSalt";
        String result = Crypt.crypt(key, salt);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCryptWithNull_FJGy0_OxAC0() {
        try {
            String result = Crypt.crypt((String) null);
            fail("Expected an exception to be thrown");
        } catch (NullPointerException e) {
            assertEquals("Cannot invoke \"String.getBytes(java.nio.charset.Charset)\" because \"key\" is null", e.getMessage());
        }
    }
}