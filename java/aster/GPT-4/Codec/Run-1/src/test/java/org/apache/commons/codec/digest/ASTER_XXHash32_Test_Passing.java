/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_XXHash32_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReset_AIKA0() {
        XXHash32 xxHash = new XXHash32(12345);
        xxHash.reset();
        assertTrue(true);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithSingleByte_MtDh0() {
        XXHash32 hasher = new XXHash32();
        hasher.update(0xA5);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueSingleElementBuffer_Rqrm1_GOVY0() {
        XXHash32 xxHash = new XXHash32();
        xxHash.update(0x01);
        long result = xxHash.getValue();
        assertTrue(result != 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueMultipleElementsBuffer_nMAQ2_nyoy0() {
        XXHash32 xxHash = new XXHash32();
        xxHash.update(0x01);
        xxHash.update(0x02);
        xxHash.update(0x03);
        xxHash.update(0x04);
        long result = xxHash.getValue();
        assertTrue(result != 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValueEmptyBuffer_zQfr0_fid2() {
        XXHash32 xxHash = new XXHash32();
        long result = xxHash.getValue();
    }
}