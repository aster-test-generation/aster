/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_DoubleMetaphone_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleC_pWZt7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("S", dm.doubleMetaphone("C", false)); // Assuming handleC() returns 'S' for simple 'C'
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleH_qoal12() {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("H", dm.doubleMetaphone("H", false)); // Assuming handleH() returns 'H' for simple 'H'
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithK_Kcuy1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Kafka", false);
        assertEquals("KKF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithWITZ_KbmD3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Rabinowitz", false);
        assertEquals("RPN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithG_DGyt10() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gig", false);
        assertEquals("KK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_EmptyString_KZic0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("", false);
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_HandleJ_SlavoGermanic_QABc6() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jager", false);
        assertEquals("AKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_HandleP_elXi8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Pfister", false);
        assertEquals("FSTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_AlternateTrue_CMKe12() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schmidt", true);
        assertEquals("XMT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithH_YHSq9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("H", false);
        assertEquals("H", result);  // Assuming handleH method translates H to H
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Caeser_KxJV0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Caesar", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Czech_UyLp1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czech", false);
        assertEquals("SX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Focaccia_npBo2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Focaccia", false);
        assertEquals("FK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_McClelland_IxiM3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("McClelland", false);
        assertEquals("MKLLNT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cappuccino_vcIk6() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cappuccino", false);
        assertEquals("KPKKN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Czechowski_bTGw9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czechowski", false);
        assertEquals("SXFSK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cappuccio_aDxR10() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cappuccio", false);
        assertEquals("KPKX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_CappuccinoAlternate_SHnz12() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cappuccino", true);
        assertEquals("KPKKN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case2_JjOj1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czerny", false);
        assertEquals("SX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case3_gFlg2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("focaccia", false);
        assertEquals("FX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case6_ghez5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Mac Gregor", false);
        assertEquals("MKRKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case7_wYKc6() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("ach", false);
        assertEquals("AX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case9_wyCp8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Macher", false);
        assertEquals("MXR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case10_CUkv9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("WICZ", false);
        assertEquals("AX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case11_Dqbk10() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("CHIA", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case10_HUjp9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("knuth", false);
        assertEquals("NT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Chemistry_pgSk1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Chemistry", false);
        assertEquals("KMSTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Christmas_ScaM8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Christmas", false);
        assertEquals("KRSTMS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Achmadi_OoHM2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Achmadi", false);
        assertEquals("AXMT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cicci_IkVn11() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cicci", false);
        assertEquals("SS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithOrchestra_dzIy4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Orchestra", false);
        assertEquals("ARKSTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithArchitect_HYSw7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Architect", false);
        assertEquals("ARKTKT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithWicz_pFWW8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wicz", false);
        assertEquals("AX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithMcGregor_Pjmi9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("McGregor", false);
        assertEquals("MKRKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Accident_HzcU3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Accident", false);
        assertEquals("AKS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Bellocchio_fGUf4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bellocchio", false);
        assertEquals("BLX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Bacchus_vkay5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bacchus", false);
        assertEquals("BKS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cc_sYOe10() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cc", false);
        assertEquals("KK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Ciao_VxJn12() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Ciao", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithEdge_HQet0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("edge", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithEdgar_sLFR1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("edgar", false);
        assertEquals("TKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithGH_sQLG0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Ghent", false);
        assertEquals("JNT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithGNAlternate_XTXV2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gnome", true);
        assertEquals("KNM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithGY_uQkT4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gypsy", false);
        assertEquals("JPS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithGE_FAXK5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gesture", false);
        assertEquals("JSTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithGermanicGi_MqEz7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Ginger", false);
        assertEquals("JNR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithSlavoGermanic_Lmez2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wagner", false);
        assertEquals("FNKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithGermanicOrigin_twer7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Berger", false);
        assertEquals("PRJR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithGYPrefix_mibY11() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("gyro", false);
        assertEquals("JR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithGFollowedByY_qOVH12() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("gypsum", false);
        assertEquals("JPSM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithAER_lnFo4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Aerosmith", false);
        assertEquals("ARSMT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithPF_hoxL5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Pfizer", false);
        assertEquals("FSR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_OzWt0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("anger", false);
        assertEquals("ANJR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_OYvh4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("gel", false);
        assertEquals("JL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_bfcC5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("gel", true);
        assertEquals("KL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_ZlOi9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("schmidt", true);
        assertEquals("XMT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithEmbeddedH_qSJR1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Thompson", false);
        assertEquals("TMPSN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithG_Qzxs7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Ginger", false);
        assertEquals("JNJR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithJose_BZjq0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jose", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithJavier_jgBs4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Javier", false);
        assertEquals("JFR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithJuxtapose_zUth10() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Juxtapose", false);
        assertEquals("JKTPS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JoseAlternate_xEbl1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jose", true);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SanJacintoPrimary_rxkJ2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("San Jacinto", false);
        assertEquals("SNHSNT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SanJacintoAlternate_rTKC3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("San Jacinto", true);
        assertEquals("SNHSNT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JulioAlternate_IluM7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Julio", true);
        assertEquals("HL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JojoAlternate_Lefl13() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jojo", true);
        assertEquals("HH", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithTripleL_cEqR2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("LLL", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithLeadingL_jsPY3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Labc", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithEmbeddedSingleL_vmCY4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("aLb", false);
        assertEquals("ALB", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithEmbeddedDoubleL_kZiD5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("aLLb", false);
        assertEquals("ALB", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithTrailingL_bHTR6() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("abL", false);
        assertEquals("ABL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithTrailingDoubleL_KDMe7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("abLL", false);
        assertEquals("ABL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithAllLs_Qruv8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("LLLL", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithMixedCaseLs_cobE9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("LlLl", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithLillo_Mgtu2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Lillo", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithLilla_jtPO3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Lilla", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithAllegroAlternate_nJWw5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Allegro", true);
        assertEquals("ALKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithAllegraAlternate_AtDi7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Allegra", true);
        assertEquals("ALKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithOs_iIEE8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Allegros", false);
        assertEquals("ALKRS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_AEIOUY_yJKW0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Audio", false);
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_B_lcWW1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bob", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_C_MJyY2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cecilia", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_D_PQJf3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("David", false);
        assertEquals("T", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_F_hSCr4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Fifty", false);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_G_Zopr5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gigantic", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_H_jUoI6() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Hannah", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_J_sQBo7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jorge", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_M_IwPv8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Mummy", false);
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_M_ConditionM0_TONw9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Columbus", false);
        assertEquals("KLMPS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_N_sJCj10() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Nancy", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_P_iWfP11() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Papa", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Q_HARg12() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Quack", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_H_yHrl6() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Henry", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_J_Clsy7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("John", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_K_hLdx8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Kirk", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_L_FdRA9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Lilly", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_R_kmRD12() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Rider", false);
        assertEquals("R", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Shoek_cnkH4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Shoek", false);
        assertEquals("XK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Sicily_zoCa8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Sicily", false);
        assertEquals("SKL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Schultz_jAID12() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schultz", false);
        assertEquals("XLS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Schlesinger_MKXb4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schlesinger", false);
        assertEquals("XLSNKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Scholar_RioK11() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Scholar", false);
        assertEquals("SKLR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Szczepanski_drFw11() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Szczepanski", false);
        assertEquals("SXPNXK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithTch_qIZF2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("watch", false);
        assertEquals("WX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithThAm_jGgN4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("betham", false);
        assertEquals("BTM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithTth_Zgrz5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("matthew", false);
        assertEquals("MT0", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithVan_XxNB6() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("van thomas", false);
        assertEquals("FN TMS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithWITZSuffix_onhn5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bernwitz", false);
        assertEquals("PRNTS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithPolishOrigin_oPce6() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Filipowicz", false);
        assertEquals("FLPTS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_C_Cedilla_MjnY10() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Faade", false);
        assertEquals("FST", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_N_Tilde_lgWW11() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Seor", false);
        assertEquals("SNR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithXAtEnd_nOeG3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Breaux", false);
        assertTrue(result.endsWith("KS"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithXAndSpecialConditions_rBVL8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Beaux", false);
        assertTrue(result.endsWith("KS"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithZNotFollowedByH_AgOt1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Zap", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithZFollowedByI_JBFf3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Zinc", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithZSlavoGermanic_azlL5() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Zloty", true);
        assertEquals("SLTS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithZDouble_qZpx7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Zizza", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithZSingle_ljSm8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Zebra", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneBasic_hiAd0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String input = "example";
        String expected = "AKSMP";
        String result = dm.doubleMetaphone(input);
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithEmptyString_hNKx0() {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.encode("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleC_pWZt7_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("S", dm.doubleMetaphone("C", false)); // Assuming handleC() returns 'K' for simple 'C'
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithH_YHSq9_fid1() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("H", false);
        assertEquals("H", result);  // Assuming handleH method translates to
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithHSose_BZjq0() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("HSose", false);
        assertEquals("HS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithTripleLL_cEqR2() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("LLLLLL", false);
        assertEquals("LL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithLPKeadingLPK_jsPY3() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("LPKabc", false);
        assertEquals("LPK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithAllLLs_Qruv8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("LLLLLLLL", false);
        assertEquals("LL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithMixedCaseLLs_cobE9() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("LLlLLl", false);
        assertEquals("LL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_FFT_hSCr4() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("FFTifty", false);
        assertEquals("FFT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_JN_Clsy7() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("JNohn", false);
        assertEquals("JN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_KRK_hLdx8() {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("KRKirk", false);
        assertEquals("KRK", result);
    }
}