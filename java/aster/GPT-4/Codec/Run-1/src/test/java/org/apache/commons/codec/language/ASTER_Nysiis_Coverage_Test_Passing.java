/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Nysiis_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeQToQANCY_vcDR0() {
        Nysiis nysiis = new Nysiis();
        assertEquals("QANCY", nysiis.nysiis("Quincy"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeKToC_OAsH1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("C", nysiis.nysiis("K"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeKNToN_aEND2() {
        Nysiis nysiis = new Nysiis();
        assertEquals("N", nysiis.nysiis("Kn"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeSCHToS_NIGR3() {
        Nysiis nysiis = new Nysiis();
        assertEquals("S", nysiis.nysiis("Sch"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodePToF_SZov4() {
        Nysiis nysiis = new Nysiis();
        assertEquals("F", nysiis.nysiis("Ph"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeHWithNonVowelPrev_QsDz5() {
        Nysiis nysiis = new Nysiis();
        assertEquals("C", nysiis.nysiis("Ch"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeWWithVowelPrev_SyTK7() {
        Nysiis nysiis = new Nysiis();
        assertEquals("A", nysiis.nysiis("Aw"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeKtoNAC_tFWj1() {
        Nysiis nysiis = new Nysiis();
        assertEquals("NAC", nysiis.nysiis("Knack"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeSCHtoSAL_lbYC3() {
        Nysiis nysiis = new Nysiis();
        assertEquals("SAL", nysiis.nysiis("School"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodePHtoFANTAN_kYNG4() {
        Nysiis nysiis = new Nysiis();
        assertEquals("FANTAN", nysiis.nysiis("Phantom"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeTWACTWACithNonVowelPrev_erdg8() {
        Nysiis nysiis = new Nysiis();
        assertEquals("TWAC", nysiis.nysiis("Tweak"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testTranscodeRemainingWithMultipleRules_PIBM9() {
        Nysiis nysiis = new Nysiis();
        assertEquals("SWARTS", nysiis.nysiis("SchwartzPh"));
    }
}