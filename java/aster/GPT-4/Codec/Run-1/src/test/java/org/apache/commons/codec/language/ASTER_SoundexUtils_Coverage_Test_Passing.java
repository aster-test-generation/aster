/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_SoundexUtils_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEmptyWithNullInput_ahNe0() {
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceEncodedWithDifferentStrings_lHxa2_xitz0() {
        assertEquals(0, SoundexUtils.differenceEncoded("A123", "B456"), "Expecting 0 when no characters match");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceEncodedWithPartialMatches_iYJG3_zVPX0() {
        assertEquals(3, SoundexUtils.differenceEncoded("A133", "A153"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceEncodedWithIdenticalStrings_mWOZ1_KrMj0() {
        assertEquals(4, SoundexUtils.differenceEncoded("A123", "A123"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceEncodedWithNullInputs_bTuf0_PDkU0_1() {
        assertEquals(0, SoundexUtils.differenceEncoded(null, null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceEncodedWithNullInputs_bTuf0_PDkU0_2() {
        assertEquals(0, SoundexUtils.differenceEncoded(null, "A123"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceEncodedWithNullInputs_bTuf0_PDkU0_3() {
        assertEquals(0, SoundexUtils.differenceEncoded("A123", null));
    }
}