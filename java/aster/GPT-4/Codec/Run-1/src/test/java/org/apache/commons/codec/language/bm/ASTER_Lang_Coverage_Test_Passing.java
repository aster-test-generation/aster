/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Lang_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGuessLanguage_NonSingletonLanguageSet_idpS1_ukUI0() {
        Languages languages = mock(Languages.class);
        Lang lang = Lang.loadFromResource("languageRulesResourceName", languages);
        String testText = "Dies ist ein deutscher Text.";
        Languages.LanguageSet mockLanguageSet = mock(Languages.LanguageSet.class);
        when(mockLanguageSet.isSingleton()).thenReturn(false);
        Lang spyLang = spy(lang);
        doReturn(mockLanguageSet).when(spyLang).guessLanguages(testText);
        String result = spyLang.guessLanguage(testText);
        assertEquals(Languages.ANY, result);
        verify(mockLanguageSet).isSingleton();
    }
}