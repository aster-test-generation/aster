/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_XXHash32_Coverage_Test_Failing {
    private static final int BUF_SIZE = 16; // Assuming buffer size is 16 for simplicity

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateNegativeLength_SAnl9() {
        XXHash32 hasher = new XXHash32();
        byte[] data = new byte[64];
        assertThrows(IllegalArgumentException.class, () -> {
            hasher.update(data, 0, -1); // Negative length should throw an exception
        });
    }
}