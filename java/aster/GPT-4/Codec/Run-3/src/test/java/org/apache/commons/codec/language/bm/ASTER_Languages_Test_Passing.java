/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Languages_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_EmptyFile_mWdM0() throws Exception {
        Languages result = Languages.getInstance("empty_languages.txt");
        assertTrue(result.getLanguages().isEmpty());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_SingleLanguage_OjLQ1_1() throws Exception {
        Languages result = Languages.getInstance("single_language.txt");
        assertEquals(1, result.getLanguages().size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_SingleLanguage_OjLQ1_2() throws Exception {
        Languages result = Languages.getInstance("single_language.txt");
        assertTrue(result.getLanguages().contains("English"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_MultipleLanguages_vyjw2() throws Exception {
        Languages result = Languages.getInstance("multiple_languages.txt");
        Set<String> expected = new HashSet<>();
        expected.add("English");
        expected.add("French");
        expected.add("Spanish");
        assertEquals(expected, result.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_WithComments_QvNn3() throws Exception {
        Languages result = Languages.getInstance("languages_with_comments.txt");
        Set<String> expected = new HashSet<>();
        expected.add("English");
        expected.add("French");
        assertEquals(expected, result.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_ExtendedCommentsIgnored_CrbO4() throws Exception {
        Languages result = Languages.getInstance("languages_with_extended_comments.txt");
        Set<String> expected = new HashSet<>();
        expected.add("English");
        assertEquals(expected, result.getLanguages());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_InvalidResource_JWVa5() throws Exception {
        try {
            Languages.getInstance("non_existent_file.txt");
            fail("Expected an exception to be thrown");
        } catch (Exception e) {
            assertTrue(e instanceof RuntimeException);
        }
    }
}