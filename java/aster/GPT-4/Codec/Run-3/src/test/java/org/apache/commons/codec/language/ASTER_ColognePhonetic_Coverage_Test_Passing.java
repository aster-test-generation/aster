/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ColognePhonetic_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithAumlaut_QPNe0() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("");
        assertEquals("0", "0", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithMultipleUmlauts_bcKb3() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("");
        assertEquals("000", "000", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithAumlautInSentence_CWQc4() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("BR");
        assertEquals("17", "17", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithUumlautInSentence_Qmht5() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("FR");
        assertEquals("37", "37", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithOumlautInSentence_rnBo6() {
        ColognePhonetic cp = new ColognePhonetic();
        String result = cp.colognePhonetic("LFFEL");
        assertEquals("535", "535", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringInput_ypse1_1() throws EncoderException {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String input = "Test";
        Object result = colognePhonetic.encode(input);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringInput_ypse1_2() throws EncoderException {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String input = "Test";
        Object result = colognePhonetic.encode(input);
        assertTrue(result instanceof String);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithIntegerInput_lLMh2_sIUL0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringInput_ypse1() throws EncoderException {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String input = "Test";
        Object result = colognePhonetic.encode(input);
        assertNotNull(result);
        assertTrue(result instanceof String);
    }
}