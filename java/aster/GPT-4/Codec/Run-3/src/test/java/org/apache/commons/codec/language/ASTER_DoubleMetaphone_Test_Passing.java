/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DoubleMetaphone_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDoubleMetaphoneEqual_SameStrings_Zpqu0() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        boolean result = doubleMetaphone.isDoubleMetaphoneEqual("example", "example");
        assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDoubleMetaphoneEqual_SameWords_opEO0() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        boolean result = doubleMetaphone.isDoubleMetaphoneEqual("example", "example", true);
        assertTrue(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCharAtIndexWithinBounds_CYfy0() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        char result = doubleMetaphone.charAt("hello", 1);
        assertEquals('e', result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCharAtIndexOutOfBoundsNegative_SGZN1() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        char result = doubleMetaphone.charAt("hello", -1);
        assertEquals(Character.MIN_VALUE, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCharAtIndexOutOfBoundsPositive_xLId2() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        char result = doubleMetaphone.charAt("hello", 5);
        assertEquals(Character.MIN_VALUE, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithValidString_QlNC0() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String input = "example";
        Object result = doubleMetaphone.encode(input);
        assertTrue(result instanceof String);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_NullInput_nQZB0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertNull(dm.doubleMetaphone(null, false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_EmptyString_IYWV1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertNull(dm.doubleMetaphone("", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleA_CFQF3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("A", dm.doubleMetaphone("A", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleB_pzpD4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("P", dm.doubleMetaphone("B", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_DoubleB_ckLa5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("P", dm.doubleMetaphone("BB", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cedilla_Juxb6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("S", dm.doubleMetaphone("\u00C7", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleC_ZYcf7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("K", dm.doubleMetaphone("C", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleD_foci8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("T", dm.doubleMetaphone("D", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleF_bTze9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("F", dm.doubleMetaphone("F", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_DoubleF_yBqO10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("F", dm.doubleMetaphone("FF", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleG_hUOI11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("K", dm.doubleMetaphone("G", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleH_jEhd12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        assertEquals("H", dm.doubleMetaphone("H", false));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_AEIOUY_nUKp0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Audio", false);
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_B_AYYS1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bob", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_C_pOQv2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cicero", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_D_XVwL3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("David", false);
        assertEquals("T", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_F_mtNH4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Fried", false);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_G_Tlrj5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gold", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_H_LNxP6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Herald", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_J_EYsM7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("John", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_K_dOMQ8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Kirk", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_L_VBRv9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Lloyd", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_M_OdLv10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Mum", false);
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_N_Uheq11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Noon", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_P_NYIX12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Pope", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_EmptyString_UDkw0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("", false);
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Null_IaFP1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone(null, false);
        assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SilentStart_AqiH2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("gnome", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleA_TwiM3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("A", false);
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SimpleB_ghDT4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("B", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_DoubleB_qVvt5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("BB", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_CWithSilentStart_GYqd6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czerny", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SlavoGermanic_wwnN7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schwarz", false);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_SpanishN_dBsX8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("\u00D1andu", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_FrenchC_fcNb9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("\u00C7a va", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_AlternateTrue_jntI10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Accommodation", true);
        assertEquals("AKM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_AlternateFalse_JoSN11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Accommodation", false);
        assertEquals("AKM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_ComplexName_YdFS12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schmidt", false);
        assertEquals("XMT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_AEIOUY_rxqm0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("AEIOUY", false);
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_C_uMYh2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("C", false);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_D_IelJ3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("D", false);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_F_gtLV4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("F", false);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_G_fEpy5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("G", false);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_H_avRz6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("H", false);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_J_OaTw7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("J", false);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_K_fjsr8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("K", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_L_ozCN9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("L", false);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_M_XSpp10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("M", false);
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_N_wSJa11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("N", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_P_Ghwh12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("P", false);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Caesar_GYjc0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Caesar", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Czerny_Crpr1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czerny", false);
        assertEquals("SX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Focaccia_mZnL2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Focaccia", false);
        assertEquals("FK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_McClelland_MbbQ3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("McClelland", false);
        assertEquals("MKLLNT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Accolade_LxwU4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Accolade", false);
        assertEquals("AKLT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cicero_YPrD5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cicero", false);
        assertEquals("SSR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_MacCaffrey_RuaU6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Mac Caffrey", false);
        assertEquals("MKFR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cock_NybR7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cock", false);
        assertEquals("KK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Christmas_aAVO8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Christmas", false);
        assertEquals("KRSTMS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Czech_yEDp9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czech", false);
        assertEquals("SX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cicada_gKtk10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cicada", false);
        assertEquals("SKT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cappuccino_yfgY11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cappuccino", false);
        assertEquals("KPK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cucumber_dVXd12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cucumber", false);
        assertEquals("KM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case3_eKDu2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("focaccia", false);
        assertEquals("FX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case6_ekzI5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Mac Gregor", false);
        assertEquals("MKRKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case7_iPeG6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Chia", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case8_eMjl7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bacher", false);
        assertEquals("PKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case9_zAxJ8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Macher", false);
        assertEquals("MKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case10_NxyF9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Ach", false);
        assertEquals("AX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case11_UuCN10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("CIO", false);
        assertEquals("SX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case12_wwnd11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("CIE", false);
        assertEquals("SX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Case13_ZiRb12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("CIA", false);
        assertEquals("SX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Chemistry_KFXu1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Chemistry", false);
        assertEquals("KMSTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Focaccia_gwXD3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Focaccia", false);
        assertEquals("FKX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Michael_aZfg6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Michael", false);
        assertEquals("MKL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Wagner_ifPi7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wagner", false);
        assertEquals("AKNR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cappuccino_DOmc8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cappuccino", false);
        assertEquals("KPKN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Christopher_eHcD9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Christopher", false);
        assertEquals("KRSTRFR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Knight_WdiM10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Knight", false);
        assertEquals("NT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Pfizer_XpTF11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Pfizer", false);
        assertEquals("FSR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Gnocchi_ZErM12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gnocchi", false);
        assertEquals("NK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Czerny_pTuK1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czerny", false);
        assertEquals("SR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Achord_ZjlZ6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Achord", false);
        assertEquals("AKRT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_McGregor_baIW7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("McGregor", false);
        assertEquals("MKRKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Chore_qsqp8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Chore", false);
        assertEquals("XR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Harach_JLsF9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Harach", false);
        assertEquals("HRX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Horatio_zhPQ10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Horatio", false);
        assertEquals("HRT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Hymnal_Rkmd11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Hymnal", false);
        assertEquals("HMNL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Hemlock_RIQO12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Hemlock", false);
        assertEquals("HMLK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Accolade_ygUm4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Accolade", false);
        assertEquals("AKKLT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Orchestra_FfZV6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Orchestra", false);
        assertEquals("ARKSTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Architect_Wtas7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Architect", false);
        assertEquals("ARKTKT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Schwarz_IEPP9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schwarz", false);
        assertEquals("XRS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_VanGogh_ovHv10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Van Gogh", false);
        assertEquals("FNKF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Wicz_awgH11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wicz", false);
        assertEquals("AX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Accident_yLyE3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Accident", false);
        assertEquals("AKST", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Bacci_MezF4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bacci", false);
        assertEquals("PX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Clock_qePP6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Clock", false);
        assertEquals("KLK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Charm_KQuI8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Charm", false);
        assertEquals("XRM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Wicz_sTMz9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wicz", false);
        assertEquals("WK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Czerny_QpUf11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Czerny", false);
        assertEquals("SRN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Cello_HITl12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cello", false);
        assertEquals("SL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithEdge_BxMw0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("edge", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithEdgar_bUDH1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("edgar", false);
        assertEquals("TKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithDodge_xZvE2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("dodge", false);
        assertEquals("TJ", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithDud_UNBl3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("dud", false);
        assertEquals("TT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithDate_QdcQ4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("date", false);
        assertEquals("TT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithDad_nJNu5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("dad", false);
        assertEquals("TT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithDavid_FEIr6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("david", false);
        assertEquals("TFT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithAlternativeTrue_cGhg7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("david", true);
        assertEquals("TFT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithD_aobj8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("d", false);
        assertEquals("T", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithNonAlphabetic_pSNn11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("1234", false);
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithSpecialCharacters_Xomr12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("@#$%", false);
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_C_iLjR2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cello", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_D_LcoV3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Dodge", false);
        assertEquals("TJ", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_F_xiuz4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Fifty", false);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_G_pUTt5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gnome", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_H_XFcd6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Heir", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_J_poRj7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jorge", false);
        assertEquals("HR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_K_vaYP8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Knick", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_M_vdgv10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Mnemonic", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_N_OtuG11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Nnenna", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_P_gpHJ12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Phipps", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_xLNQ0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bach", false);
        assertEquals("PK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_HqPu1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bach", true);
        assertEquals("PK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_IsBl2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("danger", false);
        assertEquals("TNJR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_ngVW3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("danger", true);
        assertEquals("TNJR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_VQKo5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wagner", true);
        assertEquals("FKNR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_KNau6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cough", false);
        assertEquals("KF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_SPNz7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cough", true);
        assertEquals("KF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_fBmJ8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("edge", false);
        assertEquals("AJ", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_ojIF9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("edge", true);
        assertEquals("AJ", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_YyjT10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Hiccough", false);
        assertEquals("HKF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_wFrP11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Hiccough", true);
        assertEquals("HKF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_zQie12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Ghislain", false);
        assertEquals("JLN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_H_WmKG6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("AHHA", false);
        assertEquals("AH", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneJoseStart_bICZ0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jose", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneJoseMiddle_LjuT1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("MariaJose", false);
        assertEquals("MRJH", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneSanSpace_vPpU2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("San Jose", false);
        assertEquals("SNHS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneJAtEnd_iVte4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Marj", false);
        assertEquals("MRJ", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneJWithVowelAfter_jWMX5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bojan", false);
        assertEquals("PJN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneJJSequence_jvXS6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Hajji", false);
        assertEquals("HJ", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneJWithNonListedConsonants_YhCB7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jafar", false);
        assertEquals("JFR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneJWithListedConsonants_JErO8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jkl", false);
        assertEquals("JKL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneSlavoGermanic_UnRE9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jager", true);
        assertEquals("JGR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneNonSlavoGermanic_Xiny10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jager", false);
        assertEquals("JHR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneAlternateFalse_gaWC12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wagner", false);
        assertEquals("FKNR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_RFDD0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("hello", false);
        assertEquals("HL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_EKVE1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("hello", true);
        assertEquals("HL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_NEYB2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("apple", false);
        assertEquals("APL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_Roun3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("apple", true);
        assertEquals("APL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_EIJI4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("crisp", false);
        assertEquals("KRSP", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_DMEY5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("crisp", true);
        assertEquals("KRSP", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_EHOF6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("knight", false);
        assertEquals("NT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_EeSI7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("knight", true);
        assertEquals("NT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_NPtj8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("llama", false);
        assertEquals("LM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_tmJv9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("llama", true);
        assertEquals("LM", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_MtZO10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wright", false);
        assertEquals("RT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_qOyR11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Wright", true);
        assertEquals("RT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_yYiP2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cecilia", false);
        assertEquals("SSL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_yKgU3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cecilia", true);
        assertEquals("SSL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_bZhE5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schmidt", true);
        assertEquals("XMT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_hSRV8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Lloyd", false);
        assertEquals("LT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_kMhv9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Lloyd", true);
        assertEquals("LT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_AcSO10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Ashcraft", false);
        assertEquals("AXKRFT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_aInz11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Ashcraft", true);
        assertEquals("AXKRFT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_VxeV12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Tymczak", false);
        assertEquals("TMXK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_C_cjTY2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cecilia", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_G_ySaK5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Gigantic", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_H_jxLO6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Hannah", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_J_tjQj7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Jorge", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_M_CYuF8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Mummy", false);
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_N_GPme9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Nina", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_P_opGY10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Papa", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Q_giDC11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Quack", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_V_xWyE12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Vivid", false);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_P_zXnf10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("PH", false);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_P_withB_qjUz11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("PB", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_P_single_JRtV12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("P", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_AEIOUY_lSwA0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("audio", false);
        assertEquals("A", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_B_WnBS1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("bob", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_F_DUgt4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("fifty", false);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_G_wivS5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("George", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_H_sfYx6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Henry", false);
        assertEquals("H", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_N_KpgH10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Nancy", false);
        assertEquals("N", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_R_ttNj11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Rider", false);
        assertEquals("R", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_R_Alternate_thxl12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Rier", false);
        assertEquals("R", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_fqJh0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Smith", false);
        assertEquals("SM0", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone3_HRXH2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Sugar", false);
        assertEquals("XKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_eiuR3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Island", false);
        assertEquals("ALNT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone5_cJAe4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Carlisle", false);
        assertEquals("KRLS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_iuXp5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Shoemaker", false);
        assertEquals("XMKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone7_nxDW6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schiavone", false);
        assertEquals("XFNF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_SQhW7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schneider", false);
        assertEquals("XNTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone9_ZYbF8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Szymanski", false);
        assertEquals("SSMN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone10_uaUZ9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Holmes", false);
        assertEquals("HLMS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_PLjL10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Art", false);
        assertEquals("ART", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_WEAy11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Resnais", true);
        assertEquals("RSNS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Sugar_WDRI0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Sugar", false);
        assertEquals("XGR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Sugar_Alternate_tPFt1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Sugar", true);
        assertEquals("SGR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_School_kanw2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("School", false);
        assertEquals("SKL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_School_Alternate_SWMc3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("School", true);
        assertEquals("SKL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Schenker_TUYP4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schenker", false);
        assertEquals("XNKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Schenker_Alternate_ijVy5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schenker", true);
        assertEquals("SKNKR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Smith_Alternate_ShPS7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Smith", true);
        assertEquals("XMT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Schneider_Alternate_buHd10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Schneider", true);
        assertEquals("SNTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Sz_svuj11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Sz", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Sz_Alternate_lhIy12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Sz", true);
        assertEquals("X", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone1_jhAK0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("action", false);
        assertEquals("AKXN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone2_gBPB1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Thomas", false);
        assertEquals("TMS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone4_lTtq3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bach", false);
        assertEquals("PX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone6_PJtv5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Catherine", false);
        assertEquals("K0RN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone8_uQiH7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Honey", false);
        assertEquals("HN", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone11_KvAv10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Tchaikovsky", false);
        assertEquals("XKFSK", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone12_AlbS11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Pfister", false);
        assertEquals("FSTR", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone13_uGag12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Matthew", false);
        assertEquals("M0", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_WR_HCGk0() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("wrestle", false);
        assertEquals("RSTL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_alternate_WR_DJuV1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("wrestle", true);
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_WH_QTqN2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("whale", false);
        assertEquals("AL", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_W_Vowel_gbxe3() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("wombat", false);
        assertEquals("AMP", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_W_Consonant_brib4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("sword", false);
        assertEquals("SRT", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_W_End_ERIX5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("crow", false);
        assertEquals("KRF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_WICZ_InsH6() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("filipowicz", false);
        assertEquals("FLPTS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_alternate_WICZ_imRe7() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("filipowicz", true);
        assertEquals("FLPFX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_WITZ_iDLS8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("filipowitz", false);
        assertEquals("FLPTS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_alternate_WITZ_fwYv9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("filipowitz", true);
        assertEquals("FLPFX", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_EWSKI_meCK10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("andrewski", false);
        assertEquals("ANTRF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_SCH_HxSH11() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("schultz", false);
        assertEquals("XLS", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_primary_OW_JZje12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("snow", false);
        assertEquals("SNF", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_X_Wxsn12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Xerox", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_BB_IVnE1() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Bobby", false);
        assertEquals("P", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_C_GLKp2() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Cindy", false);
        assertEquals("S", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_FF_anXR4() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Coffee", false);
        assertEquals("F", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_G_jLeM5() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("George", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_KK_Ruua8() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Kikki", false);
        assertEquals("K", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_L_FjRO9() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Linda", false);
        assertEquals("L", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_M_LxxQ10() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Mandy", false);
        assertEquals("M", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphone_Z_wgKF12() throws Exception {
        DoubleMetaphone dm = new DoubleMetaphone();
        String result = dm.doubleMetaphone("Zhang", false);
        assertEquals("J", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsExactMatch_jYNX0() throws Exception {
        assertTrue(DoubleMetaphone.contains("hello", 0, 5, "hello"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsNoMatch_Pogy1() throws Exception {
        assertFalse(DoubleMetaphone.contains("hello", 0, 4, "world"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsPartialMatch_YsYR2() throws Exception {
        assertFalse(DoubleMetaphone.contains("hello", 0, 4, "hell", "help"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsOutOfBounds_JOQE3() throws Exception {
        assertFalse(DoubleMetaphone.contains("hello", 1, 5, "hello"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testContainsMultipleCriteria_Vgqe4() throws Exception {
        assertTrue(DoubleMetaphone.contains("hello", 0, 5, "world", "hello"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithSimpleWord_nBcY0_1() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("example");
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleMetaphoneWithSimpleWord_nBcY0_2() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.doubleMetaphone("example");
        assertTrue(result instanceof String);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithSimpleWord_cjSn0() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        String result = doubleMetaphone.encode("example");
        assertEquals("AKSMP", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetMaxCodeLen_QChF0() throws Exception {
        DoubleMetaphone doubleMetaphone = new DoubleMetaphone();
        doubleMetaphone.setMaxCodeLen(5);
        assertEquals(5, doubleMetaphone.getMaxCodeLen());
    }
}