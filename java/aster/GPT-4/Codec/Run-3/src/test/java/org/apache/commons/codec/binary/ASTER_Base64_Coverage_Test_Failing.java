/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Base64_Coverage_Test_Failing {
    private static final byte[] CHUNK_SEPARATOR = {'\r', '\n'};

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeBase64_DoesNotExceedMaxResultSize_NoExceptionThrown_uoVk1() {
        byte[] binaryData = {1, 2, 3}; // Example small binary data
        boolean isChunked = true;
        boolean urlSafe = true;
        int maxResultSize = 1000; // Sufficiently large max size to not trigger the exception
        byte[] result = Base64.encodeBase64(binaryData, isChunked, urlSafe, maxResultSize);
        assertArrayEquals(new byte[]{}, result); // Expected result needs proper encoding output, here just for example
    }
}