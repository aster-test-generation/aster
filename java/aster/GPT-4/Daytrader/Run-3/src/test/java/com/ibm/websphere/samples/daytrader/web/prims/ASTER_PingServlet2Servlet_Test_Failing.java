/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Servlet_Test_Failing {
  PingServlet2Servlet pingServlet2Servlet;
  HttpServletRequest httpServletRequest;
  HttpServletResponse httpServletResponse;
  private static int hitCount = 0;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost() throws ServletException, IOException {
    httpServletRequest = mock(HttpServletRequest.class);
    httpServletResponse = mock(HttpServletResponse.class);
    pingServlet2Servlet = new PingServlet2Servlet();
    // Setup
    doNothing().when(httpServletResponse).setStatus(anyInt());
    // Execute
    pingServlet2Servlet.doPost(httpServletRequest, httpServletResponse);
    // Verify
    verify(httpServletResponse, never()).setStatus(anyInt()); // Verify setStatus was never called
    verify(pingServlet2Servlet).doGet(httpServletRequest, httpServletResponse); // Verify doGet was called
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_WBWw0() throws ServletException, IOException {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    javax.servlet.ServletConfig servletConfig = mock(javax.servlet.ServletConfig.class);
    javax.servlet.ServletContext servletContext = mock(javax.servlet.ServletContext.class);
    javax.servlet.RequestDispatcher requestDispatcher = mock(javax.servlet.RequestDispatcher.class);
    when(servlet.getServletConfig()).thenReturn(servletConfig);
    when(servletConfig.getServletContext()).thenReturn(servletContext);
    when(servletContext.getRequestDispatcher("/servlet/PingServlet2ServletRcv")).thenReturn(requestDispatcher);
    servlet.doGet(request, response);
    verify(request).setAttribute(eq("ab"), any(PingBean.class));
    verify(requestDispatcher).forward(request, response);
  }
}