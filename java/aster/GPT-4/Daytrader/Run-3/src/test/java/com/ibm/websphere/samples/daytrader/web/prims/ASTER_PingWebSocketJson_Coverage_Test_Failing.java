/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.websocket.CloseReason;
import javax.websocket.Session;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_PingWebSocketJson_Coverage_Test_Failing {
  private PingWebSocketJson pingWebSocketJson;
  private Session currentSession;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPingCreatesJsonMessage_owms1() throws IOException {
    JsonMessage message = new JsonMessage();
    pingWebSocketJson.ping(message);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnError_withNullThrowable_CMEj1() {
    PingWebSocketJson pingWebSocketJson = new PingWebSocketJson();
    Throwable throwable = null;
    pingWebSocketJson.onError(throwable);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS)
  public void testOnClose_xrnJ0_ZCLT1() {
    Session mockSession = mock(Session.class);
    CloseReason mockCloseReason = new CloseReason(CloseReason.CloseCodes.NORMAL_CLOSURE, "Normal closure");
    pingWebSocketJson.onClose(mockSession, mockCloseReason);
  }
}