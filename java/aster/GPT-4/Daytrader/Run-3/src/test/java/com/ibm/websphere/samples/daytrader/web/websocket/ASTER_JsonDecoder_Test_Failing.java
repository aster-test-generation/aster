/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import javax.websocket.DecodeException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JsonDecoder_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeValidJson_duGa0_1() throws DecodeException {
    JsonDecoder decoder = new JsonDecoder();
    String jsonInput = "{\"key\":\"testKey\", \"value\":\"testValue\"}";
    JsonMessage result = decoder.decode(jsonInput);
    assertEquals("testKey", result.getKey());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeValidJson_duGa0_2() throws DecodeException {
    JsonDecoder decoder = new JsonDecoder();
    String jsonInput = "{\"key\":\"testKey\", \"value\":\"testValue\"}";
    JsonMessage result = decoder.decode(jsonInput);
    assertEquals("testValue", result.getValue());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecodeWithValidJson_tTHv0() {
    JsonDecoder decoder = new JsonDecoder();
    String validJson = "{\"name\":\"John\", \"age\":30}";
    assertTrue(decoder.willDecode(validJson));
  }
}