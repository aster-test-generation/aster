/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ActionMessage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecodingWithValidJson_QvfA0() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{\"action\":\"start\"}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecodingWithInvalidJson_pbiO1() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{action:\"start\"}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecodingWithEmptyJson_Lptg2() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = "{}";
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecodingWithNull_cpVk3() {
    ActionMessage actionMessage = new ActionMessage();
    String jsonText = null;
    actionMessage.doDecoding(jsonText);
    assertNull(actionMessage.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetDecodedAction_pPAi0() {
    ActionMessage actionMessage = new ActionMessage();
    String expected = null; // Assuming default null since no setter or initial value is shown
    assertEquals(expected, actionMessage.getDecodedAction());
  }
}