/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.beanval;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServletBeanValSimple2_Coverage_Test_Failing {
  private HttpServletResponse res;
  private ServletOutputStream out;
  private PingServletBeanValSimple2 pingServlet;
  private HttpServletRequest req;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_grst0() {
    PingServletBeanValSimple2 servlet = new PingServletBeanValSimple2();
    String result = servlet.getServletInfo();
    assertEquals("Basic dynamic HTML generation through a servlet", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetContentType_rvyJ1() throws ServletException, IOException {
    when(res.getOutputStream()).thenReturn(out);
    pingServlet.doGet(req, res);
    verify(res).setContentType("text/html");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSimpleBeanCreation_lglV2() throws ServletException, IOException {
    when(res.getOutputStream()).thenReturn(out);
    pingServlet.doGet(req, res);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetOutputStream_RNfx4() throws ServletException, IOException {
    when(res.getOutputStream()).thenReturn(out);
    pingServlet.doGet(req, res);
    verify(res).getOutputStream();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOutputHtmlContent_PjPU6() throws ServletException, IOException {
    when(res.getOutputStream()).thenReturn(out);
    pingServlet.doGet(req, res);
    verify(out).println(contains("<html><head><title>Ping Servlet Bean Validation Simple</title></head>"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCatchGeneralException_CWgK7() throws ServletException, IOException {
    doThrow(new IOException("Test Exception")).when(res).getOutputStream();
    pingServlet.doGet(req, res);
    verify(res).sendError(500, "Test Exception");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCompleteFlow_ZHSi11() throws ServletException, IOException {
    when(res.getOutputStream()).thenReturn(out);
    pingServlet.doGet(req, res);
    verify(res).setContentType("text/html");
    verify(out).println(contains("<html>"));
  }
}