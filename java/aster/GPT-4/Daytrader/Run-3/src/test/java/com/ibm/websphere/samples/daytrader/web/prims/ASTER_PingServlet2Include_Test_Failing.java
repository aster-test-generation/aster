/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Include_Test_Failing {
  PingServlet2Include pingServlet2Include;
  ServletConfig mockServletConfig;
  HttpServletRequest httpServletRequest;
  HttpServletResponse httpServletResponse;
  PingServlet2Include pingServlet;
  HttpServletRequest request;
  HttpServletResponse response;
  ServletConfig servletConfig;
  private static String initTime;
  private static int hitCount;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost() throws ServletException, IOException {
    httpServletRequest = mock(HttpServletRequest.class);
    httpServletResponse = mock(HttpServletResponse.class);
    pingServlet2Include = new PingServlet2Include();
    // Setup
    doNothing().when(httpServletResponse).flushBuffer();
    // Execute
    pingServlet2Include.doPost(httpServletRequest, httpServletResponse);
    // Verify
    verify(httpServletResponse, never()).flushBuffer(); // Since doPost just calls doGet and we don't know what doGet does, we can't assert much more here.
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_Pmjq0_1() throws ServletException {
    pingServlet2Include = new PingServlet2Include();
    mockServletConfig = mock(ServletConfig.class);
    pingServlet2Include.init(mockServletConfig);
    assertNotNull(initTime);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_Pmjq0_2() throws ServletException {
    pingServlet2Include = new PingServlet2Include();
    mockServletConfig = mock(ServletConfig.class);
    pingServlet2Include.init(mockServletConfig);
    assertEquals(0, hitCount);
  }
}