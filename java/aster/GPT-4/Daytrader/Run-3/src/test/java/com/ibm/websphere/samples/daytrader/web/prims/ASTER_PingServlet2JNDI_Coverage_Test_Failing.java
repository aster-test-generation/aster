/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServlet2JNDI_Coverage_Test_Failing {
  private HttpServletResponse res;
  private PingServlet2JNDI pingServlet;
  private ServletConfig mockConfig;
  private HttpServletRequest req;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_ynfv0() {
    PingServlet2JNDI pingServlet = new PingServlet2JNDI();
    String result = pingServlet.getServletInfo();
    assertEquals("Basic JNDI look up of a JDBC DataSource", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_jTLv0() throws javax.servlet.ServletException {
    pingServlet = new PingServlet2JNDI();
    mockConfig = mock(ServletConfig.class);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSuperInitCalled_Eeym1() throws ServletException {
    pingServlet.init(mockConfig);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLogErrorOnException_Bqbe10() throws IOException, ServletException {
    doThrow(new IOException("Test Exception")).when(res).getWriter();
    pingServlet.doGet(req, res);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCatchBlockExecution_gigJ11() throws IOException, ServletException {
    doThrow(new IOException("Test Exception")).when(res).getWriter();
    pingServlet.doGet(req, res);
    verify(res).sendError(eq(500), anyString());
  }
}