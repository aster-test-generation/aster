/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import java.sql.Connection;
import java.util.Collection;
import java.util.HashMap;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_KeySequenceDirect_Coverage_Test_Passing {
  private static HashMap<String, Collection<?>> keyMap = new HashMap<String, Collection<?>>();
  private KeySequenceDirect keysequencedirect;
  private Connection connection;

  @BeforeEach
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setup_GXTZ0() throws Exception {
    connection = mock(Connection.class);
    keysequencedirect = new KeySequenceDirect();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetNextID_EmptyKeyMap_ShouldThrowException_RoPf9() throws java.lang.Exception {
    String keyName = "exceptionKey";
    boolean inSession = false;
    boolean inGlobalTxn = false;
    assertThrows(Exception.class, () -> {
      KeySequenceDirect.getNextID(connection, keyName, inSession, inGlobalTxn);
    });
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetNextID_NullConnection_ShouldThrowException_jAHS10() throws java.lang.Exception {
    String keyName = "nullConnKey";
    boolean inSession = false;
    boolean inGlobalTxn = false;
    assertThrows(Exception.class, () -> {
      KeySequenceDirect.getNextID(null, keyName, inSession, inGlobalTxn);
    });
  }
}