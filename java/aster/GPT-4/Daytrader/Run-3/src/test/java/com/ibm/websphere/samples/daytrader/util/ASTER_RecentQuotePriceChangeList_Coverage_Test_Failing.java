/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_RecentQuotePriceChangeList_Coverage_Test_Failing {
  private RecentQuotePriceChangeList recentQuotePriceChangeList;
  private QuoteDataBean quoteData;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddSymbolNumberLessThanThreshold_AqYO2() {
    quoteData.setSymbol("AAPL01"); // symbolNumber will be 1
    boolean result = recentQuotePriceChangeList.add(quoteData);
    assertTrue(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddWithDifferentSymbolNumber_NGyT6() {
    quoteData.setSymbol("AAPL99"); // symbolNumber will be 99
    boolean result = recentQuotePriceChangeList.add(quoteData);
    assertFalse(result); // Assuming the method returns false if the condition fails
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddQuoteDataToList_Eygr3_MHxN0() {
    recentQuotePriceChangeList = new RecentQuotePriceChangeList(); // Initialize recentQuotePriceChangeList
    QuoteDataBean quoteData = new QuoteDataBean(); // Initialize quoteData
    quoteData.setSymbol("AAPL01"); // symbolNumber will be 1
    recentQuotePriceChangeList.add(quoteData);
    assertTrue(recentQuotePriceChangeList.recentList().contains(quoteData)); // Check if the list contains the added quoteData
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAddQuoteDataToList_Eygr3_MHxN0_fid2() {
    QuoteDataBean quoteData = new QuoteDataBean(); // Initialize quoteData
    quoteData.setSymbol("AAPL01"); // symbolNumber will be 1
    recentQuotePriceChangeList.add(quoteData);
    assertEquals(1, recentQuotePriceChangeList.recentList().size()); // Use recentList() to get size
  }
}