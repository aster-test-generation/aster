/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_PingJDBCWrite_Coverage_Test_Failing {
  private ServletConfig mockServletConfig;
  private PingJDBCWrite pingJDBCWrite;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_mjsg0() {
    PingJDBCWrite pingJDBCWrite = new PingJDBCWrite();
    String result = pingJDBCWrite.getServletInfo();
    assertEquals("Basic JDBC Write using a prepared statment makes use of TradeJDBC code.", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_nhCE0() throws javax.servlet.ServletException {
    pingJDBCWrite = new PingJDBCWrite();
    mockServletConfig = mock(ServletConfig.class);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSuperInitCalled_CTVm1() throws ServletException {
    pingJDBCWrite.init(mockServletConfig);
  }
}