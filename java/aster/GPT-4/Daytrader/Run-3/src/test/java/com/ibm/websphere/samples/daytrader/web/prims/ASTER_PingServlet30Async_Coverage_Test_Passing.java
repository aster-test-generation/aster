/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.AsyncContext;
import javax.servlet.ServletException;
import javax.servlet.ServletInputStream;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_PingServlet30Async_Coverage_Test_Passing {
  private PingServlet30Async servlet;
  private ServletOutputStream servletOutputStream;
  private HttpServletRequest request;
  private HttpServletResponse response;
  private AsyncContext asyncContext;
  private ServletInputStream servletInputStream;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetCompletesExecution_asEs1() throws ServletException, IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PingServlet30Async servlet = new PingServlet30Async();
    servlet.doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_hrwb0() throws IOException {
    request = mock(HttpServletRequest.class);
    response = mock(HttpServletResponse.class);
    asyncContext = mock(AsyncContext.class);
    servletInputStream = mock(ServletInputStream.class);
    servletOutputStream = mock(ServletOutputStream.class);
    servlet = new PingServlet30Async();
    when(request.startAsync()).thenReturn(asyncContext);
    when(request.getInputStream()).thenReturn(servletInputStream);
    when(response.getOutputStream()).thenReturn(servletOutputStream);
  }
}