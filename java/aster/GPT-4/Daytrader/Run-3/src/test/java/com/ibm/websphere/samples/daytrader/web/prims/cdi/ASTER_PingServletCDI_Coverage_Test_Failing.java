/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServletCDI_Coverage_Test_Failing {
  private PingServletCDI pingServletCDI;
  private ServletConfig mockServletConfig;
  private HttpServletResponse response;
  private PrintWriter writer;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWriter_kPXS1_rWZL0() throws IOException {
    PingServletCDI pingServletCDI = new PingServletCDI();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter writer = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(writer);
    pingServletCDI.doGet(request, response);
    verify(response).getWriter();
    verify(writer).write(contains("<html><head><title>Ping Servlet CDI</title></head>"));
    verify(writer).flush();
    verify(writer).close();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteHtmlHeader_vaql2_EKfZ0() throws IOException {
    PingServletCDI pingServletCDI = new PingServletCDI(); // Initialize the PingServletCDI instance
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter writer = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(writer);
    pingServletCDI.doGet(request, response);
    verify(writer).write("<html><head><title>Ping Servlet CDI</title></head>");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCloseWriter_aixJ6_IBXh0() throws IOException {
    PingServletCDI pingServletCDI = new PingServletCDI();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter writer = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(writer);
    pingServletCDI.doGet(request, response);
    verify(writer).close();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetWriter_kPXS1_rWZL0_fid1() throws IOException {
    PingServletCDI pingServletCDI = new PingServletCDI();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter writer = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(writer);
    pingServletCDI.doGet(request, response);
    verify(response).getWriter();
    verify(writer).write(contains("Ping Servlet CDI"));
    verify(writer).flush();
    verify(writer).close();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWriteHtmlHeader_vaql2_EKfZ0_fid1() throws IOException {
    PingServletCDI pingServletCDI = new PingServletCDI(); // Initialize the PingServletCDI instance
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter writer = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(writer);
    pingServletCDI.doGet(request, response);
    verify(writer).write("<html><head><title>Ping Servlet CDI</title></head></html>");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testCloseWriter_aixJ6_IBXh0_fid1() throws IOException {
    PingServletCDI pingServletCDI = new PingServletCDI();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PrintWriter writer = mock(PrintWriter.class);
    when(response.getWriter()).thenReturn(writer);
    pingServletCDI.doGet(request, response);
    verify(writer, times(1)).close();
    assertNotNull(writer);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_CallsSuperInit_VWRL1() throws ServletException {
    pingServletCDI.init(mockServletConfig);
  }
}