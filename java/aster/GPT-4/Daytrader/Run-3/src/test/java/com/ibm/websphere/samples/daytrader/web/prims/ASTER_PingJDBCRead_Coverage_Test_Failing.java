/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_PingJDBCRead_Coverage_Test_Failing {
  private PingJDBCRead pingJDBCRead;
  private HttpServletRequest mockReq;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostExecutionCompletes_tgSV1() throws Exception {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PingJDBCRead pingJDBCRead = new PingJDBCRead();
    pingJDBCRead.doPost(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_VIGm0() {
    PingJDBCRead pingJDBCRead = new PingJDBCRead();
    String expectedInfo = "Basic JDBC Read using a prepared statment, makes use of TradeJDBC class";
    assertEquals(expectedInfo, pingJDBCRead.getServletInfo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetLoggingError_UVIi16_jlfM0() throws Exception {
    HttpServletRequest mockReq = mock(HttpServletRequest.class);
    HttpServletResponse mockRes = mock(HttpServletResponse.class);
    when(mockRes.getWriter()).thenThrow(new IOException());
    try {
      new PingJDBCRead().doGet(mockReq, mockRes);
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_VIGm0_bAUN0_fid2() {
    try {
      PingJDBCRead pingJDBCRead = new PingJDBCRead();
      String expectedInfo = "Basic JDBC Read using a prepared statement, makes use of TradeJDBC class";
      assertEquals(expectedInfo, pingJDBCRead.getServletInfo());
    } catch (ExceptionInInitializerError e) {
      fail("Initialization of PingJDBCRead failed");
    }
  }
}