/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.ejb3;

import com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_MarketSummarySingleton_Coverage_Test_Passing {
  private QuoteDataBean mockQuoteDataBean() {
    return mock(QuoteDataBean.class);
  }

  private QuoteDataBean mockQuoteDataBeanWithPrice(int price) {
    QuoteDataBean quote = mock(QuoteDataBean.class);
    when(quote.getPrice()).thenReturn(new BigDecimal(price));
    return quote;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetMarketSummaryDataBeanWhenMarketSummaryDataBeanIsNull_MWbc1_Bnxl0() {
    MarketSummarySingleton marketSummarySingleton = new MarketSummarySingleton();
    MarketSummaryDataBean result = MarketSummaryDataBean.getRandomInstance();
    assertNotNull(result);
  }
}