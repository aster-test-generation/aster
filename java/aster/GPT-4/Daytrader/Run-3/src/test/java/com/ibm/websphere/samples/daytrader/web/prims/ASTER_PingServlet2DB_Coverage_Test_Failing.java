/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_PingServlet2DB_Coverage_Test_Failing {
  private PingServlet2DB pingServlet;
  private ServletConfig mockConfig;
  private HttpServletResponse mockResponse;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_rbCx0() {
    PingServlet2DB pingServlet = new PingServlet2DB();
    String result = pingServlet.getServletInfo();
    assertEquals("Basic JDBC Read using a prepared statment, makes use of TradeJDBC class", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void setUp_XKaO0() throws javax.servlet.ServletException {
    pingServlet = new PingServlet2DB();
    mockConfig = mock(ServletConfig.class);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitCallsSuperInit_Xluk1() throws ServletException {
    pingServlet.init(mockConfig);
  }
}