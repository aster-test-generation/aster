/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import javax.websocket.EncodeException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JsonEncoder_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEncodeWithValidJsonMessage_OnlF0() throws EncodeException {
    JsonEncoder encoder = new JsonEncoder();
    JsonMessage message = new JsonMessage();
    message.setKey("testKey");
    message.setValue("testValue");
    String result = encoder.encode(message);
    assertEquals("{\"key\":\"testKey\",\"value\":\"testValue\"}", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEncodeWithNullKey_VrFg1() throws EncodeException {
    JsonEncoder encoder = new JsonEncoder();
    JsonMessage message = new JsonMessage();
    message.setKey(null);
    message.setValue("testValue");
    String result = encoder.encode(message);
    assertEquals("{\"key\":null,\"value\":\"testValue\"}", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEncodeWithNullValue_WWLt2() throws EncodeException {
    JsonEncoder encoder = new JsonEncoder();
    JsonMessage message = new JsonMessage();
    message.setKey("testKey");
    message.setValue(null);
    String result = encoder.encode(message);
    assertEquals("{\"key\":\"testKey\",\"value\":null}", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEncodeWithBothNullKeyAndValue_OwsF3() throws EncodeException {
    JsonEncoder encoder = new JsonEncoder();
    JsonMessage message = new JsonMessage();
    message.setKey(null);
    message.setValue(null);
    String result = encoder.encode(message);
    assertEquals("{\"key\":null,\"value\":null}", result);
  }
}