/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import javax.websocket.CloseReason;
import javax.websocket.Session;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_MarketSummaryWebSocket_Coverage_Test_Failing {
  private MarketSummaryWebSocket marketSummaryWebSocket;
  private Session mockSession;
  private CloseReason mockCloseReason;
  private Set<Session> sessions;
  private ActionMessage actionMessage;
  private Session currentSession;

  @BeforeEach
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testMultipleSessions_JRIx8_mZqY0() {
    Session session1 = mock(Session.class);
    Session session2 = mock(Session.class);
    when(session1.isOpen()).thenReturn(true);
    when(session2.isOpen()).thenReturn(true);
    marketSummaryWebSocket.onOpen(session1, null);
    marketSummaryWebSocket.onOpen(session2, null);
    marketSummaryWebSocket.onMarketSummarytUpdate("event");
    verify(session1.getAsyncRemote()).sendText(anyString());
    verify(session2.getAsyncRemote()).sendText(anyString());
  }
}