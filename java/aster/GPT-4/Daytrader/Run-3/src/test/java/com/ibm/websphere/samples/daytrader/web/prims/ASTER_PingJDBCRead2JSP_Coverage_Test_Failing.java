/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.springframework.mock.web.MockServletConfig;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PingJDBCRead2JSP_Coverage_Test_Failing {
  private QuoteDataBean quoteData;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInitWithValidConfig_ZUHg0() throws ServletException {
    ServletConfig config = new MockServletConfig();
    PingJDBCRead2JSP pingJDBCRead2JSP = new PingJDBCRead2JSP();
    pingJDBCRead2JSP.init(config);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_cOcC0_eDDk0() {
    PingJDBCRead2JSP pingJDBCRead2JSP = new PingJDBCRead2JSP();
    String expectedInfo = "Basic JDBC Read using a prepared statement forwarded to a JSP, makes use of TradeJDBC class";
    assertEquals(expectedInfo, pingJDBCRead2JSP.getServletInfo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_cOcC0_eDDk0_fid3() {
    PingJDBCRead2JSP pingJDBCRead2JSP = new PingJDBCRead2JSP();
    String expectedInfo = "Basic JDBC Read using a prepared statment forwarded to a JSP, makes use of TradeJDBC class";
    assertEquals(expectedInfo, pingJDBCRead2JSP.getServletInfo());
  }
}