/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.ejb3;
import javax.enterprise.inject.Instance;
import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AsyncScheduledOrder_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCompleteOrderWithNullOrderID_xONc3_hwdJ0() {
    TradeServices mockTradeService = mock(TradeServices.class);
    Instance<TradeServices> instance = mock(Instance.class);
    when(instance.get()).thenReturn(mockTradeService);
    AsyncScheduledOrder order = new AsyncScheduledOrder(instance);
    order.run();
    try {
        verify(mockTradeService).completeOrder(eq(null), anyBoolean());
    } catch (Exception e) {
        fail("Exception should not be thrown");
    }
}
}