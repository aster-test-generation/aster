/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2TwoPhase_Test_Passing {
  @InjectMocks
  private PingServlet2TwoPhase pingServlet2TwoPhase;
  @Mock
  private ServletConfig mockServletConfig;
  HttpServletRequest httpServletRequest;
  @Mock
  private static int hitCount;
  HttpServletResponse httpServletResponse;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostCallsDoGet_TJVk0() throws ServletException, IOException {
    HttpServletRequest mockRequest = mock(HttpServletRequest.class);
    HttpServletResponse mockResponse = mock(HttpServletResponse.class);
    PingServlet2TwoPhase servlet = new PingServlet2TwoPhase();
    servlet.doPost(mockRequest, mockResponse);
    verify(mockRequest, atLeastOnce()).getMethod();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_RnSQ0() {
    PingServlet2TwoPhase servlet = new PingServlet2TwoPhase();
    String expected = "web primitive, tests Servlet to Session to Entity EJB and JMS -- 2-phase commit path";
    assertEquals(expected, servlet.getServletInfo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdoPost() throws Exception {
    httpServletRequest = mock(HttpServletRequest.class);
    httpServletResponse = mock(HttpServletResponse.class);
    pingServlet2TwoPhase = new PingServlet2TwoPhase();
    // Arrange
    // No specific arrangement needed as there are no parameters or complex interactions to mock
    // Act
    pingServlet2TwoPhase.doPost(httpServletRequest, httpServletResponse);
    // Assert
    // Verify that doGet is called once since doPost delegates to doGet
    verify(httpServletRequest, times(1)).setAttribute(anyString(), any());
    verify(httpServletResponse, never()).sendError(anyInt(), anyString());
  }
}