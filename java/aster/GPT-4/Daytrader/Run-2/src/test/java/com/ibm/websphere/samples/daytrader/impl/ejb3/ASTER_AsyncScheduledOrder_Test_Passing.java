/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.ejb3;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.Instance;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_AsyncScheduledOrder_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRun_CompletesOrderSuccessfully_fYsA0_WdIl0() {
    TradeServices mockTradeService = mock(TradeServices.class);
    Instance<TradeServices> instance = mock(Instance.class);
    when(instance.get()).thenReturn(mockTradeService);
    AsyncScheduledOrder asyncScheduledOrder = new AsyncScheduledOrder(instance);
    try {
      doNothing().when(mockTradeService).completeOrder(anyInt(), anyBoolean());
      asyncScheduledOrder.run();
      verify(mockTradeService).completeOrder(anyInt(), anyBoolean());
    } catch (Exception e) {
      fail("Unexpected exception: " + e.getMessage());
    }
  }
}