/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.ejb3;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AsyncScheduledOrder_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProperties_yGoQ0_1() {
    AsyncScheduledOrder order = new AsyncScheduledOrder(null); // Assuming null can be passed for Instance<TradeServices>
    order.setProperties(123, true);
    assertEquals(123, order.orderID);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProperties_yGoQ0_2() {
    AsyncScheduledOrder order = new AsyncScheduledOrder(null); // Assuming null can be passed for Instance<TradeServices>
    order.setProperties(123, true);
    assertTrue(order.twoPhase);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProperties_yGoQ0() {
    AsyncScheduledOrder order = new AsyncScheduledOrder(null); // Assuming null can be passed for Instance<TradeServices>
    order.setProperties(123, true);
    assertEquals(123, order.orderID);
    assertTrue(order.twoPhase);
  }
}