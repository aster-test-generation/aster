/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpUpgradeHandler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingUpgradeServlet_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetCallsDoPost_QBZQ0() throws ServletException, IOException {
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        PingUpgradeServlet servlet = new PingUpgradeServlet();
        PingUpgradeServlet spyServlet = spy(servlet);
        spyServlet.doGet(request, response);
        verify(spyServlet).doPost(request, response);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGetCompletesExecution_zeUP1() throws ServletException, IOException {
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        PingUpgradeServlet servlet = new PingUpgradeServlet();
        servlet.doGet(request, response);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostWithUpgradeEcho_mjHY0_UAty0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getHeader("Upgrade")).thenReturn("echo");
    PingUpgradeServlet servlet = new PingUpgradeServlet();
    servlet.doPost(req, res);
    verify(res).setStatus(101);
    verify(res).setHeader("Upgrade", "echo");
    verify(res).setHeader("Connection", "Upgrade");
    verify(req).upgrade(HttpUpgradeHandler.class);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostWithUpgradeEchoExtraSpaces_PVvK6_VaGD0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getHeader("Upgrade")).thenReturn(" echo ");
    PingUpgradeServlet servlet = new PingUpgradeServlet();
    servlet.doPost(req, res);
    verify(res, never()).setStatus(101);
    verify(res, never()).setHeader("Upgrade", "echo");
    verify(res, never()).setHeader("Connection", "Upgrade");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostWithUpgradeEchoSubstring_VJgb8_QgKH0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getHeader("Upgrade")).thenReturn("not-echo");
    PingUpgradeServlet servlet = new PingUpgradeServlet();
    servlet.doPost(req, res);
    verify(res, never()).setStatus(101);
    verify(res, never()).setHeader("Upgrade", "echo");
    verify(res, never()).setHeader("Connection", "Upgrade");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostWithUpgradeEchoConcatenated_ioOa9_urCh0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getHeader("Upgrade")).thenReturn("echo,websocket");
    PingUpgradeServlet servlet = new PingUpgradeServlet();
    servlet.doPost(req, res);
    verify(res, never()).setStatus(101);
    verify(res, never()).setHeader("Upgrade", "echo");
    verify(res, never()).setHeader("Connection", "Upgrade");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostWithUpgradeEchoExtraSpaces_PVvK6_VaGD0_fid2() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getHeader("Upgrade")).thenReturn(" echo ");
    PingUpgradeServlet servlet = new PingUpgradeServlet();
    servlet.doPost(req, res);
    verify(res, never()).setStatus(HttpServletResponse.SC_SWITCHING_PROTOCOLS);
    verify(res, never()).setHeader("Upgrade", "echo");
    verify(res, never()).setHeader("Connection", "Upgrade");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDoPostWithUpgradeEchoConcatenated_ioOa9_urCh0_fid2() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    when(req.getHeader("Upgrade")).thenReturn("echo,websocket");
    PingUpgradeServlet servlet = new PingUpgradeServlet();
    servlet.doPost(req, res);
    verify(res, never()).setStatus(HttpServletResponse.SC_SWITCHING_PROTOCOLS);
    verify(res, never()).setHeader("Upgrade", "echo");
    verify(res, never()).setHeader("Connection", "Upgrade");
}
}