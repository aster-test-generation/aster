/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Include_Test_Passing {
  @Mock
  private ServletConfig mockServletConfig;
  @InjectMocks
  private PingServlet2Include pingServlet2Include;
  HttpServletRequest httpServletRequest;
  HttpServletResponse httpServletResponse;
  @Mock
  private HttpServletRequest request;
  @Mock
  private HttpServletResponse response;
  @Mock
  private ServletConfig servletConfig;
  @Mock
  private static int hitCount;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost() throws ServletException, IOException {
    httpServletRequest = mock(HttpServletRequest.class);
    httpServletResponse = mock(HttpServletResponse.class);
    pingServlet2Include = new PingServlet2Include();
    // Setup
    doNothing().when(httpServletResponse).flushBuffer();
    // Execute
    pingServlet2Include.doPost(httpServletRequest, httpServletResponse);
    // Verify
    verify(httpServletResponse, never()).flushBuffer(); // Verify flushBuffer was never called
    verify(httpServletRequest, atLeastOnce()).getParameter(anyString()); // Verify getParameter was called at least once
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostCallsDoGet_fIIJ0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    PingServlet2Include servlet = new PingServlet2Include();
    PingServlet2Include spyServlet = spy(servlet);
    doNothing().when(spyServlet).doGet(any(HttpServletRequest.class), any(HttpServletResponse.class));
    spyServlet.doPost(req, res);
    verify(spyServlet).doGet(req, res);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_aBkW0() throws ServletException, IOException {
    HttpServletRequest httpServletRequest = mock(HttpServletRequest.class);
    HttpServletResponse httpServletResponse = mock(HttpServletResponse.class);
    PingServlet2Include pingServlet2Include = new PingServlet2Include();
    doNothing().when(httpServletResponse).setContentType(anyString());
    pingServlet2Include.doGet(httpServletRequest, httpServletResponse);
    verify(httpServletResponse, never()).sendError(anyInt(), anyString()); // Verify sendError was never called
  }
}