/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AsyncOrder_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testRunMethodHandlesExceptionsProperly_yYRo0() {
    AsyncOrder asyncOrder = new AsyncOrder();
    try {
      asyncOrder.run();
      assertTrue(true); // Assuming the run method completes without throwing an exception
    } catch (Exception e) {
      fail("Should not have thrown any exception");
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProperties_hpXY0_1() {
    AsyncOrder asyncOrder = new AsyncOrder();
    asyncOrder.setProperties(123, true);
    assertEquals(123, asyncOrder.orderID);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetProperties_hpXY0_2() {
    AsyncOrder asyncOrder = new AsyncOrder();
    asyncOrder.setProperties(123, true);
    assertTrue(asyncOrder.twoPhase);
  }
}