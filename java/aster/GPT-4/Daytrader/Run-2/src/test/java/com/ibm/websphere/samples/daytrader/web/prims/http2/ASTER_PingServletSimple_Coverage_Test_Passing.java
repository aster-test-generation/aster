/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.http2;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PingServletSimple_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitCallsSuperInit_xvGM0() throws ServletException {
        ServletConfig config = mock(ServletConfig.class);
        PingServletSimple servlet = spy(new PingServletSimple());
        servlet.init(config);
        verify(servlet).init(config);
    }

@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitCompletesWithoutException_KowT3() throws ServletException {
        ServletConfig config = mock(ServletConfig.class);
        PingServletSimple servlet = new PingServletSimple();
        servlet.init(config);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_RespWriter_cvzJ0() throws ServletException, IOException {
        HttpServletRequest mockReq = mock(HttpServletRequest.class);
        HttpServletResponse mockResp = mock(HttpServletResponse.class);
        PrintWriter mockWriter = mock(PrintWriter.class);
        when(mockResp.getWriter()).thenReturn(mockWriter);
        PingServletSimple servlet = new PingServletSimple();
        servlet.doGet(mockReq, mockResp);
        verify(mockResp).getWriter();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_HitCountIncrement_UZmI1() throws ServletException, IOException {
        HttpServletRequest mockReq = mock(HttpServletRequest.class);
        HttpServletResponse mockResp = mock(HttpServletResponse.class);
        PrintWriter mockWriter = mock(PrintWriter.class);
        when(mockResp.getWriter()).thenReturn(mockWriter);
        PingServletSimple servlet = new PingServletSimple();
        servlet.doGet(mockReq, mockResp); // first call
        servlet.doGet(mockReq, mockResp); // second call
        servlet.doGet(mockReq, mockResp);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_RespWriterWriteCalled_gkGV2() throws ServletException, IOException {
        HttpServletRequest mockReq = mock(HttpServletRequest.class);
        HttpServletResponse mockResp = mock(HttpServletResponse.class);
        PrintWriter mockWriter = mock(PrintWriter.class);
        when(mockResp.getWriter()).thenReturn(mockWriter);
        PingServletSimple servlet = new PingServletSimple();
        servlet.doGet(mockReq, mockResp);
        verify(mockWriter).write(anyString());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_RespWriterWriteContent_TeDa3() throws ServletException, IOException {
        HttpServletRequest mockReq = mock(HttpServletRequest.class);
        HttpServletResponse mockResp = mock(HttpServletResponse.class);
        PrintWriter mockWriter = mock(PrintWriter.class);
        when(mockResp.getWriter()).thenReturn(mockWriter);
        PingServletSimple servlet = new PingServletSimple();
        servlet.doGet(mockReq, mockResp);
        verify(mockWriter).write(contains("Ping Servlet HTTP/2"));
        verify(mockWriter).write(contains("<B>Hit Count:"));
    }
}