/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2Entity2JSP_Test_Failing {
  PingServlet2Session2Entity2JSP pingServlet2Session2Entity2JSP;
  ServletConfig servletConfig;
  PingServlet2Session2Entity2JSP pingservlet2session2entity2jsp;
  ServletConfig servletconfig;
  HttpServletRequest httpservletrequest;
  ServletContext servletcontext;
  HttpServletResponse httpservletresponse;
  HttpServlet httpservlet;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit() throws Exception {
    servletConfig = mock(ServletConfig.class);
    pingServlet2Session2Entity2JSP = new PingServlet2Session2Entity2JSP();
    pingServlet2Session2Entity2JSP.init(servletConfig);
    verify(servletConfig, never()).getServletContext();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_oKGb0() throws ServletException {
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    ServletConfig configMock = mock(ServletConfig.class);
    servlet.init(configMock);
    verify(configMock, atLeastOnce()).getServletContext();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_WyVa0() throws ServletException, IOException {
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doPost(request, response);
    verify(request, times(1)).getMethod();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_zahq0() {
    PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
    String expected = "web primitive, tests Servlet to Session to Entity EJB to JSP path";
    assertEquals(expected, servlet.getServletInfo());
  }
}