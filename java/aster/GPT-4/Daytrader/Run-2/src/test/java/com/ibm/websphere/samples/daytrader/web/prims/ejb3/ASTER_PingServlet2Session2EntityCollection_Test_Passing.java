/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2EntityCollection_Test_Passing {
  @Mock
  private ServletConfig servletConfig;
  @InjectMocks
  private PingServlet2Session2EntityCollection pingServlet;
  HttpServletRequest request;
  HttpServletResponse response;
  @Mock
  private TradeServices tradeSLSBLocal;
  @Mock
  private static String initTime;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost() throws ServletException, IOException {
    request = mock(HttpServletRequest.class);
    response = mock(HttpServletResponse.class);
    pingServlet = new PingServlet2Session2EntityCollection();
    // Setup
    doNothing().when(response).sendRedirect(anyString());
    // Execute
    pingServlet.doPost(request, response);
    // Verify
    verify(request, times(1)).getParameter(anyString()); // Assuming doGet uses getParameter
    verify(response, times(1)).sendRedirect(anyString()); // Assuming doGet redirects
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostCallsDoGet_DsNs0() throws ServletException, IOException {
    HttpServletRequest mockRequest = mock(HttpServletRequest.class);
    HttpServletResponse mockResponse = mock(HttpServletResponse.class);
    PingServlet2Session2EntityCollection servlet = new PingServlet2Session2EntityCollection();
    servlet.doPost(mockRequest, mockResponse);
    verify(servlet).doGet(mockRequest, mockResponse);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_RtPV0() {
    PingServlet2Session2EntityCollection servlet = new PingServlet2Session2EntityCollection();
    String result = servlet.getServletInfo();
    assertEquals("web primitive, tests Servlet to Session to Entity returning a collection of Entity EJBs", result);
  }
}