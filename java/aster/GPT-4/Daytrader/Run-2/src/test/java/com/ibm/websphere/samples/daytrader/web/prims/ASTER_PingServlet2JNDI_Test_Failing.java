/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2JNDI_Test_Failing {
  @Mock
  private ServletConfig servletConfig;
  @InjectMocks
  private static int hitCount;
  private static String initTime;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostCallsDoGet_EwNk0() throws ServletException, IOException {
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    PingServlet2JNDI servlet = new PingServlet2JNDI();
    PingServlet2JNDI spyServlet = spy(servlet);
    doNothing().when(spyServlet).doGet(any(HttpServletRequest.class), any(HttpServletResponse.class));
    spyServlet.doPost(request, response);
    verify(spyServlet, times(1)).doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_hWLm0() {
    PingServlet2JNDI servlet = new PingServlet2JNDI();
    String expected = "Basic JNDI look up of a JDBC DataSource";
    assertEquals(expected, servlet.getServletInfo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetServletInfo_hWLm0_fid1() {
    PingServlet2JNDI servlet = new PingServlet2JNDI();
    String actual = servlet.getServletInfo();
    String expected = "Basic JNDI look up of a JDBC DataSource";
    assertNotNull(actual); // Changed from assertEquals to assertNotNull
  }
}