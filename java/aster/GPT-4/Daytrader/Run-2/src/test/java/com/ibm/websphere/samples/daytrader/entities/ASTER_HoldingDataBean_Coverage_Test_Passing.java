/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;
import java.math.BigDecimal;
import java.util.Date;
import static org.junit.jupiter.api.Assertions.assertFalse;
import java.util.Date;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_HoldingDataBean_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithDifferentHoldingIDs_nALj0() {
        Integer holdingID1 = 101;
        Integer holdingID2 = 102;
        double quantity = 150.0;
        BigDecimal purchasePrice = new BigDecimal("320.50");
        Date purchaseDate = new Date();
        String quoteID = "AAPL";
        HoldingDataBean holding1 = new HoldingDataBean(holdingID1, quantity, purchasePrice, purchaseDate, quoteID);
        HoldingDataBean holding2 = new HoldingDataBean(holdingID2, quantity, purchasePrice, purchaseDate, quoteID);
        assertFalse(holding1.equals(holding2), "HoldingDataBeans with different holdingIDs should not be equal");
    }
}