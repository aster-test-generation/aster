/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingJDBCRead2JSP_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_opDF0_zAjE0_fid1() throws ServletException {
    try {
      PingJDBCRead2JSP servlet = new PingJDBCRead2JSP();
      ServletConfig mockConfig = org.mockito.Mockito.mock(ServletConfig.class);
      servlet.init(mockConfig);
      Assertions.fail("Expected NoClassDefFoundError was not thrown.");
    } catch (NoClassDefFoundError e) {
      Assertions.assertTrue(e.getMessage().contains("Could not initialize class com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP"));
    }
  }
}