/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpUpgradeHandler;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingUpgradeServlet_Test_Failing {
  PingUpgradeServlet pingUpgradeServlet;
  HttpServletRequest httpServletRequest;
  HttpServletResponse httpServletResponse;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet() throws Exception {
    httpServletRequest = mock(HttpServletRequest.class);
    httpServletResponse = mock(HttpServletResponse.class);
    pingUpgradeServlet = new PingUpgradeServlet();
    // Arrange
    doNothing().when(httpServletResponse).sendError(anyInt(), anyString());
    // Act
    pingUpgradeServlet.doGet(httpServletRequest, httpServletResponse);
    // Assert
    verify(httpServletResponse, never()).sendError(anyInt(), anyString());
    verify(pingUpgradeServlet).doPost(httpServletRequest, httpServletResponse);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetCallsDoPost_pnWs0() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    PingUpgradeServlet servlet = new PingUpgradeServlet();
    servlet.doGet(req, res);
    verify(res).setStatus(HttpServletResponse.SC_OK);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithUpgradeHeader_GvjE0() throws Exception {
    HttpServletRequest httpServletRequest = mock(HttpServletRequest.class);
    HttpServletResponse httpServletResponse = mock(HttpServletResponse.class);
    PingUpgradeServlet pingUpgradeServlet = new PingUpgradeServlet();
    when(httpServletRequest.getHeader("Upgrade")).thenReturn("echo");
    ServletOutputStream servletOutputStream = mock(ServletOutputStream.class);
    when(httpServletResponse.getOutputStream()).thenReturn(servletOutputStream);
    pingUpgradeServlet.doPost(httpServletRequest, httpServletResponse);
    verify(httpServletResponse).setStatus(101);
    verify(httpServletResponse).setHeader("Upgrade", "echo");
    verify(httpServletResponse).setHeader("Connection", "Upgrade");
    verify(httpServletRequest).upgrade(HttpUpgradeHandler.class);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGetCallsDoPost_pnWs0_fid2() throws ServletException, IOException {
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    PingUpgradeServlet servlet = new PingUpgradeServlet();
    servlet.doGet(req, res);
    verify(res, times(1)).setStatus(HttpServletResponse.SC_OK);
  }
}