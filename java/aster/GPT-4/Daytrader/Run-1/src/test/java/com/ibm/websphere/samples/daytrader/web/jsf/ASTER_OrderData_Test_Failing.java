/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.math.BigDecimal;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_OrderData_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTotal_GciX0() {
    OrderData order = new OrderData(1, "Completed", new Date(), new Date(), new BigDecimal("100.00"), "Buy", 50.0, "AAPL", new BigDecimal("7500.00"));
    BigDecimal expected = new BigDecimal("7500.00"); // Assuming total should match the price set in constructor
    assertEquals(expected, order.getTotal());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTotal_GciX0_fid1() {
    OrderData order = new OrderData(1, "Completed", new Date(), new Date(), new BigDecimal("100.00"), "Buy", 50.0, "AAPL", new BigDecimal("150.00"));
    BigDecimal expected = new BigDecimal("150.00"); // Assuming total should match the price set in constructor
    assertEquals(expected, order.getTotal());
  }
}