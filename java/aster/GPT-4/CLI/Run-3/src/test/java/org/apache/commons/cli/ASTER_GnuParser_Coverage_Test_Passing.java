/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_GnuParser_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFlattenWithEqualSignOption_lKgf0() {
        GnuParser parser = new GnuParser();
        Options options = new Options();
        options.addOption("output", true, "Output file");
        String[] arguments = {"--output=file.txt"};
        String[] expected = {"--output", "file.txt"};
        String[] result = parser.flatten(options, arguments, false);
        assertArrayEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFlattenWithShortOptionConcatenatedValue_HYrv1() {
        GnuParser parser = new GnuParser();
        Options options = new Options();
        options.addOption("D", true, "Define properties");
        String[] arguments = {"-Dkey=value"};
        String[] expected = {"-D", "key=value"};
        String[] result = parser.flatten(options, arguments, false);
        assertArrayEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFlattenWithShortOption_AImc2() {
        GnuParser parser = new GnuParser();
        Options options = new Options();
        options.addOption("D", false, "Debug mode");
        String[] arguments = {"-D"};
        String[] expected = {"-D"};
        String[] result = parser.flatten(options, arguments, false);
        assertArrayEquals(expected, result);
    }
}