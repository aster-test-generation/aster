/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;


import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionGroup_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_NullOption_Bgee0_VsRT0_fid1() {
        OptionGroup group = new OptionGroup();
        try {
            group.setSelected(null);
        } catch (AlreadySelectedException e) {
            fail("No exception should be thrown when setting null");
        }
        assertNull("Selected should be null when set to null", group.getSelected());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_FirstTimeSelection_zveW1_PaYT0_fid1() {
        OptionGroup group = new OptionGroup();
        Option option = new Option("a", "optionA", false, "Option A");
        try {
            group.setSelected(option);
        } catch (AlreadySelectedException e) {
            fail("Unexpected AlreadySelectedException");
        }
        assertEquals("Selected should be 'optionA'", "optionA", group.getSelected());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetSelected_SameOptionSelectedTwice_EKyD3_GEee0_fid1() {
        OptionGroup group = new OptionGroup();
        Option option = new Option("a", "optionA", false, "Option A");
        try {
            group.setSelected(option);
            group.setSelected(option);
        } catch (AlreadySelectedException e) {
            fail("Should not throw an exception when the same option is selected twice");
        }
        assertEquals("Selected should remain 'optionA' when the same option is selected twice", "optionA", group.getSelected());
    }
}