/**
 * Generated by Aster
 */
package org.apache.commons.cli;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Options_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddOption_RequiredOptionAlreadyExists_yMQL0_1() {
        Options options = new Options();
        Option opt1 = new Option("a", "alpha", true, "First option");
        Option opt2 = new Option("a", "alpha", true, "Second option");
        opt1.setRequired(true);
        options.addOption(opt1);
        opt2.setRequired(true);
        options.addOption(opt2);
        assertEquals(1, options.getRequiredOptions().size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddOption_RequiredOptionAlreadyExists_yMQL0_2() {
        Options options = new Options();
        Option opt1 = new Option("a", "alpha", true, "First option");
        Option opt2 = new Option("a", "alpha", true, "Second option");
        opt1.setRequired(true);
        options.addOption(opt1);
        opt2.setRequired(true);
        options.addOption(opt2);
        assertTrue(options.getRequiredOptions().contains("a"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddOption_RequiredOptionDoesNotExist_UyUY1_1() {
        Options options = new Options();
        Option opt = new Option("b", "beta", true, "Option description");
        opt.setRequired(true);
        options.addOption(opt);
        assertEquals(1, options.getRequiredOptions().size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddOption_RequiredOptionDoesNotExist_UyUY1_2() {
        Options options = new Options();
        Option opt = new Option("b", "beta", true, "Option description");
        opt.setRequired(true);
        options.addOption(opt);
        assertTrue(options.getRequiredOptions().contains("b"));}
}