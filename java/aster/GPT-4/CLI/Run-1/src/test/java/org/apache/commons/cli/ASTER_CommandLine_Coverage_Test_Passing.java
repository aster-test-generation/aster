/**
 * Generated by Aster
 */
package org.apache.commons.cli;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CommandLine_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddArgWithNonNullArgument_lRRn0() {
        CommandLine commandLine = new CommandLine();
        commandLine.addArg("testArgument");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetParsedOptionValueWithNonDeprecatedOption_QnBQ2_yrvT0() throws ParseException {
    CommandLine commandLine = new CommandLine();
    Option mockOption = mock(Option.class);
    when(mockOption.getOpt()).thenReturn("opt");
    when(mockOption.getLongOpt()).thenReturn("longOpt");
    when(mockOption.isDeprecated()).thenReturn(false);
    CommandLine spyCommandLine = spy(commandLine);
    when(spyCommandLine.getOptionValue(mockOption)).thenReturn(null);
    spyCommandLine.getParsedOptionValue("opt", () -> null);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetParsedOptionValueWithDeprecatedOption_oDov1_BDOI0() throws ParseException {
    CommandLine commandLine = new CommandLine();
    Option mockOption = mock(Option.class);
    when(mockOption.getOpt()).thenReturn("opt");
    when(mockOption.getLongOpt()).thenReturn("longOpt");
    when(mockOption.isDeprecated()).thenReturn(true);
    commandLine.addOption(mockOption); // Correct method to add options
    Object result = commandLine.getParsedOptionValue("opt", () -> null);
    assertNotNull(result);
    verify(mockOption, times(1)).isDeprecated();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetParsedOptionValueWithDeprecatedOptionAndNullHandler_EdyQ1_QTaG0() throws ParseException {
    CommandLine commandLine = new CommandLine();
    Option mockOption = mock(Option.class);
    when(mockOption.getOpt()).thenReturn("opt");
    when(mockOption.getLongOpt()).thenReturn("longOpt");
    when(mockOption.isDeprecated()).thenReturn(true);
    CommandLine spyCommandLine = spy(commandLine);
    doReturn(new String[]{"value"}).when(spyCommandLine).getOptionValues(mockOption);
    assertEquals("value", spyCommandLine.getOptionValue(mockOption));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetParsedOptionValueWithNonNullOption_Ndku0_llIz0() throws ParseException {
    CommandLine commandLine = new CommandLine();
    Option mockOption = mock(Option.class);
    when(mockOption.getOpt()).thenReturn("opt");
    when(mockOption.getLongOpt()).thenReturn("longOpt");
    when(mockOption.isDeprecated()).thenReturn(false);
    CommandLine spyCommandLine = spy(commandLine);
    doReturn(new String[]{"value"}).when(spyCommandLine).getOptionValues(mockOption);
    String result = spyCommandLine.getOptionValue(mockOption);
    assertNotNull(result);
}
}