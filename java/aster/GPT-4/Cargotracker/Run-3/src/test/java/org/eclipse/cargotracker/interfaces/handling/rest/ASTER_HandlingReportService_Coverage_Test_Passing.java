/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.rest;

import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_HandlingReportService_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testSubmitReportWithAllNullValues_gGtz6() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = mock(HandlingReport.class);
    when(report.getCompletionTime()).thenReturn(null);
    when(report.getVoyageNumber()).thenReturn(null);
    when(report.getEventType()).thenReturn(null);
    when(report.getUnLocode()).thenReturn(null);
    when(report.getTrackingId()).thenReturn(null);
    try {
      service.submitReport(report);
    } catch (NullPointerException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  void testSubmitReportWithInvalidEventType_vQAf2_fid1() {
    HandlingReportService service = new HandlingReportService();
    HandlingReport report = mock(HandlingReport.class);
    when(report.getCompletionTime()).thenReturn(LocalDateTime.of(2023, 10, 10, 12, 0).toString());
    when(report.getVoyageNumber()).thenReturn("V123");
    when(report.getEventType()).thenReturn("INVALID_TYPE");
    when(report.getUnLocode()).thenReturn("USNYC");
    when(report.getTrackingId()).thenReturn("ABC123");
    try {
      service.submitReport(report);
      fail("Expected an IllegalArgumentException to be thrown");
    } catch (IllegalArgumentException e) {
      assertEquals("Invalid event type", e.getMessage());
    }
  }
}