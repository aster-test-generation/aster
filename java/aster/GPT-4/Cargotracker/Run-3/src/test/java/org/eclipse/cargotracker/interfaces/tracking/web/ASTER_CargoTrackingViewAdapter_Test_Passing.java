/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.tracking.web;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.cargo.RouteSpecification;
import org.eclipse.cargotracker.domain.model.cargo.TrackingId;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoTrackingViewAdapter_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_cQFS0() throws Exception {
    TrackingId trackingId = new TrackingId("ABC123");
    RouteSpecification routeSpecification = new RouteSpecification();
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    String expected = "ABC123";
    String actual = adapter.getTrackingId();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetNextExpectedActivity_NoActivity_EXOn0() throws Exception {
    Cargo cargo = new Cargo();
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    String result = adapter.getNextExpectedActivity();
    assertEquals("", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetStatusCode_NotRouted_YEvF0() throws Exception {
    Cargo cargo = new Cargo(new TrackingId("123"), new RouteSpecification());
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    assertEquals("NOT_ROUTED", adapter.getStatusCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEtaWhenEtaIsNull_VnoF0() throws Exception {
    Cargo cargo = new Cargo();
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    String result = adapter.getEta();
    assertEquals("?", result);
  }
}