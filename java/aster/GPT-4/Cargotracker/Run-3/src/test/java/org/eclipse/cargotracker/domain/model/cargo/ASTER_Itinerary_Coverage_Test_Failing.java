/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Itinerary_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testIsExpectedWithEmptyLegs_Dwuf0() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    HandlingEvent event = new HandlingEvent();
    assertTrue(itinerary.isExpected(event));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testIsExpectedWithUnhandledEventType_XMmp8() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    HandlingEvent event = new HandlingEvent(null, null, null, null, null, null);
    assertThrows(RuntimeException.class, () -> itinerary.isExpected(event));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLastLegWhenLegsIsEmpty_tdvD0() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    assertNull(itinerary.getLastLeg(), "Expected getLastLeg to return null when legs list is empty");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testIsExpectedWithCustomsType_KIpS7_HARW0() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    HandlingEvent event = new HandlingEvent(null, null, null, HandlingEvent.Type.CUSTOMS, null, null);
    assertTrue(itinerary.isExpected(event));
  }
}