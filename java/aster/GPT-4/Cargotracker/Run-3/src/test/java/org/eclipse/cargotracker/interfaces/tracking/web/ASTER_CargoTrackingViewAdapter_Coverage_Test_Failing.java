/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.tracking.web;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.cargo.Delivery;
import org.eclipse.cargotracker.domain.model.cargo.HandlingActivity;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_CargoTrackingViewAdapter_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetNextExpectedActivity_NullActivity_bUVc0() {
    Cargo cargo = mock(Cargo.class);
    Delivery delivery = mock(Delivery.class);
    when(cargo.getDelivery()).thenReturn(delivery);
    when(delivery.getNextExpectedActivity()).thenReturn(null);
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, null);
    String result = adapter.getNextExpectedActivity();
    assertEquals("", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetNextExpectedActivity_EmptyActivity_HQop1() {
    Cargo cargo = mock(Cargo.class);
    Delivery delivery = mock(Delivery.class);
    HandlingActivity activity = mock(HandlingActivity.class);
    when(cargo.getDelivery()).thenReturn(delivery);
    when(delivery.getNextExpectedActivity()).thenReturn(activity);
    when(activity.isEmpty()).thenReturn(true);
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, null);
    String result = adapter.getNextExpectedActivity();
    assertEquals("", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEta_CargoOrDeliveryIsNull_ReturnsQuestionMark_IseK2() {
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(null, new ArrayList<>());
    String result = adapter.getEta();
    assertEquals("?", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetEta_DeliveryMethodThrowsException_ReturnsQuestionMark_bdPP3() {
    Cargo cargo = mock(Cargo.class);
    when(cargo.getDelivery()).thenThrow(new RuntimeException("Unexpected error"));
    CargoTrackingViewAdapter adapter = new CargoTrackingViewAdapter(cargo, new ArrayList<>());
    String result = adapter.getEta();
    assertEquals("?", result);
  }
}