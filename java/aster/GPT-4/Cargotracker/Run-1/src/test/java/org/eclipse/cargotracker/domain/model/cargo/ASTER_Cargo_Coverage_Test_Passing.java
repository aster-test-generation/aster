/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Cargo_Coverage_Test_Passing {
  private Cargo cargo;
  private Cargo sameCargo;
  private Cargo differentCargo;
  private RouteSpecification routeSpecification;
  private TrackingId trackingId;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignToRouteWithValidItinerary_roAV1() {
    Cargo cargo = new Cargo();
    Itinerary itinerary = new Itinerary();
    cargo.assignToRoute(itinerary);
    assertEquals(itinerary, cargo.getItinerary());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_NullObject_ReturnsFalse_JOMZ2() throws Exception {
    assertFalse(cargo.equals(null));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_DifferentClass_ReturnsFalse_TpQN3() throws Exception {
    assertFalse(cargo.equals(new Object()));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_DifferentCargo_ReturnsFalse_xZqC4() throws Exception {
    assertFalse(cargo.equals(differentCargo));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_SameIdentityAs_ReturnsTrue_CNDG5() throws Exception {
    Cargo anotherCargo = new Cargo(trackingId, routeSpecification);
    assertTrue(cargo.equals(anotherCargo));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS)
  public void testAssignToRouteWithNullItinerary_BNHv0_zCcS0() {
    Cargo cargo = new Cargo();
    assertThrows(NullPointerException.class, () -> cargo.assignToRoute(null));
  }
}