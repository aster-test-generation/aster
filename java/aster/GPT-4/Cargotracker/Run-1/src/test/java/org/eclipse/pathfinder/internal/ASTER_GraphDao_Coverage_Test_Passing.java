/**
 * Generated by Aster
 */
package org.eclipse.pathfinder.internal;

import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_GraphDao_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumberCase3_eRhS2_lyvu0() {
    Random mockedRandom = mock(Random.class);
    when(mockedRandom.nextInt(5)).thenReturn(3);
    GraphDao graphDao = new GraphDao();
    String result = graphDao.getVoyageNumber("from", "to");
    assertEquals("0300A", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumberDefaultCase_RqmB3_gdbc0() {
    Random mockedRandom = mock(Random.class);
    when(mockedRandom.nextInt(5)).thenReturn(4); // or any value >= 4
    GraphDao graphDao = new GraphDao();
    String result = graphDao.getVoyageNumber("from", "to");
    assertEquals("0400S", result);
  }
}