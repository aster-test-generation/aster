/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_Itinerary_Test_Failing {
  private HandlingEvent mockEvent;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithEmptyLegs_JzgH0() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    assertEquals("Itinerary{legs=[]}", itinerary.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFinalArrivalDateWithEmptyLegs_vybR0() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    LocalDateTime result = itinerary.getFinalArrivalDate();
    assertEquals(LocalDateTime.MAX, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetLastLegWithEmptyLegList_CeqF0_GVTq0() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    assertNull(itinerary.getLastLeg());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithEmptyLegs_JzgH0_fid1() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    assertEquals(0, itinerary.hashCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFinalArrivalDateWithEmptyLegs_vybR0_fid1() {
    Itinerary itinerary = new Itinerary(new ArrayList<>());
    try {
      LocalDateTime result = itinerary.getFinalArrivalDate();
      assertEquals(LocalDateTime.MAX, result);
    } catch (IllegalArgumentException e) {
      assertEquals("The validated collection is empty", e.getMessage());
    }
  }
}