/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Cargo_Coverage_Test_Passing {
  private Cargo cargo;
  private Cargo otherCargo;
  private TrackingId trackingId;
  private RouteSpecification routeSpecification;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_NonCargoObject_ReturnsFalse_PASB2() throws Exception {
    Object nonCargoObject = new Object();
    boolean result = cargo.equals(nonCargoObject);
    assertFalse(result, "Cargo should not be equal to a non-Cargo object.");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEquals_SameIdentityAs_ReturnsTrue_Vkvu3_NiDi0() throws Exception {
    TrackingId trackingId = new TrackingId("ABC123");
    RouteSpecification routeSpecification = new RouteSpecification();
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    Cargo otherCargo = new Cargo(trackingId, routeSpecification);
    boolean result = cargo.equals(otherCargo);
    assertTrue(result, "Cargo should be equal when sameIdentityAs returns true.");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_ZPRq0() {
    TrackingId trackingId = new TrackingId("ABC123");
    RouteSpecification routeSpecification = new RouteSpecification();
    Cargo cargo = new Cargo(trackingId, routeSpecification);
    int expectedHashCode = trackingId.hashCode();
    assertEquals(expectedHashCode, cargo.hashCode(), "Hash codes should match the tracking ID's hash code.");
  }
}