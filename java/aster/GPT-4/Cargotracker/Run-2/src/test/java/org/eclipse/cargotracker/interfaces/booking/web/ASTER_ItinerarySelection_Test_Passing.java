/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.RouteCandidate;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ItinerarySelection_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTrackingId_LzOI0() {
    ItinerarySelection itinerarySelection = new ItinerarySelection();
    String expected = null; // Assuming default trackingId is null without setter shown
    String actual = itinerarySelection.getTrackingId();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSetTrackingId_iYom0() {
    ItinerarySelection itinerarySelection = new ItinerarySelection();
    String expectedTrackingId = "12345XYZ";
    itinerarySelection.setTrackingId(expectedTrackingId);
    assertEquals(expectedTrackingId, itinerarySelection.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteCandidates_JLmq0_fid1() {
    ItinerarySelection itinerarySelection = new ItinerarySelection();
    List<RouteCandidate> result = itinerarySelection.getRouteCanditates();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRouteCandidatesReturnsNonNullList_vtsH0_fid1() {
    ItinerarySelection itinerarySelection = new ItinerarySelection();
    assertNull(itinerarySelection.getRouteCandidates());
  }
}