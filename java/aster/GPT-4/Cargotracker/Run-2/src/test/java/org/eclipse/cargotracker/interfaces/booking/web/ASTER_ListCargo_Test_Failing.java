/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.web;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoRoute;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ListCargo_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetNotRoutedCargosReturnsEmptyListWhenNoCargosAdded_BwiL0() {
    ListCargo listCargo = new ListCargo();
    listCargo.init(); // Ensure the init method is called to initialize the lists
    assertNotNull(listCargo.getNotRoutedCargos()); // Check that the list is not null
    assertTrue(listCargo.getNotRoutedCargos().isEmpty()); // Check that the list is empty
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRoutedUnclaimedCargos_IKqx0() {
    ListCargo listCargo = new ListCargo();
    listCargo.init(); // Ensure the init method is called to populate the lists
    List<CargoRoute> result = listCargo.getRoutedUnclaimedCargos();
    assertNotNull(result);
    assertFalse(result.isEmpty()); // Check that the result is not empty
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetClaimedCargos_kiCE0() {
    ListCargo listCargo = new ListCargo();
    listCargo.init(); // Ensure the init method is called to populate the lists
    List<CargoRoute> result = listCargo.getClaimedCargos();
    assertNotNull(result);
    assertFalse(result.isEmpty()); // Ensure the list is not empty
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetNotRoutedCargosReturnsEmptyListWhenNoCargosAdded_BwiL0_fid1() {
    ListCargo listCargo = new ListCargo();
    assertTrue(listCargo.getNotRoutedCargos().isEmpty());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetRoutedUnclaimedCargos_IKqx0_fid1() {
    ListCargo listCargo = new ListCargo();
    List<CargoRoute> result = listCargo.getRoutedUnclaimedCargos();
    assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetClaimedCargos_kiCE0_fid1() {
    ListCargo listCargo = new ListCargo();
    List<CargoRoute> result = listCargo.getClaimedCargos();
    assertNotNull(result);
  }
}