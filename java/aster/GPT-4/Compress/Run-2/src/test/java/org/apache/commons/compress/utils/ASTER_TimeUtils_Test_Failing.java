/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.nio.file.attribute.FileTime;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TimeUtils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToNtfsTime_ChLx0_fid2() {
    long javaTime = 1580515200000L; // Represents a specific date and time
    long expectedNtfsTime = 1322437856000000000L; // Expected NTFS time for the given Java time
    long actualNtfsTime = TimeUtils.toNtfsTime(javaTime);
    assertEquals(expectedNtfsTime, actualNtfsTime);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testToNtfsTime_ZJDB0_fid2() {
    FileTime fileTime = FileTime.fromMillis(System.currentTimeMillis());
    long expected = fileTime.toMillis(); // Assuming FileTimes.toNtfsTime simply returns the milliseconds
    long actual = TimeUtils.toNtfsTime(fileTime);
    assertEquals(expected, actual);
}
}