/**
 * Generated by Aster
 */
package org.apache.commons.compress;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_MemoryLimitException_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMemoryLimitInKb_lnbm0() {
    MemoryLimitException exception = new MemoryLimitException(5000, 3000);
    assertEquals(3000, exception.getMemoryLimitInKb());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetMemoryNeededInKb_dsJZ0() {
    MemoryLimitException exception = new MemoryLimitException(1024, 512);
    long expected = 1024;
    long actual = exception.getMemoryNeededInKb();
    assertEquals(expected, actual);
}
}