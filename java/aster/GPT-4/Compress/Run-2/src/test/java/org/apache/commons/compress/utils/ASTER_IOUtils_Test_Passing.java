/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.ByteArrayOutputStream;
import java.io.Closeable;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_IOUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCopyValidFile_cjQK0() throws IOException {
    File tempFile = File.createTempFile("temp", ".txt");
    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
    IOUtils.copy(tempFile, outputStream);
    assertFalse(outputStream.size() > 0);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadEmptyFile_IWxE0() throws IOException {
    File tempFile = File.createTempFile("empty", "test");
    byte[] buffer = new byte[1024];
    int bytesRead = IOUtils.read(tempFile, buffer);
    assertEquals(0, bytesRead);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCloseQuietlyWithNull_LGnS0() {
    Closeable closeable = null;
    IOUtils.closeQuietly(closeable);
    assertTrue(true);
}
}