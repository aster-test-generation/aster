/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.cpio;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CpioUtil_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2LongEvenLengthNoSwap_oTid0() throws Exception {
        byte[] input = {0x01, 0x02, 0x03, 0x04};
        long expected = 0x01020304;
        long result = CpioUtil.byteArray2long(input, false);
        assertEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2LongEvenLengthSwap_TCRF1() throws Exception {
        byte[] input = {0x01, 0x02, 0x03, 0x04};
        long expected = 0x02010403;
        long result = CpioUtil.byteArray2long(input, true);
        assertEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2LongOddLength_BAUS2() throws Exception {
        byte[] input = {0x01, 0x02, 0x03};
        try {
            CpioUtil.byteArray2long(input, false);
            fail("Expected an UnsupportedOperationException to be thrown");
        } catch (UnsupportedOperationException e) {
            assertNotNull(e);
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2LongSingleByteNoSwap_rbHw3() throws Exception {
        byte[] input = {0x01, 0x00};
        long expected = 0x0100;
        long result = CpioUtil.byteArray2long(input, false);
        assertEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2LongSingleByteSwap_YeMb4() throws Exception {
        byte[] input = {0x00, 0x01};
        long expected = 0x0100;
        long result = CpioUtil.byteArray2long(input, true);
        assertEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2byteArray_EvenLengthNoSwap_HgFm0() throws Exception {
        byte[] expected = {0x00, 0x00, 0x00, 0x00, 0x12, 0x34, 0x56, 0x78};
        byte[] result = CpioUtil.long2byteArray(0x12345678L, 8, false);
        assertArrayEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2byteArray_EvenLengthSwap_jtyE1() throws Exception {
        byte[] expected = {0x00, 0x00, 0x00, 0x00, 0x34, 0x12, 0x78, 0x56};
        byte[] result = CpioUtil.long2byteArray(0x12345678L, 8, true);
        assertArrayEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2byteArray_ShortLengthNoSwap_sQgj2() throws Exception {
        byte[] expected = {0x12, 0x34};
        byte[] result = CpioUtil.long2byteArray(0x1234L, 2, false);
        assertArrayEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2byteArray_ShortLengthSwap_fZzP3() throws Exception {
        byte[] expected = {0x34, 0x12};
        byte[] result = CpioUtil.long2byteArray(0x1234L, 2, true);
        assertArrayEquals(expected, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2byteArray_ZeroLength_jPWB5() throws Exception {
        byte[] expected = {};
        byte[] result = CpioUtil.long2byteArray(0L, 0, true);
        assertArrayEquals(expected, result);
    }
}