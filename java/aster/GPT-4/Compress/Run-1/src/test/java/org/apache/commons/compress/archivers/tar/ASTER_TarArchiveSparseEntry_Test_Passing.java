/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarArchiveSparseEntry_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testIsExtended_xbsn0() throws IOException {
    byte[] headerBuf = new byte[512]; // Assuming 512 is a valid header size for this context
    TarArchiveSparseEntry entry = new TarArchiveSparseEntry(headerBuf);
    assertFalse(entry.isExtended()); // Assuming default isExtended is false
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetSparseHeaders_Kiyx0_1() throws IOException {
    byte[] headerBuf = new byte[512]; // Assuming the header size, adjust as per actual header size requirements
    TarArchiveSparseEntry tarArchiveSparseEntry = new TarArchiveSparseEntry(headerBuf);
    List<TarArchiveStructSparse> result = tarArchiveSparseEntry.getSparseHeaders();
    assertNotNull(result);}
}