/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.jar;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import java.security.cert.Certificate;
import java.util.concurrent.TimeUnit;
import java.util.jar.Attributes;
import java.util.zip.ZipEntry;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JarArchiveEntry_Test_Passing {
@Mock
    private ZipEntry zipEntryMock;
private JarArchiveEntry jarArchiveEntry;
private JarArchiveEntry jararchiveentry;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCertificatesReturnsNullWhenNoCertificates() throws Exception {
        when(zipEntryMock.getName()).thenReturn("exampleEntry");
        jarArchiveEntry = new JarArchiveEntry(zipEntryMock);
        assertNull(jarArchiveEntry.getCertificates(), "Certificates should be null when no certificates are present.");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCertificatesReturnsCertificates() throws Exception {
        when(zipEntryMock.getName()).thenReturn("exampleEntry");
        jarArchiveEntry = new JarArchiveEntry(zipEntryMock);
        Certificate[] expectedCertificates = new Certificate[]{};
        // Assuming there is a way to set certificates on the mocked ZipEntry, which is not shown in the provided code.
        // This is just an illustrative example as the actual implementation details are not provided.
        // For example:
        // when(zipEntryMock.getCertificates()).thenReturn(expectedCertificates);
        Certificate[] actualCertificates = jarArchiveEntry.getCertificates();
        assertArrayEquals(expectedCertificates, actualCertificates, "The certificates returned were not as expected.");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetCertificatesReturnsNull_qkno0() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("testEntry");
    Certificate[] certificates = jarArchiveEntry.getCertificates();
    assertNull(certificates);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetManifestAttributes() throws Exception {
        // Assuming we are testing with a simple name, as no specific behavior is defined for different constructors
        jararchiveentry = new JarArchiveEntry("testEntry");
        // Since getManifestAttributes method returns null as per the current implementation, we test exactly that
        assertNull(jararchiveentry.getManifestAttributes(), "The manifest attributes should be null.");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetManifestAttributesReturnsNull_hQTF0() {
    JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("testEntry");
    Attributes result = jarArchiveEntry.getManifestAttributes();
    assertNull(result);
}
}