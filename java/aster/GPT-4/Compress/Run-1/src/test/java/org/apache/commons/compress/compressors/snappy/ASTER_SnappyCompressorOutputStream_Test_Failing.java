/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.io.OutputStream;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;
public class Aster_SnappyCompressorOutputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testClose_WhenFinishThrowsIOException_ShouldStillCloseOutputStream_GqxR0_fid1() throws IOException {
    OutputStream mockOutputStream = mock(OutputStream.class);
    SnappyCompressorOutputStream compressor = new SnappyCompressorOutputStream(mockOutputStream, 1000L);
    doThrow(new IOException("Simulated error in finish")).when(mockOutputStream).flush();
    try {
        compressor.close();
        fail("Expected IOException to be thrown");
    } catch (IOException e) {
    }
    verify(mockOutputStream).close();
}
}