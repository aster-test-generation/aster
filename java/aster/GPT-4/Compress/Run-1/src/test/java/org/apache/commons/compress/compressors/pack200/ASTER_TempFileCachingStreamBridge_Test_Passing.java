/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.pack200;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TempFileCachingStreamBridge_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCreateInputStream_FileDeletedOnStreamClose_pjZH0() throws IOException {
    TempFileCachingStreamBridge bridge = new TempFileCachingStreamBridge();
    InputStream inputStream = bridge.createInputStream();
    Path tempFilePath = Files.createTempFile(null, null);
    Files.write(tempFilePath, "Sample data".getBytes());
    inputStream.close(); // This should trigger file deletion
    assertFalse(Files.exists(tempFilePath), "Temp file should be deleted after stream is closed");
}
}