/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountInvokeInterfaceArgs_SingleArg_gAbu0() {
    int result = SegmentUtils.countInvokeInterfaceArgs("(Ljava/lang/String;)V");
    assertEquals(1, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_AllZeros_bThJ0() {
    long[] flags = new long[] {0, 0, 0, 0};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_AllOnesAt16thBit_CESW1() {
    long[] flags = new long[] {(1L << 16), (1L << 16), (1L << 16)};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(3, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_MixedBits_YQVD2() {
    long[] flags = new long[] {0, (1L << 16), 0, (1L << 16), 0};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(2, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_AllZeros_GuVh0() {
    int[] flags = new int[] {0, 0, 0, 0};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_MixedValues_CoHC1() {
    int[] flags = new int[] {65536, 1, 65536, 2};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(2, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_AllOnesAt16_rAFv2() {
    int[] flags = new int[] {65536, 65536, 65536};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(3, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_AllZeros_RUwb0() {
    long[][] flags = new long[][]{{0, 0}, {0, 0}};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_AllOnesAt16thBit_VQdc1() {
    long[][] flags = new long[][]{{1 << 16, 1 << 16}, {1 << 16, 1 << 16}};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(4, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_MixedBits_pVVg2() {
    long[][] flags = new long[][]{{1 << 16, 0}, {(1 << 16) + 1, 1 << 15}};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(2, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountBit16_No16thBitSet_zRBU3() {
    long[][] flags = new long[][]{{1 << 15, 1 << 17}, {1, 2}};
    int result = SegmentUtils.countBit16(flags);
    assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_EmptyArguments_xPNS0() {
        assertEquals(0, SegmentUtils.countArgs("()V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_SingleIntArgument_wjmi1() {
        assertEquals(1, SegmentUtils.countArgs("(I)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_DoubleArgument_mcao2() {
        assertEquals(2, SegmentUtils.countArgs("(D)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_LongAndDouble_IJRT3() {
        assertEquals(4, SegmentUtils.countArgs("(JD)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_ArrayOfInts_dMBj4() {
        assertEquals(1, SegmentUtils.countArgs("([I)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_MultipleBasicTypes_zKRz5() {
        assertEquals(3, SegmentUtils.countArgs("(IZB)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_ObjectType_XAOH6() {
        assertEquals(1, SegmentUtils.countArgs("(Ljava/lang/String;)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_ArrayOfObjects_zfhF7() {
        assertEquals(1, SegmentUtils.countArgs("([Ljava/lang/String;)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_NestedArray_gUmP9() {
        assertEquals(1, SegmentUtils.countArgs("([[I)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_IllegalArgument_NoClosingParenthesis_dwWe10() {
        try {
            SegmentUtils.countArgs("(I", 2);
            fail("Expected an IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException e) {
            assertEquals("No arguments", e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_IllegalArgument_NoOpeningParenthesis_ktmR11() {
        try {
            SegmentUtils.countArgs("I)V", 2);
            fail("Expected an IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException e) {
            assertEquals("No arguments", e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_IllegalArgument_BracketsMisplaced_DUNN12() {
        try {
            SegmentUtils.countArgs(")I(", 2);
            fail("Expected an IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException e) {
            assertEquals("No arguments", e.getMessage());
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_LongArray_oNvw13() {
        assertEquals(1, SegmentUtils.countArgs("([J)V", 2));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testCountArgsWithEmptyDescriptor_jOgW0_fid1() {
    try {
        SegmentUtils.countArgs("");
        fail("Expected an IllegalArgumentException to be thrown");
    } catch (IllegalArgumentException e) {
        assertEquals("No arguments", e.getMessage());
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCountArgs_ComplexMix_sfcu8_fid1() {
        assertEquals(4, SegmentUtils.countArgs("(ILjava/lang/String;[D[D)V", 2));
    }
}