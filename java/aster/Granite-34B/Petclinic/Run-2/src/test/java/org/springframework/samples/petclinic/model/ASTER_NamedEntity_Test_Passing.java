/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.model;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_NamedEntity_Test_Passing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetName_unOI0() {
		NamedEntity namedEntity = new NamedEntity();
		namedEntity.setName("John");
		assertEquals("John", namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetNameWithNullName_tmAH1() {
		NamedEntity namedEntity = new NamedEntity();
		namedEntity.setName(null);
		assertEquals(null, namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetNameWithEmptyName_iIhN2() {
		NamedEntity namedEntity = new NamedEntity();
		namedEntity.setName("");
		assertEquals("", namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetNameWithInvalidName_DRMQ5() {
		NamedEntity namedEntity = new NamedEntity();
		namedEntity.setName("123");
		assertEquals("123", namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetNameWithSpecialCharacterName_urjg6() {
		NamedEntity namedEntity = new NamedEntity();
		namedEntity.setName("!@#$%^&*()_+");
		assertEquals("!@#$%^&*()_+", namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetName_LEnQ0() {
		NamedEntity namedEntity = new NamedEntity();
		String name = "John";
		namedEntity.setName(name);
		assertEquals(name, namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetNameNull_Mbgq1() {
		NamedEntity namedEntity = new NamedEntity();
		String name = null;
		namedEntity.setName(name);
		assertEquals(name, namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetNameEmpty_XwwY2() {
		NamedEntity namedEntity = new NamedEntity();
		String name = "";
		namedEntity.setName(name);
		assertEquals(name, namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetNameSpecialCharacters_oVOw4() {
		NamedEntity namedEntity = new NamedEntity();
		String name = "J&J";
		namedEntity.setName(name);
		assertEquals(name, namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetNameMaximumLength_vTaX5() {
		NamedEntity namedEntity = new NamedEntity();
		String name = "ThisIsAVeryLongNameThatExceedsTheMaximumLengthOf64Characters";
		namedEntity.setName(name);
		assertEquals(name, namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetNameMinimumLength_YrvU6() {
		NamedEntity namedEntity = new NamedEntity();
		String name = "A";
		namedEntity.setName(name);
		assertEquals(name, namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testSetNameLengthInBetween_Phvs7() {
		NamedEntity namedEntity = new NamedEntity();
		String name = "ThisIsANameWithLengthBetween1And64";
		namedEntity.setName(name);
		assertEquals(name, namedEntity.getName());
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_tsEj0_ysia0() {
		NamedEntity namedEntity = new NamedEntity();
		String expected = namedEntity.getName();
		String actual = namedEntity.toString();
		org.junit.jupiter.api.Assertions.assertEquals(expected, actual);
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_TljR3_ocwe0() {
		NamedEntity namedEntity = new NamedEntity();
		namedEntity.setName("Doe");
		String expected = "Doe";
		String actual = namedEntity.toString();
		org.junit.jupiter.api.Assertions.assertEquals(expected, actual);
	}

}