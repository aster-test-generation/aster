/**
 * Generated by Aster
 */
package org.springframework.samples.petclinic.owner;

import org.springframework.ui.ModelMap;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PetController_Coverage_Test_Failing {

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testFindOwnerWithNullOwnerRepository_aTdW2() {
		OwnerRepository mockOwnerRepository = null;
		PetController petController = new PetController(mockOwnerRepository);
		try {
			petController.findOwner(1);
			fail("Expected IllegalArgumentException");
		}
		catch (IllegalArgumentException e) {
			assertEquals("Owner ID not found: 1", e.getMessage());
		}
	}

	@Test
	@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testInitCreationFormWithNullOwnerRepository_TBFf3() {
		Owner owner = new Owner();
		ModelMap model = new ModelMap();
		PetController petController = new PetController(null);
		try {
			petController.initCreationForm(owner, model);
			fail("Exception expected");
		}
		catch (Exception e) {
			assertEquals("OwnerRepository is required!", e.getMessage());
		}
	}

}