/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.Iterator;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JXPathCompiledExpression_Test_Failing {
    private Expression expression;
    private String xpath;
    JXPathCompiledExpression jxpathcompiledexpression;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testremovePath() throws Exception {
        jxpathcompiledexpression = new JXPathCompiledExpression(xpath, expression);
        JXPathContext context = mock(JXPathContext.class);
        jxpathcompiledexpression.removePath(context);
        verify(context, times(1)).removePath(xpath);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRemoveAll_wvfS0() {
        JXPathContext context = new JXPathContextReferenceImpl(null, null);
        Constant expression = new Constant("expression");
        JXPathCompiledExpression compiledExpression = new JXPathCompiledExpression("xpath", expression);
        compiledExpression.removeAll(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetPointer() throws Exception {
        jxpathcompiledexpression = new JXPathCompiledExpression(xpath, expression);
        JXPathContext context = mock(JXPathContext.class);
        Pointer pointer = jxpathcompiledexpression.getPointer(context, xpath);
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testiterate() throws Exception {
        jxpathcompiledexpression = new JXPathCompiledExpression(xpath, expression);
        JXPathContext context = mock(JXPathContext.class);
        Iterator<Object> result = jxpathcompiledexpression.iterate(context);
        // Add meaningful assertions here
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testremoveAll_UmSB0() throws Exception {
        jxpathcompiledexpression = new JXPathCompiledExpression(xpath, expression);
        JXPathContext context = mock(JXPathContext.class);
        jxpathcompiledexpression.removeAll(context);
        verify(context, times(1)).removeAll(xpath);
    }
}