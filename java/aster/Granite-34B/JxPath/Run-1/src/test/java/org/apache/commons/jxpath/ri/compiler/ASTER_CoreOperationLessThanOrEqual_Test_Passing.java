/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CoreOperationLessThanOrEqual_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_BgxO2() {
        Constant constant1 = new Constant("test1");
        Constant constant2 = new Constant("test2");
        CoreOperationLessThanOrEqual operation = new CoreOperationLessThanOrEqual(constant1, constant2);
        assertEquals("<=", operation.getSymbol());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEvaluateCompareWithNumberConstants_hvmr0_fid1() {
        Constant constant1 = new Constant(10);
        Constant constant2 = new Constant(20);
        CoreOperationLessThanOrEqual coreOperation = new CoreOperationLessThanOrEqual(constant1, constant2);
        boolean result = coreOperation.evaluateCompare(10);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEvaluateCompareWithStringConstants_UjYF1_fid1() {
        Constant constant1 = new Constant("hello");
        Constant constant2 = new Constant("world");
        CoreOperationLessThanOrEqual coreOperation = new CoreOperationLessThanOrEqual(constant1, constant2);
        boolean result = coreOperation.evaluateCompare(1);
        assertFalse(result);
    }
}