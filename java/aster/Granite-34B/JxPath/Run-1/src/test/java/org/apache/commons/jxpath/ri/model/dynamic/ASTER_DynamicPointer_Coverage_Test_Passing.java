/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.servlet.PageContextHandler;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DynamicPointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_bean_not_equal_ftHo0() {
        final Object bean = new Object();
        final Object otherBean = new Object();
        final PageContextHandler handler = new PageContextHandler();
        final Locale locale = Locale.getDefault();
        final DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), bean, handler, locale);
        final DynamicPointer other = new DynamicPointer(new QName("name"), otherBean, handler, locale);
        final boolean actual = dynamicPointer.equals(other);
        Assertions.assertFalse(actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_name_not_equal_vcgR1() {
        final Object bean = new Object();
        final PageContextHandler handler = new PageContextHandler();
        final Locale locale = Locale.getDefault();
        final DynamicPointer dynamicPointer = new DynamicPointer(new QName("name"), bean, handler, locale);
        final DynamicPointer other = new DynamicPointer(new QName("other"), bean, handler, locale);
        final boolean actual = dynamicPointer.equals(other);
        Assertions.assertFalse(actual);
    }
}