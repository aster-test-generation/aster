/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.HashSet;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletRequest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_ServletRequestHandler_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetProperty_Bodi0() {
        ServletRequestHandler requestHandler = new ServletRequestHandler();
        ServletRequest request = mock(ServletRequest.class);
        requestHandler.setProperty(request, "property", "value");
        verify(request).setAttribute("property", "value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetProperty2_dJbP1() {
        ServletRequestHandler requestHandler = new ServletRequestHandler();
        ServletRequest request = mock(ServletRequest.class);
        requestHandler.setProperty(request, "property", "value");
        verify(request, times(1)).setAttribute("property", "value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCollectPropertyNames1_Knrp0() {
        ServletRequestHandler servletRequestHandler = new ServletRequestHandler();
        HashSet set = new HashSet();
        Object bean = new Object();
        servletRequestHandler.collectPropertyNames(set, bean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_uFHU0_dUXq0() {
        ServletRequestHandler servletRequestHandler = new ServletRequestHandler();
        Object bean = new Object();
        String property = "property";
        Object result = servletRequestHandler.getProperty(bean, property);
        assertEquals(null, result);
    }
}