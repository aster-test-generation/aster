/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.Collections;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ClassFunctions_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespaces_meHY0() {
        ClassFunctions classFunctions = new ClassFunctions(Class.class, "namespace");
        Set<String> usedNamespaces = classFunctions.getUsedNamespaces();
        assertEquals(Collections.singleton("namespace"), usedNamespaces);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespacesWithNullFunctionClass_KBJE1() {
        ClassFunctions classFunctions = new ClassFunctions(null, "namespace");
        Set<String> usedNamespaces = classFunctions.getUsedNamespaces();
        assertEquals(Collections.singleton("namespace"), usedNamespaces);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespacesWithNullNamespace_MyXw2() {
        ClassFunctions classFunctions = new ClassFunctions(Class.class, null);
        Set<String> usedNamespaces = classFunctions.getUsedNamespaces();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUsedNamespacesWithEmptyNamespace_ekGd3() {
        ClassFunctions classFunctions = new ClassFunctions(Class.class, "");
        Set<String> usedNamespaces = classFunctions.getUsedNamespaces();
    }
}