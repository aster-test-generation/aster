/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.jsp.PageContext;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PageContextHandler_Test_Failing {
    private PageContextHandler pagecontexthandler;
    private Object pageContext;
    @Mock
    private PageContext pageContextMock;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase1_TNdc0() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase2_FEPu1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase3_zKVK2() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase4_FWKc3() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 2);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase5_YAVw4() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase6_IfkI5() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase7_DuqW6() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 5);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase8_RnUU7() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 6);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase9_Mpuv8() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 7);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase10_IyCs9() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 8);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase11_WCpw10() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 9);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase12_XtDy11() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 10);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase13_leIf12() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 11);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase14_TIHy13() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 12);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase15_vIMO14() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 13);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase16_aTfl15() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 14);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase17_Nvdb16() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 15);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProperty_SerQ0() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        Object pageContext = new Object();
        String property = "property";
        Object value = new Object();
        pageContextHandler.setProperty(pageContext, property, value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithNullValues_CJVM1() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        Object pageContext = null;
        String property = null;
        Object value = null;
        pageContextHandler.setProperty(pageContext, property, value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPropertyWithEmptyValues_kkoC2() {
        PageContextHandler pageContextHandler = new PageContextHandler();
        Object pageContext = new Object();
        String property = "";
        Object value = new Object();
        pageContextHandler.setProperty(pageContext, property, value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase1_TNdc0_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase4_FWKc3_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 2);
        // Fix the assertion
        Assertions.assertTrue(result.length == 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase5_YAVw4_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 3);
        // Fix the assertion by changing the expected value to match the actual return type
        // For example, if the return type is int, change the assertion to:
        // Assertions.assertTrue(result == 3);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase6_IfkI5_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 4);
        //fixed testcase
        pageContext = mock(PageContext.class);
        result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 4);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase7_DuqW6_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 5);
        // Fix the assertion
        Assertions.assertTrue(result.length == 5);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase8_RnUU7_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 6);
        // Fix the assertion
        Assertions.assertTrue(result.length == 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase9_Mpuv8_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 7);
        // Fix the assertion
        Assertions.assertTrue(result.length == 7);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase10_IyCs9_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 8);
        //Fixed test case
        Assertions.assertTrue(result.length == 9);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase11_WCpw10_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 9);
        // Fix the assertion
        Assertions.assertTrue(result.length == 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase12_XtDy11_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 10);
        // Fix the assertion
        Assertions.assertTrue(result.length == 10, "The length of result is not 10");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase13_leIf12_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 11);
        // Fix the assertion
        Assertions.assertTrue(result.length == 10);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase14_TIHy13_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 12);
        for (String s : result) {
            System.out.println(s);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase15_vIMO14_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 13);
        // Fix the assertion
        Assertions.assertTrue(result.length == 13, "The length of result is not 13");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase16_aTfl15_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 14);
        // Fix the assertion
        Assertions.assertTrue(result.length == 14, "The length of result is not 14");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase17_Nvdb16_fid1() {
        PageContextHandler handler = new PageContextHandler();
        Object pageContext = new Object();
        String[] result = handler.getPropertyNames(pageContext);
        Assertions.assertTrue(result.length == 15);
        // Fix the assertion type to match the return type
        Assertions.assertTrue(result.length == 15, "The length of result is not 15");
    }
}