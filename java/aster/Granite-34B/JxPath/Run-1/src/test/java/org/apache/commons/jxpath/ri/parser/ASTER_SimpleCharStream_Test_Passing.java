/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.parser;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleCharStream_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testReInitWithReaderAndStartLineAndStartColumn_xEkW0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        stream.ReInit(new java.io.StringReader(""), 1, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testReInitWithInputStreamAndStartLineAndStartColumnAndBuffersize_eTGu1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 4096);
        stream.ReInit(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 4096);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testReInitWithInputStreamAndStartLineAndStartColumn_mQVN2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
        stream.ReInit(new java.io.ByteArrayInputStream(new byte[0]), 1, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testReInitWithInputStream_GJgo3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]));
        stream.ReInit(new java.io.ByteArrayInputStream(new byte[0]));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testReInitWithReader_AflE4() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""));
        stream.ReInit(new java.io.StringReader(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testReInitWithReaderAndStartLineAndStartColumnAndBuffersize_ZmeX5() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 4096);
        stream.ReInit(new java.io.StringReader(""), 1, 1, 4096);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithReaderAndStartLineAndStartColumnAndBufferSize_oDRv0_eYAr0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 100);
        stream.ReInit(new java.io.StringReader(""), 1, 1, 100);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithInputStreamAndStartLineAndStartColumnAndBufferSize_tYAA1_nwdn0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 100);
        stream.ReInit(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 100);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testReInitWithReaderAndStartLineAndStartColumn_QcyT5_adVy0() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        stream.ReInit(new java.io.StringReader(""), 1, 1);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffWithWrapAroundFalse_XNvk1_ajEP0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        stream.ExpandBuff(false);
        assertEquals(0, stream.tokenBegin);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone_KwBC0_aKbA0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        stream.Done();
        assertNull(stream.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone_KwBC0_aKbA0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        stream.Done();
        assertNull(stream.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDone_KwBC0_aKbA0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        stream.Done();
        assertNull(stream.bufcolumn);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneWithInputStream_xOnL1_SYJr0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1024);
        stream.Done();
        assertNull(stream.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneWithInputStream_xOnL1_SYJr0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1024);
        stream.Done();
        assertNull(stream.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneWithInputStream_xOnL1_SYJr0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.ByteArrayInputStream(new byte[0]), 1, 1, 1024);
        stream.Done();
        assertNull(stream.bufcolumn);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneWithReader_jFsl2_Tafu0_1() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
        stream.Done();
        assertNull(stream.buffer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneWithReader_jFsl2_Tafu0_2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
        stream.Done();
        assertNull(stream.bufline);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoneWithReader_jFsl2_Tafu0_3() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1, 1024);
        stream.Done();
        assertNull(stream.bufcolumn);
    }

    @Test
    @Timeout(value = 0, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getBeginLine_withReader_shouldReturnCorrectValue_Qela0_fid2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader("test"), 0, 0);
        assertEquals(1, stream.getBeginLine());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffWithWrapAroundFalse_XNvk1_ajEP0_1_fid2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        stream.ExpandBuff(false);
        assertEquals(6144, stream.bufsize);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testExpandBuffWithWrapAroundFalse_XNvk1_ajEP0_2_fid2() {
        SimpleCharStream stream = new SimpleCharStream(new java.io.StringReader(""), 1, 1);
        stream.ExpandBuff(false);
        assertEquals(6144, stream.available);
    }
}