/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.container;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.Container;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_ContainerPointerFactory_Test_Passing {
    ContainerPointerFactory containerpointerfactory;
    NodePointer parent;
    Container container;
    QName name;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointerWithNullBean_JNjR1() {
        ContainerPointerFactory factory = new ContainerPointerFactory();
        Object bean = null;
        Locale locale = Locale.getDefault(); // Replace with actual locale
        NodePointer pointer = factory.createNodePointer(new QName("name"), bean, locale);
        assertEquals(pointer, null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getOrderTest_coverage_tAbw2() {
        ContainerPointerFactory containerPointerFactory = new ContainerPointerFactory();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getOrderTest_coverage_biLD3() {
        ContainerPointerFactory containerPointerFactory = new ContainerPointerFactory();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getOrderTest_coverage_oupk4() {
        ContainerPointerFactory containerPointerFactory = new ContainerPointerFactory();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getOrderTest_coverage_kxra5() {
        ContainerPointerFactory containerPointerFactory = new ContainerPointerFactory();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getOrderTest_coverage_Gjal6() {
        ContainerPointerFactory containerPointerFactory = new ContainerPointerFactory();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getOrderTest_coverage_GEog7() {
        ContainerPointerFactory containerPointerFactory = new ContainerPointerFactory();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
        containerPointerFactory.getOrder();
    }
}