/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dynamic;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DynamicPointerFactory_Test_Passing {
    DynamicPointerFactory dynamicpointerfactory;
    NodePointer parent;
    QName name;
    Object bean;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void createNodePointerTest1_XhaT0() {
        DynamicPointerFactory dynamicPointerFactory0 = new DynamicPointerFactory();
        Object bean0 = new Object();
        Locale locale0 = Locale.ROOT;
        NodePointer nodePointer0 = dynamicPointerFactory0.createNodePointer((QName) null, bean0, locale0);
        Assertions.assertNull(nodePointer0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_yCZI0_PXhw0() {
        DynamicPointerFactory dynamicPointerFactory = new DynamicPointerFactory();
        int actual = dynamicPointerFactory.getOrder();
        int expected = DynamicPointerFactory.DYNAMIC_POINTER_FACTORY_ORDER;
        assertEquals(expected, actual);
    }
}