/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPointerFactory_Test_Passing {
    BeanPointerFactory beanpointerfactory;
    NodePointer parent;
    QName name;
    Object bean;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_ViOo0_1() {
        BeanPointerFactory factory = new BeanPointerFactory();
        Object bean = new Object();
        Locale locale = Locale.getDefault();
        NodePointer pointer = factory.createNodePointer(new QName("name"), bean, locale);
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_ViOo0_2() {
        BeanPointerFactory factory = new BeanPointerFactory();
        Object bean = new Object();
        Locale locale = Locale.getDefault();
        NodePointer pointer = factory.createNodePointer(new QName("name"), bean, locale);
        assertTrue(pointer instanceof BeanPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_1() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        parent = mock(NodePointer.class);
        name = mock(QName.class);
        bean = mock(Object.class);
        NodePointer nodePointer = beanpointerfactory.createNodePointer(parent, name, bean);
        assertNotNull(nodePointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_2() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        parent = mock(NodePointer.class);
        name = mock(QName.class);
        bean = mock(Object.class);
        NodePointer nodePointer = beanpointerfactory.createNodePointer(parent, name, bean);
        assertEquals(parent, nodePointer.getImmediateParentPointer());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_3() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        parent = mock(NodePointer.class);
        name = mock(QName.class);
        bean = mock(Object.class);
        NodePointer nodePointer = beanpointerfactory.createNodePointer(parent, name, bean);
        assertEquals(name, nodePointer.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer_4() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        parent = mock(NodePointer.class);
        name = mock(QName.class);
        bean = mock(Object.class);
        NodePointer nodePointer = beanpointerfactory.createNodePointer(parent, name, bean);
        assertEquals(bean, nodePointer.getImmediateNode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOrder_HUJM0_YwKq0() {
        BeanPointerFactory beanPointerFactory = new BeanPointerFactory();
        int actual = beanPointerFactory.getOrder();
        int expected = 900;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateNodePointer_ViOo0() {
        BeanPointerFactory factory = new BeanPointerFactory();
        Object bean = new Object();
        Locale locale = Locale.getDefault();
        NodePointer pointer = factory.createNodePointer(new QName("name"), bean, locale);
        assertNotNull(pointer);
        assertTrue(pointer instanceof BeanPointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreateNodePointer() throws Exception {
        beanpointerfactory = new BeanPointerFactory();
        parent = mock(NodePointer.class);
        name = mock(QName.class);
        bean = mock(Object.class);
        NodePointer nodePointer = beanpointerfactory.createNodePointer(parent, name, bean);
        assertNotNull(nodePointer);
        assertEquals(parent, nodePointer.getImmediateParentPointer());
        assertEquals(name, nodePointer.getName());
        assertEquals(bean, nodePointer.getImmediateNode());
    }
}