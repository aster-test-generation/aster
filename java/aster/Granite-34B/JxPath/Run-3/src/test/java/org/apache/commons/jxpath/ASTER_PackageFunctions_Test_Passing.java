/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.Collections;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PackageFunctions_Test_Passing {
    private static final Object[] EMPTY_ARRAY = new Object[0];

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getUsedNamespacesTest_pyzX0() {
        PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        Set<String> result = packageFunctions.getUsedNamespaces();
        assertEquals(Collections.singleton("namespace"), result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPackageFunctions_kpIR0() throws Exception {
        new PackageFunctions("classPrefix", "namespace");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNullNamespace_cRFd1() throws Exception {
        final PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        final Function function = packageFunctions.getFunction(null, "name", null);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithParameters_bXuV2() throws Exception {
        final PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        final Object[] parameters = new Object[0];
        final Function function = packageFunctions.getFunction("namespace", "name", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNoParameters_DBAr3() throws Exception {
        final PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        final Function function = packageFunctions.getFunction("namespace", "name", null);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithNoTarget_rrhU4() throws Exception {
        final PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        final Object[] parameters = new Object[1];
        final Function function = packageFunctions.getFunction("namespace", "name", parameters);
        assertNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithTarget_CwIZ5() throws Exception {
        final PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        final Object[] parameters = new Object[1];
        final Object target = new Object();
        parameters[0] = target;
        final Function function = packageFunctions.getFunction("namespace", "name", parameters);
        assertNotNull(function);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFunctionWithTargetAndMethod5_SDqH10() throws Exception {
        final PackageFunctions packageFunctions = new PackageFunctions("classPrefix", "namespace");
        final Object[] parameters = new Object[1];
    }
}