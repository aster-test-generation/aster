/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TreeCompiler_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOrWithArrayNull_zLor0() {
        TreeCompiler treeCompiler = new TreeCompiler();
        Object[] array = null;
        Object result = treeCompiler.or(array);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOrWithArrayLengthZero_HoPN1() {
        TreeCompiler treeCompiler = new TreeCompiler();
        Object[] array = new Object[0];
        Object result = treeCompiler.or(array);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOrWithArrayLengthNonZero_RmTd2() {
        TreeCompiler treeCompiler = new TreeCompiler();
        Object[] array = new Object[5];
        Object result = treeCompiler.or(array);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnion_IWeA0() {
        Object[] arguments = new Object[0];
        TreeCompiler treeCompiler = new TreeCompiler();
        Object object = treeCompiler.union(arguments);
        assertNotNull(object);
    }
}