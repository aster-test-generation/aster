/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JXPathCompiledExpression_Test_Passing {
    private Expression expression;
    private String xpath;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_kpoP0() throws Exception {
        JXPathCompiledExpression jXPathCompiledExpression = new JXPathCompiledExpression("xpath", new Constant("expression"));
        assertEquals("xpath", jXPathCompiledExpression.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase1_awBQ0() throws Exception {
        JXPathCompiledExpression jxPathCompiledExpression = new JXPathCompiledExpression("xpath", new Constant("expression"));
        String result = jxPathCompiledExpression.getXPath();
        assertEquals("xpath", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase2_ZKxa1() throws Exception {
        JXPathCompiledExpression jxPathCompiledExpression = new JXPathCompiledExpression("xpath", new Constant(100));
        String result = jxPathCompiledExpression.getXPath();
        assertEquals("xpath", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase3_IJmI2() throws Exception {
        JXPathCompiledExpression jxPathCompiledExpression = new JXPathCompiledExpression("xpath", new Constant(100.0));
        String result = jxPathCompiledExpression.getXPath();
        assertEquals("xpath", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase7_MsgH6() throws Exception {
        JXPathCompiledExpression jxPathCompiledExpression = new JXPathCompiledExpression(null, new Constant("expression"));
        String result = jxPathCompiledExpression.getXPath();
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase8_IFRk7() throws Exception {
        JXPathCompiledExpression jxPathCompiledExpression = new JXPathCompiledExpression("", new Constant("expression"));
        String result = jxPathCompiledExpression.getXPath();
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase9_SiWJ8() throws Exception {
        JXPathCompiledExpression jxPathCompiledExpression = new JXPathCompiledExpression("xpath", null);
        String result = jxPathCompiledExpression.getXPath();
        assertEquals("xpath", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcase10_AvOo9() throws Exception {
        JXPathCompiledExpression jxPathCompiledExpression = new JXPathCompiledExpression(null, null);
        String result = jxPathCompiledExpression.getXPath();
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIterate_NullPointer_fLqQ1() throws Exception {
        JXPathContext context = null;
        JXPathCompiledExpression expression = new JXPathCompiledExpression("xpath", new Constant("expression"));
        try {
            expression.iterate(context);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetExpression_Phew0() throws Exception {
        JXPathCompiledExpression jxpath = new JXPathCompiledExpression("xpath", new Constant("string"));
        Expression expression = jxpath.getExpression();
        assertNotNull(expression);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetExpressionWithNumber_XMda1() throws Exception {
        JXPathCompiledExpression jxpath = new JXPathCompiledExpression("xpath", new Constant(123));
        Expression expression = jxpath.getExpression();
        assertNotNull(expression);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetExpressionNull_Mcpt2() throws Exception {
        JXPathCompiledExpression jxpath = new JXPathCompiledExpression("xpath", null);
        Expression expression = jxpath.getExpression();
        assertNull(expression);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetExpressionNullString_xWnB4() throws Exception {
        JXPathCompiledExpression jxpath = new JXPathCompiledExpression(null, new Constant("string"));
        Expression expression = jxpath.getExpression();
        assertNull(expression);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetExpressionNullConstantString_YmSR5() throws Exception {
        JXPathCompiledExpression jxpath = new JXPathCompiledExpression(null, null);
        Expression expression = jxpath.getExpression();
        assertNull(expression);
    }
}