/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QName_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getNameTest_JKrM0() throws Exception {
        QName qName = new QName("qualifiedName");
        assertEquals("qualifiedName", qName.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getPrefixTest1_Reaa0() throws Exception {
        QName qName1 = new QName(" qualifiedName");
        assertEquals(" qualifiedName", qName1.getPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getPrefixTest2_YqdS1() throws Exception {
        QName qName2 = new QName("prefix", "localName");
        assertEquals("prefix", qName2.getPrefix());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithSameObject_EbhC0() throws Exception {
        final String qualifiedName = "test";
        final QName qName = new QName(qualifiedName);
        final Object object = qName;
        final boolean result = qName.equals(object);
        assert result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithWrongObject_mcOE1() throws Exception {
        final String qualifiedName = "test";
        final Object object = new Object();
        final boolean result = new QName(qualifiedName).equals(object);
        assert !result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithWrongClassObject_HaiP2() throws Exception {
        final String qualifiedName = "test";
        final Object object = new Integer(1);
        final boolean result = new QName(qualifiedName).equals(object);
        assert !result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithCorrectClassButWrongName_ccpu3() throws Exception {
        final String qualifiedName = "test";
        final String otherQualifiedName = "other";
        final Object object = new QName(otherQualifiedName);
        final boolean result = new QName(qualifiedName).equals(object);
        assert !result;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithCorrectClassAndName_cQNj4() throws Exception {
        final String qualifiedName = "test";
        final Object object = new QName(qualifiedName);
        final boolean result = new QName(qualifiedName).equals(object);
        assert result;
    }
}