/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.List;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.NodeSet;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.axes.NamespaceContext;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.axes.SelfContext;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CoreFunction_Test_Passing {
    private CoreFunction corefunction;
    private EvalContext context;
    private JXPathContext jxpathContext;
    private NodePointer pointer;
    private int functionCode;
    @Mock
    private NamespaceContext namespaceContext;
    @Mock
    private SelfContext selfContext;
    @Mock
    private NodeTypeTest nodeTypeTest;
    @Mock
    private JXPathContext jXPathContext;
    @Mock
    private NodePointer nodePointer;
    @Mock
    private NodeSet nodeSet;
    Expression expression;
    List<Expression> expressions;
    List<Object> objects;
    List<NodePointer> nodePointers;
    List<EvalContext> evalContexts;
    private EvalContext evalContext;
    private Expression arg1;
    private RootContext rootContext;
    private CoreFunction coreFunction;
    private Expression arg2;
    @Mock
    private NamespaceContext parentContext;
    @Mock
    private NodeTypeTest nodeTest;
    @Mock
    private static Double ZERO = Double.valueOf(0);
    EvalContext evalcontext;
    NamespaceContext namespacecontext;
    SelfContext selfcontext;
    NodeTypeTest nodetypetest;
}