/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.beans.IntrospectionException;
import java.beans.PropertyDescriptor;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathBasicBeanInfo_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithAtomic_jOzc0() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, true);
        String result = beanInfo.toString();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithoutAtomic_QzjR1() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class);
        String result = beanInfo.toString();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithDynamicPropertyHandlerClass_DgEF2() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, Object.class);
        String result = beanInfo.toString();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithoutDynamicPropertyHandlerClass_DPxJ3() {
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(String.class, false);
        String result = beanInfo.toString();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullPropertyDescriptors_dkFH0() {
        JXPathBasicBeanInfo jXPathBasicBeanInfo = new JXPathBasicBeanInfo(Object.class);
        jXPathBasicBeanInfo.getPropertyDescriptors();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInterfaceBeanInfo_Meds1() {
        JXPathBasicBeanInfo jXPathBasicBeanInfo = new JXPathBasicBeanInfo(Class.class);
        jXPathBasicBeanInfo.getPropertyDescriptors();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPropertyDescriptor_ztUb0_bbha0() {
        JXPathBasicBeanInfo jXPathBasicBeanInfo = new JXPathBasicBeanInfo(Class.class);
        try {
            PropertyDescriptor pd = new PropertyDescriptor("name", Class.class);
            jXPathBasicBeanInfo.getPropertyDescriptor("name");
        } catch (IntrospectionException e) {
        }
    }
}