/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;

import java.util.HashMap;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathIntrospector_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClassWithInterface_Raul0() {
        Class beanClass = HashMap.class;
        Class dynamicPropertyHandlerClass = HashMap.class;
        JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRegisterDynamicClassWithInterfaceAndException_qblH2() {
        Class beanClass = HashMap.class;
        Class dynamicPropertyHandlerClass = HashMap.class;
        try {
            JXPathIntrospector.registerDynamicClass(beanClass, dynamicPropertyHandlerClass);
        } catch (Exception e) {
            fail("Exception should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBeanInfoWithExistingBeanClass_YqRH4() {
        final Class beanClass = Object.class;
        final JXPathBeanInfo beanInfo = JXPathIntrospector.getBeanInfo(beanClass);
    }
}