/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContext;
import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.apache.commons.jxpath.JXPathContext;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_JXPathServletContexts_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test6_ZzuM5_nlNK0() {
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = (JXPathContext) servletContext.getAttribute(Constants.JXPATH_CONTEXT);
        if (context == null) {
            context = JXPathContext.newContext(null, servletContext);
            context.setVariables(new KeywordVariables(Constants.APPLICATION_SCOPE, servletContext));
            servletContext.setAttribute(Constants.JXPATH_CONTEXT, context);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_ubcP0_hNAq0() {
        JXPathServletContexts jxPathServletContexts = new JXPathServletContexts();
        ServletRequest request = mock(ServletRequest.class);
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = jxPathServletContexts.getRequestContext(request, servletContext);
        Assertions.assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test2_aDRW1_cdwR0_1() {
        JXPathServletContexts jxPathServletContexts = new JXPathServletContexts();
        ServletRequest request = mock(ServletRequest.class);
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = jxPathServletContexts.getRequestContext(request, servletContext);
        ServletRequestAndContext handle = (ServletRequestAndContext) context.getContextBean();
        Assertions.assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test2_aDRW1_cdwR0_2() {
        JXPathServletContexts jxPathServletContexts = new JXPathServletContexts();
        ServletRequest request = mock(ServletRequest.class);
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = jxPathServletContexts.getRequestContext(request, servletContext);
        ServletRequestAndContext handle = (ServletRequestAndContext) context.getContextBean();
        Assertions.assertEquals(handle.getServletRequest(), request);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test3_Bdhj2_FXaM0_1() {
        JXPathServletContexts jxPathServletContexts = new JXPathServletContexts();
        ServletRequest request = mock(ServletRequest.class);
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = jxPathServletContexts.getRequestContext(request, servletContext);
        ServletRequestAndContext handle = (ServletRequestAndContext) context.getContextBean();
        HttpSession session = ((HttpServletRequest) request).getSession(false);
        if (session != null) {
            JXPathContext parentContext = jxPathServletContexts.getSessionContext(session, servletContext);
        }
        else {
            JXPathContext parentContext = jxPathServletContexts.getApplicationContext(servletContext);
        }
        Assertions.assertNotNull(context);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test3_Bdhj2_FXaM0_2() {
        JXPathServletContexts jxPathServletContexts = new JXPathServletContexts();
        ServletRequest request = mock(ServletRequest.class);
        ServletContext servletContext = mock(ServletContext.class);
        JXPathContext context = jxPathServletContexts.getRequestContext(request, servletContext);
        ServletRequestAndContext handle = (ServletRequestAndContext) context.getContextBean();
        HttpSession session = ((HttpServletRequest) request).getSession(false);
        if (session != null) {
            JXPathContext parentContext = jxPathServletContexts.getSessionContext(session, servletContext);
        }
        else {
            JXPathContext parentContext = jxPathServletContexts.getApplicationContext(servletContext);
        }
        Assertions.assertEquals(handle.getServletRequest(), request);
    }
}