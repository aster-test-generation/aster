/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ClassLoaderUtil_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWithoutContextClassLoader_TUGz1() throws Exception {
        ClassLoaderUtil classLoaderUtil = new ClassLoaderUtil();
        Thread.currentThread().setContextClassLoader(null);
        assertEquals(classLoaderUtil.getClass("className", true), Class.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullClassLoader_Vnkv0() throws java.lang.ClassNotFoundException {
        ClassLoader classLoader = null;
        String className = "java.lang.Object";
        boolean initialize = true;
        try {
            ClassLoaderUtil.getClass(classLoader, className, initialize);
            fail("Expected ClassNotFoundException not thrown");
        } catch (ClassNotFoundException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNullClassName_oGcw1() throws java.lang.ClassNotFoundException {
        ClassLoader classLoader = ClassLoaderUtil.class.getClassLoader();
        String className = null;
        boolean initialize = true;
        try {
            ClassLoaderUtil.getClass(classLoader, className, initialize);
            fail("Expected ClassNotFoundException not thrown");
        } catch (ClassNotFoundException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testArrayClassWithoutAbbreviation_NSoH5() throws java.lang.ClassNotFoundException {
        ClassLoader classLoader = ClassLoaderUtil.class.getClassLoader();
        String className = "[java.lang.Object";
        boolean initialize = true;
        Class clazz = ClassLoaderUtil.getClass(classLoader, className, initialize);
        assertEquals(Object.class, clazz.getComponentType());
    }
}