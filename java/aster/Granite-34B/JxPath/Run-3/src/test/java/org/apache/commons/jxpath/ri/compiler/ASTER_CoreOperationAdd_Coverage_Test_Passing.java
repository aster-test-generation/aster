/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.compiler;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CoreOperationAdd_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getSymbolTest1_CBvH0() {
        CoreOperationAdd coreOperationAdd = new CoreOperationAdd(new Expression[0]);
        String actual = coreOperationAdd.getSymbol();
        assertEquals("+", actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsSymmetric_iyIs0() {
        CoreOperationAdd coreOperationAdd = new CoreOperationAdd(new Expression[0]);
        boolean actual = coreOperationAdd.isSymmetric();
        boolean expected = true;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getPrecedence_zOxG0_JcOB0() {
        CoreOperationAdd coreOperationAdd = new CoreOperationAdd(new Expression[]{});
        int precedence = coreOperationAdd.getPrecedence();
        assertEquals(4, precedence);
    }
}