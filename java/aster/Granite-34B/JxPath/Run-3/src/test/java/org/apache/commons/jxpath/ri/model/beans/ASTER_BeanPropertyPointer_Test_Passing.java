/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.beans.PropertyDescriptor;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPropertyPointer_Test_Passing {
    private Object value = UNINITIALIZED;
    BeanPropertyPointer beanpropertypointer;
    private String propertyName;
    private Object baseValue = UNINITIALIZED;
    private static Object UNINITIALIZED = new Object();
    @Mock
    private DOMNodePointer parent;
    @Mock
    private JXPathBasicBeanInfo beanInfo;
    private PropertyDescriptor pd;
    private int index;
    private transient PropertyDescriptor[] propertyDescriptors;
    private transient String[] names;
    private transient PropertyDescriptor propertyDescriptor;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsCollection_WhenPDIsNULL_hjhP3() throws Exception {
        BeanPropertyPointer pointer = new BeanPropertyPointer(null, null);
        assertFalse(pointer.isCollection());
    }
}