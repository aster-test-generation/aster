/**
 * Generated by Aster
 */
package org.apache.commons.jxpath;
import java.util.Map;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_MapDynamicPropertyHandler_Coverage_Test {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetProperty_zFyu0() {
        MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
        Map<String, Object> map = new HashMap<>();
        map.put("key", "value");
        Object result = handler.getProperty(map, "key");
        assertEquals("value", result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setPropertyTest1_xnng0() {
    MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
    Map<String, Object> map = new HashMap<>();
    handler.setProperty(map, "key", "value");
    assertEquals("value", map.get("key"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void setPropertyTest2_yTFc1() {
    MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
    Map<String, Object> map = new HashMap<>();
    handler.setProperty(map, "key", 100);
    assertEquals(100, map.get("key"));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase1_qVra0() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	String[] names = handler.getPropertyNames(map);
	assertEquals(0, names.length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase2_kULg1_1() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	String[] names = handler.getPropertyNames(map);
	assertEquals(2, names.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase2_kULg1_2() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key1", names[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase2_kULg1_3() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key2", names[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase3_TdJP2_1() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	String[] names = handler.getPropertyNames(map);
	assertEquals(2, names.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase3_TdJP2_2() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	String[] names = handler.getPropertyNames(map);
	assertEquals("1", names[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase3_TdJP2_3() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	String[] names = handler.getPropertyNames(map);
	assertEquals("2", names[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase4_uXbI3_1() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	String[] names = handler.getPropertyNames(map);
	assertEquals(3, names.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase4_uXbI3_2() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key1", names[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase4_uXbI3_3() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key2", names[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase4_uXbI3_4() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key3", names[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase5_foZL4_1() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	String[] names = handler.getPropertyNames(map);
	assertEquals(3, names.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase5_foZL4_2() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	String[] names = handler.getPropertyNames(map);
	assertEquals("1", names[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase5_foZL4_3() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	String[] names = handler.getPropertyNames(map);
	assertEquals("2", names[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase5_foZL4_4() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	String[] names = handler.getPropertyNames(map);
	assertEquals("3", names[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase6_dBIE5_1() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	map.put("key4", "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals(4, names.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase6_dBIE5_2() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	map.put("key4", "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key1", names[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase6_dBIE5_3() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	map.put("key4", "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key2", names[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase6_dBIE5_4() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	map.put("key4", "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key3", names[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase6_dBIE5_5() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put("key1", "value1");
	map.put("key2", "value2");
	map.put("key3", "value3");
	map.put("key4", "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals("key4", names[3]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase7_uhtN6_1() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	map.put(4, "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals(4, names.length);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase7_uhtN6_2() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	map.put(4, "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals("1", names[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase7_uhtN6_3() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	map.put(4, "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals("2", names[1]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase7_uhtN6_4() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	map.put(4, "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals("3", names[2]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcase7_uhtN6_5() {
	MapDynamicPropertyHandler handler = new MapDynamicPropertyHandler();
	Map map = new HashMap();
	map.put(1, "value1");
	map.put(2, "value2");
	map.put(3, "value3");
	map.put(4, "value4");
	String[] names = handler.getPropertyNames(map);
	assertEquals("4", names[3]);}
}