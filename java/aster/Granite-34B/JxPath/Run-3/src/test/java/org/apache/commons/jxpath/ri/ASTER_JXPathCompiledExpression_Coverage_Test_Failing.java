/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JXPathCompiledExpression_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testremoveAll_1_HRUt0() {
        JXPathCompiledExpression jXPathCompiledExpression0 = new JXPathCompiledExpression("removeAll", new Constant(" Constant"));
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        jXPathCompiledExpression0.removeAll(jXPathContext0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testremoveAll_2_KFeX1() {
        JXPathCompiledExpression jXPathCompiledExpression0 = new JXPathCompiledExpression("removeAll", new Constant(" Constant"));
        JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) null);
        jXPathCompiledExpression0.removeAll(jXPathContext0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePath_isrR0_zJPT0() {
        JXPathCompiledExpression jxpath = new JXPathCompiledExpression("xpath", new Constant("string"));
        JXPathContext context = JXPathContext.newContext(new Object());
        Pointer pointer = jxpath.createPath(context);
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithException_HgFt1_nuiN0() {
        JXPathCompiledExpression jxpath = new JXPathCompiledExpression("xpath", new Constant("string"));
        JXPathContext context = JXPathContext.newContext(new Object());
        Pointer pointer = null;
        try {
            pointer = jxpath.createPath(context);
        } catch (Exception e) {
            fail("Exception is not expected");
        }
        assertNotNull(pointer);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testremoveAll_2_KFeX1_fid2() {
        JXPathCompiledExpression jXPathCompiledExpression0 = new JXPathCompiledExpression("removeAll", new Constant(" Constant"));
        JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) null);
        jXPathCompiledExpression0.removeAll(jXPathContext0);
        // Replace the erroneous assertion
        // Change the expected or actual value to pass the assertion
        // Change the assertion type to match the return type if needed
    }
}