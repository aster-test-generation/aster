/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_KeywordVariables_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariableNull_iaFo2() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        boolean actual = keywordVariables.isDeclaredVariable(null);
        boolean expected = false;
        assert actual == expected;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariable_GnfU0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        keywordVariables.declareVariable("variable", new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariableWithNullKeyword_ZjLe2() {
        KeywordVariables keywordVariables = new KeywordVariables(null, new Object());
        keywordVariables.declareVariable("variable", new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariableWithNullObject_TLpe3() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", null);
        keywordVariables.declareVariable("variable", new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariableWithNullVariable_Qwpe4() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        keywordVariables.declareVariable(null, new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariableWithNullKeywordAndObject_OFuM5() {
        KeywordVariables keywordVariables = new KeywordVariables(null, null);
        keywordVariables.declareVariable("variable", new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariableWithNullKeywordAndVariable_Wiyj6() {
        KeywordVariables keywordVariables = new KeywordVariables(null, new Object());
        keywordVariables.declareVariable(null, new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariableWithNullObjectAndVariable_QpGU7() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", null);
        keywordVariables.declareVariable(null, new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDeclareVariableWithAllNull_Wmsp8() {
        KeywordVariables keywordVariables = new KeywordVariables(null, null);
        keywordVariables.declareVariable(null, new Object());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getVariable_whenVariableExists_thenReturnsObject_llmx0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        Object result = keywordVariables.getVariable("variable");
        assertEquals(new Object(), result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUndeclareVariable_IpsT0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        keywordVariables.undeclareVariable("variable");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUndeclareVariable_fJoS2() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        keywordVariables.undeclareVariable(null);
    }
}