/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_InfoSetUtil_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberWithBooleanObject_oXsp1() {
        Object object = new Boolean(true);
        assertEquals(1, InfoSetUtil.number(object).intValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberWithStringObject_lWQu2() {
        Object object = "123";
        assertEquals(123, InfoSetUtil.number(object).intValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNumberWithOtherObject_yGAB5() {
        Object object = new Object();
        assertEquals(0, InfoSetUtil.number(object).intValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueNumber_pojc0() {
        Number number = new Double(1.23);
        assertEquals(1.23, InfoSetUtil.doubleValue(number), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueBooleanTrue_ujKL1() {
        Boolean bool = new Boolean(true);
        assertEquals(0.0, InfoSetUtil.doubleValue(bool), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueBooleanFalse_mVRr2() {
        Boolean bool = new Boolean(false);
        assertEquals(1.0, InfoSetUtil.doubleValue(bool), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueStringEmpty_oePN3() {
        String str = "";
        assertEquals(0.0, InfoSetUtil.doubleValue(str), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueStringValidNumber_FnTj4() {
        String str = "123.45";
        assertEquals(123.45, InfoSetUtil.doubleValue(str), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueStringInvalidNumber_CHgz5() {
        String str = "abc";
        assertEquals(Double.NaN, InfoSetUtil.doubleValue(str), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoubleValueObject_bdWt8() {
        Object obj = new Object();
        assertEquals(Double.NaN, InfoSetUtil.doubleValue(obj), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testStringValueForUnsupportedTypeWithNullPointer_cURl9() {
        Object object = new Object();
        String result = InfoSetUtil.stringValue(object);
    }
}