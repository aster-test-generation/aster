/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.dom;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.w3c.dom.Attr;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_DOMAttributePointer_Test_Failing {
    DOMAttributePointer domattributepointer;
    private Attr attr;
    @Mock
    DOMNodePointer parent;
    @Mock
    NodeTest nodeTest;
    private String id;
    private String qualifiedName;
    private String prefix;
    private String localName;
    private Object root;
    private Object node;
    private Object name;
    private Object parentNode;
    private Object attrNode;
    private Object prefixNode;
    private Object namespaceURI;
    private Object qualifiedNameNode;
    private Object localNameNode;
    private Object nameNode;
    private Object variablesNode;
    private Object parentNamespaceURI;
    private Object attrNamespaceURI;
    private Object prefixNamespaceURI;
    private Object namespaceURINode;
    private Object qualifiedNameNamespaceURI;
    private Object localNameNamespaceURI;
    private Object nameNamespaceURI;
    private Object variablesNamespaceURI;
    private Object parentNodeNamespaceURI;
    private Object attrNodeNamespaceURI;
    private Object prefixNodeNamespaceURI;
    private Object namespaceURINodeNamespaceURI;
    private Object qualifiedNameNodeNamespaceURI;
    private Object localNameNodeNamespaceURI;
    private Object nameNodeNamespaceURI;
    private Object variablesNodeNamespaceURI;
    private Object parentNamespaceURINode;
    private Object attrNamespaceURINode;
    private Object prefixNamespaceURINode;
    private Object namespaceURINodeNamespaceURINode;
    private Object qualifiedNameNodeNamespaceURINode;
    private Object localNameNodeNamespaceURINode;
    private Object nameNodeNamespaceURINode;
    private Object variablesNodeNamespaceURINode;
    private Object parentNodeNamespaceURINode;
    private Object attrNodeNamespaceURINode;
    private Object prefixNodeNamespaceURINode;
    private Object namespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object qualifiedNameNodeNamespaceURINodeNamespaceURINode;
    private Object localNameNodeNamespaceURINodeNamespaceURINode;
    private Object nameNodeNamespaceURINodeNamespaceURINode;
    private Object variablesNodeNamespaceURINodeNamespaceURINode;
    private Object parentNamespaceURINodeNamespaceURINode;
    private Object attrNamespaceURINodeNamespaceURINode;
    private Object prefixNamespaceURINodeNamespaceURINode;
    private Object namespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object qualifiedNameNodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object localNameNodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object nameNodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object variablesNodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object parentNodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object attrNodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object prefixNodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object namespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object qualifiedNameNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object localNameNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object nameNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object variablesNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object parentNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object attrNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object prefixNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object namespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object qualifiedNameNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object localNameNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object nameNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object variablesNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object parentNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;
    private Object attrNodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINodeNamespaceURINode;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisCollection() throws Exception {
        domattributepointer = new DOMAttributePointer(parent, attr);
        when(parent.isCollection()).thenReturn(true);
        assertTrue(domattributepointer.isCollection());
    }
}