/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathInvalidAccessException;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullPropertyPointer_Test_Failing {
    private String propertyName = "*";
    NullPropertyPointer nullpropertypointer;
    @Mock
    DOMNodePointer parent;
    private boolean byNameAttribute = false;
    @Mock
    DOMNodePointer mockDOMNodePointer;
    DOMNodePointer domNodePointer;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetValueWithNullParent_JHDO1_fid2() {
        DOMNodePointer parent = null;
        NullPropertyPointer nullPropertyPointer = new NullPropertyPointer(parent);
        Object value = new Object();
        try {
            nullPropertyPointer.setValue(value);
            fail("Expected JXPathInvalidAccessException");
        } catch (JXPathInvalidAccessException e) {
            assertEquals("Cannot set property , the target object is null", e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetLength() throws Exception {
        MockitoAnnotations.initMocks(this);
        nullpropertypointer = new NullPropertyPointer(mockDOMNodePointer);
        Mockito.when(mockDOMNodePointer.getLength()).thenReturn(10);
        assertEquals(10, nullpropertypointer.getLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetBaseValue() throws Exception {
        domNodePointer = mock(DOMNodePointer.class);
        nullpropertypointer = new NullPropertyPointer(domNodePointer);
        when(domNodePointer.getBaseValue()).thenReturn("expectedValue");
        Object actualValue = nullpropertypointer.getBaseValue();
        assertEquals("expectedValue", actualValue);
    }
}