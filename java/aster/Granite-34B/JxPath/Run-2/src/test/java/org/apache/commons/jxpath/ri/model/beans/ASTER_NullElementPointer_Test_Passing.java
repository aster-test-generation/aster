/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_NullElementPointer_Test_Passing {
    NullElementPointer nullelementpointer;
    DOMNodePointer parent;
    int index;
    Locale locale;
    String id;
    NodePointer valuepointer;
    VariablePointer variablepointer;
    QName name;
    JXPathContext context;
    Pointer pointer;
    Object root;
    @Mock
    VariablePointer var;
    @Mock
    String qualifiedName;
    @Mock
    String prefix;
    @Mock
    String localName;
    DOMNodePointer dOMNodePointer;
    VariablePointer variablePointer;
    QName qName;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testequals() throws Exception {
        parent = mock(DOMNodePointer.class);
        index = 1;
        nullelementpointer = new NullElementPointer(parent, index);
        NullElementPointer other = new NullElementPointer(parent, index);
        assertTrue(nullelementpointer.equals(other));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetValue() throws Exception {
        parent = mock(DOMNodePointer.class);
        index = 1;
        nullelementpointer = new NullElementPointer(parent, index);
        Object value = new Object();
        Assertions.assertThrows(UnsupportedOperationException.class, () -> {
            nullelementpointer.setValue(value);
        });
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testcreatePath_ymTk0() throws Exception {
        parent = mock(DOMNodePointer.class);
        index = 1;
        nullelementpointer = new NullElementPointer(parent, index);
        JXPathContext context = mock(JXPathContext.class);
        NodePointer result = nullelementpointer.createPath(context);
        verify(parent, times(1)).createChild(context, null, index);
        assertEquals(parent, result);
    }
}