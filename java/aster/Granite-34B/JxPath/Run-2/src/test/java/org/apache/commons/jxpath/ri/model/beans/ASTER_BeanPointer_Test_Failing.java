/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.JXPathBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_BeanPointer_Test_Failing {
    private Object bean;
    private QName name;
    BeanPointer beanpointer;
    private JXPathBeanInfo beanInfo;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testisLeaf() throws Exception {
        beanpointer = new BeanPointer(new QName("name"), new Object(), new JXPathBasicBeanInfo(Object.class), new Locale("en"));
        when(beanpointer.getNode()).thenReturn(new Object());
        assertTrue(beanpointer.isLeaf());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_WhenNodeIsNOTNULLAndBeanInfoIsNULL_ReturnsTrue_LMvK1() {
        Object node = new Object();
        BeanPointer pointer = new BeanPointer(null, null, node, null);
        boolean result = pointer.isLeaf();
        assert result == true;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsLeaf_WhenNodeIsNOTNULLAndBeanInfoIsNOTNULLAndIsAtomicReturnsTrue_ReturnsTrue_tZEf2() {
        Object node = new Object();
        JXPathBasicBeanInfo beanInfo = new JXPathBasicBeanInfo(node.getClass(), true);
        BeanPointer pointer = new BeanPointer(null, null, node, beanInfo);
        boolean result = pointer.isLeaf();
        assert result == true;
    }
}