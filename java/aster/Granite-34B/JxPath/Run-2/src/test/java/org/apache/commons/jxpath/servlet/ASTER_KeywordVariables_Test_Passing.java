/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.servlet;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_KeywordVariables_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariableTrue_RfNw0() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        boolean actual = keywordVariables.isDeclaredVariable("keyword");
        boolean expected = true;
        assert actual == expected;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsDeclaredVariableFalse_mNan1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        boolean actual = keywordVariables.isDeclaredVariable("otherKeyword");
        boolean expected = false;
        assert actual == expected;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getVariable_whenVariableDoesNotExist_thenReturnsNull_KHUI1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        Object result = keywordVariables.getVariable("nonexistentVariable");
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUndeclareVariable_rdMr1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        try {
            keywordVariables.undeclareVariable("variable");
        } catch (UnsupportedOperationException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getVariable_whenVariableExists_thenReturnsObject_llmx0_fid1() {
        KeywordVariables keywordVariables = new KeywordVariables("keyword", new Object());
        Object result = keywordVariables.getVariable("variable");
    }
}