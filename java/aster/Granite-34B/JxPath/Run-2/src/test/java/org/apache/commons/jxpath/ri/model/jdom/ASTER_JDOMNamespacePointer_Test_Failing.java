/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.jdom;

import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JDOMNamespacePointer_Test_Failing {
    JDOMNamespacePointer jdomnamespacepointer;
    private String prefix;
    DOMNodePointer parent;
    String namespaceURI;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testsetValue() throws Exception {
        parent = mock(DOMNodePointer.class);
        prefix = "prefix";
        namespaceURI = "namespaceURI";
        jdomnamespacepointer = new JDOMNamespacePointer(parent, prefix, namespaceURI);
        Object value = new Object();
        jdomnamespacepointer.setValue(value);
        verify(parent, times(0)).setValue(value);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetNamespaceURI_rtPR0() throws Exception {
        jdomnamespacepointer = new JDOMNamespacePointer(parent, prefix, namespaceURI);
        when(jdomnamespacepointer.getNamespaceURI(prefix)).thenReturn(namespaceURI);
        assertEquals(namespaceURI, jdomnamespacepointer.getNamespaceURI());
    }
}