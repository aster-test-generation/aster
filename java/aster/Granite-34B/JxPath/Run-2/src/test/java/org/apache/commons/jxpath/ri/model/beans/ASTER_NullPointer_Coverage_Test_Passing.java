/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.ri.model.beans;

import java.util.Locale;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_NullPointer_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashcode1_mnNu0() {
        NullPointer np = new NullPointer(new Locale("en"), "id");
        int actual = np.hashCode();
        int expected = 0;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithId_DpaH0() {
        NullPointer nullPointer = new NullPointer(Locale.ROOT, "id");
        assertEquals("id(id)", nullPointer.asPath());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreatePathWithNullContext_yELc3() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        Object value = new Object();
        try {
            NodePointer nodePointer = nullPointer.createPath(null, value);
            fail("UnsupportedOperationException is expected");
        } catch (UnsupportedOperationException e) {
            assertTrue(true);
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMethod1_uKdq0() {
        NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        int actual = nullPointer.getLength();
        int expected = 0;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMethod7_fwfP6() {
        Locale locale = new Locale("en");
        String id = "id";
        NullPointer nullPointer = new NullPointer(locale, id);
        int actual = nullPointer.getLength();
        int expected = 0;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_1_qrcC0() {
        final NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        final Object object = new Object();
        boolean actual = nullPointer.equals(object);
        boolean expected = false;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_2_yrut1() {
        final NullPointer nullPointer = new NullPointer(new Locale("en"), "id");
        final Object object = new NullPointer(new Locale("en"), "id");
        boolean actual = nullPointer.equals(object);
        boolean expected = true;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAsPathWithoutId_ZwhJ1_nuib0() {
        NullPointer nullPointer = new NullPointer(Locale.ROOT, null);
        assertEquals("null()", nullPointer.asPath());
    }
}