/**
 * Generated by Aster
 */
package org.apache.commons.jxpath.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ClassLoaderUtil_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassWithValidClassNameAndInitializeTrue_OyDz0() throws Exception {
        String className = "java.lang.String";
        boolean initialize = true;
        Class expectedClass = String.class;
        Class actualClass = ClassLoaderUtil.getClass(className, initialize);
        assertEquals(expectedClass, actualClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassWithValidClassNameAndInitializeFalse_EXuQ1() throws Exception {
        String className = "java.lang.Integer";
        boolean initialize = false;
        Class expectedClass = Integer.class;
        Class actualClass = ClassLoaderUtil.getClass(className, initialize);
        assertEquals(expectedClass, actualClass);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClass_gGJw0() throws Exception {
        String className = "java.lang.String";
        Class expected = String.class;
        Class actual = ClassLoaderUtil.getClass(className);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetClassWithClassNotFoundException_PyXi1() throws Exception {
        String className = "non.existent.Class";
        try {
            ClassLoaderUtil.getClass(className);
            fail("Expected ClassNotFoundException");
        } catch (ClassNotFoundException e) {
        }
    }
}