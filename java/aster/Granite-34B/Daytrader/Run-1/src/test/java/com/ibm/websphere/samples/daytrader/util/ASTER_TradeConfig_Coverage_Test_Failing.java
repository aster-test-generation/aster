/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TradeConfig_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getScenarioAction_1_AgjM0() {
        boolean newUser = true;
        int r = 100;
        int i = 0;
        int sum = 0;
        char result = TradeConfig.getScenarioAction(newUser);
        assertEquals('b', result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getScenarioAction_2_zGWM1() {
        boolean newUser = false;
        int r = 100;
        int i = 0;
        int sum = 0;
        char result = TradeConfig.getScenarioAction(newUser);
        assertEquals('b', result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getScenarioAction_3_ormV2() {
        boolean newUser = false;
        int r = 100;
        int i = 1;
        int sum = 0;
        char result = TradeConfig.getScenarioAction(newUser);
        assertEquals('s', result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getScenarioAction_4_LQAF3() {
        boolean newUser = false;
        int r = 100;
        int i = 1;
        int sum = 1;
        char result = TradeConfig.getScenarioAction(newUser);
        assertEquals('s', result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getUserID_RND_USER_TRUE_EFUW0() {
        TradeConfig config = new TradeConfig();
        config.RND_USER = true;
        String userID = config.getUserID();
        assertTrue(userID.matches("[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getUserID_RND_USER_FALSE_WTSY1() {
        TradeConfig config = new TradeConfig();
        config.RND_USER = false;
        String userID = config.getUserID();
        assertEquals("testuser", userID);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getScenarioAction_2_zGWM1_fid2() {
        boolean newUser = false;
        int r = 100;
        int i = 0;
        int sum = 0;
        char result = TradeConfig.getScenarioAction(newUser);
        assertEquals('p', result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getScenarioAction_3_ormV2_fid2() {
        boolean newUser = false;
        int r = 100;
        int i = 1;
        int sum = 0;
        char result = TradeConfig.getScenarioAction(newUser);
        assertEquals('q', result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getScenarioAction_4_LQAF3_fid2() {
        boolean newUser = false;
        int r = 100;
        int i = 1;
        int sum = 1;
        char result = TradeConfig.getScenarioAction(newUser);
        assertEquals('q', result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getUserID_RND_USER_FALSE_WTSY1_fid2() {
        TradeConfig config = new TradeConfig();
        config.RND_USER = false;
        String userID = config.getUserID();
        assertEquals("uid:0", userID);
    }
}