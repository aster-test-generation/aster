/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ActionMessage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingWithInvalidJson_fVXb1() {
        ActionMessage actionMessage = new ActionMessage();
        String jsonText = "{\"invalid\": \"json\"}";
        actionMessage.doDecoding(jsonText);
        assertEquals(null, actionMessage.decodedAction);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingWithEmptyJson_gueq2() {
        ActionMessage actionMessage = new ActionMessage();
        String jsonText = "{}";
        actionMessage.doDecoding(jsonText);
        assertEquals(null, actionMessage.decodedAction);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingWithNullJson_zBNz3() {
        ActionMessage actionMessage = new ActionMessage();
        String jsonText = null;
        actionMessage.doDecoding(jsonText);
        assertEquals(null, actionMessage.decodedAction);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdecodedAction_jIBB0() {
        ActionMessage actionMessage = new ActionMessage();
        String decodedAction = actionMessage.getDecodedAction();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecodingWithValidJson_DrAd0_fid1() {
        ActionMessage actionMessage = new ActionMessage();
        String jsonText = "{\"action\": \"play\"}";
        actionMessage.doDecoding(jsonText);
        assertNull(actionMessage.decodedAction);
    }
}