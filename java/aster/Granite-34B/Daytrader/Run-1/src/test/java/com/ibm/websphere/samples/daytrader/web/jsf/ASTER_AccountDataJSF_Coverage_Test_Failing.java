/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.math.BigDecimal;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountDataJSF_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetProfileID_ZIUR0_zHvY0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setProfileID("profileID");
        assertEquals("profileID", accountDataJSF.getProfileID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCreationDate_Pkpa2_LFTF0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date creationDate = new Date();
        accountDataJSF.setCreationDate(creationDate);
        assertEquals(creationDate, accountDataJSF.getCreationDate());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetNumberHoldings_kDcW8_BSyF0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        int numberHoldings = 5;
        accountDataJSF.setNumberHoldings(numberHoldings);
        assertEquals(numberHoldings, accountDataJSF.getNumberHoldings());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetBalance_aZYs7_bMJy0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        BigDecimal balance = new BigDecimal(500.0);
        accountDataJSF.setBalance(balance);
        assertEquals(balance, accountDataJSF.getBalance());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOpenBalance_omCZ6_ePoo0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        double openBalance = 1000.0;
        accountDataJSF.setOpenBalance(new BigDecimal(openBalance));
        assertEquals(openBalance, accountDataJSF.getOpenBalance().doubleValue(), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLoginCount_HGfq3_FkrG0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        int loginCount = 10;
        accountDataJSF.setLoginCount(loginCount);
        assertEquals(loginCount, accountDataJSF.getLoginCount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLogoutCount_wFJZ4_lnfG0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        int logoutCount = 5;
        accountDataJSF.setLogoutCount(logoutCount);
        assertEquals(logoutCount, accountDataJSF.getLogoutCount());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLastLogin_Reae5_tJfl0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date lastLogin = new Date();
        accountDataJSF.setLastLogin(lastLogin);
        assertEquals(lastLogin, accountDataJSF.getLastLogin());
    }
}