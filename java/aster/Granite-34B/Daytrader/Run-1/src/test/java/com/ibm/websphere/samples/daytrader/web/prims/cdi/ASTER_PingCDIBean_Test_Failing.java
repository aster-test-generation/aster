/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.cdi;

import java.util.Set;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.spi.Bean;
import javax.enterprise.inject.spi.BeanManager;
import javax.enterprise.inject.spi.CDI;
import javax.naming.InitialContext;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.MockedConstruction;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingCDIBean_Test_Failing {
    private static int getBeanManagerHitCountJNDI = 0;
    PingCDIBean pingcdibean;
    InitialContext initialcontext;
    MockedConstruction<InitialContext> mockedInitialContext;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHello_RnrW0() {
        PingCDIBean bean = new PingCDIBean();
        int actual = bean.hello();
        int expected = 1;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHelloTwice_iFVX1() {
        PingCDIBean bean = new PingCDIBean();
        bean.hello();
        int actual = bean.hello();
        int expected = 3;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHelloThrice_VKYO2() {
        PingCDIBean bean = new PingCDIBean();
        bean.hello();
        bean.hello();
        int actual = bean.hello();
        int expected = 57;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHelloFourTimes_mYtI3() {
        PingCDIBean bean = new PingCDIBean();
        bean.hello();
        bean.hello();
        bean.hello();
        int actual = bean.hello();
        int expected = 61;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHelloFiftyTimes_cYDv4() {
        PingCDIBean bean = new PingCDIBean();
        for (int i = 0; i < 50; i++) {
            bean.hello();
        }
        int actual = bean.hello();
        int expected = 54;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getBeanMangerViaCDICurrentTest1_heig0() throws Exception {
        PingCDIBean bean = new PingCDIBean();
        int actual = bean.getBeanMangerViaCDICurrent();
        int expected = 0;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getBeanMangerViaCDICurrentTest2_ipEG1() throws Exception {
        PingCDIBean bean = new PingCDIBean();
        CDI<Object> current = CDI.current();
        BeanManager beanManager = current.getBeanManager();
        Set<Bean<?>> beans = beanManager.getBeans(Object.class);
        int expected = 0;
        if (beans.size() > 0) {
            expected = ++expected;
        }
        int actual = bean.getBeanMangerViaCDICurrent();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetBeanMangerViaJNDI_oGEZ0() throws Exception {
        mockedInitialContext = mockConstruction(InitialContext.class);
        initialcontext = mock(InitialContext.class);
        PingCDIBean pingcdibean = new PingCDIBean();
        when(initialcontext.lookup("java:comp/BeanManager")).thenReturn(mock(BeanManager.class));
        assertEquals(1, pingcdibean.getBeanMangerViaJNDI());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHelloTwice_iFVX1_fid1() {
        PingCDIBean bean = new PingCDIBean();
        bean.hello();
        int actual = bean.hello();
        int expected = 2;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHelloThrice_VKYO2_fid1() {
        PingCDIBean bean = new PingCDIBean();
        bean.hello();
        bean.hello();
        int actual = bean.hello();
        int expected = 3;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHelloFiftyTimes_cYDv4_fid1() {
        PingCDIBean bean = new PingCDIBean();
        for (int i = 0; i < 50; i++) {
            bean.hello();
        }
        int actual = bean.hello();
        int expected = 51;
        assertEquals(expected, actual);
    }
}