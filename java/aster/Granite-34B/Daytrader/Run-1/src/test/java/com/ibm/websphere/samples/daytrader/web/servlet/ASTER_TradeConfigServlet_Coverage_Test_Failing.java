/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.springframework.mock.web.MockServletConfig;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_TradeConfigServlet_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_XgkM0() throws javax.servlet.ServletException {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        ServletConfig servletConfig = new MockServletConfig();
        tradeConfigServlet.init(servletConfig);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testService_actionNull_qjHj0() throws javax.servlet.ServletException, java.io.IOException {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse resp = mock(HttpServletResponse.class);
        when(req.getParameter("action")).thenReturn(null);
        try {
            tradeConfigServlet.service(req, resp);
        } catch (Exception e) {
            fail("Exception should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testService_actionUpdateConfig_JlZB1() throws javax.servlet.ServletException, java.io.IOException {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse resp = mock(HttpServletResponse.class);
        when(req.getParameter("action")).thenReturn("updateConfig");
        try {
            tradeConfigServlet.service(req, resp);
        } catch (Exception e) {
            fail("Exception should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testService_actionResetTrade_WptJ2() throws javax.servlet.ServletException, java.io.IOException {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse resp = mock(HttpServletResponse.class);
        when(req.getParameter("action")).thenReturn("resetTrade");
        try {
            tradeConfigServlet.service(req, resp);
        } catch (Exception e) {
            fail("Exception should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testService_actionBuildDB_OYRQ3() throws javax.servlet.ServletException, java.io.IOException {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse resp = mock(HttpServletResponse.class);
        when(req.getParameter("action")).thenReturn("buildDB");
        try {
            tradeConfigServlet.service(req, resp);
        } catch (Exception e) {
            fail("Exception should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testService_actionBuildDBTables_FIFu4() throws javax.servlet.ServletException, java.io.IOException {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse resp = mock(HttpServletResponse.class);
        when(req.getParameter("action")).thenReturn("buildDBTables");
        try {
            tradeConfigServlet.service(req, resp);
        } catch (Exception e) {
            fail("Exception should not be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testService_exception_kmaq5() throws javax.servlet.ServletException, java.io.IOException {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse resp = mock(HttpServletResponse.class);
        when(req.getParameter("action")).thenThrow(new Exception());
        try {
            tradeConfigServlet.service(req, resp);
            fail("Exception should be thrown");
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void doConfigDisplayTest1_EHPM0() throws Exception {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse resp = mock(HttpServletResponse.class);
        String results = "results";
        TradeConfig currentConfig = new TradeConfig();
        req.setAttribute("tradeConfig", currentConfig);
        req.setAttribute("status", results);
        tradeConfigServlet.doConfigDisplay(req, resp, results);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoConfigUpdate_ldpY0() throws java.lang.Exception {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        try {
            tradeConfigServlet.doConfigUpdate(null, null);
        } catch (Exception e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testService_actionNull_qjHj0_fid1() throws javax.servlet.ServletException, java.io.IOException {
        TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse resp = mock(HttpServletResponse.class);
        when(req.getParameter("action")).thenReturn(null);
        tradeConfigServlet.service(req, resp);
    }
}