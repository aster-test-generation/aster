/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.springframework.mock.web.MockServletConfig;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_PingServletLargeContentLength_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_laOe0() {
        PingServletLargeContentLength obj = new PingServletLargeContentLength();
        String expected = "Basic dynamic HTML generation through a servlet, with " + "contentLength set by contentLength parameter.";
        assertEquals(expected, obj.getServletInfo());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_zJpQ0() throws javax.servlet.ServletException {
        PingServletLargeContentLength servlet = new PingServletLargeContentLength();
        assertNotNull(servlet);
        ServletConfig config = new MockServletConfig();
        servlet.init(config);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitWithSuper_ZFyi1_1() throws javax.servlet.ServletException {
        PingServletLargeContentLength servlet = new PingServletLargeContentLength();
        ServletConfig config = new MockServletConfig();
        servlet.init(config);
        assertNotNull(servlet);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitWithSuper_ZFyi1_2() throws javax.servlet.ServletException {
        PingServletLargeContentLength servlet = new PingServletLargeContentLength();
        ServletConfig config = new MockServletConfig();
        servlet.init(config);
        assertEquals(config, servlet.getServletConfig());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_gGIc0_PIxK0() throws javax.servlet.ServletException, java.io.IOException {
        PingServletLargeContentLength servlet = new PingServletLargeContentLength();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        servlet.doPost(request, response);
        assertEquals(0, request.getContentLengthLong());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitWithSuper_ZFyi1() throws javax.servlet.ServletException {
        PingServletLargeContentLength servlet = new PingServletLargeContentLength();
        assertNotNull(servlet);
        ServletConfig config = new MockServletConfig();
        servlet.init(config);
        assertEquals(config, servlet.getServletConfig());
    }
}