/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.jaxrs;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JAXRSSyncService_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEchoObject_HBOG0() {
        JAXRSSyncService service = new JAXRSSyncService();
        XMLObject xmlObject = new XMLObject();
        XMLObject result = service.echoObject(xmlObject);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEchoObject_aVYQ0() {
        TestJSONObject testJSONObject = new TestJSONObject();
        JAXRSSyncService jAXRSSyncService = new JAXRSSyncService();
        TestJSONObject result = jAXRSSyncService.echoObject(testJSONObject);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEchoString_SPBX0() {
        JAXRSSyncService service = new JAXRSSyncService();
        String result = service.echoString("input");
        assertEquals("input", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEchoStringWithNullInput_ktlG1() {
        JAXRSSyncService service = new JAXRSSyncService();
        String result = service.echoString(null);
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEchoStringWithEmptyInput_qnvp2() {
        JAXRSSyncService service = new JAXRSSyncService();
        String result = service.echoString("");
        assertEquals("", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEchoStringWithUnicodeInput_IlhP4() {
        JAXRSSyncService service = new JAXRSSyncService();
        String result = service.echoString("Unicode Input");
        assertEquals("Unicode Input", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEchoStringWithSpecialCharactersInput_lEEg5() {
        JAXRSSyncService service = new JAXRSSyncService();
        String result = service.echoString("!@#$%^&*()_+");
        assertEquals("!@#$%^&*()_+", result);
    }
}