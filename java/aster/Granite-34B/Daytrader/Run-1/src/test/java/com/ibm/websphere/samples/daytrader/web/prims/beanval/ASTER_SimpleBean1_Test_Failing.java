/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.beanval;

import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import javax.validation.ConstraintViolation;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleBean1_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormatConstraintViolations_eiKH0_glao0() throws Exception {
        SimpleBean1 simpleBean1 = new SimpleBean1();
        Set<ConstraintViolation<SimpleBean1>> cvSet = new HashSet<>();
        try {
            simpleBean1.getDesc();
        } catch (Exception e) {
        }
        String result = simpleBean1.formatConstraintViolations(cvSet);
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormatConstraintViolationsWithNullSet_hzbb2_ygKZ0() throws Exception {
        SimpleBean1 simpleBean1 = new SimpleBean1();
        Set<ConstraintViolation<SimpleBean1>> cvSet = null;
        String result = simpleBean1.formatConstraintViolations(cvSet);
        assertEquals(null, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCheckInjectionValidation_fJXs0_eutp0() {
        SimpleBean1 simpleBean1 = null;
        try {
            simpleBean1 = new SimpleBean1();
        } catch (Exception e) {
        }
        simpleBean1.getDesc();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_uXSl0_nvPK0() {
        SimpleBean1 simpleBean1 = null;
        try {
            simpleBean1 = new SimpleBean1();
        } catch (Exception e) {
        }
        String result = simpleBean1.toString();
        assertEquals("iMin:0 iMax:0 iMinArray:0 iMaxArray:0 pattern:null setToFail:false", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDescWithNullPattern_pdxX1_lbaK0() throws Exception {
        SimpleBean1 simpleBean1 = new SimpleBean1();
        assertEquals("", simpleBean1.getDesc());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFormatConstraintViolations_eiKH0_glao0_fid3() throws Exception {
        SimpleBean1 simpleBean1 = new SimpleBean1();
        Set<ConstraintViolation<SimpleBean1>> cvSet = new HashSet<>();
        try {
            simpleBean1.getDesc();
        } catch (Exception e) {
        }
        String result = simpleBean1.formatConstraintViolations(cvSet);
    }
}