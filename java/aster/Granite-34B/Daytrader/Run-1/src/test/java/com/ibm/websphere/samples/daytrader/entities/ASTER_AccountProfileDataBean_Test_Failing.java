/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomInstance_oKMG0_1() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        assertEquals(accountProfileDataBean.getCreditCard(), TradeConfig.rndCreditCard());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomInstance_oKMG0_2() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        assertEquals(accountProfileDataBean.getEmail(), TradeConfig.rndEmail(TradeConfig.rndUserID()));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomInstance_oKMG0_3() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        assertEquals(accountProfileDataBean.getUserID(), TradeConfig.rndUserID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomInstance_oKMG0_4() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        assertEquals(accountProfileDataBean.getAddress(), TradeConfig.rndAddress());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomInstance_oKMG0_5() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        assertEquals(accountProfileDataBean.getPassword(), TradeConfig.rndUserID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomInstance_oKMG0_6() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        assertEquals(accountProfileDataBean.getFullName(), TradeConfig.rndFullName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrint_fwpa0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
        accountProfileDataBean.print();
        assertEquals("AccountProfileDataBean{userID='user1', password='password1', fullName='John Doe', address='123 Main St', email='john.doe@example.com', creditCard='1234567890'}", accountProfileDataBean.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrint_fwpa0_fid1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
        accountProfileDataBean.print();
        assertEquals("	Account Profile Data for userID:user1		   passwd:password1		   fullName:John Doe		    address:123 Main St		      email:john.doe@example.com		 creditCard:1234567890", accountProfileDataBean.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRandomInstance_oKMG0() {
        AccountProfileDataBean accountProfileDataBean = AccountProfileDataBean.getRandomInstance();
        assertEquals(accountProfileDataBean.getCreditCard(), TradeConfig.rndCreditCard());
        assertEquals(accountProfileDataBean.getEmail(), TradeConfig.rndEmail(TradeConfig.rndUserID()));
        assertEquals(accountProfileDataBean.getUserID(), TradeConfig.rndUserID());
        assertEquals(accountProfileDataBean.getAddress(), TradeConfig.rndAddress());
        assertEquals(accountProfileDataBean.getPassword(), TradeConfig.rndUserID());
        assertEquals(accountProfileDataBean.getFullName(), TradeConfig.rndFullName());
    }
}