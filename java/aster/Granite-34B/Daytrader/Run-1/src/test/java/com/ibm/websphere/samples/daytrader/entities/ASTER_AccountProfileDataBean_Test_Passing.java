/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCreditCard_Ejgo0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "john.doe@example.com", "1234 5678 9012 3456");
        String creditCard = accountProfileDataBean.getCreditCard();
        assertEquals("1234 5678 9012 3456", creditCard);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCreditCard_coverage_EAwy1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        String creditCard = accountProfileDataBean.getCreditCard();
        assertEquals(null, creditCard);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCreditCard_coverage2_XLFC2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "john.doe@example.com", null);
        String creditCard = accountProfileDataBean.getCreditCard();
        assertEquals(null, creditCard);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_0_fPkN0() throws Exception {
        AccountProfileDataBean accountProfileDataBean0 = new AccountProfileDataBean();
        AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean();
        boolean boolean0 = accountProfileDataBean0.equals(accountProfileDataBean1);
        assertEquals(true, boolean0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_1_uZhk1() throws Exception {
        AccountProfileDataBean accountProfileDataBean0 = new AccountProfileDataBean();
        AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean();
        accountProfileDataBean0.setUserID("org.quickserver.util.xmlreader.AdvancedSettings");
        boolean boolean0 = accountProfileDataBean0.equals(accountProfileDataBean1);
        assertEquals(false, boolean0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_2_UOYf2() throws Exception {
        AccountProfileDataBean accountProfileDataBean0 = new AccountProfileDataBean();
        AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean();
        accountProfileDataBean1.setUserID("org.quickserver.util.xmlreader.AdvancedSettings");
        boolean boolean0 = accountProfileDataBean0.equals(accountProfileDataBean1);
        assertEquals(false, boolean0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_3_ckEx3() throws Exception {
        AccountProfileDataBean accountProfileDataBean0 = new AccountProfileDataBean();
        AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean();
        accountProfileDataBean0.setUserID("org.quickserver.util.xmlreader.AdvancedSettings");
        accountProfileDataBean1.setUserID("org.quickserver.util.xmlreader.AdvancedSettings");
        boolean boolean0 = accountProfileDataBean0.equals(accountProfileDataBean1);
        assertEquals(true, boolean0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals_4_RfHe4() throws Exception {
        AccountProfileDataBean accountProfileDataBean0 = new AccountProfileDataBean();
        boolean boolean0 = accountProfileDataBean0.equals(accountProfileDataBean0);
        assertEquals(true, boolean0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetEmail_FAKg0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setEmail("newEmail");
        assert accountProfileDataBean.getEmail().equals("newEmail");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetEmailNull_QROK1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user2", "password2", "FullName2", "Address2", "Email2", "CreditCard2");
        accountProfileDataBean.setEmail(null);
        assert accountProfileDataBean.getEmail() == null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetEmailEmpty_HYLT2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user3", "password3", "FullName3", "Address3", "Email3", "CreditCard3");
        accountProfileDataBean.setEmail("");
        assert accountProfileDataBean.getEmail().equals("");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_vnjq0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
        String expected = "\n\tAccount Profile Data for userID:user123\n\t\t   passwd:password123\n\t\t   fullName:John Doe\n\t\t    address:123 Main St\n\t\t      email:john.doe@example.com\n\t\t creditCard:1234567890";
        assertEquals(expected, accountProfileDataBean.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAccount_tgHj0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        AccountDataBean accountDataBean = new AccountDataBean();
        accountProfileDataBean.setAccount(accountDataBean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_xyID0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID("user2");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_ZgdE1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_WWiX2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID("");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_ZXge3() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID("12345678901234567890123456789012345678901234567890123456789012345678901234567890");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_UnxY4() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID("!@#$%^&*()_+");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_VwEi5() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID("User1");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_Fdpt6() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID("USER1");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_HqrF7() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID("user_1");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetUserID_vMaI8() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        accountProfileDataBean.setUserID("user-1");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmail_IdMv0() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
        assertEquals("john.doe@example.com", account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmailWithEmptyEmail_qhJJ1() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "", "1234567890");
        assertEquals("", account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmailWithNullEmail_oscS2() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", null, "1234567890");
        assertEquals(null, account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmailWithInvalidEmail_QfRO3() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "invalid_email", "1234567890");
        assertEquals("invalid_email", account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmailWithValidEmail_PxAF4() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "valid_email@example.com", "1234567890");
        assertEquals("valid_email@example.com", account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmailWithEmptyPassword_hJtq5() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", "", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
        assertEquals("john.doe@example.com", account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmailWithNullPassword_xtpN6() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", null, "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
        assertEquals("john.doe@example.com", account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmailWithEmptyCreditCard_RFMu7() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "john.doe@example.com", "");
        assertEquals("john.doe@example.com", account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetEmailWithNullCreditCard_UjlN8() {
        AccountProfileDataBean account = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "john.doe@example.com", null);
        assertEquals("john.doe@example.com", account.getEmail());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserID_OWru0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        assertEquals("user1", accountProfileDataBean.getUserID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUserIDCoverage_aIDI1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        assertEquals(null, accountProfileDataBean.getUserID());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCodeWithNullUserID_WGTg1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean(null, "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        int expectedHashCode = 0;
        int actualHashCode = accountProfileDataBean.hashCode();
        assertEquals(expectedHashCode, actualHashCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setFullNameTest1_cGmr0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
        accountProfileDataBean.setFullName("newFullName1");
        assert accountProfileDataBean.getFullName().equals("newFullName1");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setFullNameTest2_uSBs1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user2", "password2", "fullName2", "address2", "email2", "creditCard2");
        accountProfileDataBean.setFullName("newFullName2");
        assert accountProfileDataBean.getFullName().equals("newFullName2");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddress_FdZj0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "email1", "creditCard1");
        String actual = accountProfileDataBean.getAddress();
        String expected = "Address1";
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddressCoverage_BLKD1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
        String actual = accountProfileDataBean.getAddress();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPassword_BXua0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        assertEquals("password1", accountProfileDataBean.getPassword());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPasswordWithNullPassword_RnQe1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", null, "FullName1", "Address1", "Email1", "CreditCard1");
        assertEquals(null, accountProfileDataBean.getPassword());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPasswordWithEmptyPassword_GBOu2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "", "FullName1", "Address1", "Email1", "CreditCard1");
        assertEquals("", accountProfileDataBean.getPassword());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPasswordWithSpecialCharacters_WMQx3() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "!@#$%^&*()", "FullName1", "Address1", "Email1", "CreditCard1");
        assertEquals("!@#$%^&*()", accountProfileDataBean.getPassword());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setCreditCardTest1_LXRx0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
        accountProfileDataBean.setCreditCard("newCreditCard1");
        assert accountProfileDataBean.getCreditCard().equals("newCreditCard1");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setCreditCardTest2_tbqn1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user2", "password2", "fullName2", "address2", "email2", "creditCard2");
        accountProfileDataBean.setCreditCard("newCreditCard2");
        assert accountProfileDataBean.getCreditCard().equals("newCreditCard2");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML_EDpn0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user123", "password123", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
        String expectedHTML = "<BR>Account Profile Data for userID: <B>user123</B>" + "<LI>   passwd:password123</LI>" + "<LI>   fullName:John Doe</LI>" + "<LI>    address:123 Main St</LI>" + "<LI>      email:john.doe@example.com</LI>" + "<LI> creditCard:1234567890</LI>";
        assertEquals(expectedHTML, accountProfileDataBean.toHTML());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFullName_KmyD0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
        assertEquals("John Doe", accountProfileDataBean.getFullName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFullNameWithEmptyFullName_JiIp1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user2", "password2", "", "456 Elm St", "jane.doe@example.com", "0987654321");
        assertEquals("", accountProfileDataBean.getFullName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_Ojsd0_FjxS0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        int expectedHashCode = accountProfileDataBean.getUserID().hashCode();
        int actualHashCode = accountProfileDataBean.hashCode();
        assertEquals(expectedHashCode, actualHashCode);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPasswordLength_rdkt3_GvYa0() {
        AccountProfileDataBean account = new AccountProfileDataBean("12345", "password", "John Doe", "123 Main St", "john@example.com", "1234567890");
        account.setPassword("12345678901234567890");
        assertEquals("12345678901234567890", account.getPassword());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAddress_jPsA0_MzmV0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
        accountProfileDataBean.setAddress("newAddress");
        assertEquals("newAddress", accountProfileDataBean.getAddress());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAddressNull_khwM1_wUBz0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
        accountProfileDataBean.setAddress(null);
        assertEquals(null, accountProfileDataBean.getAddress());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAddressEmpty_oiCO2_lUSk0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
        accountProfileDataBean.setAddress("");
        assertEquals("", accountProfileDataBean.getAddress());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAddressInvalid_Pmel4_KiIy0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
        accountProfileDataBean.setAddress("!@#$%^&*()_+");
        assertEquals("!@#$%^&*()_+", accountProfileDataBean.getAddress());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAddressSpecialCharacters_IVoC5_NQuK0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
        accountProfileDataBean.setAddress("123 Main Street, Anytown, USA");
        assertEquals("123 Main Street, Anytown, USA", accountProfileDataBean.getAddress());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetAddressNumeric_uEsh6_UPVW0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
        accountProfileDataBean.setAddress("1234567890");
        assertEquals("1234567890", accountProfileDataBean.getAddress());
    }
}