/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TradeRunTimeModeLiteral_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testValue_cMFo0() {
        TradeRunTimeModeLiteral tradeRunTimeModeLiteral = new TradeRunTimeModeLiteral("value");
        String result = tradeRunTimeModeLiteral.value();
        assert result.equals("value");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testValueWithStaticMode_bTtB1() {
        TradeRunTimeModeLiteral tradeRunTimeModeLiteral = new TradeRunTimeModeLiteral("static");
        String result = tradeRunTimeModeLiteral.value();
        assert result.equals("static");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testValueWithDynamicMode_ZNgv2() {
        TradeRunTimeModeLiteral tradeRunTimeModeLiteral = new TradeRunTimeModeLiteral("dynamic");
        String result = tradeRunTimeModeLiteral.value();
        assert result.equals("dynamic");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testValueWithLiveMode_nCKF3() {
        TradeRunTimeModeLiteral tradeRunTimeModeLiteral = new TradeRunTimeModeLiteral("live");
        String result = tradeRunTimeModeLiteral.value();
        assert result.equals("live");
    }
}