/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.beans;

import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_MarketSummaryDataBean_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToStringWithTopLosersAndTopGainers_oSsS1() {
        QuoteDataBean quoteDataBean1 = new QuoteDataBean();
        QuoteDataBean quoteDataBean2 = new QuoteDataBean();
        Collection<QuoteDataBean> topLosers = Arrays.asList(quoteDataBean1);
        Collection<QuoteDataBean> topGainers = Arrays.asList(quoteDataBean2);
        MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean(new BigDecimal(100), new BigDecimal(100), 100, topLosers, topGainers);
        String actual = marketSummaryDataBean.toString();
        String expected = "\n\tMarket Summary at: null\n\t\t        TSIA:100\n\t\t    openTSIA:100\n\t\t        gain:0.0\n\t\t      volume:100\n\t\t   Current Top Gainers:\n\t\t\t\n\t\t   Current Top Losers:\n\t\t\t\n";
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML1_ATrt0() {
        MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean();
        String actual = marketSummaryDataBean.toHTML();
        String expected = "<BR>Market Summary at: " + marketSummaryDataBean.getSummaryDate() + "<LI>        TSIA:" + marketSummaryDataBean.getTSIA() + "</LI>" + "<LI>    openTSIA:" + marketSummaryDataBean.getOpenTSIA() + "</LI>" + "<LI>      volume:" + marketSummaryDataBean.getVolume() + "</LI>";
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToHTML5_cHfO4() {
        MarketSummaryDataBean marketSummaryDataBean = new MarketSummaryDataBean();
        marketSummaryDataBean.setTopGainers(new ArrayList<QuoteDataBean>());
        marketSummaryDataBean.setTopLosers(new ArrayList<QuoteDataBean>());
        String actual = marketSummaryDataBean.toHTML();
        String expected = "<BR>Market Summary at: " + marketSummaryDataBean.getSummaryDate() + "<LI>        TSIA:" + marketSummaryDataBean.getTSIA() + "</LI>" + "<LI>    openTSIA:" + marketSummaryDataBean.getOpenTSIA() + "</LI>" + "<LI>      volume:" + marketSummaryDataBean.getVolume() + "</LI>" + "<BR> Current Top Gainers:" + "<BR>   Current Top Losers:";
        assertEquals(expected, actual);
    }
}