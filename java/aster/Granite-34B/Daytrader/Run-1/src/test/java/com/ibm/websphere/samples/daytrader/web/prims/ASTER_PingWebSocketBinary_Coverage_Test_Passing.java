/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.websocket.CloseReason;
import javax.websocket.Session;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingWebSocketBinary_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void onClose_SessionisOpen_Sessionclosed_nyHV0_bVSq0() throws IOException {
        PingWebSocketBinary cut = new PingWebSocketBinary();
        Session session = mock(Session.class);
        CloseReason reason = mock(CloseReason.class);
        when(session.isOpen()).thenReturn(true);
        cut.onClose(session, reason);
        verify(session, times(1)).close();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void onClose_SessionisClosed_Sessionnotclosed_ZhVd1_nhtu0() throws IOException {
        PingWebSocketBinary cut = new PingWebSocketBinary();
        Session session = mock(Session.class);
        CloseReason reason = mock(CloseReason.class);
        when(session.isOpen()).thenReturn(false);
        cut.onClose(session, reason);
        verify(session, times(0)).close();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void onClose_SessionisOpen_IOExceptionthrown_qeoT2_AkdS0() throws IOException {
        PingWebSocketBinary cut = new PingWebSocketBinary();
        Session session = mock(Session.class);
        CloseReason reason = mock(CloseReason.class);
        when(session.isOpen()).thenReturn(true);
        doThrow(new IOException()).when(session).close();
        cut.onClose(session, reason);
        verify(session, times(1)).close();
    }
}