/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JsonDecoder_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testDestroy_LVXF0() {
        JsonDecoder jsonDecoder = new JsonDecoder();
        jsonDecoder.destroy();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecodeWithInvalidJson_tbfA1() {
        JsonDecoder jsonDecoder = new JsonDecoder();
        String json = "invalid json string";
        boolean expected = false;
        boolean actual = jsonDecoder.willDecode(json);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecodeWithEmptyJson_AjPz2() {
        JsonDecoder jsonDecoder = new JsonDecoder();
        String json = "";
        boolean expected = false;
        boolean actual = jsonDecoder.willDecode(json);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWillDecode_ZIoe0_fid1() {
        JsonDecoder jsonDecoder = new JsonDecoder();
        String json = "valid json string";
        boolean expected = false;
        boolean actual = jsonDecoder.willDecode(json);
        assertEquals(expected, actual);
    }
}