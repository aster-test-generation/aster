/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.beanval;

import com.ibm.websphere.samples.daytrader.util.Log;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.springframework.mock.web.MockServletConfig;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.doNothing;
import static org.mockito.Mockito.mock;

public class Aster_PingServletBeanValSimple1_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_Ybye0() {
        PingServletBeanValSimple1 obj = new PingServletBeanValSimple1();
        String expected = "Basic dynamic HTML generation through a servlet";
        assertEquals(expected, obj.getServletInfo());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_GAWj0() throws javax.servlet.ServletException, java.io.IOException {
        HttpServletRequest req = null;
        HttpServletResponse res = null;
        PingServletBeanValSimple1 obj = new PingServletBeanValSimple1();
        obj.doPost(req, res);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_eZgn1() throws javax.servlet.ServletException, java.io.IOException {
        HttpServletRequest req = null;
        HttpServletResponse res = null;
        PingServletBeanValSimple1 obj = new PingServletBeanValSimple1();
        obj.doGet(req, res);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitWithNoException_LlAu0() throws javax.servlet.ServletException {
        PingServletBeanValSimple1 servlet = new PingServletBeanValSimple1();
        ServletConfig config = new MockServletConfig();
        try {
            servlet.init(config);
        } catch (ServletException e) {
            fail("Unexpected exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetContentType_yzHK1_pndu0() throws javax.servlet.ServletException, java.io.IOException {
        PingServletBeanValSimple1 pingServlet = new PingServletBeanValSimple1();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        try {
            doNothing().when(res).setContentType("text/html");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNewSimpleBean1_hfiF2_ZlfC0() throws javax.servlet.ServletException, java.io.IOException {
        PingServletBeanValSimple1 pingServlet = new PingServletBeanValSimple1();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        try {
            SimpleBean1 simpleBean1 = new SimpleBean1();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOutputStream_Jwfe4_EXwa0() throws javax.servlet.ServletException, java.io.IOException {
        PingServletBeanValSimple1 pingServlet = new PingServletBeanValSimple1();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        try {
            ServletOutputStream out = res.getOutputStream();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHitCountException_OrJS7_CjOx0() throws javax.servlet.ServletException, java.io.IOException {
        PingServletBeanValSimple1 pingServlet = new PingServletBeanValSimple1();
        HttpServletRequest req = mock(HttpServletRequest.class);
        HttpServletResponse res = mock(HttpServletResponse.class);
        try {
        } catch (Exception e) {
            Log.error(e, "PingServlet.doGet(...): general exception caught");
        }
    }
}