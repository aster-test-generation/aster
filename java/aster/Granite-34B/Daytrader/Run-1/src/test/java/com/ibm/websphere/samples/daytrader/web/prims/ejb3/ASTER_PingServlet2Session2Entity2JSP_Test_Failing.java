/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockServletConfig;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2Entity2JSP_Test_Failing {
    PingServlet2Session2Entity2JSP pingservlet2session2entity2jsp;
    private TradeServices tradeSLSBLocal;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testinit() throws Exception {
        pingservlet2session2entity2jsp = mock(PingServlet2Session2Entity2JSP.class);
        ServletConfig config = mock(ServletConfig.class);
        when(pingservlet2session2entity2jsp.getServletConfig()).thenReturn(config);
        pingservlet2session2entity2jsp.init(config);
        verify(pingservlet2session2entity2jsp, times(1)).getServletConfig();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInit_IMKq0() throws ServletException {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        ServletConfig config = new MockServletConfig();
        servlet.init(config);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getServletInfoTest_fvGy0() {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        String expected = "web primitive, tests Servlet to Session to Entity EJB to JSP path";
        String actual = servlet.getServletInfo();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_UBAS0_SCdj0() throws ServletException, IOException {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        servlet.doPost(request, response);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPostWithNullRequest_gwyX1_JLYk0() throws ServletException, IOException {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        HttpServletRequest request = null;
        HttpServletResponse response = mock(HttpServletResponse.class);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPostWithNullResponse_ycik2_EARr0() throws ServletException, IOException {
        PingServlet2Session2Entity2JSP servlet = new PingServlet2Session2Entity2JSP();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = null;
        servlet.doPost(request, response);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPostWithNullServlet_RVIV3_fClt0() throws ServletException, IOException {
        PingServlet2Session2Entity2JSP servlet = null;
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        servlet.doPost(request, response);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoPost() throws Exception {
        pingservlet2session2entity2jsp = new PingServlet2Session2Entity2JSP();
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        pingservlet2session2entity2jsp.doPost(request, response);
        verify(request, times(1)).getParameter("param1");
        verify(response, times(1)).getWriter();
        verify(response, times(1)).setContentType("text/html");
    }
}