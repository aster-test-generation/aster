/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.util;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_FinancialUtils_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintGainHTMLWithNegativeGain_RAnS1() {
        BigDecimal gain = new BigDecimal(-50.0);
        String expectedHtmlString = "<FONT color=\"#ff0000\">-50.0</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
        String actualHtmlString = FinancialUtils.printGainHTML(gain);
        assertEquals(expectedHtmlString, actualHtmlString);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintGainHTMLWithPositiveGain_CUHF0_fid1() {
        BigDecimal gain = new BigDecimal(100.0);
        String expectedHtmlString = "<FONT color=\"#009900\">100.0</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
        String actualHtmlString = FinancialUtils.printGainHTML(gain);
        assertEquals(expectedHtmlString, actualHtmlString);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testComputeGain_guSS0() {
        BigDecimal currentBalance = BigDecimal.valueOf(1000.00);
        BigDecimal openBalance = BigDecimal.valueOf(500.00);
        BigDecimal expectedGain = BigDecimal.valueOf(500.00);
        BigDecimal actualGain = FinancialUtils.computeGain(currentBalance, openBalance);
        Assertions.assertEquals(expectedGain, actualGain);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrintGainPercentHTMLWithPositiveGain_JVsY0_fid1() {
        BigDecimal gain = new BigDecimal(100.0);
        String expectedHtmlString = "(<B><FONT color=\"#009900\">+100.00</FONT></B>)<IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
        assertEquals(expectedHtmlString, FinancialUtils.printGainPercentHTML(gain));
    }
}