/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.util.concurrent.TimeUnit;
import javax.websocket.CloseReason;
import javax.websocket.Session;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingWebSocketTextAsync_Test_Passing {
    @Mock
    Session session;
    @Mock
    CloseReason reason;
    PingWebSocketTextAsync pingwebsockettextasync;
    private Session currentSession = null;
    private Integer hitCount = null;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOnError_MWyD0() {
        PingWebSocketTextAsync pingWebSocketTextAsync = new PingWebSocketTextAsync();
        Throwable t = new Throwable();
        pingWebSocketTextAsync.onError(t);
        assertTrue(true); // No assert statement needed for coverage
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOnErrorWithNoThrowable_KcCQ2() {
        PingWebSocketTextAsync pingWebSocketTextAsync = new PingWebSocketTextAsync();
        pingWebSocketTextAsync.onError(new Throwable());
        assertTrue(true); // No assert statement needed for coverage
    }
}