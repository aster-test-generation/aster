/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import com.ibm.websphere.samples.daytrader.util.FinancialUtils;
import java.math.BigDecimal;
import java.util.Date;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountDataJSF_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setCurrentTimeTest_DVlD0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date expectedCurrentTime = new Date();
        accountDataJSF.setCurrentTime(expectedCurrentTime);
        assertEquals(expectedCurrentTime, accountDataJSF.getCurrentTime());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setCurrentTimeTest_NullDate_cThs1() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date expectedCurrentTime = null;
        accountDataJSF.setCurrentTime(expectedCurrentTime);
        assertEquals(expectedCurrentTime, accountDataJSF.getCurrentTime());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setCurrentTimeTest_FutureDate_pPVk2() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date expectedCurrentTime = new Date(System.currentTimeMillis() + 1000);
        accountDataJSF.setCurrentTime(expectedCurrentTime);
        assertEquals(expectedCurrentTime, accountDataJSF.getCurrentTime());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setCurrentTimeTest_PastDate_LlwI3() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date expectedCurrentTime = new Date(System.currentTimeMillis() - 1000);
        accountDataJSF.setCurrentTime(expectedCurrentTime);
        assertEquals(expectedCurrentTime, accountDataJSF.getCurrentTime());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setCurrentTimeTest_MaxDate_LALB4() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date expectedCurrentTime = new Date(Long.MAX_VALUE);
        accountDataJSF.setCurrentTime(expectedCurrentTime);
        assertEquals(expectedCurrentTime, accountDataJSF.getCurrentTime());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setCurrentTimeTest_MinDate_EvRE5() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date expectedCurrentTime = new Date(Long.MIN_VALUE);
        accountDataJSF.setCurrentTime(expectedCurrentTime);
        assertEquals(expectedCurrentTime, accountDataJSF.getCurrentTime());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setCurrentTimeTest_RandomDate_FuTQ6() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date expectedCurrentTime = new Date(new Random().nextLong());
        accountDataJSF.setCurrentTime(expectedCurrentTime);
        assertEquals(expectedCurrentTime, accountDataJSF.getCurrentTime());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetGainPercentHTML_nRJw0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        String actual = accountDataJSF.getGainPercentHTML();
        String expected = FinancialUtils.printGainPercentHTML(accountDataJSF.getGainPercent());
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetGainPercentHTML100PercentLineCoverage_hcot1() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.getGainPercentHTML();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToggleShowAllRows_JBub0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.toggleShowAllRows();
        assertEquals(0, accountDataJSF.getNumberOfOrderRows());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHoldingsTotal3_TFOu2() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setHoldingsTotal(new BigDecimal(-1));
        accountDataJSF.getHoldingsTotal();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetNumberHoldings_zNco0() {
        AccountDataJSF accountData = new AccountDataJSF(null);
        accountData.setNumberHoldings(100);
        assertEquals(new Integer(100), accountData.getNumberHoldings());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetNumberHoldingsWithNegativeValue_GxnS2() {
        AccountDataJSF accountData = new AccountDataJSF(null);
        accountData.setNumberHoldings(-100);
        assertEquals(new Integer(0), accountData.getNumberHoldings());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetNumberHoldingsWithPositiveValue_TYeI4() {
        AccountDataJSF accountData = new AccountDataJSF(null);
        accountData.setNumberHoldings(100);
        assertEquals(100, accountData.getNumberHoldings().intValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLastLoginWithNullServices_uBFQ1() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        Date lastLogin = accountDataJSF.getLastLogin();
        assertNull(lastLogin);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetGainPercentHTML100PercentBranchCoverage_zsaV2_NLmJ0_1() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setGainPercent(BigDecimal.valueOf(0.0));
        String actual = accountDataJSF.getGainPercentHTML();
        accountDataJSF.setGainPercent(BigDecimal.valueOf(0.01));
        actual = accountDataJSF.getGainPercentHTML();
        assertEquals("0.00%", actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetGainPercentHTML100PercentBranchCoverage_zsaV2_NLmJ0_2() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setGainPercent(BigDecimal.valueOf(0.0));
        String actual = accountDataJSF.getGainPercentHTML();
        accountDataJSF.setGainPercent(BigDecimal.valueOf(0.01));
        actual = accountDataJSF.getGainPercentHTML();
        assertEquals("+1.00%", actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetBalance_lQgn0_IRLm0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setBalance(BigDecimal.ONE);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHoldingsTotal_Ulji0() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setHoldingsTotal(new BigDecimal(0));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHoldingsTotal2_qiSn1() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setHoldingsTotal(new BigDecimal(100));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHoldingsTotal3_TFOu2_fid1() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setHoldingsTotal(new BigDecimal(-1));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHoldingsTotal4_eyTu3() {
        AccountDataJSF accountDataJSF = new AccountDataJSF(null);
        accountDataJSF.setHoldingsTotal(null);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetNumberHoldingsWithNull_pBAP1() {
        AccountDataJSF accountData = new AccountDataJSF(null);
        accountData.setNumberHoldings(null);
        assertEquals(new Integer(0), accountData.getNumberHoldings());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetNumberHoldingsWithZero_GjvH3() {
        AccountDataJSF accountData = new AccountDataJSF(null);
        accountData.setNumberHoldings(0);
        assertEquals(new Integer(0), accountData.getNumberHoldings());
    }
}