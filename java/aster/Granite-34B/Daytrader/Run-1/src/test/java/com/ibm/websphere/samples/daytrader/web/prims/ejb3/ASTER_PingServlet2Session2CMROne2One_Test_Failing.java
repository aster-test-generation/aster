/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean;
import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.io.IOException;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Session2CMROne2One_Test_Failing {
    private static int hitCount;
    private static String initTime;
    PingServlet2Session2CMROne2One pingservlet2session2cmrone2one;
    HttpServletRequest request;
    HttpServletResponse response;
    private TradeServices tradeSLSBLocal;

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInitWithNullConfig_HKGq1() {
        PingServlet2Session2CMROne2One servlet = new PingServlet2Session2CMROne2One();
        try {
            servlet.init(null);
            fail("Expected ServletException");
        } catch (ServletException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_PiOx0() throws ServletException, IOException {
        PingServlet2Session2CMROne2One servlet = new PingServlet2Session2CMROne2One();
        HttpServletRequest request = new MockHttpServletRequest();
        HttpServletResponse response = new MockHttpServletResponse();
        servlet.doPost(request, response);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetServletInfo_EgCJ0() {
        PingServlet2Session2CMROne2One servlet = new PingServlet2Session2CMROne2One();
        String result = servlet.getServletInfo();
        assertEquals("web primitive, tests Servlet to Entity EJB path", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testdoGet() throws Exception {
        pingservlet2session2cmrone2one = new PingServlet2Session2CMROne2One();
        tradeSLSBLocal = mock(TradeServices.class);
        doReturn(new AccountProfileDataBean()).when(tradeSLSBLocal).getAccountProfileData(anyString());
        HttpServletRequest request = mock(HttpServletRequest.class);
        HttpServletResponse response = mock(HttpServletResponse.class);
        when(request.getContextPath()).thenReturn("localhost");
        pingservlet2session2cmrone2one.doGet(request, response);
        verify(response, atLeast(1)).setContentType("text/html");
        verify(response, atLeast(1)).getWriter();
        verify(request, atLeast(1)).getContextPath();
        verify(tradeSLSBLocal, atLeast(1)).getAccountProfileData(anyString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testinit_omkv0_1() throws Exception {
        pingservlet2session2cmrone2one = mock(PingServlet2Session2CMROne2One.class);
        hitCount = 0;
        initTime = new java.util.Date().toString();
        ServletConfig config = mock(ServletConfig.class);
        doCallRealMethod().when(pingservlet2session2cmrone2one).init(config);
        pingservlet2session2cmrone2one.init(config);
        assertEquals(0, hitCount);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testinit_omkv0_2() throws Exception {
        pingservlet2session2cmrone2one = mock(PingServlet2Session2CMROne2One.class);
        hitCount = 0;
        initTime = new java.util.Date().toString();
        ServletConfig config = mock(ServletConfig.class);
        doCallRealMethod().when(pingservlet2session2cmrone2one).init(config);
        pingservlet2session2cmrone2one.init(config);
        assertEquals(new java.util.Date().toString(), initTime);
    }
}