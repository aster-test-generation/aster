/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import java.io.InputStream;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_TradeDirectDBUtils_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCheckDBProductName2_juiB1() throws Exception {
        TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
        String dbProductName = tradeDirectDBUtils.checkDBProductName();
        assertNull(dbProductName);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_rsFM0() throws java.lang.Exception {
        TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
        InputStream ddlFile = null;
        tradeDirectDBUtils.parseDDLToBuffer(ddlFile);
    }

    @Test
    public void test3_PFJn2_LSVP0() throws java.lang.Exception {
        TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
        tradeDirectDBUtils.parseDDLToBuffer(mock(InputStream.class));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_rsFM0_fid1() throws java.lang.Exception {
        TradeDirectDBUtils tradeDirectDBUtils = new TradeDirectDBUtils();
        InputStream ddlFile = null;
        tradeDirectDBUtils.parseDDLToBuffer(ddlFile);
        assertEquals(null, tradeDirectDBUtils.parseDDLToBuffer(ddlFile));
    }
}