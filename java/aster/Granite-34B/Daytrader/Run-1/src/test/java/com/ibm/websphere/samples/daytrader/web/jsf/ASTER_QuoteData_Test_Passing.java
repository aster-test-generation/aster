/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteData_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetRange_doPX0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL");
        quoteData.setRange("10-20");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetRangeWithFullConstructor_kECs1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("90.00"), new BigDecimal("100.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), "Apple Inc.", 1000000.0, 10.0);
        quoteData.setRange("10-20");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetSymbol_rGMe0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL");
        quoteData.setSymbol("MSFT");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testSetSymbolWithAllParameters_PAYm1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), "Apple Inc.", 1000000.0, 10.0);
        quoteData.setSymbol("MSFT");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setHighTest_Svql0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL");
        quoteData.setHigh(new BigDecimal("110.00"));
        assert quoteData.getHigh().equals(new BigDecimal("110.00"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setHighTest2_dLbX1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("90.00"), new BigDecimal("100.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), "Apple Inc.", 1000000.0, 10.0);
        quoteData.setHigh(new BigDecimal("120.00"));
        assert quoteData.getHigh().equals(new BigDecimal("120.00"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent_jwig0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("100.00"), "TEST");
        quoteData.setGainPercent(new BigDecimal("100.00"));
        assertEquals(new BigDecimal("100.00"), quoteData.getGainPercent());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainPercent_100PercentCoverage_WbAR1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("100.00"), "TEST");
        quoteData.setGainPercent(new BigDecimal("100.00"));
        quoteData.setGainPercent(new BigDecimal("0.00"));
        quoteData.setGainPercent(new BigDecimal("50.00"));
        quoteData.setGainPercent(new BigDecimal("100.00"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getChangeHTML_positiveChange_LGEq0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("105.00"), "ABC", new BigDecimal("110.00"), new BigDecimal("95.00"), "ABC Company", 100000.0, 5.0);
        String actual = quoteData.getChangeHTML();
        String expected = "<FONT color=\"#009900\">5.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getChangeHTML_negativeChange_GqRc1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("95.00"), "ABC", new BigDecimal("110.00"), new BigDecimal("95.00"), "ABC Company", 100000.0, -5.0);
        String actual = quoteData.getChangeHTML();
        String expected = "<FONT color=\"#cc0000\">-5.00</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getCompanyNameTest2_XKtB1() {
        QuoteData q = new QuoteData(new BigDecimal("1.0"), new BigDecimal("2.0"), "sym", new BigDecimal("3.0"), new BigDecimal("4.0"), "company", 1.0, 2.0);
        assertEquals("company", q.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGain_VIYp0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL");
        quoteData.setGain(new BigDecimal("10.00"));
        assertEquals(new BigDecimal("10.00"), quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetGainWithVolume_WLyp1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), "Apple Inc.", 1000000.0, 10.0);
        quoteData.setGain(new BigDecimal("10.00"));
        assertEquals(new BigDecimal("10.00"), quoteData.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setVolume_YFyr0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), "Apple Inc.", 1000000.0, 10.0);
        quoteData.setVolume(2000000.0);
        assert quoteData.getVolume() == 2000000.0;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRangeWithVolume_tJOo1_1() {
        QuoteData q = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "AAPL", new BigDecimal("12.0"), new BigDecimal("9.0"), "Apple", 1000000.0, 1.0);
        String range = q.getRange();
        assertNotNull(range);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetRangeWithVolume_tJOo1_2() {
        QuoteData q = new QuoteData(new BigDecimal("10.0"), new BigDecimal("11.0"), "AAPL", new BigDecimal("12.0"), new BigDecimal("9.0"), "Apple", 1000000.0, 1.0);
        String range = q.getRange();
        assertTrue(range.matches("^\\d+\\.\\d+-\\d+\\.\\d+$"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrice_tylB0() {
        QuoteData q = new QuoteData(new BigDecimal("100.0"), new BigDecimal("101.0"), "AAPL");
        assertEquals(new BigDecimal("100.0"), q.getPrice());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOpen_CEIQ0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL");
        quoteData.setOpen(new BigDecimal("110.00"));
        assertEquals(new BigDecimal("110.00"), quoteData.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetOpenWithAllParameters_sgbt1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("120.00"), new BigDecimal("80.00"), "Apple Inc.", 1000000.0, 10.0);
        quoteData.setOpen(new BigDecimal("110.00"));
        assertEquals(new BigDecimal("110.00"), quoteData.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetChange_mrnL0() {
        QuoteData quoteData = new QuoteData(new BigDecimal(100.0), new BigDecimal(90.0), "ABC");
        quoteData.setChange(10.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetChangeWithAllParameters_wmNp1() {
        QuoteData quoteData = new QuoteData(new BigDecimal(90.0), new BigDecimal(100.0), "ABC", new BigDecimal(110.0), new BigDecimal(80.0), "XYZ", 10000.0, 10.0);
        quoteData.setChange(10.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpen_FuXy0() {
        QuoteData qd = new QuoteData(new BigDecimal("100.00"), new BigDecimal("101.00"), "TEST");
        assertEquals(new BigDecimal("101.00"), qd.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpen2_bZPx1() {
        QuoteData qd = new QuoteData(new BigDecimal("100.00"), new BigDecimal("101.00"), "TEST");
        assertEquals(new BigDecimal("100.00"), qd.getPrice());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpen3_KFSy2() {
        QuoteData qd = new QuoteData(new BigDecimal("100.00"), new BigDecimal("101.00"), "TEST");
        assertEquals("TEST", qd.getSymbol());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLow2_sARi1() {
        QuoteData q = new QuoteData(new BigDecimal("1.0"), new BigDecimal("2.0"), "sym", new BigDecimal("3.0"), new BigDecimal("4.0"), "comp", 100.0, 200.0);
        assertEquals(new BigDecimal("4.0"), q.getLow());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetChangeWithVolume_YauO1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("105.00"), "ABC", new BigDecimal("110.00"), new BigDecimal("95.00"), "XYZ", 100000.0, 5.0);
        double change = quoteData.getChange();
        assertEquals(5.0, change, 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHighWithVolume_CfLR1() {
        QuoteData q = new QuoteData(new BigDecimal("10.0"), new BigDecimal("10.0"), "TEST", new BigDecimal("10.0"), new BigDecimal("10.0"), "TEST", 100.0, 100.0);
        assertEquals(new BigDecimal("10.0"), q.getHigh());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setPriceTest_iMlT0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL");
        quoteData.setPrice(new BigDecimal("110.00"));
        assert quoteData.getPrice().equals(new BigDecimal("110.00"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol_nkmS0() {
        QuoteData q = new QuoteData(new BigDecimal(100), new BigDecimal(101), "TEST");
        assertEquals("TEST", q.getSymbol());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetSymbol2_Wdcb1() {
        QuoteData q = new QuoteData(new BigDecimal(100), new BigDecimal(101), "TEST", new BigDecimal(102), new BigDecimal(99), "TESTING", 1000.0, 1.0);
        assertEquals("TEST", q.getSymbol());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLow_KPlc0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.0"), new BigDecimal("90.0"), "AAPL");
        quoteData.setLow(new BigDecimal("80.0"));
        assertEquals(new BigDecimal("80.0"), quoteData.getLow());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLowWithVolumeAndChange_fjWN1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("90.0"), new BigDecimal("100.0"), "AAPL", new BigDecimal("110.0"), new BigDecimal("80.0"), "Apple Inc.", 1000000.0, 10.0);
        quoteData.setLow(new BigDecimal("70.0"));
        assertEquals(new BigDecimal("70.0"), quoteData.getLow());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCompanyName_KqTR0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), null, 100000.0, 10.0);
        quoteData.setCompanyName("Apple Inc.");
        assertEquals("Apple Inc.", quoteData.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCompanyNameNull_mSVa1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), null, 100000.0, 10.0);
        quoteData.setCompanyName(null);
        assertEquals(null, quoteData.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCompanyNameEmpty_HjrZ2() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), null, 100000.0, 10.0);
        quoteData.setCompanyName("");
        assertEquals("", quoteData.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVolume_dCbp0() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), "Apple Inc.", 1000000.0, 10.0);
        assertEquals(1000000.0, quoteData.getVolume(), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVolumeWithZeroVolume_dDqQ1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), "Apple Inc.", 0.0, 10.0);
        assertEquals(0.0, quoteData.getVolume(), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetVolumeWithNegativeVolume_CqGx2() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("90.00"), "AAPL", new BigDecimal("110.00"), new BigDecimal("80.00"), "Apple Inc.", -1000000.0, 10.0);
        assertEquals(-1000000.0, quoteData.getVolume(), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getCompanyNameTest1_qNnK0_fid1() {
        QuoteData q = new QuoteData(new BigDecimal("1.0"), new BigDecimal("2.0"), "sym");
        assertNull(q.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPrice2_bYgw1_fid1() {
        QuoteData q = new QuoteData(new BigDecimal("100.0"), new BigDecimal("100.0"), "AAPL", new BigDecimal("102.0"), new BigDecimal("99.0"), "Apple", 1000000.0, 1.0);
        assertEquals(new BigDecimal("100.0"), q.getPrice());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetGain_uqQY0_fid1() {
        QuoteData q = new QuoteData(new BigDecimal(100), new BigDecimal(100), "AAPL");
        assertNull(q.getGain());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOpen4_HWyi3_fid1() {
        QuoteData qd = new QuoteData(new BigDecimal("101.00"), new BigDecimal("101.00"), "TEST");
        assertEquals(new BigDecimal("101.00"), qd.getOpen());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetChange_rMmg0_fid1() {
        QuoteData quoteData = new QuoteData(new BigDecimal("100.00"), new BigDecimal("105.00"), "ABC");
        double change = quoteData.getChange();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getGainPercent_uAVL0_fid1() {
        QuoteData qd = new QuoteData(new BigDecimal("100.00"), new BigDecimal("100.00"), "TEST");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getGainPercent_100_aeDd1_fid1() {
        QuoteData qd = new QuoteData(new BigDecimal("100.00"), new BigDecimal("0.00"), "TEST");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getGainPercent_50_HOhi2_fid1() {
        QuoteData qd = new QuoteData(new BigDecimal("100.00"), new BigDecimal("50.00"), "TEST");
    }
}