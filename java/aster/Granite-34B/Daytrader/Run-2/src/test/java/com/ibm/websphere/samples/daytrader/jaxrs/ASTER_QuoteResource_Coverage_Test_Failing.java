/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.jaxrs;

import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteResource_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGetWithValidSymbols_YaVZ0_2() {
        QuoteResource quoteResource = new QuoteResource();
        List<QuoteDataBean> quotes = quoteResource.quotesGet("AAPL, IBM");
        assertEquals(2, quotes.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGetWithInvalidSymbols_BEfW1_2() {
        QuoteResource quoteResource = new QuoteResource();
        List<QuoteDataBean> quotes = quoteResource.quotesGet("AAPL, IBM,invalid");
        assertEquals(2, quotes.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGetWithDuplicateSymbols_eUnb5_2_fid2() {
        QuoteResource quoteResource = new QuoteResource();
        List<QuoteDataBean> quotes = quoteResource.quotesGet("AAPL,AAPL");
        assertEquals(1, quotes.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQuotesGetWithMaxSymbols_NMku6_2() {
        QuoteResource quoteResource = new QuoteResource();
        String symbols = "";
        for (int i = 0; i < 100; i++) {
            symbols += "AAPL,";
        }
        List<QuoteDataBean> quotes = quoteResource.quotesGet(symbols);
        assertEquals(100, quotes.size());
    }
}