/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetEmailCoverage_cHuL2() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "Email1", "CreditCard1");
        String email = accountProfileDataBean.getEmail();
        assert email.equals("Email1");
        assert email.equals("Email2");
        assert email.equals("Email3");
        assert email.equals("Email4");
        assert email.equals("Email5");
        assert email.equals("Email6");
        assert email.equals("Email7");
        assert email.equals("Email8");
        assert email.equals("Email9");
        assert email.equals("Email10");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrint_bdTn0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "email1", "creditCard1");
        accountProfileDataBean.print();
        assertEquals("AccountProfileDataBean{userID='user1', password='password1', fullName='FullName1', address='Address1', email='email1', creditCard='creditCard1'}", accountProfileDataBean.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_Lcoz0() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertNotNull(accountDataBean);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccountForCoverage_aRKB3() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        accountDataBean.hashCode();
        accountDataBean.getCreationDate();
        accountDataBean.getLogoutCount();
        accountDataBean.getHoldings();
        accountDataBean.getLoginCount();
        accountDataBean.getAccountID();
        accountDataBean.getProfileID();
        accountDataBean.getOrders();
        accountDataBean.getLastLogin();
        accountDataBean.getBalance();
        accountDataBean.getProfile();
        accountDataBean.getOpenBalance();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testPrint_bdTn0_fid1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "FullName1", "Address1", "email1", "creditCard1");
        accountProfileDataBean.print();
        assertEquals("	Account Profile Data for userID:user1		   passwd:password1		   fullName:FullName1		    address:Address1		      email:email1		 creditCard:creditCard1", accountProfileDataBean.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAccount_Lcoz0_fid1() {
        AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("userID", "password", "fullName", "address", "email", "creditCard");
        AccountDataBean accountDataBean = accountProfileDataBean.getAccount();
        assertNotNull(accountDataBean, "The accountDataBean should not be null");
    }
}