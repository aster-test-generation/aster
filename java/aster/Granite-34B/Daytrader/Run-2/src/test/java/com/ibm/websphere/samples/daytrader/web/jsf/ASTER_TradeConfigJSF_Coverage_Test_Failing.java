/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TradeConfigJSF_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void resetTradeTest1_nhKz0() {
        TradeConfigJSF tradeConfig = new TradeConfigJSF();
        String result = tradeConfig.resetTrade();
        assertEquals("Trade Reset completed successfully", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void resetTradeTest2_CBiP1() {
        TradeConfigJSF tradeConfig = new TradeConfigJSF();
        String result = tradeConfig.resetTrade();
        assertEquals("Trade Reset Error  - see log for details", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void resetTradeTest3_VBXA2_fid1() {
        TradeConfigJSF tradeConfig = new TradeConfigJSF();
        String result = tradeConfig.resetTrade();
        Assertions.assertEquals("Trade Reset completed successfully", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void resetTradeTest13_lVrm12_fid1() {
        TradeConfigJSF tradeConfig = new TradeConfigJSF();
        String result = tradeConfig.resetTrade();
        Assertions.assertNotNull(result);
    }
}