/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.math.BigDecimal;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_OrderDataBean_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals1_QUiE0() {
        OrderDataBean orderDataBean1 = new OrderDataBean(1, "orderType", "orderStatus", new Date(), new Date(), 1.0, new BigDecimal(1.0), new BigDecimal(1.0), "symbol");
        OrderDataBean orderDataBean2 = new OrderDataBean(1, "orderType", "orderStatus", new Date(), new Date(), 1.0, new BigDecimal(1.0), new BigDecimal(1.0), "symbol");
        assertTrue(orderDataBean1.equals(orderDataBean2));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEquals2_hjim1() {
        OrderDataBean orderDataBean1 = new OrderDataBean(1, "orderType", "orderStatus", new Date(), new Date(), 1.0, new BigDecimal(1.0), new BigDecimal(1.0), "symbol");
        OrderDataBean orderDataBean2 = new OrderDataBean(2, "orderType", "orderStatus", new Date(), new Date(), 1.0, new BigDecimal(1.0), new BigDecimal(1.0), "symbol");
        assertFalse(orderDataBean1.equals(orderDataBean2));
    }
}