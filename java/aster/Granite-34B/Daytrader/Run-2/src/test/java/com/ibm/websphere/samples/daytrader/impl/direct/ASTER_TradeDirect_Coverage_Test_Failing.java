/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.impl.direct;

import com.ibm.websphere.samples.daytrader.entities.*;
import java.math.BigDecimal;
import java.util.Collection;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TradeDirect_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void investmentReturn_UnsupportedOperationException_Lqjs0() {
        TradeDirect tradeDirect = new TradeDirect();
        double rnd1 = 0.0;
        double rnd2 = 1.0;
        double expected = 0.0;
        double actual = tradeDirect.investmentReturn(rnd1, rnd2);
        assertEquals(expected, actual, 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateQuotePriceVolume_bGhO0_1() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        TradeDirect tradeDirect = new TradeDirect();
        quoteDataBean = tradeDirect.updateQuotePriceVolume("symbol", new BigDecimal(100), 100);
        assertEquals(quoteDataBean.getPrice(), new BigDecimal(100));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateQuotePriceVolume_bGhO0_2() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        TradeDirect tradeDirect = new TradeDirect();
        quoteDataBean = tradeDirect.updateQuotePriceVolume("symbol", new BigDecimal(100), 100);
        assertEquals(quoteDataBean.getVolume(), 100);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderAsync1_jExU0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 1;
        boolean twoPhase = true;
        Future<OrderDataBean> future = tradeDirect.completeOrderAsync(orderID, twoPhase);
        Assertions.assertEquals(null, future);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCompleteOrderAsync2_XWFF1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 2;
        boolean twoPhase = false;
        Future<OrderDataBean> future = tradeDirect.completeOrderAsync(orderID, twoPhase);
        Assertions.assertEquals(null, future);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest2_mPfD1() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid2");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest4_GMxI3() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid4");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest5_cPuz4() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid5");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest7_XNuE6() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid7");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest9_KKQG8() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid9");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest10_Yqmm9() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid10");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest11_cfUT10() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid11");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogout_uimL0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.logout("user123");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogoutWithValidUser_WfCQ5() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.logout("validUser");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogoutWithMultipleUsers_ulta7() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        tradeDirect.logout("user123");
        tradeDirect.logout("user456");
        tradeDirect.logout("user789");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder1_dcAX0() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 1;
        boolean twoPhase = true;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder2_wbuQ1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 2;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
        // Add assertion here
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder3_OtuZ2() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 3;
        boolean twoPhase = true;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder4_ovKE3() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 4;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder5_chEG4() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 5;
        boolean twoPhase = true;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder6_vkvI5() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 6;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
        // Add assertions here
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder7_jpgC6() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 7;
        boolean twoPhase = true;
        tradeDirect.queueOrder(orderID, twoPhase);
        // Add assertion here
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder8_KcOg7() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 8;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder9_zpxn8() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 9;
        boolean twoPhase = true;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder10_jIiK9() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 10;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder11_DxKX10() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 11;
        boolean twoPhase = true;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder12_gxfH11() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 12;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder13_pISJ12() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 13;
        boolean twoPhase = true;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder14_AnWS13() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 14;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest1_bTAb0() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid1");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest2_CBip1() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid2");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest3_davV2() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid3");
        Assertions.assertNull(accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest4_NsFz3() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid4");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest5_aWbe4() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid5");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest6_SjFY5() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid6");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest7_AxEW6() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid7");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest8_ljFg7() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid8");
        Assertions.assertNull(accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest9_eJfK8() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid9");
        Assertions.assertNull(accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest10_NFVJ9() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid10");
        Assertions.assertNull(accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest11_bTZW10() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid11");
        Assertions.assertNull(accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote1_UzOy0() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertNotNull(quoteData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote2_vueY1() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote(null, "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertNotNull(quoteData, "The createQuote operation failed to return a valid QuoteDataBean object.");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote3_eQGd2() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", null, new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertNotNull(quoteData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote4_PJbK3() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", null);
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertNotNull(quoteData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote5_yzdH4() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertNotNull(quoteData);
        assertEquals("symbol", quoteData.getSymbol());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote6_SFUA5() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertEquals("companyName", quoteData.getCompanyName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote7_EkQX6() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertEquals(0.0, quoteData.getVolume(), 0.0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote8_CfMi7() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertEquals(10.00, quoteData.getPrice().doubleValue(), 0.00);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote10_hqBd9() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertEquals(10.00, quoteData.getLow().doubleValue(), 0.00);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote11_XNyk10() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertEquals(10.00, quoteData.getHigh().doubleValue(), 0.00);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getHoldingsTest1_jCeH0() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        Collection<HoldingDataBean> holdingDataBeans = null;
        try {
            holdingDataBeans = trade.getHoldings("uid1");
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertNotNull(holdingDataBeans);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountDataTest1_wsNW0() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        AccountDataBean accountData = null;
        try {
            accountData = trade.getAccountData("12345");
            Assertions.assertEquals(null, accountData);
        } catch (Exception e) {
            Assertions.fail("No Exception should be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountDataTest2_fOyH1() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        AccountDataBean accountData = null;
        try {
            accountData = trade.getAccountData(null);
            Assertions.assertEquals(null, accountData);
        } catch (Exception e) {
            Assertions.fail("No Exception should be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountDataTest3_jUws2() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        AccountDataBean accountData = null;
        try {
            accountData = trade.getAccountData("");
            Assertions.assertEquals(null, accountData);
        } catch (Exception e) {
            Assertions.fail("No Exception should be thrown");
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void buyTest1_lRIQ0() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        String userID = "uid1";
        String symbol = "s1";
        double quantity = 100.0;
        int orderProcessingMode = 1;
        try {
            OrderDataBean orderData = trade.buy(userID, symbol, quantity, orderProcessingMode);
            Assertions.assertNotNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Failed with exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void buyTest2_aVSr1() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        String userID = "uid2";
        String symbol = "s2";
        double quantity = 200.0;
        int orderProcessingMode = 2;
        try {
            OrderDataBean orderData = trade.buy(userID, symbol, quantity, orderProcessingMode);
            Assertions.assertNotNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Failed with exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void buyTest3_hBoh2() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        String userID = "uid3";
        String symbol = "s3";
        double quantity = 300.0;
        int orderProcessingMode = 3;
        try {
            OrderDataBean orderData = trade.buy(userID, symbol, quantity, orderProcessingMode);
            Assertions.assertNotNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Failed with exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void buyTest4_uXUZ3() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        String userID = "uid4";
        String symbol = "s4";
        double quantity = 400.0;
        int orderProcessingMode = 1;
        try {
            OrderDataBean orderData = trade.buy(userID, symbol, quantity, orderProcessingMode);
            Assertions.assertNotNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Failed with exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void buyTest5_wlIo4() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        String userID = "uid5";
        String symbol = "s5";
        double quantity = 500.0;
        int orderProcessingMode = 2;
        try {
            OrderDataBean orderData = trade.buy(userID, symbol, quantity, orderProcessingMode);
            Assertions.assertNotNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Failed with exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void buyTest6_wHrK5() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        String userID = "uid6";
        String symbol = "s6";
        double quantity = 600.0;
        int orderProcessingMode = 3;
        try {
            OrderDataBean orderData = trade.buy(userID, symbol, quantity, orderProcessingMode);
            Assertions.assertNotNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Failed with exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void buyTest7_BuIt6() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        String userID = "uid7";
        String symbol = "s7";
        double quantity = 700.0;
        int orderProcessingMode = 1;
        try {
            OrderDataBean orderData = trade.buy(userID, symbol, quantity, orderProcessingMode);
            Assertions.assertNotNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Failed with exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void buyTest8_ztjL7() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        String userID = "uid8";
        String symbol = "s8";
        double quantity = 800.0;
        int orderProcessingMode = 2;
        try {
            OrderDataBean orderData = trade.buy(userID, symbol, quantity, orderProcessingMode);
            Assertions.assertNotNull(orderData);
        } catch (Exception e) {
            Assertions.fail("Failed with exception: " + e.getMessage());
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateQuotePriceVolume_bGhO0() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        TradeDirect tradeDirect = new TradeDirect();
        quoteDataBean = tradeDirect.updateQuotePriceVolume("symbol", new BigDecimal(100), 100);
        assertEquals(quoteDataBean.getPrice(), new BigDecimal(100));
        assertEquals(quoteDataBean.getVolume(), 100);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest1_PtLB0() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid1");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest3_KbpU2() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid3");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest6_SgqD5() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid6");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest8_DQDb7() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid8");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest12_VKrs11() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid12");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrdersTest13_KLMT12() throws Exception {
        TradeDirect trade = new TradeDirect();
        trade.getOrders("uid13");
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder2_wbuQ1_fid1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 2;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder6_vkvI5_fid1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 6;
        boolean twoPhase = false;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testQueueOrder7_jpgC6_fid1() throws Exception {
        TradeDirect tradeDirect = new TradeDirect();
        Integer orderID = 7;
        boolean twoPhase = true;
        tradeDirect.queueOrder(orderID, twoPhase);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest3_davV2_fid1() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid3");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest8_ljFg7_fid1() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid8");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest9_eJfK8_fid1() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid9");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest10_NFVJ9_fid1() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid10");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getAccountProfileDataTest11_bTZW10_fid1() throws Exception {
        TradeDirect trade = new TradeDirect();
        AccountProfileDataBean accountProfileData = trade.getAccountProfileData("uid11");
        Assertions.assertEquals(null, accountProfileData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testrecreateDBTables1_OWrA0_fid1() throws Exception {
        TradeDirect trade = new TradeDirect();
        Object[] sqlBuffer = new Object[1];
        java.io.PrintWriter out = new java.io.PrintWriter(System.out);
        boolean result = trade.recreateDBTables(sqlBuffer, out);
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote2_vueY1_fid1() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote(null, "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertNotNull(quoteData);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote5_yzdH4_fid1() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertEquals("symbol", quoteData.getSymbol());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testCreateQuote9_OoYR8_fid1() throws java.lang.Exception {
        TradeDirect trade = new TradeDirect();
        QuoteDataBean quoteData = null;
        try {
            quoteData = trade.createQuote("symbol", "companyName", new BigDecimal(10.00));
        } catch (Exception e) {
            e.printStackTrace();
        }
        assertEquals(10.00, quoteData.getOpen().doubleValue(), 0.00);
    }
}