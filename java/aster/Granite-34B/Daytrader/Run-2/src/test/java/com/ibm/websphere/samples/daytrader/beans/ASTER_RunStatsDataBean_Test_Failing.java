/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.beans;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_RunStatsDataBean_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getOpenOrderCount_withOneOpenOrder_returnsOne_iLoh2() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int openOrderCount = runStatsDataBean.getOpenOrderCount();
        org.junit.jupiter.api.Assertions.assertEquals(1, openOrderCount);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getOpenOrderCount_withTwoOpenOrders_returnsTwo_jQIc3() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int openOrderCount = runStatsDataBean.getOpenOrderCount();
        org.junit.jupiter.api.Assertions.assertEquals(2, openOrderCount);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount1_zObU1() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 1;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount2_uNjj2() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 2;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount3_vMNL3() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 3;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount4_aZne4() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 4;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount5_FzZd5() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 5;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount6_RbqF6() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 6;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount7_HPNU7() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 7;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount8_jqID8() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 8;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount9_nAuS9() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 9;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount10_HXMp10() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 10;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount11_LfMf11() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 11;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount12_ZYbn12() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 12;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount13_wjJP13() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 13;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount14_ACfU14() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 14;
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetSumLoginCount15_SBCn15() {
        RunStatsDataBean runStatsDataBean = new RunStatsDataBean();
        int actual = runStatsDataBean.getSumLoginCount();
        int expected = 15;
        assertEquals(expected, actual);
    }
}