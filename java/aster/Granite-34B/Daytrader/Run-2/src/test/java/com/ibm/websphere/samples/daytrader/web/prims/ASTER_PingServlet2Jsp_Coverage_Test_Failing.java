/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PingServlet2Jsp_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoPost_ZBVE0() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        HttpServletRequest request = new MockHttpServletRequest();
        HttpServletResponse response = new MockHttpServletResponse();
        try {
            servlet.doPost(request, response);
        } catch (ServletException | IOException e) {
            e.printStackTrace();
        }
        assertEquals(200, response.getStatus());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet_dIUa1() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        HttpServletRequest request = new MockHttpServletRequest();
        HttpServletResponse response = new MockHttpServletResponse();
        try {
            servlet.doGet(request, response);
        } catch (ServletException | IOException e) {
            e.printStackTrace();
        }
        assertEquals(200, response.getStatus());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet1_fWJc0() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 0", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet2_fnUe1() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 1", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet3_ofRu2() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 2", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet4_MqAL3() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 3", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet5_PzEb4() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 4", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet6_mrMn5() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 5", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet7_aVrc6() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 6", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet8_nTMW7() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 7", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet9_MsuO8() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 8", ab.getMsg());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoGet10_wECR9() throws javax.servlet.ServletException, java.io.IOException {
        PingServlet2Jsp servlet = new PingServlet2Jsp();
        PingBean ab = new PingBean();
        int hitCount = 0;
        hitCount++;
        ab.setMsg("Hit Count: " + hitCount);
        assertEquals("Hit Count: 9", ab.getMsg());
    }
}