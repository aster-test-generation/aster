/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.mdb;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.Instance;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DTBroker3MDB_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBoostrapTradeServices1_lQNm0() {
        DTBroker3MDB dtBroker3MDB = new DTBroker3MDB();
        dtBroker3MDB.boostrapTradeServices();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBoostrapTradeServices4_bEiM3() {
        DTBroker3MDB dtBroker3MDB = new DTBroker3MDB();
        dtBroker3MDB.boostrapTradeServices();
        // Add assertion here
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBoostrapTradeServices5_Qmmx4() {
        DTBroker3MDB dtBroker3MDB = new DTBroker3MDB();
        dtBroker3MDB.boostrapTradeServices();
        // Add assertions here
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBoostrapTradeServices10_tSou9() {
        DTBroker3MDB dtBroker3MDB = new DTBroker3MDB();
        dtBroker3MDB.boostrapTradeServices();
        // Add an assertion to check the expected behavior
        assertNotNull(dtBroker3MDB.services);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testBoostrapTradeServices19_JSJt18() {
        DTBroker3MDB dtBroker3MDB = new DTBroker3MDB();
        dtBroker3MDB.boostrapTradeServices();
        assertNotNull(dtBroker3MDB.services);
    }
}