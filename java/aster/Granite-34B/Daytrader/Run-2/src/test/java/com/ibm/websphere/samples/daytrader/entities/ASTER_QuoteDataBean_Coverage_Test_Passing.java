/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteDataBean_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashcodeWithSymbolNull_GrTZ0() {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        quoteDataBean.setSymbol(null);
        int hash = quoteDataBean.hashCode();
        assertEquals(0, hash);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashcodeWithSymbolNotNull_ijsD1() {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        quoteDataBean.setSymbol("TEST");
        int hash = quoteDataBean.hashCode();
        assertEquals(hash, quoteDataBean.getSymbol().hashCode());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_0_PqJG0() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        QuoteDataBean quoteDataBean2 = new QuoteDataBean();
        boolean result = quoteDataBean.equals(quoteDataBean2);
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_1_uxgn1() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        boolean result = quoteDataBean.equals(null);
        assertEquals(false, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_2_AeEI2() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        boolean result = quoteDataBean.equals(new Object());
        assertEquals(false, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_3_kdqO3() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        quoteDataBean.setSymbol("testString");
        boolean result = quoteDataBean.equals(new Object());
        assertEquals(false, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_4_ZGvY4() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        quoteDataBean.setSymbol("testString");
        boolean result = quoteDataBean.equals(quoteDataBean);
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_5_OwVe5() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        quoteDataBean.setSymbol("testString");
        QuoteDataBean quoteDataBean2 = new QuoteDataBean();
        quoteDataBean2.setSymbol("testString");
        boolean result = quoteDataBean.equals(quoteDataBean2);
        assertEquals(true, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_equals_6_WkYB6() throws Exception {
        QuoteDataBean quoteDataBean = new QuoteDataBean();
        quoteDataBean.setSymbol("testString");
        QuoteDataBean quoteDataBean2 = new QuoteDataBean();
        quoteDataBean2.setSymbol("testString2");
        boolean result = quoteDataBean.equals(quoteDataBean2);
        assertEquals(false, result);
    }
}