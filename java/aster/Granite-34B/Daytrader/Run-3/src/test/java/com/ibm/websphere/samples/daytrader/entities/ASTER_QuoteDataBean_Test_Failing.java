/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.math.BigDecimal;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteDataBean_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCodeWithSymbol_hZrf0() {
    QuoteDataBean quoteDataBean = new QuoteDataBean("TEST");
    int expectedHashCode = 35 + "TEST".hashCode();
    assertEquals(expectedHashCode, quoteDataBean.hashCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCodeWithoutSymbol_NfrE1() {
    QuoteDataBean quoteDataBean = new QuoteDataBean();
    int expectedHashCode = 35 + "null".hashCode();
    assertEquals(expectedHashCode, quoteDataBean.hashCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTML_PSvr0() {
    QuoteDataBean quote = new QuoteDataBean("TEST", "Test Company", 1000.0, new BigDecimal(100.0), new BigDecimal(90.0), new BigDecimal(80.0), new BigDecimal(110.0), 10.0);
    String htmlOutput = quote.toHTML();
    String expectedOutput = "<BR>Quote Data for: TEST<LI> companyName: Test Company</LI>" + "<LI>      volume: 1000.0</LI>" + "<LI>       price: 100.0</LI>" + "<LI>        open1: 90.0</LI>" + "<LI>         low: 80.0</LI>" + "<LI>        high: 110.0</LI>" + "<LI>      change1: 10.0</LI>";
    assertEquals(expectedOutput, htmlOutput);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTMLWithNullData_nNhn1() {
    QuoteDataBean quote = new QuoteDataBean();
    String htmlOutput = quote.toHTML();
    String expectedOutput = "";
    assertEquals(expectedOutput, htmlOutput);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToHTMLWithEmptyData_NpLb2() {
    QuoteDataBean quote = new QuoteDataBean("", "", 0.0, new BigDecimal(0.0), new BigDecimal(0.0), new BigDecimal(0.0), new BigDecimal(0.0), 0.0);
    String htmlOutput = quote.toHTML();
    String expectedOutput = "<BR>Quote Data for: <LI> companyName: </LI>" + "<LI>      volume: 0.0</LI>" + "<LI>       price: 0.0</LI>" + "<LI>        open1: 0.0</LI>" + "<LI>         low: 0.0</LI>" + "<LI>        high: 0.0</LI>" + "<LI>      change1: 0.0</LI>";
    assertEquals(expectedOutput, htmlOutput);
  }
}