/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ActionMessage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdecodedAction_aXIl0() {
    ActionMessage actionMessage = new ActionMessage();
    String expected = "";
    String actual = actionMessage.getDecodedAction();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdecodedAction_akdk1() {
    ActionMessage actionMessage = new ActionMessage();
    String expected = "decodedAction";
    String actual = actionMessage.getDecodedAction();
    assertNull(expected);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoDecoding_validInput_kPYm3_fid2() {
    ActionMessage message = new ActionMessage();
    message.doDecoding("{\"action\": \"testAction\"}");
    assertEquals("testAction", message.decodedAction);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdecodedAction_aXIl0_fid2() {
    ActionMessage actionMessage = new ActionMessage();
    String expected = "";
    String actual = actionMessage.getDecodedAction();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdecodedAction_akdk1_fid2() {
    ActionMessage actionMessage = new ActionMessage();
    String expected = "decodedAction";
    String actual = actionMessage.getDecodedAction();
    assertEquals(expected, actual);
  }
}