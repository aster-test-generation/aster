/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean;
import java.util.concurrent.TimeUnit;
import javax.servlet.http.HttpSession;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_TradeConfigJSF_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPopulateDatabase_QmJh0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String result = tradeConfigJSF.populateDatabase();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBuildDB_QCLZ1() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig1_CevL0() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals("DayTrader Configuration Updated", tradeConfig.getResult());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig2_lgDz1_2() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBuildDatabaseTables1_hjLv0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String result = tradeConfigJSF.buildDatabaseTables();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBuildDatabaseTables11_OSuB10() {
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade5_KEJG4_ghdI0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    RunStatsDataBean runStatsData = new RunStatsDataBean();
    HttpSession session = mock(HttpSession.class);
    tradeConfigJSF.resetTrade();
    assertEquals("Trade Reset Error  - see log for details", session.getAttribute("result"));
  }
}