/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.ejb3;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_PingServlet2Session_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_Ynqa0() throws ServletException, IOException {
    PingServlet2Session servlet = new PingServlet2Session();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    when(request.getParameter("username")).thenReturn("testuser");
    when(request.getParameter("password")).thenReturn("testpassword");
    servlet.doPost(request, response);
    assertEquals("User not found", response.getStatus());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithValidCredentials_TVJV1() throws ServletException, IOException {
    PingServlet2Session servlet = new PingServlet2Session();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    when(request.getParameter("username")).thenReturn("testuser");
    when(request.getParameter("password")).thenReturn("testpassword");
    servlet.doPost(request, response);
    assertEquals("User found", response.getStatus());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdoGet1_AAvQ0() throws java.io.IOException, javax.servlet.ServletException {
    PingServlet2Session pingServlet2Session = new PingServlet2Session();
    HttpServletResponse response = mock(HttpServletResponse.class);
    HttpServletRequest request = mock(HttpServletRequest.class);
    when(request.getContentType()).thenReturn("text/plain");
    pingServlet2Session.doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdoGet2_dzti1() throws java.io.IOException, javax.servlet.ServletException {
    PingServlet2Session pingServlet2Session = new PingServlet2Session();
    try {
      pingServlet2Session.doGet(null, null);
    } catch (Exception e) {
      assertTrue(true);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getServletInfoTest1_SvHM0_xscf0() {
    PingServlet2Session servlet = new PingServlet2Session();
    String expected = "web primitive, configured with trade runtime configs, tests Servlet to Session EJB path";
    assertEquals("web primitive, configured with trade runtime configs, tests Servlet to Session EJB path", servlet.getServletInfo());
  }
}