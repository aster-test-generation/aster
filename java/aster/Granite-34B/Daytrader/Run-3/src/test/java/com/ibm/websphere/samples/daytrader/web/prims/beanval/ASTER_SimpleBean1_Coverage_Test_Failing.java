/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.beanval;

import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import javax.validation.ConstraintViolation;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SimpleBean1_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString_TPxR0() throws Exception {
    SimpleBean1 simpleBean1 = new SimpleBean1();
    String result = simpleBean1.toString();
    Assertions.assertNotNull(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToString2_yJun1() throws Exception {
    SimpleBean1 simpleBean1 = new SimpleBean1();
    String result = simpleBean1.toString();
    Assertions.assertTrue(result.contains("iMin:"));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getDesc_1_vEAG0_Yusk0() {
    SimpleBean1 tested = null;
    try {
      tested = new SimpleBean1();
    } catch (Exception e) {
      fail("Exception is not expected");
    }
    String result = tested.getDesc();
    assertEquals(null, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFormatConstraintViolations1_EVId0_zwGR0() throws Exception {
    SimpleBean1 simpleBean1 = new SimpleBean1();
    Set<ConstraintViolation<SimpleBean1>> cvSet = new HashSet<ConstraintViolation<SimpleBean1>>();
    String expected = "";
    String actual = simpleBean1.formatConstraintViolations(cvSet);
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_checkInjectionValidation_1_XurP0_dFQQ0() {
    SimpleBean1 simpleBean1 = null;
    try {
      simpleBean1 = new SimpleBean1();
    } catch (Exception e) {
    }
    simpleBean1.checkInjectionValidation();
  }
}