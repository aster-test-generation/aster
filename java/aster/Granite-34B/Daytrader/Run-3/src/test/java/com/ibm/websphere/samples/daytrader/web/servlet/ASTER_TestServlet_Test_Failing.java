/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.Instance;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_TestServlet_Test_Failing {
  TestServlet testservlet;
  HttpServlet httpservlet;
  HttpServletRequest request;
  HttpServletResponse response;
  TradeServices tradeServices;
  private TradeServices tradeAction;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testinit() throws Exception {
    httpservlet = mock(HttpServlet.class);
    testservlet = new TestServlet(null);
    doCallRealMethod().when(httpservlet).init(any());
    httpservlet.init(null);
    verify(httpservlet, times(1)).init(any());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_IUEY0_OPiZ0() throws ServletException, IOException {
    TestServlet servlet = new TestServlet(null);
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doPost(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPerformTaskWithException_bEgB1_CIQT0() throws ServletException, IOException {
    TestServlet servlet = new TestServlet(null);
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse resp = mock(HttpServletResponse.class);
    doThrow(new Exception()).when(req).getParameter("symbol");
    servlet.performTask(req, resp);
    verify(req, times(1)).getParameter("symbol");
    verify(req, times(0)).getParameter("company");
    verify(req, times(0)).getParameter("price");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPerformTaskWithException_bEgB1_CIQT0_fid1() throws ServletException, IOException {
    TestServlet servlet = new TestServlet(mock(Instance.class));
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse resp = mock(HttpServletResponse.class);
    doThrow(new Exception()).when(req).getParameter("symbol");
    servlet.performTask(req, resp);
    verify(req, times(1)).getParameter("symbol");
    verify(req, times(0)).getParameter("company");
    verify(req, times(0)).getParameter("price");
  }
}