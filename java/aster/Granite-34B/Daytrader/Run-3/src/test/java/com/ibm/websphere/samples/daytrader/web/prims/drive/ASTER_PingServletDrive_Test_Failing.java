/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.drive;

import java.io.IOException;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServletDrive_Test_Failing {
  private static String initTime;
  private static int hitCount;
  PingServletDrive pingservletdrive;
  ServletConfig servletconfig;
  HttpServletResponse httpservletresponse;
  ServletOutputStream servletoutputstream;
  HttpServlet httpservlet;
  HttpServletRequest httpservletrequest;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getServletInfo_cmaS0() {
    PingServletDrive pingServletDrive = new PingServletDrive();
    String result = pingServletDrive.getServletInfo();
    String expected = "Basic dynamic HTML generation through a servlet";
    org.junit.jupiter.api.Assertions.assertEquals(expected, result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoGet_cNmV0() throws ServletException, IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = new MockHttpServletRequest();
    HttpServletResponse response = new MockHttpServletResponse();
    servlet.doGet(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_meKh0_eLnt0() throws ServletException, IOException {
    PingServletDrive servlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    servlet.doPost(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testdoGet_Lcbv0() throws Exception {
    httpservletrequest = mock(HttpServletRequest.class);
    httpservletresponse = mock(HttpServletResponse.class);
    servletoutputstream = mock(ServletOutputStream.class);
    pingservletdrive = new PingServletDrive();
    when(httpservletresponse.getOutputStream()).thenReturn(servletoutputstream);
    when(httpservletrequest.getParameter("t1")).thenReturn("1000");
    when(httpservletrequest.getParameter("t2")).thenReturn("1000");
    when(httpservletrequest.getParameter("t3")).thenReturn("1000");
    when(httpservletrequest.getParameter("t4")).thenReturn("1000");
    when(httpservletrequest.getParameter("t5")).thenReturn("1000");
    when(httpservletrequest.getParameter("t6")).thenReturn("1000");
    when(httpservletrequest.getParameter("t7")).thenReturn("1000");
    when(httpservletrequest.getParameter("t8")).thenReturn("1000");
    when(httpservletrequest.getParameter("t9")).thenReturn("1000");
    when(httpservletrequest.getParameter("t10")).thenReturn("1000");
    when(httpservletrequest.getParameter("t11")).thenReturn("1000");
    when(httpservletrequest.getParameter("t12")).thenReturn("1000");
    when(httpservletrequest.getParameter("t13")).thenReturn("1000");
    when(httpservletrequest.getParameter("t14")).thenReturn("1000");
    when(httpservletrequest.getParameter("t15")).thenReturn("1000");
    when(httpservletrequest.getParameter("t16")).thenReturn("1000");
    when(httpservletrequest.getParameter("t17")).thenReturn("1000");
    when(httpservletrequest.getParameter("t18")).thenReturn("1000");
    when(httpservletrequest.getParameter("t19")).thenReturn("1000");
    when(httpservletrequest.getParameter("t20")).thenReturn("1000");
    hitCount = 0;
    java.util.Date date = new java.util.Date();
    initTime = date.toString();
    pingservletdrive.doGet(httpservletrequest, httpservletresponse);
    verify(httpservletresponse, times(1)).setContentType("text/html");
    verify(httpservletresponse, times(1)).getOutputStream();
    verify(servletoutputstream, times(1)).println("<html><head><title>Ping Servlet</title></head>" + "<body><HR><BR><FONT size=\"+2\" color=\"#000066\">Ping Servlet<BR></FONT><FONT size=\"+1\" color=\"#000066\">Init time : " + initTime + "<BR><BR></FONT>  <B>Hit Count: " + hitCount + "</B></body></html>");
  }
}