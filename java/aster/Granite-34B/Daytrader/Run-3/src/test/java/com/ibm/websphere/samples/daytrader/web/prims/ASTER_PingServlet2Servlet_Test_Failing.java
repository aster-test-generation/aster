/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_PingServlet2Servlet_Test_Failing {
  PingServlet2Servlet pingservlet2servlet;
  HttpServletRequest httpservletrequest;
  HttpServletResponse httpservletresponse;
  private static int hitCount = 0;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_MkZu0() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest();
    HttpServletResponse response = new MockHttpServletResponse();
    servlet.doPost(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithNullRequest_IXrc1() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = null;
    HttpServletResponse response = new MockHttpServletResponse();
    servlet.doPost(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithNullResponse_WSWI2() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest();
    HttpServletResponse response = null;
    servlet.doPost(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithGetRequest_shaT3() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest("GET", "/");
    HttpServletResponse response = new MockHttpServletResponse();
    servlet.doPost(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithPostRequest_viyb4() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest("POST", "/");
    HttpServletResponse response = new MockHttpServletResponse();
    servlet.doPost(request, response);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithGetRequestAndException_WFza5() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest("GET", "/");
    HttpServletResponse response = new MockHttpServletResponse();
    try {
      servlet.doPost(request, response);
    } catch (Exception e) {
      assertTrue(true);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithPostRequestAndException_KZBr6() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest("POST", "/");
    HttpServletResponse response = new MockHttpServletResponse();
    try {
      servlet.doPost(request, response);
    } catch (Exception e) {
      assertTrue(true);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithGetRequestAndIOException_sdVd7() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest("GET", "/");
    HttpServletResponse response = new MockHttpServletResponse();
    try {
      servlet.doPost(request, response);
    } catch (IOException e) {
      assertTrue(true);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithPostRequestAndIOException_cTiI8() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest("POST", "/");
    HttpServletResponse response = new MockHttpServletResponse();
    try {
      servlet.doPost(request, response);
    } catch (IOException e) {
      assertTrue(true);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithGetRequestAndServletException_wZJs9() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest("GET", "/");
    HttpServletResponse response = new MockHttpServletResponse();
    try {
      servlet.doPost(request, response);
    } catch (ServletException e) {
      assertTrue(true);
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPostWithPostRequestAndServletException_XPWS10() throws Exception {
    PingServlet2Servlet servlet = new PingServlet2Servlet();
    HttpServletRequest request = new MockHttpServletRequest("POST", "/");
    HttpServletResponse response = new MockHttpServletResponse();
    try {
      servlet.doPost(request, response);
    } catch (ServletException e) {
      assertTrue(true);
    }
  }
}