/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.servlet;

import java.util.concurrent.TimeUnit;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_TradeConfigServlet_Coverage_Test_Passing {
  TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoResetTrade2_bWAU1_gEmf0() throws Exception {
    TradeConfigServlet tradeConfigServlet = new TradeConfigServlet();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse resp = mock(HttpServletResponse.class);
    String results = "Trade Reset Error  - see log for details";
    tradeConfigServlet.doResetTrade(req, resp, results);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoConfigDisplay2_UtqW1() throws Exception {
    HttpServletRequest req = null;
    HttpServletResponse resp = null;
    String results = null;
    tradeConfigServlet.doConfigDisplay(req, resp, results);
  }
}