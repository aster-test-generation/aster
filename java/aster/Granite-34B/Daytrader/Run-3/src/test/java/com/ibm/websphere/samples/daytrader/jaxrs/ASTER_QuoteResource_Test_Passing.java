/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.jaxrs;

import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QuoteResource_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testQuotesGet2_PuNy1() {
    QuoteResource quoteResource = new QuoteResource();
    List<QuoteDataBean> actual = quoteResource.quotesGet("symbol");
    List<QuoteDataBean> expected = new ArrayList<QuoteDataBean>();
    expected.add(new QuoteDataBean());
    expected.add(new QuoteDataBean());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testQuotesGet4_qelY3() {
    QuoteResource quoteResource = new QuoteResource();
    List<QuoteDataBean> actual = quoteResource.quotesGet("symbol");
    List<QuoteDataBean> expected = new ArrayList<QuoteDataBean>();
    expected.add(new QuoteDataBean());
    expected.add(new QuoteDataBean());
    expected.add(new QuoteDataBean());
    expected.add(new QuoteDataBean());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testQuotesGet5_cWWG4() {
    QuoteResource quoteResource = new QuoteResource();
    List<QuoteDataBean> actual = quoteResource.quotesGet("symbol");
    List<QuoteDataBean> expected = new ArrayList<QuoteDataBean>();
    expected.add(new QuoteDataBean());
    expected.add(new QuoteDataBean());
    expected.add(new QuoteDataBean());
    expected.add(new QuoteDataBean());
    expected.add(new QuoteDataBean());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testQuotesPost_WfiF0() {
    QuoteResource quoteResource = new QuoteResource();
    List<QuoteDataBean> actual = quoteResource.quotesPost("symbols");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testQuotesPost_ZlGN1() {
    QuoteResource quoteResource = new QuoteResource();
    List<QuoteDataBean> actual = quoteResource.quotesPost("symbols");
    List<QuoteDataBean> expected = new ArrayList<>();
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testQuotesPost_ijJN2() {
    QuoteResource quoteResource = new QuoteResource();
    List<QuoteDataBean> actual = quoteResource.quotesPost("symbols");
    List<QuoteDataBean> expected = new ArrayList<>();
    assertEquals(expected.size(), actual.size());
  }
}