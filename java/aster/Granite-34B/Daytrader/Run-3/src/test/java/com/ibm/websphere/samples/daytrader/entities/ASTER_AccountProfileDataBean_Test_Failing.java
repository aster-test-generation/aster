/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.entities;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_AccountProfileDataBean_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserIDWithNullObject_JzUh1() {
    AccountProfileDataBean accountProfileDataBean = null;
    String userID = accountProfileDataBean.getUserID();
    assertEquals("", userID);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_zhTp0() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
    accountProfileDataBean.print();
    assertEquals("	Account Profile Data for userID:user1		   passwd:password1		   fullName:John Doe		    address:123 Main St		      email:john.doe@example.com		 creditCard:1234567890", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserIDWithNullObject_JzUh1_fid1() {
    AccountProfileDataBean accountProfileDataBean = null;
    String userID = accountProfileDataBean.getUserID();
    assertNull(userID);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetUserIDWithEmptyObject_wpVT2_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean();
    String userID = accountProfileDataBean.getUserID();
    assertEquals("", userID);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCode_FHTU0_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "fullName1", "address1", "email1", "creditCard1");
    assertEquals(31, accountProfileDataBean.hashCode());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testPrint_zhTp0_fid1() {
    AccountProfileDataBean accountProfileDataBean = new AccountProfileDataBean("user1", "password1", "John Doe", "123 Main St", "john.doe@example.com", "1234567890");
    accountProfileDataBean.print();
    assertEquals("AccountProfileDataBean{userID='user1', password='password1', fullName='John Doe', address='123 Main St', email='john.doe@example.com', creditCard='1234567890'}", accountProfileDataBean.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithDifferentPassword_cVKd4_fid1() {
    AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean("1", "2", "3", "4", "5", "6");
    AccountProfileDataBean accountProfileDataBean2 = new AccountProfileDataBean("1", "8", "3", "4", "5", "6");
    boolean actual = accountProfileDataBean1.equals(accountProfileDataBean2);
    boolean expected = false;
    Assertions.assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithDifferentFullName_anUo5_fid1() {
    AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean("1", "2", "3", "4", "5", "6");
    AccountProfileDataBean accountProfileDataBean2 = new AccountProfileDataBean("1", "2", "9", "4", "5", "6");
    boolean actual = accountProfileDataBean1.equals(accountProfileDataBean2);
    boolean expected = false;
    Assertions.assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithDifferentAddress_ohIQ6_fid1() {
    AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean("1", "2", "3", "4", "5", "6");
    AccountProfileDataBean accountProfileDataBean2 = new AccountProfileDataBean("1", "2", "3", "10", "5", "6");
    boolean actual = accountProfileDataBean1.equals(accountProfileDataBean2);
    boolean expected = false;
    Assertions.assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithDifferentEmail_hkiy7_fid1() {
    AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean("1", "2", "3", "4", "5", "6");
    AccountProfileDataBean accountProfileDataBean2 = new AccountProfileDataBean("1", "2", "3", "4", "11", "6");
    boolean actual = accountProfileDataBean1.equals(accountProfileDataBean2);
    boolean expected = false;
    Assertions.assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testEqualsWithDifferentCreditCard_wvsv8_fid1() {
    AccountProfileDataBean accountProfileDataBean1 = new AccountProfileDataBean("1", "2", "3", "4", "5", "6");
    AccountProfileDataBean accountProfileDataBean2 = new AccountProfileDataBean("1", "2", "3", "4", "5", "12");
    boolean actual = accountProfileDataBean1.equals(accountProfileDataBean2);
    boolean expected = false;
    Assertions.assertEquals(expected, actual);
  }
}