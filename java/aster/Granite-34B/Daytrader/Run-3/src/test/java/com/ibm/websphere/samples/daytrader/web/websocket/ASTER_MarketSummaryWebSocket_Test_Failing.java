/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import com.ibm.websphere.samples.daytrader.interfaces.TradeServices;
import java.util.concurrent.TimeUnit;
import javax.enterprise.inject.Instance;
import javax.websocket.Session;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_MarketSummaryWebSocket_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnErrorWithNullParameters_qMEg3() {
    MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
    Throwable t = null;
    Session currentSession = null;
    marketSummaryWebSocket.onError(t, currentSession);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnErrorWithNullThrowable_Frpa1_PfDU0() {
    MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket();
    Throwable t = null;
    Session currentSession = mock(Session.class);
    marketSummaryWebSocket.onError(t, currentSession);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testOnStockChange2_jzzb1_xrrS0() {
    Instance<TradeServices> instance = mock(Instance.class);
    MarketSummaryWebSocket marketSummaryWebSocket = new MarketSummaryWebSocket(instance);
    marketSummaryWebSocket.onStockChange("event");
  }
}