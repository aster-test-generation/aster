/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims.drive;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Aster_PingServletDrive_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test1_Zvkq0() {
    PingServletDrive PingServletDrive = new PingServletDrive();
    String expected = "Basic dynamic HTML generation through a servlet";
    assertEquals(expected, PingServletDrive.getServletInfo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_1_efMG0() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive pingServlet = new PingServletDrive();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    try {
      when(request.getParameter("t1")).thenReturn("test");
      when(request.getParameter("t2")).thenReturn("test");
      pingServlet.doPost(request, response);
    } catch (ServletException | IOException e) {
      e.printStackTrace();
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit_fOBp4() throws javax.servlet.ServletException {
    fail("Not yet implemented");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test1_aKlT0() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive obj = new PingServletDrive();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      obj.doGet(req, res);
    } catch (ServletException e) {
      e.printStackTrace();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test2_YBoo1() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive obj = new PingServletDrive();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      res.setContentType("text/html");
      obj.doGet(req, res);
    } catch (ServletException e) {
      e.printStackTrace();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test3_HcrV2() throws javax.servlet.ServletException, java.io.IOException {
    PingServletDrive obj = new PingServletDrive();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      res.setContentType("text/html");
      ServletOutputStream out = res.getOutputStream();
      obj.doGet(req, res);
    } catch (ServletException e) {
      e.printStackTrace();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test1_Zvkq0_fid1() {
    PingServletDrive PingServletDrive = new PingServletDrive();
    PingServletDrive.getServletInfo();
    String actual = "";
    assertEquals(actual, PingServletDrive.getServletInfo());
  }
}