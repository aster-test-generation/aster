/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.*;

public class Aster_PingServlet2DB_Coverage_Test_Passing {
  PingServlet2DB servlet = new PingServlet2DB();

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getServletInfoTest1_xWFA0() {
    PingServlet2DB pingServlet2DB = new PingServlet2DB();
    String expected = "Basic JDBC Read using a prepared statment, makes use of TradeJDBC class";
    assertEquals(expected, pingServlet2DB.getServletInfo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testInit4_iUTU3() throws javax.servlet.ServletException {
    servlet.init(null);
    assertEquals("PingServlet2DB: init", servlet.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_1_eGwp0() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB servlet = new PingServlet2DB();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    try {
      servlet.doPost(request, response);
    } catch (ServletException | IOException e) {
      e.printStackTrace();
    }
    verify(request, times(1)).getParameter("t1");
    verify(response, times(1)).setContentType("text/html");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_2_Qrcg1() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB servlet = new PingServlet2DB();
    HttpServletRequest request = mock(HttpServletRequest.class);
    HttpServletResponse response = mock(HttpServletResponse.class);
    when(request.getParameter("t1")).thenReturn("2");
    try {
      servlet.doPost(request, response);
    } catch (ServletException | IOException e) {
      e.printStackTrace();
    }
    verify(request, times(1)).getParameter("t1");
    verify(response, times(1)).setContentType("text/html");
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test1_KjXL0() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB PingServlet2DB = new PingServlet2DB();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      PingServlet2DB.doGet(req, res);
    } catch (ServletException e) {
    } catch (IOException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test2_IBxA1() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB PingServlet2DB = new PingServlet2DB();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      res.setContentType("text/html");
      PingServlet2DB.doGet(req, res);
    } catch (ServletException e) {
    } catch (IOException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test3_ieQR2() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB PingServlet2DB = new PingServlet2DB();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      java.io.PrintWriter out = res.getWriter();
      PingServlet2DB.doGet(req, res);
    } catch (ServletException e) {
    } catch (IOException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test4_ZWFM3() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB PingServlet2DB = new PingServlet2DB();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      String symbol = null;
      PingServlet2DB.doGet(req, res);
    } catch (ServletException e) {
    } catch (IOException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test5_bfYl4() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB PingServlet2DB = new PingServlet2DB();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      StringBuffer output = new StringBuffer(100);
      PingServlet2DB.doGet(req, res);
    } catch (ServletException e) {
    } catch (IOException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test6_WDna5() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB PingServlet2DB = new PingServlet2DB();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      TradeDirect trade = new TradeDirect();
      PingServlet2DB.doGet(req, res);
    } catch (ServletException e) {
    } catch (IOException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test7_daxg6_AEFZ0() throws javax.servlet.ServletException, java.io.IOException {
    PingServlet2DB PingServlet2DB = new PingServlet2DB();
    HttpServletRequest req = null;
    HttpServletResponse res = null;
    try {
      TradeDirect trade = new TradeDirect();
      trade.getConnPublic();
      PingServlet2DB.doGet(req, res);
    } catch (ServletException e) {
    } catch (IOException e) {
    } catch (Exception e) {
    }
  }
}