/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.prims;

import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import static org.mockito.Mockito.mock;

public class Aster_PingJDBCRead_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test1_rPoi0() {
    PingJDBCRead ping = new PingJDBCRead();
    String result = ping.getServletInfo();
    assert result.equals("Basic JDBC Read using a prepared statment, makes use of TradeJDBC class");
  }

  @Test
  @Timeout(value = 2, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDoPost_1_aUbU0_hIkg0() throws javax.servlet.ServletException, java.io.IOException {
    PingJDBCRead testee = new PingJDBCRead();
    HttpServletRequest req = mock(HttpServletRequest.class);
    HttpServletResponse res = mock(HttpServletResponse.class);
    try {
      testee.doPost(req, res);
    } catch (ServletException | IOException e) {
      e.printStackTrace();
    }
  }
}