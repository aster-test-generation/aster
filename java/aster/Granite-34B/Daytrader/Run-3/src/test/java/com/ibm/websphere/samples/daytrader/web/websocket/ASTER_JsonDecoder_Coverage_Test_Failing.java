/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.websocket;

import java.util.concurrent.TimeUnit;
import javax.websocket.DecodeException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JsonDecoder_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecode_IPiU0_1() throws javax.websocket.DecodeException {
    JsonDecoder decoder = new JsonDecoder();
    String json = "{\"key\":\"value1\",\"value\":\"value2\"}";
    JsonMessage message = decoder.decode(json);
    assertEquals("value1", message.getKey());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecode_IPiU0_2() throws javax.websocket.DecodeException {
    JsonDecoder decoder = new JsonDecoder();
    String json = "{\"key\":\"value1\",\"value\":\"value2\"}";
    JsonMessage message = decoder.decode(json);
    assertEquals("value2", message.getValue());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeWithNullKey_tOYb3() throws javax.websocket.DecodeException {
    JsonDecoder decoder = new JsonDecoder();
    String json = "{\"key\":null,\"value\":\"value2\"}";
    assertThrows(DecodeException.class, () -> decoder.decode(json));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testWillDecode_validJson_cETC0_fid2() {
    JsonDecoder jsonDecoder = new JsonDecoder();
    String json = "{\"key1\": \"value1\", \"key2\": \"value2\"}";
    boolean result = jsonDecoder.willDecode(json);
    assertTrue(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeWithEmptyKey_zerT1_fid2() throws javax.websocket.DecodeException {
    JsonDecoder decoder = new JsonDecoder();
    String json = "{\"key\":\"\",\"value\":\"value2\"}";
    assertThrows(DecodeException.class, () -> decoder.decode(json));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeWithEmptyValue_Lpit2_fid2() throws javax.websocket.DecodeException {
    JsonDecoder decoder = new JsonDecoder();
    String json = "{\"key\":\"value1\",\"value\":\"\"}";
    assertThrows(DecodeException.class, () -> decoder.decode(json));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testDecodeWithNullValue_fvtZ4_fid2() throws javax.websocket.DecodeException {
    JsonDecoder decoder = new JsonDecoder();
    String json = "{\"key\":\"value1\",\"value\":null}";
    assertThrows(DecodeException.class, () -> decoder.decode(json));
  }
}