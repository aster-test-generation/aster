/**
 * Generated by Aster
 */
package com.ibm.websphere.samples.daytrader.web.jsf;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TradeConfigJSF_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig2_lgDz1() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals("DayTrader Configuration Updated", tradeConfig.getResult());
    assertEquals(50, tradeConfig.getPrimIterations());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig3_jxGO2() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals("DayTrader Configuration Updated", tradeConfig.getResult());
    assertEquals(false, tradeConfig.isPublishQuotePriceChange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig4_jfiU3() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals("DayTrader Configuration Updated", tradeConfig.getResult());
    assertEquals(0.005, tradeConfig.getListQuotePriceChangeFrequency());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig5_wgTH4() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals("DayTrader Configuration Updated", tradeConfig.getResult());
    assertEquals(false, tradeConfig.isLongRun());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig6_Cbad5() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals("DayTrader Configuration Updated", tradeConfig.getResult());
    assertEquals(false, tradeConfig.isDisplayOrderAlerts());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig7_UxPQ6() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals("DayTrader Configuration Updated", tradeConfig.getResult());
    assertEquals(10, tradeConfig.getMarketSummaryInterval());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testResetTrade1_pmjM0() {
    TradeConfigJSF tradeConfigJSF = new TradeConfigJSF();
    String result = tradeConfigJSF.resetTrade();
    assertEquals("Trade Reset completed successfully", result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig2_lgDz1_2_fid3() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals(50, tradeConfig.getPrimIterations());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig3_jxGO2_2() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals(false, tradeConfig.isPublishQuotePriceChange());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig4_jfiU3_2() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals(0.005, tradeConfig.getListQuotePriceChangeFrequency());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig5_wgTH4_2() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals(false, tradeConfig.isLongRun());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig6_Cbad5_2() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals(false, tradeConfig.isDisplayOrderAlerts());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateConfig7_UxPQ6_2() {
    TradeConfigJSF tradeConfig = new TradeConfigJSF();
    tradeConfig.updateConfig();
    assertEquals(10, tradeConfig.getMarketSummaryInterval());
  }
}