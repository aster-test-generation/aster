/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Options_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddOptionWithLongOpt_amyx0() {
        Options options = new Options();
        Option option = new Option("a", "alpha", false, "Alpha option");
        options.addOption(option);
        assertTrue(options.hasLongOption("alpha"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddOptionWithRequiredOption_biZC1() {
        Options options = new Options();
        Option option = new Option("b", "beta", false, "Beta option");
        option.setRequired(true);
        options.addOption(option);
        assertTrue(options.getRequiredOptions().contains("b"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_dSRt0_1() {
        Options options = new Options();
        String opt = "test";
        List<String> result = options.getMatchingOptions(opt);
    }
}