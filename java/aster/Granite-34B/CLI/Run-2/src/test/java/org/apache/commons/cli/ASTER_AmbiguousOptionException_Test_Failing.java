/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.ArrayList;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_AmbiguousOptionException_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getMatchingOptions_2_apIE2() throws Exception {
        AmbiguousOptionException ambiguousOptionException = new AmbiguousOptionException("option", new ArrayList<String>());
        Collection<String> result = ambiguousOptionException.getMatchingOptions();
        assertEquals(1, result.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getMatchingOptions_3_cGvX3() throws Exception {
        AmbiguousOptionException ambiguousOptionException = new AmbiguousOptionException("option", new ArrayList<String>());
        Collection<String> result = ambiguousOptionException.getMatchingOptions();
        assertEquals("value", result.iterator().next());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getMatchingOptions_4_wYLa4() throws Exception {
        AmbiguousOptionException ambiguousOptionException = new AmbiguousOptionException("option", new ArrayList<String>());
        Collection<String> result = ambiguousOptionException.getMatchingOptions();
        assertEquals(2, result.size());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getMatchingOptions_5_QXYP5() throws Exception {
        AmbiguousOptionException ambiguousOptionException = new AmbiguousOptionException("option", new ArrayList<String>());
        Collection<String> result = ambiguousOptionException.getMatchingOptions();
        assertEquals("value1", result.iterator().next());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getMatchingOptions_6_lRlD6() throws Exception {
        AmbiguousOptionException ambiguousOptionException = new AmbiguousOptionException("option", new ArrayList<String>());
        Collection<String> result = ambiguousOptionException.getMatchingOptions();
        assertEquals("value2", result.iterator().next());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getMatchingOptions_3_cGvX3_fid1() throws Exception {
        AmbiguousOptionException ambiguousOptionException = new AmbiguousOptionException("option", new ArrayList<String>());
        Collection<String> result = ambiguousOptionException.getMatchingOptions();
        assertEquals(1, result.size());
        assertTrue(result.contains("value"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_getMatchingOptions_6_lRlD6_fid1() throws Exception {
        AmbiguousOptionException ambiguousOptionException = new AmbiguousOptionException("option", new ArrayList<String>());
        Collection<String> result = ambiguousOptionException.getMatchingOptions();
        assertEquals(1, result.size());
        assertTrue(result.contains("value2"));
    }
}