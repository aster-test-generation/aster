/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_PatternOptionBuilder_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParsePatternWithRequiredOption_Eiyu1() {
        Options options = PatternOptionBuilder.parsePattern("a!bc");
        assertTrue(options.getOption("a").isRequired());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testParsePatternWithOptionType_zPeA2() {
        Options options = PatternOptionBuilder.parsePattern("a:bc");
        assertEquals(String.class, options.getOption("a").getType());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_0_kzNR0() {
        char ch = '@';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_1_eJtI1() {
        char ch = ':';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_2_xEwX2() {
        char ch = '%';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_3_Mdcg3() {
        char ch = '+';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_4_sWFT4() {
        char ch = '#';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_5_gMsX5() {
        char ch = '<';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_6_JihJ6() {
        char ch = '>';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_7_WCaM7() {
        char ch = '*';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_8_lrCg8() {
        char ch = '/';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_9_aMec9() {
        char ch = '!';
        boolean expected = true;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_10_bnCT10() {
        char ch = 'a';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_11_nmYJ11() {
        char ch = 'A';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_12_ICet12() {
        char ch = '0';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_13_esfd13() {
        char ch = '9';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_14_PsAI14() {
        char ch = ' ';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_15_IjaL15() {
        char ch = '\t';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_16_rhXs16() {
        char ch = '\n';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_17_UTQx17() {
        char ch = '\r';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_18_ANSI18() {
        char ch = '\f';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsValueCode_19_gbbv19() {
        char ch = '\b';
        boolean expected = false;
        boolean actual = PatternOptionBuilder.isValueCode(ch);
        assertEquals(expected, actual);
    }
}