/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_MissingArgumentException_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionTest_lqog0() {
        MissingArgumentException target = new MissingArgumentException("message");
        Option option = new Option("option", "longOption", true, "description");
        assertNull(option);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionTest1_lbEl1() {
        MissingArgumentException target = new MissingArgumentException("message");
        Option option = new Option("option", true, "description");
        assertNull(option);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionTest2_hKBc2() {
        MissingArgumentException target = new MissingArgumentException("message");
        Option option = new Option("option", "description");
        assertNull(option);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionTest_lqog0_fid2() {
        MissingArgumentException target = new MissingArgumentException("message");
        Option option = new Option("option", "longOption", true, "description");
        assertEquals(option, target.getOption());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionTest1_lbEl1_fid2() {
        MissingArgumentException target = new MissingArgumentException("message");
        Option option = new Option("option", true, "description");
        assertEquals(option, target.getOption());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionTest2_hKBc2_fid2() {
        MissingArgumentException target = new MissingArgumentException("message");
        Option option = new Option("option", "description");
        assertEquals(option, target.getOption());
    }
}