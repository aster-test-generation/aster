/**
 * Generated by Aster
 */
package org.apache.commons.cli;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_OptionValidator_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testValidate_InvalidOptionName_pLXd2() {
        String option = "!";
        IllegalArgumentException expected = new IllegalArgumentException("Illegal option name '!'");
        IllegalArgumentException actual = assertThrows(IllegalArgumentException.class, () -> OptionValidator.validate(option));
        assertEquals(expected.getMessage(), actual.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testValidate_InvalidFirstCharOption_VPiC2() {
        String option = "0test";
        IllegalArgumentException expected = new IllegalArgumentException("Illegal option name '0'.");
        IllegalArgumentException actual = assertThrows(IllegalArgumentException.class, () -> OptionValidator.validate(option));
        assertEquals(expected.getMessage(), actual.getMessage());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testValidate_InvalidFirstCharOption_VPiC2_1() {
        String option = "0test";
        IllegalArgumentException expected = new IllegalArgumentException("Illegal option name '0'.");
        IllegalArgumentException actual = assertThrows(IllegalArgumentException.class, () -> OptionValidator.validate(option));
    }
}