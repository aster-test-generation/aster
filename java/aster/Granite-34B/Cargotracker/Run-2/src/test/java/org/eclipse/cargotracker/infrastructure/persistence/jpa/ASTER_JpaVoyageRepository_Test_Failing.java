/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.infrastructure.persistence.jpa;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.voyage.Voyage;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JpaVoyageRepository_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindAllCoverage_PTQv1_1() {
    JpaVoyageRepository jpaVoyageRepository = new JpaVoyageRepository();
    List<Voyage> actual = jpaVoyageRepository.findAll();
    Assertions.assertNotNull(actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindAllCoverage_PTQv1_2() {
    JpaVoyageRepository jpaVoyageRepository = new JpaVoyageRepository();
    List<Voyage> actual = jpaVoyageRepository.findAll();
    Assertions.assertTrue(actual.isEmpty());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindAllCoverage_PTQv1() {
    JpaVoyageRepository jpaVoyageRepository = new JpaVoyageRepository();
    List<Voyage> actual = jpaVoyageRepository.findAll();
    Assertions.assertNotNull(actual);
    Assertions.assertTrue(actual.isEmpty());
  }
}