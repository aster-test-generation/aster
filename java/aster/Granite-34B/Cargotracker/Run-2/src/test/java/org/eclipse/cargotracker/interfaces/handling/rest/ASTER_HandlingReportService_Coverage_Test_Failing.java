/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.rest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HandlingReportService_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithCompletionTime_XtRh0() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setCompletionTime("2022-01-01T00:00:00");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithNoCompletionTime_tpEu1() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setCompletionTime(null);
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithVoyageNumber_KDTn2() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setVoyageNumber("voyage123");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithNoVoyageNumber_MXQl3() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setVoyageNumber(null);
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithEventType_BYvm4() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setEventType("LOAD");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithNoEventType_kQGV5() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setEventType(null);
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithUnLocode_BNqG6() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setUnLocode("USCHI");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithNoUnLocode_wgMA7() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setUnLocode(null);
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithTrackingId_oAiS8() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setTrackingId("tracking123");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithNoTrackingId_kvrm9() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setTrackingId(null);
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithAllData_OBnk10() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setCompletionTime("2022-01-01T00:00:00");
    handlingReport.setVoyageNumber("voyage123");
    handlingReport.setEventType("LOAD");
    handlingReport.setUnLocode("USCHI");
    handlingReport.setTrackingId("tracking123");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithVoyageNumber_KDTn2_fid1() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setVoyageNumber("voyage123");
    handlingReportService.submitReport(handlingReport);
    // Add assertions here
}

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReportWithEventType_BYvm4_fid1() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setEventType("LOAD");
    handlingReportService.submitReport(handlingReport);
    // Add assertions here
}
}