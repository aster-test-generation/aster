/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.dto;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoStatus_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getTrackingId_returnsTrackingId_qYYp0() {
    CargoStatus cargoStatus = new CargoStatus("ABC123", "New York", "In Transit", false, "2022-09-30", "Next stop: Chicago", new ArrayList<>());
    assertEquals("ABC123", cargoStatus.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getTrackingId_returnsTrackingId_forAnotherCargo_uVJX1() {
    CargoStatus cargoStatus = new CargoStatus("XYZ789", "Los Angeles", " Delivered", true, "2022-10-15", " delivered", new ArrayList<>());
    assertEquals("XYZ789", cargoStatus.getTrackingId());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getEtaTest_CEQS0() {
    CargoStatus cargoStatus = new CargoStatus("trackigId", "destination", "statusText", true, "eta", "nextExpectedActivity", new ArrayList<TrackingEvents>());
    String eta = cargoStatus.getEta();
    assertEquals("eta", eta);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getEtaTest2_CkFg1() {
    CargoStatus cargoStatus = new CargoStatus("trackigId", "destination", "statusText", false, "eta", "nextExpectedActivity", new ArrayList<TrackingEvents>());
    String eta = cargoStatus.getEta();
    assertEquals("eta", eta);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getNextExpectedActivityTest_ZFMt0() {
    CargoStatus cargoStatus = new CargoStatus("trackigId", "destination", "statusText", true, "eta", "nextExpectedActivity", new ArrayList<TrackingEvents>());
    String nextExpectedActivity = cargoStatus.getNextExpectedActivity();
    assertEquals("nextExpectedActivity", nextExpectedActivity);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getNextExpectedActivityTest_SxKA1() {
    CargoStatus cargoStatus = new CargoStatus("trackigId", "destination", "statusText", false, "eta", "nextExpectedActivity", new ArrayList<TrackingEvents>());
    String nextExpectedActivity = cargoStatus.getNextExpectedActivity();
    assertEquals("nextExpectedActivity", nextExpectedActivity);
  }
}