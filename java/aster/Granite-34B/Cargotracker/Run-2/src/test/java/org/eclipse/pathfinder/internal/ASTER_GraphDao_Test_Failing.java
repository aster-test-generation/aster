/**
 * Generated by Aster
 */
package org.eclipse.pathfinder.internal;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_GraphDao_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_tIjx0_1() {
    GraphDao graphDao = new GraphDao();
    String from = "New York";
    String to = "Los Angeles";
    String expectedVoyageNumber = "0100S";
    String actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "London";
    to = "Paris";
    expectedVoyageNumber = "0200T";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Tokyo";
    to = "Sydney";
    expectedVoyageNumber = "0300A";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Beijing";
    to = "Rio de Janeiro";
    expectedVoyageNumber = "0301S";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Moscow";
    to = "Cairo";
    expectedVoyageNumber = "0400S";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    assertEquals(expectedVoyageNumber, actualVoyageNumber);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_tIjx0_1_fid1() {
    GraphDao graphDao = new GraphDao();
    String from = "New York";
    String to = "Los Angeles";
    String expectedVoyageNumber = "0100S";
    String actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "London";
    to = "Paris";
    expectedVoyageNumber = "0200T";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Tokyo";
    to = "Sydney";
    expectedVoyageNumber = "0300A";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Beijing";
    to = "Rio de Janeiro";
    expectedVoyageNumber = "0301S";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Moscow";
    to = "Cairo";
    expectedVoyageNumber = "0200T";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    assertEquals(expectedVoyageNumber, actualVoyageNumber);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_tIjx0_2_fid1() {
    GraphDao graphDao = new GraphDao();
    String from = "New York";
    String to = "Los Angeles";
    String expectedVoyageNumber = "0100S";
    String actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "London";
    to = "Paris";
    expectedVoyageNumber = "0200T";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Tokyo";
    to = "Sydney";
    expectedVoyageNumber = "0300A";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Beijing";
    to = "Rio de Janeiro";
    expectedVoyageNumber = "0301S";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Moscow";
    to = "Cairo";
    expectedVoyageNumber = "0100S";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    assertEquals(expectedVoyageNumber, actualVoyageNumber);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetVoyageNumber_tIjx0_4_fid1() {
    GraphDao graphDao = new GraphDao();
    String from = "New York";
    String to = "Los Angeles";
    String expectedVoyageNumber = "0100S";
    String actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "London";
    to = "Paris";
    expectedVoyageNumber = "0200T";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Tokyo";
    to = "Sydney";
    expectedVoyageNumber = "0300A";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Beijing";
    to = "Rio de Janeiro";
    expectedVoyageNumber = "0301S";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    from = "Moscow";
    to = "Cairo";
    expectedVoyageNumber = "0301S";
    actualVoyageNumber = graphDao.getVoyageNumber(from, to);
    assertEquals(expectedVoyageNumber, actualVoyageNumber);
  }
}