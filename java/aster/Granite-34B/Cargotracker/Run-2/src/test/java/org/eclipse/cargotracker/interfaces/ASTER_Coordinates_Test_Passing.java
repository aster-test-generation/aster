/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Coordinates_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getLongitude_dgEd0() {
    Coordinates coordinates = new Coordinates(0.0, 0.0);
    double longitude = coordinates.getLongitude();
    assert longitude == 0.0;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getLongitude_withNonZeroLongitude_jinN1() {
    Coordinates coordinates = new Coordinates(0.0, 123.456);
    double longitude = coordinates.getLongitude();
    assert longitude == 123.456;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getLongitude_withNegativeLongitude_FUda2() {
    Coordinates coordinates = new Coordinates(0.0, -123.456);
    double longitude = coordinates.getLongitude();
    assert longitude == -123.456;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getLatitude_qTCu0() {
    Coordinates coordinates = new Coordinates(0.0, 1.0);
    double latitude = coordinates.getLatitude();
    assertEquals(0.0, latitude, 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getLatitude_extreme_YfOy1() {
    Coordinates coordinates = new Coordinates(90.0, 180.0);
    double latitude = coordinates.getLatitude();
    assertEquals(90.0, latitude, 0.0);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getLatitude_negative_czFr2() {
    Coordinates coordinates = new Coordinates(-90.0, -180.0);
    double latitude = coordinates.getLatitude();
    assertEquals(-90.0, latitude, 0.0);
  }
}