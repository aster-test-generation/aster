/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TrackingId_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_sameValueAs_with_null_id_jbQT7() {
    TrackingId trackingId = new TrackingId(null);
    TrackingId other = new TrackingId(null);
    boolean result = trackingId.sameValueAs(other);
    Assertions.assertTrue(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithoutId_BWpZ1_VZVu0() {
    TrackingId trackingId = new TrackingId();
    String actual = trackingId.toString();
    String expected = "";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testHashCodeWithEmptyId_ylOU1_uNle0() {
    TrackingId trackingId = new TrackingId();
    int expected = 0;
    int actual = trackingId.hashCode();
    assert actual == expected;
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithoutId_BWpZ1_VZVu0_fid1() {
    TrackingId trackingId = new TrackingId();
    String actual = trackingId.toString();
    String expected = "";
    assertNull(expected);
  }
}