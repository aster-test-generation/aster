/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SampleVoyages_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_gwaP0_1() {
    VoyageNumber voyageNumber = new VoyageNumber("12345");
    Voyage actualVoyage = SampleVoyages.lookup(voyageNumber);
    assertNotNull(actualVoyage);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_gwaP0_2() {
    VoyageNumber voyageNumber = new VoyageNumber("12345");
    Voyage actualVoyage = SampleVoyages.lookup(voyageNumber);
    assertSame(voyageNumber, actualVoyage.getVoyageNumber());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_NullVoyageNumber_ySzr1() {
    assertThrows(IllegalArgumentException.class, () -> {
      SampleVoyages.lookup(null);
    });
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_VoyageNumberNotFound_IBEi2() {
    VoyageNumber voyageNumber = new VoyageNumber("99999");
    Voyage actualVoyage = SampleVoyages.lookup(voyageNumber);
    Assertions.assertNull(actualVoyage.getVoyageNumber());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_gwaP0() {
    VoyageNumber voyageNumber = new VoyageNumber("12345");
    Voyage actualVoyage = SampleVoyages.lookup(voyageNumber);
    assertNotNull(actualVoyage);
    assertSame(voyageNumber, actualVoyage.getVoyageNumber());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_NullVoyageNumber_ySzr1_fid2() {
    try {
      SampleVoyages.lookup(null);
      fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
      assertEquals("VoyageNumber is required.", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_VoyageNumberNotFound_IBEi2_fid2() {
    VoyageNumber voyageNumber = new VoyageNumber("99999");
    Voyage actualVoyage = SampleVoyages.lookup(voyageNumber);
    assertTrue(actualVoyage.getVoyageNumber().getIdString().isEmpty());
  }
}