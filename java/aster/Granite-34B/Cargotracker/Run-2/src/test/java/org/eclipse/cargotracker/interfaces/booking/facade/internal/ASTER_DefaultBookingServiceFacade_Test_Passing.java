/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.RouteCandidate;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingServiceFacade_Test_Passing {
  private DefaultBookingServiceFacade defaultBookingServiceFacade;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignCargoToRoute_EDxv0() {
    DefaultBookingServiceFacade defaultBookingServiceFacade = new DefaultBookingServiceFacade();
    String trackingIdStr = "trackingIdStr";
    RouteCandidate routeCandidateDTO = new RouteCandidate(new ArrayList<>());
    try {
      defaultBookingServiceFacade.assignCargoToRoute(trackingIdStr, routeCandidateDTO);
    } catch (NullPointerException e) {
      // Expected exception, handle or ignore as needed
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testAssignCargoToRoute2_ZqaM1() {
    DefaultBookingServiceFacade defaultBookingServiceFacade = new DefaultBookingServiceFacade();
    String trackingIdStr = "trackingIdStr";
    RouteCandidate routeCandidateDTO = new RouteCandidate(new ArrayList<>());
    try {
      defaultBookingServiceFacade.assignCargoToRoute(trackingIdStr, routeCandidateDTO);
    } catch (NullPointerException e) {
      // Expected exception
    }
  }
}