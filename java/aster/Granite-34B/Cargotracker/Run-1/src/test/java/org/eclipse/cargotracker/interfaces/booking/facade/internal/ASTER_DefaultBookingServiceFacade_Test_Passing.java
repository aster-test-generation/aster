/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.internal;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingServiceFacade_Test_Passing {
  private DefaultBookingServiceFacade bookingServiceFacade;
  private DefaultBookingServiceFacade defaultBookingServiceFacade;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_NullOrigin_MokI1() {
    DefaultBookingServiceFacade bookingServiceFacade = new DefaultBookingServiceFacade();
    String origin = null;
    String destination = "CNSHA";
    LocalDate arrivalDeadline = LocalDate.of(2022, 12, 31);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_NullDestination_XeOW2() {
    DefaultBookingServiceFacade bookingServiceFacade = new DefaultBookingServiceFacade();
    String origin = "AUH";
    String destination = null;
    LocalDate arrivalDeadline = LocalDate.of(2022, 12, 31);
    Assertions.assertThrows(IllegalArgumentException.class, () -> bookingServiceFacade.bookNewCargo(origin, destination, arrivalDeadline));
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_NullArrivalDeadline_wpbz3() {
    DefaultBookingServiceFacade bookingServiceFacade = new DefaultBookingServiceFacade();
    String origin = "AUH";
    String destination = "CNSHA";
    LocalDate arrivalDeadline = null;
    Assertions.assertThrows(IllegalArgumentException.class, () -> bookingServiceFacade.bookNewCargo(origin, destination, arrivalDeadline));
  }
}