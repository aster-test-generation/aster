/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.handling.rest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_HandlingReportService_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_NotNull_Invalid_Pgov1() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setUnLocode("USCHI");
    handlingReport.setEventType("LOAD");
    handlingReport.setVoyageNumber("0123");
    handlingReport.setTrackingId("123456789");
    handlingReport.setCompletionTime("2022-00-00T00:00:00");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_Null_vogB2() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = null;
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_Empty_TtlC3() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_Partial_QqMk4() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setUnLocode("USCHI");
    handlingReport.setEventType("LOAD");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_Partial_Invalid_lVTR5() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setUnLocode("USCHI");
    handlingReport.setEventType("LOAD");
    handlingReport.setVoyageNumber("0123");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_Partial_Null_bDNK6() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setUnLocode("USCHI");
    handlingReport.setEventType("LOAD");
    handlingReport.setVoyageNumber(null);
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_Partial_Empty_kiqM7() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setUnLocode("USCHI");
    handlingReport.setEventType("LOAD");
    handlingReport.setVoyageNumber("");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_Partial_Partial_zEfo8() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = new HandlingReport();
    handlingReport.setUnLocode("USCHI");
    handlingReport.setEventType("LOAD");
    handlingReport.setVoyageNumber("0123");
    handlingReport.setTrackingId("123456789");
    handlingReportService.submitReport(handlingReport);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSubmitReport_HandlingReport_Null_vogB2_fid1() {
    HandlingReportService handlingReportService = new HandlingReportService();
    HandlingReport handlingReport = null;
    handlingReportService.submitReport(handlingReport);
    // Add assertion here
}
}