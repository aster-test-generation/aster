/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.application.internal;

import java.time.LocalDate;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.location.UnLocode;
import org.eclipse.cargotracker.domain.service.RoutingService;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DefaultBookingService_Test_Passing {
  private RoutingService routingService;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_NullOrigin_SNcR1() {
    DefaultBookingService bookingService = new DefaultBookingService();
    UnLocode origin = null;
    UnLocode destination = new UnLocode("SESTO");
    LocalDate arrival = LocalDate.of(2022, 1, 1);
    try {
      bookingService.bookNewCargo(origin, destination, arrival);
      fail("Expected exception");
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_NullDestination_wqPX2() {
    DefaultBookingService bookingService = new DefaultBookingService();
    UnLocode origin = new UnLocode("USCHI");
    UnLocode destination = null;
    LocalDate arrival = LocalDate.of(2022, 1, 1);
    try {
      bookingService.bookNewCargo(origin, destination, arrival);
      fail("Expected exception");
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testBookNewCargo_NullArrival_yKaT3() {
    DefaultBookingService bookingService = new DefaultBookingService();
    UnLocode origin = new UnLocode("USCHI");
    UnLocode destination = new UnLocode("SESTO");
    LocalDate arrival = null;
    try {
      bookingService.bookNewCargo(origin, destination, arrival);
      fail("Expected exception");
    } catch (Exception e) {
    }
  }
}