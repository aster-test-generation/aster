/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_TransportStatus_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAs_WithSameObject_ShouldReturnTrue_TbhV0_CmMx0() {
    TransportStatus status = TransportStatus.NOT_RECEIVED;
    boolean result = status.sameValueAs(status);
    assertTrue(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAs_WithEqualObject_ShouldReturnTrue_MdIj1_xhXX0() {
    TransportStatus status1 = TransportStatus.NOT_RECEIVED;
    TransportStatus status2 = TransportStatus.NOT_RECEIVED;
    boolean result = status1.sameValueAs(status2);
    assertTrue(result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAs_WithDifferentObject_ShouldReturnFalse_FYIi2_LDzu0() {
    TransportStatus status1 = TransportStatus.NOT_RECEIVED;
    TransportStatus status2 = TransportStatus.IN_PORT;
    boolean result = status1.sameValueAs(status2);
    assertTrue(!result);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testSameValueAs_WithNullObject_ShouldReturnFalse_Mlip3_ouQD0() {
    TransportStatus status = TransportStatus.NOT_RECEIVED;
    boolean result = status.sameValueAs(null);
    assertTrue(!result);
  }
}