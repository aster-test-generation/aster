/**
 * Generated by Aster
 */
package org.eclipse.pathfinder.api;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_GraphTraversalService_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPath_nullOrigin_irEW1_fid2() {
    GraphTraversalService gts = new GraphTraversalService();
    String originUnLocode = null;
    String destinationUnLocode = "CAeux";
    String deadline = "20220101";
    try {
      gts.findShortestPath(originUnLocode, destinationUnLocode, deadline);
      fail("Expected exception not thrown");
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPath_invalidOrigin_bcOA2_fid2() {
    GraphTraversalService gts = new GraphTraversalService();
    String originUnLocode = "US";
    String destinationUnLocode = "CAeux";
    String deadline = "20220101";
    try {
      gts.findShortestPath(originUnLocode, destinationUnLocode, deadline);
      fail("Expected exception not thrown");
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPath_nullDestination_UtlK3_fid2() {
    GraphTraversalService gts = new GraphTraversalService();
    String originUnLocode = "USNYC";
    String destinationUnLocode = null;
    String deadline = "20220101";
    try {
      gts.findShortestPath(originUnLocode, destinationUnLocode, deadline);
      fail("Expected exception not thrown");
    } catch (Exception e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindShortestPath_invalidDeadline_lFQM5_fid2() {
    GraphTraversalService gts = new GraphTraversalService();
    String originUnLocode = "USNYC";
    String destinationUnLocode = "CAeux";
    String deadline = "202201";
    try {
      gts.findShortestPath(originUnLocode, destinationUnLocode, deadline);
      fail("Expected exception not thrown");
    } catch (Exception e) {
    }
  }
}