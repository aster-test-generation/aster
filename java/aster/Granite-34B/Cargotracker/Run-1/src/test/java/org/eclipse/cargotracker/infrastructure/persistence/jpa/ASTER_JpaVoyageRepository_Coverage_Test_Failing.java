/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.infrastructure.persistence.jpa;

import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.voyage.Voyage;
import org.eclipse.cargotracker.domain.model.voyage.VoyageNumber;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_JpaVoyageRepository_Coverage_Test_Failing {
  @PersistenceContext
  private EntityManager entityManager;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFindAll_TDZZ0() {
    JpaVoyageRepository voyageRepository = new JpaVoyageRepository();
    List<Voyage> voyages = voyageRepository.findAll();
    assertNotNull(voyages);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFind_AWHc0() {
    JpaVoyageRepository jpaVoyageRepository = new JpaVoyageRepository();
    VoyageNumber voyageNumber = new VoyageNumber();
    Voyage actualFindResult = jpaVoyageRepository.find(voyageNumber);
    Voyage expectedFindResult = new Voyage();
    assertEquals(expectedFindResult, actualFindResult);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testFind_AWHc0_fid2() {
    JpaVoyageRepository jpaVoyageRepository = new JpaVoyageRepository();
    VoyageNumber voyageNumber = new VoyageNumber();
    Voyage actualFindResult = jpaVoyageRepository.find(voyageNumber);
  }
}