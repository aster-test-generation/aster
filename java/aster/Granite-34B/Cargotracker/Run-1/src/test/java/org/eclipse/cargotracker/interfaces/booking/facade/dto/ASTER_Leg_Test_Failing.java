/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.facade.dto;

import java.time.LocalDateTime;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Leg_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithAllNull_GEcs5() {
    Leg leg = new Leg(null, null, null, null, null);
    String expected = "Leg{" + "voyageNumber=null" + ", from=null" + ", to=null" + ", loadTime=null" + ", unloadTime=null" + "}";
    assertEquals(expected, leg.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetTo_IoMO0() {
    Location location = new Location("unLocode", "name");
    Leg leg = new Leg("voyageNumber", location, location, LocalDateTime.now(), LocalDateTime.now());
    assertEquals("Location{unLocode='unLocode', name='name'}", leg.getTo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetToWithNullToLocation_NlGE1() {
    Location location = new Location("unLocode", "name");
    Leg leg = new Leg("voyageNumber", location, null, LocalDateTime.now(), LocalDateTime.now());
    assertEquals("", leg.getTo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetToWithNullFromLocation_MDnp2() {
    Location location = new Location("unLocode", "name");
    Leg leg = new Leg("voyageNumber", null, location, LocalDateTime.now(), LocalDateTime.now());
    assertEquals("Location{unLocode='unLocode', name='name'}", leg.getTo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetToWithNullFromAndToLocation_KnSu3() {
    Leg leg = new Leg("voyageNumber", null, null, LocalDateTime.now(), LocalDateTime.now());
    assertEquals("", leg.getTo());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getToNameTest_Null_iosc1() {
    Location location = new Location("unLocode", "name");
    Leg leg = new Leg("voyageNumber", location, null, LocalDateTime.now(), LocalDateTime.now());
    assertEquals("", leg.getToName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetFrom_oRoh0() {
    Location location = new Location("unLocode", "name");
    Leg leg = new Leg("voyageNumber", location, location, LocalDateTime.now(), LocalDateTime.now());
    assertEquals("Location{unLocode='unLocode', name='name'}", leg.getFrom());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getFromName_SeoU0() {
    Location from = new Location("ABC", "Location A");
    Leg leg = new Leg("voyage1", from, null, null, null);
    assertEquals("Location A", leg.getFromName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getFromName_nullFrom_OFQt1() {
    Leg leg = new Leg("voyage1", null, null, null, null);
    assertEquals("", leg.getFromName());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithNullUnloadTime_LCtL4() {
    Location location1 = new Location("location1", "location1");
    Location location2 = new Location("location2", "location2");
    Leg leg = new Leg("voyageNumber", location1, location2, LocalDateTime.now(), null);
    String expected = "Leg{" + "voyageNumber=" + "voyageNumber" + ", from=" + location1.getUnLocode() + ", to=" + location2.getUnLocode() + ", loadTime=" + leg.getLoadTime() + ", unloadTime=null" + "}";
    assertEquals(expected, leg.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testToStringWithAllNull_GEcs5_fid1() {
    Leg leg = new Leg(null, null, null, null, null);
    String expected = "Leg{voyageNumber=null, from=null, to=null, loadTime=null, unloadTime=null}";
    assertEquals(expected, leg.toString());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getUnloadTimeTest_OcYR0_SIuN0() {
    Location loc1 = new Location("loc1", "loc1");
    Location loc2 = new Location("loc2", "loc2");
    Location loc3 = new Location("loc3", "loc3");
    Leg leg = new Leg("v1", loc1, loc3, null, null);
    String actual = leg.getFrom();
    String expected = null;
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getFromName_SeoU0_ijbY0() {
    Location from = new Location("ABC", "Location A");
    Leg leg = new Leg("voyage1", from, null, null, null);
    assertEquals("Location A", leg.getFrom());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getFromName_nullFrom_OFQt1_JpVI0() {
    Location location = new Location(null, null);
    Leg leg = new Leg("voyage1", location, null, null, null);
    assertEquals("", leg.getFromName());
  }
}