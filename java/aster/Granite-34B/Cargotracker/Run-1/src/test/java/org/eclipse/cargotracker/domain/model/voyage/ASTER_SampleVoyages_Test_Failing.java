/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.voyage;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_SampleVoyages_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_KBwJ0() {
    VoyageNumber voyageNumber = new VoyageNumber("number");
    Voyage voyage = SampleVoyages.lookup(voyageNumber);
    assertNotNull(voyage);
    assertSame(voyage, SampleVoyages.lookup(voyageNumber));
    try {
      SampleVoyages.lookup(null);
      fail("Expected exception: IllegalArgumentException");
    } catch (IllegalArgumentException e) {
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testLookup_coverage_fnOL1() {
    VoyageNumber voyageNumber = new VoyageNumber();
    Voyage voyage = SampleVoyages.lookup(voyageNumber);
    assertNotNull(voyage);
    try {
      SampleVoyages.lookup(null);
      fail("Expected exception: IllegalArgumentException");
    } catch (IllegalArgumentException e) {
    }
    assertEquals(voyage.getVoyageNumber(), voyageNumber);
    assertEquals(voyage.getSchedule(), voyage.getSchedule());
    assertEquals(voyage.hashCode(), voyage.hashCode());
    assertTrue(voyage.toString().length() > 0);
  }
}