/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.booking.sse;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.interfaces.Coordinates;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_LocationViewAdapter_Test_Failing {
  private LocationViewAdapter locationviewadapter;
  private Coordinates coordinates;

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getUnLocode_should_return_empty_string_when_location_is_null_WTfN1() {
    LocationViewAdapter locationViewAdapter = new LocationViewAdapter(null);
    String actual = locationViewAdapter.getUnLocode();
    assertEquals("", actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testGetName_NullLocation_QTWw1() {
    LocationViewAdapter locationViewAdapter = new LocationViewAdapter(null);
    String actual = locationViewAdapter.getName();
    String expected = "";
    assertEquals(expected, actual);
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getUnLocode_should_return_empty_string_when_location_is_null_WTfN1_fid2() {
    LocationViewAdapter locationViewAdapter = new LocationViewAdapter(null);
    String actual = locationViewAdapter.getUnLocode();
    assertEquals(null, actual);
  }
}