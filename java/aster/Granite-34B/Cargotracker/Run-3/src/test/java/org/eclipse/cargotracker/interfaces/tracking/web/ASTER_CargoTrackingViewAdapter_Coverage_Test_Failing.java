/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.interfaces.tracking.web;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_CargoTrackingViewAdapter_Coverage_Test_Failing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getNextExpectedActivity_NullHandlingActivity_eNQk0() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    assertEquals("", cargoTrackingViewAdapter.getNextExpectedActivity());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getNextExpectedActivity_LoadHandlingActivity_piRw2() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    assertEquals("Next expected activity is to load cargo onto voyage in ", cargoTrackingViewAdapter.getNextExpectedActivity());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getNextExpectedActivity_UnloadHandlingActivity_NkmP3() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    assertEquals("Next expected activity is to unload cargo off of in ", cargoTrackingViewAdapter.getNextExpectedActivity());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void getNextExpectedActivity_OtherHandlingActivity_VPLp4() {
    Cargo cargo = new Cargo();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, null);
    assertEquals("Next expected activity is to other cargo in ", cargoTrackingViewAdapter.getNextExpectedActivity());
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test_getEta_when_cargo_is_null_Yvpg2() {
    Cargo cargo = null;
    List<HandlingEvent> handlingEvents = new ArrayList<>();
    CargoTrackingViewAdapter cargoTrackingViewAdapter = new CargoTrackingViewAdapter(cargo, handlingEvents);
    assertEquals("?", cargoTrackingViewAdapter.getEta());
  }
}