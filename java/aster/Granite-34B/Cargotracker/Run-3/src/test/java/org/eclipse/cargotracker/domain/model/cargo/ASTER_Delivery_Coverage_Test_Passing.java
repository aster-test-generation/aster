/**
 * Generated by Aster
 */
package org.eclipse.cargotracker.domain.model.cargo;

import java.util.concurrent.TimeUnit;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Delivery_Coverage_Test_Passing {
  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void testUpdateOnRouting_When_RouteSpecification_Is_Null_NqmX0() {
    Delivery delivery = new Delivery();
    RouteSpecification routeSpecification = null;
    Itinerary itinerary = new Itinerary();
    try {
      delivery.updateOnRouting(routeSpecification, itinerary);
      fail("Exception expected");
    } catch (Exception e) {
      assertEquals("Route specification is required", e.getMessage());
    }
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test1_DIvD0() {
    Delivery delivery = new Delivery();
    delivery.hashCode();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test5_NwsO4() {
    Delivery delivery = new Delivery();
    delivery.setMisdirected(true);
    delivery.hashCode();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test11_qdbF10() {
    Delivery delivery = new Delivery();
    delivery.setLastEvent(new HandlingEvent());
    delivery.hashCode();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test2_GxTT1_trZj0() {
    Delivery delivery = new Delivery();
    delivery.setTransportStatus(TransportStatus.IN_PORT);
    delivery.hashCode();
  }

  @Test
  @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
  public void test9_FIDz8_cJiP0() {
    Delivery delivery = new Delivery();
    delivery.setRoutingStatus(RoutingStatus.ROUTED);
    delivery.hashCode();
  }
}