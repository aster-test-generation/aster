/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Soundex_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceWithMapping_OIsf1() throws EncoderException {
        Soundex soundex = new Soundex("mapping");
        String s1 = "example";
        String s2 = "example";
        int expected = SoundexUtils.difference(soundex, s1, s2);
        int actual = soundex.difference(s1, s2);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceWithSpecialCaseHW_rGto2() throws EncoderException {
        Soundex soundex = new Soundex("mapping", true);
        String s1 = "example";
        String s2 = "example";
        int expected = SoundexUtils.difference(soundex, s1, s2);
        int actual = soundex.difference(s1, s2);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDifferenceWithMappingArray_bEGh3() throws EncoderException {
        Soundex soundex = new Soundex(new char[]{'a', 'b', 'c'});
        String s1 = "example";
        String s2 = "example";
        int expected = SoundexUtils.difference(soundex, s1, s2);
        int actual = soundex.difference(s1, s2);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithSpecialCaseHW_wLgX4() {
        Soundex soundex = new Soundex("0123456789", true);
        String input = "Hello";
        Object result = soundex.encode(input);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithCustomMapping_WJtC5() {
        Soundex soundex = new Soundex("abcde");
        String input = "Hello";
        Object result = soundex.encode(input);
        assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_4char_kRUo5_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCD");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_5char_aINf6_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDE");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_6char_loQv7_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEF");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_7char_yQgb8_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFG");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_8char_aOMr9_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFGH");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_9char_dTsi10_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFGHI");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_10char_oylJ11_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFGHIJ");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_11char_THsV12_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFGHIJK");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_12char_bKFz13_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFGHIJKL");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_13char_sJKy14_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFGHIJKLL");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_14char_pHKm15_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFGHIJKLLL");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSoundex_String_15char_RdtY16_fid2() {
        Soundex soundex = new Soundex();
        String result = soundex.soundex("ABCDEFGHIJKLLLL");
        assertEquals("A120", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLength_fcEI0() {
        Soundex soundex = new Soundex();
        assertEquals(0, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLengthWithMapping_bsoY1_fid2() {
        Soundex soundex = new Soundex("mapping");
        assertEquals(0, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLengthWithMappingAndSpecialCaseHW_lQnY2_fid2() {
        Soundex soundex = new Soundex("mapping", true);
        assertEquals(0, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMaxLengthWithMappingArray_gRoe3_fid2() {
        Soundex soundex = new Soundex(new char[]{'a', 'b', 'c'});
        assertEquals(0, soundex.getMaxLength());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_1_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("S532", soundex.encode("Smith"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_3_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("A163", soundex.encode("Andersen"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_4_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("L222", soundex.encode("Lee"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_5_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("R122", soundex.encode("Rogers"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_6_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("T532", soundex.encode("Taylor"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_8_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("E462", soundex.encode("Ellis"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_9_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("G612", soundex.encode("Garcia"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_10_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("C122", soundex.encode("Carter"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_11_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("J250", soundex.encode("Jones"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_12_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("K132", soundex.encode("Kent"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_13_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("P232", soundex.encode("Perry"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_14_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("W422", soundex.encode("Wilson"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_jJVW0_15_fid2() {
        Soundex soundex = new Soundex();
        assertEquals("Z352", soundex.encode("Zimmerman"));
    }
}