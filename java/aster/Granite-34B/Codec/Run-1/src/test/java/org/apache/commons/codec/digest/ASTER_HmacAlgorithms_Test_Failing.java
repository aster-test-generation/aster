/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_HmacAlgorithms_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_HMAC_MD5_UxUG0() {
        HmacAlgorithms hmac = HmacAlgorithms.HMAC_MD5;
        assertEquals("HMAC_MD5", hmac.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_HMAC_SHA_1_NBkd1() {
        HmacAlgorithms hmac = HmacAlgorithms.HMAC_SHA_1;
        assertEquals("HMAC_SHA_1", hmac.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_HMAC_SHA_224_HnJb2() {
        HmacAlgorithms hmac = HmacAlgorithms.HMAC_SHA_224;
        assertEquals("HMAC_SHA_224", hmac.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_HMAC_SHA_256_JSYy3() {
        HmacAlgorithms hmac = HmacAlgorithms.HMAC_SHA_256;
        assertEquals("HMAC_SHA_256", hmac.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_HMAC_SHA_384_WrEt4() {
        HmacAlgorithms hmac = HmacAlgorithms.HMAC_SHA_384;
        assertEquals("HMAC_SHA_384", hmac.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetName_HMAC_SHA_512_rNVt5() {
        HmacAlgorithms hmac = HmacAlgorithms.HMAC_SHA_512;
        assertEquals("HMAC_SHA_512", hmac.getName());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_EnZL0_bkeA0_1() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_MD5;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_1;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_224;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_256;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_384;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_512;
        assertEquals("HMAC_MD5", hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_EnZL0_bkeA0_2() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_MD5;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_1;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_224;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_256;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_384;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_512;
        assertEquals("HMAC_SHA_1", hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_EnZL0_bkeA0_3() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_MD5;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_1;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_224;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_256;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_384;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_512;
        assertEquals("HMAC_SHA_224", hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_EnZL0_bkeA0_4() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_MD5;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_1;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_224;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_256;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_384;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_512;
        assertEquals("HMAC_SHA_256", hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_EnZL0_bkeA0_5() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_MD5;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_1;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_224;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_256;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_384;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_512;
        assertEquals("HMAC_SHA_384", hmacAlgorithms.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_EnZL0_bkeA0_6() {
        HmacAlgorithms hmacAlgorithms = HmacAlgorithms.HMAC_MD5;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_1;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_224;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_256;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_384;
        hmacAlgorithms = HmacAlgorithms.HMAC_SHA_512;
        assertEquals("HMAC_SHA_512", hmacAlgorithms.toString());
    }
}