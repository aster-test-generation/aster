/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Soundex_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonStringObject_UaCS0_1() throws org.apache.commons.codec.EncoderException {
        Soundex soundex = new Soundex();
        Object obj = new Object();
        EncoderException exception = Assertions.assertThrows(EncoderException.class, () -> soundex.encode(obj));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringObject_qmJF1() throws org.apache.commons.codec.EncoderException {
        Soundex soundex = new Soundex();
        String obj = "Hello";
        String expected = soundex.soundex(obj);
        String actual = (String) soundex.encode(obj);
        assertEquals(expected, actual);
    }
}