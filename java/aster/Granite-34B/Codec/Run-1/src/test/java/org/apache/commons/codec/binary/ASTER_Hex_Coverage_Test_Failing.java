/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Hex_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithString_GUuK0() throws EncoderException {
        final Hex hex = new Hex();
        final String input = "Hello, World!";
        final Object encoded = hex.encode(input);
        Assertions.assertEquals("48656C6C6F2C20576F726C6421", encoded);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithByteBuffer_cutX1() throws EncoderException {
        final Hex hex = new Hex();
        final ByteBuffer input = ByteBuffer.wrap("Hello, World!".getBytes());
        final Object encoded = hex.encode(input);
        Assertions.assertEquals("48656C6C6F2C20576F726C6421", encoded);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithByteArray_gEIw2() throws EncoderException {
        final Hex hex = new Hex();
        final byte[] input = "Hello, World!".getBytes();
        final Object encoded = hex.encode(input);
        Assertions.assertEquals("48656C6C6F2C20576F726C6421", encoded);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_ArDc0() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        assertEquals(null, hex.decode(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteArray_PGmE1() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        assertEquals(null, hex.decode(new byte[]{}));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteBuffer_ikCZ2() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        assertEquals(null, hex.decode(ByteBuffer.allocate(0)));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeChar_mNyD3() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex();
        assertEquals(null, hex.decode(new char[]{}));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithCharset_czsc4() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex("UTF-8");
        assertEquals(null, hex.decode(""));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithCharsetDecoder_doSj5() throws org.apache.commons.codec.DecoderException {
        Hex hex = new Hex(Charset.forName("UTF-8"));
        assertEquals(null, hex.decode(""));
    }
}