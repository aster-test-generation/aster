/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Caverphone2_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonString_nYze1() throws EncoderException {
        Caverphone2 caverphone2 = new Caverphone2();
        Object source = 123;
        Object expected = caverphone2.encode(source);
        assertEquals(expected, caverphone2.encode(source));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithEmptySource_reDO0_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String actual = caverphone2.encode("");
        assertEquals("0000000000", actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonEmptySource_uIvR1_fid2() {
        Caverphone2 caverphone2 = new Caverphone2();
        String actual = caverphone2.encode("hello");
        assertEquals("L300000000", actual);
    }
}