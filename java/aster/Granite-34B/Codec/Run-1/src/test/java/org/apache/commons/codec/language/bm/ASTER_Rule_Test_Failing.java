/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

public class Aster_Rule_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getInstanceMapTest_NoRulesFound_fZlX1() {
        Map<String, List<Rule>> expected = new HashMap<>();
        Map<String, List<Rule>> actual = Rule.getInstanceMap(NameType.GENERIC, RuleType.APPROX, "lang2");
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getInstanceMapTest_NoRulesFound_fZlX1_fid2() {
        Map<String, List<Rule>> expected = new HashMap<>();
        Map<String, List<Rule>> actual = Rule.getInstanceMap(NameType.GENERIC, RuleType.APPROX, "lang2");
        assertEquals(expected.toString(), actual.toString());
    }
}