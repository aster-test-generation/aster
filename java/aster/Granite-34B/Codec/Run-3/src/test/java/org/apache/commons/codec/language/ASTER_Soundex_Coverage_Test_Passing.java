/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Soundex_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithNonStringObject_NcDf0_1() throws org.apache.commons.codec.EncoderException {
    Soundex soundex = new Soundex();
    Object obj = new Object();
    EncoderException exception =
        Assertions.assertThrows(EncoderException.class, () -> soundex.encode(obj));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithStringObject_OPfN1() throws org.apache.commons.codec.EncoderException {
    Soundex soundex = new Soundex();
    String obj = "test";
    String actual = soundex.encode(obj);
    Assertions.assertEquals("Tst000", actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithNonStringObject_NcDf0() throws org.apache.commons.codec.EncoderException {
    Soundex soundex = new Soundex();
    Object obj = new Object();
    EncoderException exception =
        Assertions.assertThrows(EncoderException.class, () -> soundex.encode(obj));
    Assertions.assertEquals("Parameter supplied to Soundex encode is not of type java.lang.String",
        exception.getMessage());
}
}