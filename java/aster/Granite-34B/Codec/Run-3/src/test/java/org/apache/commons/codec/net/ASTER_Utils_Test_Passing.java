/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import org.apache.commons.codec.DecoderException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Utils_Test_Passing {
    private static final int RADIX = 16;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_1() throws Exception {
        assertEquals(0, Utils.digit16((byte) '0'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_2() throws Exception {
        assertEquals(1, Utils.digit16((byte) '1'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_3() throws Exception {
        assertEquals(2, Utils.digit16((byte) '2'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_4() throws Exception {
        assertEquals(3, Utils.digit16((byte) '3'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_5() throws Exception {
        assertEquals(4, Utils.digit16((byte) '4'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_6() throws Exception {
        assertEquals(5, Utils.digit16((byte) '5'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_7() throws Exception {
        assertEquals(6, Utils.digit16((byte) '6'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_8() throws Exception {
        assertEquals(7, Utils.digit16((byte) '7'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_9() throws Exception {
        assertEquals(8, Utils.digit16((byte) '8'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_10() throws Exception {
        assertEquals(9, Utils.digit16((byte) '9'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_11() throws Exception {
        assertEquals(10, Utils.digit16((byte) 'a'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_12() throws Exception {
        assertEquals(10, Utils.digit16((byte) 'A'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_13() throws Exception {
        assertEquals(11, Utils.digit16((byte) 'b'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_14() throws Exception {
        assertEquals(11, Utils.digit16((byte) 'B'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_15() throws Exception {
        assertEquals(12, Utils.digit16((byte) 'c'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_16() throws Exception {
        assertEquals(12, Utils.digit16((byte) 'C'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_17() throws Exception {
        assertEquals(13, Utils.digit16((byte) 'd'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_18() throws Exception {
        assertEquals(13, Utils.digit16((byte) 'D'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_19() throws Exception {
        assertEquals(14, Utils.digit16((byte) 'e'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_20() throws Exception {
        assertEquals(14, Utils.digit16((byte) 'E'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_21() throws Exception {
        assertEquals(15, Utils.digit16((byte) 'f'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16_DFJr0_22() throws Exception {
        assertEquals(15, Utils.digit16((byte) 'F'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDigit16Invalid_OYvN1_1() throws Exception {
        DecoderException exception = assertThrows(DecoderException.class, () -> Utils.digit16((byte) 'g'));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_0_ldoQ0() throws Exception {
	assertEquals('0', Utils.hexDigit(0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_1_yKmL1() throws Exception {
	assertEquals('1', Utils.hexDigit(1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_2_WSQq2() throws Exception {
	assertEquals('2', Utils.hexDigit(2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_3_rgoj3() throws Exception {
	assertEquals('3', Utils.hexDigit(3));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_4_WPYf4() throws Exception {
	assertEquals('4', Utils.hexDigit(4));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_5_TqBP5() throws Exception {
	assertEquals('5', Utils.hexDigit(5));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_6_sWtM6() throws Exception {
	assertEquals('6', Utils.hexDigit(6));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_7_TtfC7() throws Exception {
	assertEquals('7', Utils.hexDigit(7));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_8_hGMD8() throws Exception {
	assertEquals('8', Utils.hexDigit(8));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_9_BLeF9() throws Exception {
	assertEquals('9', Utils.hexDigit(9));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_10_RcKM10() throws Exception {
	assertEquals('A', Utils.hexDigit(10));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_11_Wxuc11() throws Exception {
	assertEquals('B', Utils.hexDigit(11));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_12_eIGG12() throws Exception {
	assertEquals('C', Utils.hexDigit(12));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_13_EQws13() throws Exception {
	assertEquals('D', Utils.hexDigit(13));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_14_QXdR14() throws Exception {
	assertEquals('E', Utils.hexDigit(14));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_15_dFmm15() throws Exception {
	assertEquals('F', Utils.hexDigit(15));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_16_TxME16() throws Exception {
	assertEquals('0', Utils.hexDigit(16));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_17_LXrO17() throws Exception {
	assertEquals('1', Utils.hexDigit(17));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_18_bori18() throws Exception {
	assertEquals('2', Utils.hexDigit(18));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_19_HuVC19() throws Exception {
	assertEquals('3', Utils.hexDigit(19));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_20_ikTO20() throws Exception {
	assertEquals('4', Utils.hexDigit(20));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_21_zmkw21() throws Exception {
	assertEquals('5', Utils.hexDigit(21));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_22_vziz22() throws Exception {
	assertEquals('6', Utils.hexDigit(22));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_23_AqBL23() throws Exception {
	assertEquals('7', Utils.hexDigit(23));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_24_xjmY24() throws Exception {
	assertEquals('8', Utils.hexDigit(24));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_25_quHz25() throws Exception {
	assertEquals('9', Utils.hexDigit(25));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_26_sUnW26() throws Exception {
	assertEquals('A', Utils.hexDigit(26));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_27_yKvj27() throws Exception {
	assertEquals('B', Utils.hexDigit(27));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_28_eDvR28() throws Exception {
	assertEquals('C', Utils.hexDigit(28));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_29_VVom29() throws Exception {
	assertEquals('D', Utils.hexDigit(29));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_30_aEDk30() throws Exception {
	assertEquals('E', Utils.hexDigit(30));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_31_eFJn31() throws Exception {
	assertEquals('F', Utils.hexDigit(31));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHexDigit_32_xCKE32() throws Exception {
	assertEquals('0', Utils.hexDigit(32));
}
}