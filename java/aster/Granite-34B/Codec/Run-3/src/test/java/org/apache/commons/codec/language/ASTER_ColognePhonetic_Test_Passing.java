/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ColognePhonetic_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_zfVv0() throws EncoderException {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String input = "Mller-Ldenscheid";
        String expected = "MuellerLuedenscheid";
        assertEquals(expected, colognePhonetic.encode(input));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_jnQr0_1() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertTrue(colognePhonetic.isEncodeEqual("Mller", "Mueller"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsEncodeEqual_jnQr0_2() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertFalse(colognePhonetic.isEncodeEqual("Mller", "Mueller1"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticNull_INqe0() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals(null, colognePhonetic.colognePhonetic(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticEmpty_nwfE1() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("", colognePhonetic.colognePhonetic(""));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_1() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("A"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_2() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("E"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_3() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("I"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_4() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("O"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_5() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("0", colognePhonetic.colognePhonetic("U"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_6() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("1", colognePhonetic.colognePhonetic("B"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_7() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("1", colognePhonetic.colognePhonetic("P"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_8() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("2", colognePhonetic.colognePhonetic("D"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_9() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("2", colognePhonetic.colognePhonetic("T"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_10() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("3", colognePhonetic.colognePhonetic("F"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_11() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("3", colognePhonetic.colognePhonetic("P"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_12() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("3", colognePhonetic.colognePhonetic("V"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_13() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("3", colognePhonetic.colognePhonetic("W"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_14() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4", colognePhonetic.colognePhonetic("G"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_15() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4", colognePhonetic.colognePhonetic("K"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_16() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4", colognePhonetic.colognePhonetic("Q"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_17() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4", colognePhonetic.colognePhonetic("X"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_18() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("8", colognePhonetic.colognePhonetic("S"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_19() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("8", colognePhonetic.colognePhonetic("Z"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_20() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("8", colognePhonetic.colognePhonetic("C"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_21() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("8", colognePhonetic.colognePhonetic("D"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_22() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("8", colognePhonetic.colognePhonetic("T"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_23() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("7", colognePhonetic.colognePhonetic("R"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_24() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("5", colognePhonetic.colognePhonetic("L"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_25() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("6", colognePhonetic.colognePhonetic("M"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testColognePhoneticOneLetter_UzvE2_26() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("6", colognePhonetic.colognePhonetic("N"));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithNullInput_boEd0() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic(null);
        String expected = null;
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithEmptyInput_AJdD1() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("");
        String expected = "";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithOneLetterInput_Jtlw2() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("A");
        String expected = "0";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithTwoLetterInput_Sdwa3() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("AB");
        String expected = "01";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithThreeLetterInput_hbKm4() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("ABC");
        String expected = "018";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithFourLetterInput_BavV5() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("ABCD");
        String expected = "0188";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithFiveLetterInput_iSCs6() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("ABCDE");
        String expected = "01887";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithSixLetterInput_ptZE7() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("ABCDEF");
        String expected = "018875";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithSevenLetterInput_TgoV8() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("ABCDEFG");
        String expected = "0188756";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithEightLetterInput_WFZs9() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("ABCDEFGH");
        String expected = "0188756";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithNineLetterInput_pOam10() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("ABCDEFGHI");
        String expected = "0188756";
        assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhoneticWithTenLetterInput_MurY11() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String actual = colognePhonetic.colognePhonetic("ABCDEFGHIJ");
        String expected = "0188756";
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_zQpp0() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String encoded = colognePhonetic.encode("Hello World");
        System.out.println(encoded);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_aDGV1() throws Exception {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        String encoded = colognePhonetic.encode("null");
        System.out.println(encoded);
    }
}