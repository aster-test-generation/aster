/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PureJavaCrc32_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_wZzj0() {
        PureJavaCrc32 crc32 = new PureJavaCrc32();
        long crc = 0L; // set the value of crc
        long expected = ~crc & 0xffffffffL;
        long actual = crc32.getValue();
        assert (expected == actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate1_HzhR0(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 0, 10);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate2_TYzX1(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 0, 11);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate3_ajss2(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 0, 12);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate4_IUBT3(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 0, 13);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate5_VmYP4(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 0, 14);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate6_ghDu5(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 0, 15);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate7_dJRr6(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 1, 10);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate8_HdMh7(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 1, 11);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate9_JjcG8(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 1, 12);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate10_WgEw9(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 1, 13);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate11_PPXk10(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 1, 14);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate12_Gxcw11(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 1, 15);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate13_yjfO12(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 2, 10);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUpdate14_QLyD13(){
	PureJavaCrc32 crc32 = new PureJavaCrc32();
	crc32.update(new byte[]{0,1,2,3,4,5,6,7,8,9}, 2, 11);
}
}