/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_RefinedSoundex_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonStringObject_PqGJ0() throws org.apache.commons.codec.EncoderException {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        Object obj = new Object();
        try {
            refinedSoundex.encode(obj);
        } catch (EncoderException e) {
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStringObject_upnT1() throws org.apache.commons.codec.EncoderException {
        RefinedSoundex refinedSoundex = new RefinedSoundex();
        Object obj = "test";
        Object result = refinedSoundex.encode(obj);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test1_AXsy0() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 0;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test2_dMZp1() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 65;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test4_ybaW3() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 123;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test5_TQCG4() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 90;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test6_KgEC5() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 122;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test7_OCiL6() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 97;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test8_ssmx7() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 120;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test9_wZIU8() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 64;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test10_OzeF9() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = 33;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test3_VYlP2_TKGd0() {
	RefinedSoundex soundex = new RefinedSoundex();
	char c = (char) -1;
	char result = soundex.getMappingCode(c);
	assertEquals(0, result);
}
}