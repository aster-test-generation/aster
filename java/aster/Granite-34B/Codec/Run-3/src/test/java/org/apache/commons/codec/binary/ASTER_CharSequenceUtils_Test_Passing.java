/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CharSequenceUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithBothNullCS_LFNd0() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches(null, true, 0, null, 0, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithFirstNullCS_URah1() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches(null, true, 0, "substring", 0, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithLastNullCS_yGql2() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches("cs", true, 0, null, 0, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters_DIBe3() throws Exception {
    assertTrue(CharSequenceUtils.regionMatches("cS", true, 0, "substring", 0, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters2_MhkL4() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches("cS", true, 0, "substring", 1, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters3_teRB5() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches("cS", true, 0, "substring", 0, 1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters4_EFzS6() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches("cS", true, 1, "substring", 0, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters5_IozO7() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches("cS", false, 0, "substring", 1, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters6_BkZI8() throws Exception {
    assertTrue(CharSequenceUtils.regionMatches("cS", false, 3, "substring", 3, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters7_ewXc9() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches("cS", false, 3, "substring", 3, 1));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters14_aAtt16() throws Exception {
    assertTrue(CharSequenceUtils.regionMatches("cS", false, 2, "substring", 2, 0));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testRegionMatchesWithAllParameters15_Yktc17() throws Exception {
    assertFalse(CharSequenceUtils.regionMatches("cS", false, 2, "substring", 2, 1));
}
}