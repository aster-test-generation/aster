/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_MurmurHash3_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testHash32_1_GKOb0() {
		String data = "This is a test string";
		int expected = -1509647551;
		int actual = MurmurHash3.hash32(data);
		assertEquals(expected, actual);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testHash32_2_ybiP1() {
		String data = "Another test string";
		int expected = 1516773987;
		int actual = MurmurHash3.hash32(data);
		assertEquals(expected, actual);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHash32x86SwitchCase1_VnkM0() {
    byte[] data = new byte[10];
    int offset = 0;
    int length = 10;
    int seed = 123;
    int expected = 0;
    int actual = MurmurHash3.hash32x86(data, offset, length, seed);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHash32x86SwitchCase2_UZCC1() {
    byte[] data = new byte[10];
    data[2] = 1;
    int offset = 0;
    int length = 10;
    int seed = 123;
    int expected = 0;
    int actual = MurmurHash3.hash32x86(data, offset, length, seed);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test3_KyWo2_KmtM0_1() {
	byte[] data = new byte[15];
	int offset = 0;
	int length = 15;
	int seed = 2;
	long[] hash128x64 = MurmurHash3.hash128x64(data, offset, length, seed);
	assertEquals(1348833062, hash128x64[0]);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void test3_KyWo2_KmtM0_2() {
	byte[] data = new byte[15];
	int offset = 0;
	int length = 15;
	int seed = 2;
	long[] hash128x64 = MurmurHash3.hash128x64(data, offset, length, seed);
	assertEquals(175441109, hash128x64[1]);}
}