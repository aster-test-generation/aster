/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;
import org.apache.commons.codec.CodecPolicy;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Base16_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabetWithValidInput_DqDz0() throws Exception {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        boolean result = base16.isInAlphabet((byte) 0x41);
        assert result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabetWithInvalidInput_lMUM1() throws Exception {
        Base16 base16 = new Base16(true, CodecPolicy.LENIENT);
        boolean result = base16.isInAlphabet((byte) 0xff);
        assert !result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabetWithBoundaryInput_CLmt2() throws Exception {
        Base16 base16 = new Base16(false, CodecPolicy.STRICT);
        boolean result = base16.isInAlphabet((byte) 0x00);
        assert result;
    }
}