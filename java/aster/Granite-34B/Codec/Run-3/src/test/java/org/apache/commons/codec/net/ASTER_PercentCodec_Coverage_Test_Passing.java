/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_PercentCodec_Coverage_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithBytesNull_zPmA0() throws org.apache.commons.codec.EncoderException {
    PercentCodec percentCodec = new PercentCodec();
    byte[] bytes = null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEncodeWithBytesNoSpace_FDfW2() throws org.apache.commons.codec.EncoderException {
    PercentCodec percentCodec = new PercentCodec();
    byte[] bytes = "testString".getBytes();
    assertEquals(bytes, percentCodec.encode(bytes));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testEncodeWithNull_klSf0() throws org.apache.commons.codec.EncoderException {
		PercentCodec percentCodec = new PercentCodec();
		Object obj = null;
		Object result = percentCodec.encode(obj);
		assert (result == null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testEncodeWithByteArray_OMcR1() throws org.apache.commons.codec.EncoderException {
		PercentCodec percentCodec = new PercentCodec();
		byte[] input = new byte[10];
		Object result = percentCodec.encode(input);
		assert (result != null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testEncodeWithNonByteArray_jcYj2() throws org.apache.commons.codec.EncoderException {
		PercentCodec percentCodec = new PercentCodec();
		Object obj = new Object();
		try {
			percentCodec.encode(obj);
		} catch (EncoderException e) {
			assert (true);
		}
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testEncodeWithEmptyByteArray_ysrO3() throws org.apache.commons.codec.EncoderException {
		PercentCodec percentCodec = new PercentCodec();
		byte[] input = {};
		Object result = percentCodec.encode(input);
		assert (result != null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void decode_null_IRcZ0() throws DecoderException {
    PercentCodec percentCodec = new PercentCodec();
    Object obj = null;
    Object result = percentCodec.decode(obj);
    Assertions.assertEquals(null, result);
}
}