/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_BinaryCodec_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testtoByteArrayWithNull_ydbM0() {
        BinaryCodec binaryCodec = new BinaryCodec();
        byte[] actual = binaryCodec.toByteArray(null);
        assertTrue(actual.length == 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testtoByteArray_yDwv1() {
        BinaryCodec binaryCodec = new BinaryCodec();
        String ascii = "Hello World";
        byte[] actual = binaryCodec.toByteArray(ascii);
        assertTrue(actual.length > 0);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_whenArgumentNotByteArray_thenEncoderException_joUd0_1() throws org.apache.commons.codec.EncoderException {
        BinaryCodec binaryCodec = new BinaryCodec();
        Object raw = new Object();
        EncoderException exception = Assertions.assertThrows(EncoderException.class, () -> binaryCodec.encode(raw));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithDecoderException_ZLQe4() throws org.apache.commons.codec.DecoderException {
        BinaryCodec binaryCodec = new BinaryCodec();
        Object input = new Object();
        try {
            binaryCodec.decode(input);
            fail("Expected DecoderException");
        } catch (DecoderException e) {
        }
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_whenArgumentNotByteArray_thenEncoderException_joUd0() throws org.apache.commons.codec.EncoderException {
        BinaryCodec binaryCodec = new BinaryCodec();
        Object raw = new Object();
        EncoderException exception = Assertions.assertThrows(EncoderException.class, () -> binaryCodec.encode(raw));
        assertEquals("argument not a byte array", exception.getMessage());
    }
}