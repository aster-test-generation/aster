/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Rule_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstance_oKLK0() {
        List<Rule> actual = Rule.getInstance(NameType.ASHKENAZI, RuleType.APPROX, "en");
        List<Rule> expected = new ArrayList<>();
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceMap_fjsK0() {
        Map<String, List<Rule>> map = Rule.getInstanceMap(NameType.ASHKENAZI, RuleType.APPROX, "en");
        assertNotNull(map);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetInstanceMap_fjsK0_fid2() {
        Map<String, List<Rule>> map = Rule.getInstanceMap(NameType.ASHKENAZI, RuleType.APPROX, "en");
        assertNotNull(map);
        assertEquals(0, map.size());
    }
}