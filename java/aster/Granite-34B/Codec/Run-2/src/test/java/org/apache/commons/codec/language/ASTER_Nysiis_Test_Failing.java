/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Nysiis_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_DXgk0() {
        Nysiis nysiis = new Nysiis();
        assertEquals("encode result", nysiis.encode("input string"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStrictParameter_XCML1() {
        Nysiis nysiis = new Nysiis(true);
        assertEquals("encode result", nysiis.encode("input string"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithString_hDkN0() throws EncoderException {
        Nysiis nysiis = new Nysiis();
        String input = "inputString";
        String expected = "expectedOutput";
        String actual = (String) nysiis.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStrictTrue_JbmP2() throws EncoderException {
        Nysiis nysiis = new Nysiis(true);
        String input = "inputString";
        String expected = "expectedOutput";
        String actual = (String) nysiis.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithStrictFalse_CSRs3() throws EncoderException {
        Nysiis nysiis = new Nysiis(false);
        String input = "inputString";
        String expected = "expectedOutput";
        String actual = (String) nysiis.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_FiveLetters_qUcL6() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDE", nysiis.nysiis("ABCDE"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_SixLetters_afqL7() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEF", nysiis.nysiis("ABCDEF"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_SevenLetters_PhOt8() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFG", nysiis.nysiis("ABCDEFG"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_EightLetters_MZfh9() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGH", nysiis.nysiis("ABCDEFGH"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_NineLetters_dXbg10() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGHI", nysiis.nysiis("ABCDEFGHI"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_TenLetters_nQFv11() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGHIJ", nysiis.nysiis("ABCDEFGHIJ"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_ElevenLetters_ivnl12() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGHIJK", nysiis.nysiis("ABCDEFGHIJK"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_TwelveLetters_wGBS13() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGHIJKL", nysiis.nysiis("ABCDEFGHIJKL"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_ThirteenLetters_fFiQ14() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGHIJKLL", nysiis.nysiis("ABCDEFGHIJKLL"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_FourteenLetters_lTOI15() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGHIJKLLM", nysiis.nysiis("ABCDEFGHIJKLLM"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_FifteenLetters_Srpg16() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGHIJKLLMN", nysiis.nysiis("ABCDEFGHIJKLLMN"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_SixteenLetters_hNWN17() {
        Nysiis nysiis = new Nysiis();
        assertEquals("ABCDEFGHIJKLLMNO", nysiis.nysiis("ABCDEFGHIJKLLMNO"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_1_OVpk0() {
        Nysiis nysiis = new Nysiis();
        String str = "New York";
        String expected = "NYSI";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_2_Ncgr1() {
        Nysiis nysiis = new Nysiis();
        String str = "New Jersey";
        String expected = "NYKS";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_3_BUyn2() {
        Nysiis nysiis = new Nysiis();
        String str = "Newark";
        String expected = "NYRK";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_4_rpyC3() {
        Nysiis nysiis = new Nysiis();
        String str = "New Haven";
        String expected = "NYFX";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_5_hxLc4() {
        Nysiis nysiis = new Nysiis();
        String str = "New Brunswick";
        String expected = "NYBKS";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_6_YkKt5() {
        Nysiis nysiis = new Nysiis();
        String str = "New Castle";
        String expected = "NYKS";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNysiis_7_TMHQ6() {
        Nysiis nysiis = new Nysiis();
        String str = "Newport News";
        String expected = "NYPSS";
        String actual = nysiis.nysiis(str);
        assertEquals(expected, actual);
    }
}