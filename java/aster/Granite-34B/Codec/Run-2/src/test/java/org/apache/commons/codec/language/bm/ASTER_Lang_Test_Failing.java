/**
 * Generated by Aster
 */
package org.apache.commons.codec.language.bm;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Lang_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInstance_WRYV0() {
        Lang lang = Lang.instance(NameType.ASHKENAZI);
        assertEquals("org.apache.commons.codec.language.bm.Lang@49763127", lang.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInstance_wejJ1() {
        Lang lang = Lang.instance(NameType.GENERIC);
        assertEquals("org.apache.commons.codec.language.bm.Lang@3b16e814", lang.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInstance_LxjF2() {
        Lang lang = Lang.instance(NameType.SEPHARDIC);
        assertEquals("org.apache.commons.codec.language.bm.Lang@32eabd10", lang.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInstance_SNUQ3() {
        Lang lang = Lang.instance(null);
        assertEquals("Lang [nameType=null]", lang.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void loadFromResourceTest2_kPTY1_ccpk0() {
        final String languageRulesResourceName = "languageRules2.txt";
        final Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        final Lang result = Lang.loadFromResource(languageRulesResourceName, languages);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void loadFromResourceTest1_cHLU0_TvFB0() {
        final String languageRulesResourceName = "languageRules1.txt";
        final Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        final Lang result = Lang.loadFromResource(languageRulesResourceName, languages);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void loadFromResourceTest3_ekBT2_jbAB0() {
        final String languageRulesResourceName = "languageRules3.txt";
        final Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        final Lang result = Lang.loadFromResource(languageRulesResourceName, languages);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void loadFromResourceTest4_kMAO3_lcfn0() {
        final String languageRulesResourceName = "languageRules4.txt";
        final Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        final Lang result = Lang.loadFromResource(languageRulesResourceName, languages);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void loadFromResourceTest5_JkkI4_Imzl0() {
        final String languageRulesResourceName = "languageRules5.txt";
        final Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        final Lang result = Lang.loadFromResource(languageRulesResourceName, languages);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void loadFromResourceTest6_LFmi5_hHOD0() {
        final String languageRulesResourceName = "languageRules6.txt";
        final Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        final Lang result = Lang.loadFromResource(languageRulesResourceName, languages);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void loadFromResourceTest7_kLkn6_TtEO0() {
        final String languageRulesResourceName = "languageRules7.txt";
        final Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        final Lang result = Lang.loadFromResource(languageRulesResourceName, languages);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void loadFromResourceTest8_wbAK7_cMsv0() {
        final String languageRulesResourceName = "languageRules8.txt";
        final Languages languages = Languages.getInstance(NameType.ASHKENAZI);
        final Lang result = Lang.loadFromResource(languageRulesResourceName, languages);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInstance_WRYV0_fid1() {
        Lang lang = Lang.instance(NameType.ASHKENAZI);
        assertEquals("Lang [nameType=ASHKENAZI]", lang.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInstance_wejJ1_fid1() {
        Lang lang = Lang.instance(NameType.GENERIC);
        assertEquals("Lang [nameType=GENERIC]", lang.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testInstance_LxjF2_fid1() {
        Lang lang = Lang.instance(NameType.SEPHARDIC);
        assertEquals("Lang [nameType=SEPHARDIC]", lang.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGuessLanguage_OneLanguage_IoPU0_YXoY0_fid3() {
        Lang lang = Lang.instance(NameType.ASHKENAZI);
        String text = "This is a sample text";
        String result = lang.guessLanguage(text);
        String expected = "en";
        org.junit.jupiter.api.Assertions.assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGuessLanguage_MultipleLanguages_XOpn1_tLbW0_fid3() {
        Lang lang = Lang.instance(NameType.ASHKENAZI);
        String text = "This is a sample text in English and Hindi";
        String result = lang.guessLanguage(text);
        String expected = "any";
        org.junit.jupiter.api.Assertions.assertEquals(expected, result);
    }
}