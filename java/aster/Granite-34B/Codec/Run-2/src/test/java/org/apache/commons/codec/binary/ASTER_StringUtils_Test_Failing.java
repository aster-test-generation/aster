/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.nio.charset.Charset;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_StringUtils_Test_Failing {
    private static String newString(final byte[] bytes, final Charset charset) {
        return bytes == null ? null : new String(bytes, charset);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNewStringUtf16Le_uFyq0() {
        byte[] bytes = new byte[]{0x48, 0x65, 0x6C, 0x6C, 0x6F};
        String expected = "Hello";
        String actual = StringUtils.newStringUtf16Le(bytes);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBytesUtf16_LBLl0() {
        String input = "Hello, World!";
        byte[] expected = new byte[]{0, 72, 0, 101, 0, 108, 0, 108, 0, 111, 0, 44, 0, 32, 0, 87, 0, 111, 0, 114, 0, 108, 0, 100, 0, 33};
        byte[] actual = StringUtils.getBytesUtf16(input);
        assertArrayEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNewStringWithValidInput_jyrC0() {
        String result = StringUtils.newString(new byte[]{0, 1, 2}, "UTF-8");
        assertEquals("Invalid result", "{\u0000\u0001\u0002}", result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetBytesUtf16Be_roIE0() {
        String input = "Hello, World!";
        byte[] expected = new byte[]{-2, -1, 72, 0, 101, 0, 108, 0, 108, 0, 111, 0, 44, 0, 32, 0, 87, 0, 111, 0, 114, 0, 108, 0, 100, 0, 33, 0};
        byte[] actual = StringUtils.getBytesUtf16Be(input);
        assertArrayEquals(expected, actual);
    }
}