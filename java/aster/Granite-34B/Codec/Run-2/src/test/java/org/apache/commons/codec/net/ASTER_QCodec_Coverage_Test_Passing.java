/**
 * Generated by Aster
 */
package org.apache.commons.codec.net;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_QCodec_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecoding_bytes_is_null_CYZD0() throws DecoderException {
        QCodec qCodec = new QCodec();
        byte[] bytes = null;
        byte[] result = qCodec.doDecoding(bytes);
        Assertions.assertNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDoDecoding_bytes_not_null_rsJN1() throws DecoderException {
        QCodec qCodec = new QCodec();
        byte[] bytes = "test".getBytes();
        byte[] result = qCodec.doDecoding(bytes);
        Assertions.assertNotNull(result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeWithNull_absP0() throws org.apache.commons.codec.DecoderException {
        QCodec qCodec = new QCodec();
        Object result = qCodec.decode(null);
        assert result == null;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNull_PbeD0() throws org.apache.commons.codec.EncoderException {
        QCodec qCodec = new QCodec();
        Object actual = qCodec.encode(null);
        Assertions.assertEquals(null, actual);
    }
}