/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.io.File;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_DigestUtils_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_sha_2_wAzU1() {
        byte[] data = new byte[100];
        DigestUtils digestUtils = new DigestUtils("SHA");
        byte[] result = digestUtils.sha(data);
        byte[] expected = new byte[20];
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_sha_3_XExj2() {
        byte[] data = new byte[1000];
        DigestUtils digestUtils = new DigestUtils("SHA");
        byte[] result = digestUtils.sha(data);
        byte[] expected = new byte[20];
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_sha_4_itYy3() {
        byte[] data = new byte[10000];
        DigestUtils digestUtils = new DigestUtils("SHA");
        byte[] result = digestUtils.sha(data);
        byte[] expected = new byte[20];
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_sha_5_NpLs4() {
        byte[] data = new byte[100000];
        DigestUtils digestUtils = new DigestUtils("SHA");
        byte[] result = digestUtils.sha(data);
        byte[] expected = new byte[20];
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_sha_6_XZjr5() {
        byte[] data = new byte[1000000];
        DigestUtils digestUtils = new DigestUtils("SHA");
        byte[] result = digestUtils.sha(data);
        byte[] expected = new byte[20];
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_sha_7_pjXx6() {
        byte[] data = new byte[10000000];
        DigestUtils digestUtils = new DigestUtils("SHA");
        byte[] result = digestUtils.sha(data);
        byte[] expected = new byte[20];
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_sha_8_wNIq7() {
        byte[] data = new byte[100000000];
        DigestUtils digestUtils = new DigestUtils("SHA");
        byte[] result = digestUtils.sha(data);
        byte[] expected = new byte[20];
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateDigestWithDigestAndFile_fuVW5_Ogpt0() throws IOException, NoSuchAlgorithmException {
        DigestUtils digestUtils = new DigestUtils(MessageDigest.getInstance("SHA-256"));
        MessageDigest messageDigest = MessageDigest.getInstance("SHA-256");
        File file = new File("test.txt");
        MessageDigest updatedDigest = digestUtils.updateDigest(messageDigest, file);
        assertEquals("SHA-256 Message Digest from SUN, <in progress", updatedDigest.toString());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test_sha_1_hRQY0() {
        byte[] data = new byte[0];
        DigestUtils digestUtils = new DigestUtils("SHA");
        byte[] result = digestUtils.sha(data);
        byte[] expected = new byte[0];
        assertEquals(expected, result);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateDigestWithDigestAndFile_fuVW5_Ogpt0_fid2() throws IOException, NoSuchAlgorithmException {
        DigestUtils digestUtils = new DigestUtils(MessageDigest.getInstance("SHA-256"));
        MessageDigest messageDigest = MessageDigest.getInstance("SHA-256");
        File file = new File("test.txt");
        MessageDigest updatedDigest = digestUtils.updateDigest(messageDigest, file);
        assertEquals("c9a58267f7b0f38b09a58267f7b0f38b09a58267f7b0f38b09a58267f7b0f38b", updatedDigest.toString());
    }
}