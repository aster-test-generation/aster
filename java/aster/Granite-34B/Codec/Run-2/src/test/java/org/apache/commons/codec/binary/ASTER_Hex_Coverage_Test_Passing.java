/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.nio.ByteBuffer;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Hex_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithString_gdRH0() throws EncoderException {
        final Hex hex = new Hex();
        final String input = "Hello, World!";
        final Object result = hex.encode(input);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithByteBuffer_GoaF1() throws EncoderException {
        final Hex hex = new Hex();
        final ByteBuffer input = ByteBuffer.allocate(1024);
        final Object result = hex.encode(input);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithByteArray_uojL2() throws EncoderException {
        final Hex hex = new Hex();
        final byte[] input = new byte[1024];
        final Object result = hex.encode(input);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithInvalidObject_oyXS3() throws org.apache.commons.codec.EncoderException {
        final Hex hex = new Hex();
        final Object input = new Object();
        try {
            hex.encode(input);
            fail("Expected EncoderException");
        } catch (final EncoderException e) {
        }
    }
}