/**
 * Generated by Aster
 */
package org.apache.commons.codec.digest;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_PureJavaCrc32C_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdate_IGQO0() {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.update(0);
        crc32c.update(1);
        crc32c.update(2);
        crc32c.update(3);
        crc32c.update(4);
        crc32c.update(5);
        crc32c.update(6);
        crc32c.update(7);
        crc32c.update(8);
        crc32c.update(9);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void resetTest_jlYD0() {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.reset();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_xbYz0() {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.getValue();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetValue_2_pxzu2() {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.getValue();
        assertEquals(0x0L, crc32c.getValue());
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUpdateWithNonEmptyArray_vEFi1_mTEP0() {
        PureJavaCrc32C crc32c = new PureJavaCrc32C();
        crc32c.update("Hello, World!".getBytes(), 0, "Hello, World!".length());
        assertEquals(1297420392, crc32c.getValue());
    }
}