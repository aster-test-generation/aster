/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.DecoderException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Hex_Coverage_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecode_oJfL0() throws DecoderException {
        Hex hex = new Hex("UTF-8");
        byte[] array = new byte[]{0x48, 0x65, 0x6C, 0x6C, 0x6F};
        byte[] expected = "Hello".getBytes(Charset.forName("UTF-8"));
        assertArrayEquals(expected, hex.decode(array));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeString_qqSh0() throws org.apache.commons.codec.DecoderException {
        String input = "48656C6C6F";
        String expected = "Hello";
        Hex hex = new Hex();
        String actual = (String) hex.decode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeCharArray_Xhqs3() throws org.apache.commons.codec.DecoderException {
        char[] input = {'4', '8', '6', '5', '6', 'C', '6', 'C', '6', 'F'};
        String expected = "Hello";
        Hex hex = new Hex();
        String actual = (String) hex.decode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteArray_boMK1_NULj0() throws org.apache.commons.codec.DecoderException {
        byte[] input = {0x48, 0x65, 0x6C, 0x6C, 0x6F};
        byte[] expected = {0x48, 0x65, 0x6C, 0x6C, 0x6F};
        Hex hex = new Hex();
        byte[] actual = hex.decode(input);
        assertArrayEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testDecodeByteBuffer_rxmv2_uTGG0() throws org.apache.commons.codec.DecoderException {
        ByteBuffer input = ByteBuffer.wrap(new byte[]{0x48, 0x65, 0x6C, 0x6C, 0x6F});
        byte[] expected = new byte[]{0x48, 0x65, 0x6C, 0x6C, 0x6F};
        Hex hex = new Hex();
        byte[] actual = (byte[]) hex.decode(input);
        assertArrayEquals(expected, actual);
    }
}