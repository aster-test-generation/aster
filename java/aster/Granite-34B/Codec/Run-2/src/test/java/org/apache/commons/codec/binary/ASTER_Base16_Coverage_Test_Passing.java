/**
 * Generated by Aster
 */
package org.apache.commons.codec.binary;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.CodecPolicy;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Base16_Coverage_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabet_Irwb0_2() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        base16 = new Base16(false, CodecPolicy.LENIENT);
        assertFalse(base16.isInAlphabet((byte) 0x10));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabet_Irwb0_4() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        base16 = new Base16(false, CodecPolicy.LENIENT);
        assertFalse(base16.isInAlphabet((byte) 0x1f));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsInAlphabet_Irwb0_1_fid1() {
        Base16 base16 = new Base16(true, CodecPolicy.STRICT);
        base16 = new Base16(false, CodecPolicy.LENIENT);
    }
}