/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.apache.commons.codec.EncoderException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_Metaphone_Test_Passing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithString_TwzJ0() {
        Metaphone metaphone = new Metaphone();
        String input = "hello";
        Object expected = metaphone.metaphone(input);
        Object actual = metaphone.encode(input);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncodeWithNonStringObject_hmsi1_1() {
        Metaphone metaphone = new Metaphone();
        Object input = 123;
        EncoderException exception = Assertions.assertThrows(EncoderException.class, () -> metaphone.encode(input));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void setMaxCodeLen_whenGivenValue_shouldSetMaxCodeLen_RFTD0() {
        Metaphone metaphone = new Metaphone();
        int maxCodeLen = 10;
        metaphone.setMaxCodeLen(maxCodeLen);
        assert metaphone.getMaxCodeLen() == maxCodeLen;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsMetaphoneEqual_lwSL0() {
        Metaphone metaphone = new Metaphone();
        String str1 = "test";
        String str2 = "tset";
        boolean expected = true;
        boolean actual = metaphone.isMetaphoneEqual(str1, str2);
        assert actual == expected;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testIsMetaphoneEqualWithNull_Wqtr1() {
        Metaphone metaphone = new Metaphone();
        String str1 = null;
        String str2 = null;
        boolean expected = true;
        boolean actual = metaphone.isMetaphoneEqual(str1, str2);
        assert actual == expected;
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_FTHT0_1() {
        Metaphone metaphone = new Metaphone();
        assertEquals("", metaphone.metaphone(null));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_FTHT0_2() {
        Metaphone metaphone = new Metaphone();
        assertEquals("A", metaphone.metaphone("A"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_FTHT0_3() {
        Metaphone metaphone = new Metaphone();
        assertEquals("K", metaphone.metaphone("K"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_FTHT0_4() {
        Metaphone metaphone = new Metaphone();
        assertEquals("T", metaphone.metaphone("T"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_2() {
        Metaphone metaphone = new Metaphone();
        assertEquals("A", metaphone.metaphone("a"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_3() {
        Metaphone metaphone = new Metaphone();
        assertEquals("E", metaphone.metaphone("e"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_4() {
        Metaphone metaphone = new Metaphone();
        assertEquals("I", metaphone.metaphone("i"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_5() {
        Metaphone metaphone = new Metaphone();
        assertEquals("O", metaphone.metaphone("o"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_6() {
        Metaphone metaphone = new Metaphone();
        assertEquals("U", metaphone.metaphone("u"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_7() {
        Metaphone metaphone = new Metaphone();
        assertEquals("K", metaphone.metaphone("k"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_8() {
        Metaphone metaphone = new Metaphone();
        assertEquals("G", metaphone.metaphone("g"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_9() {
        Metaphone metaphone = new Metaphone();
        assertEquals("P", metaphone.metaphone("p"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_10() {
        Metaphone metaphone = new Metaphone();
        assertEquals("AN", metaphone.metaphone("an"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_11() {
        Metaphone metaphone = new Metaphone();
        assertEquals("EN", metaphone.metaphone("en"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_12() {
        Metaphone metaphone = new Metaphone();
        assertEquals("IN", metaphone.metaphone("in"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_13() {
        Metaphone metaphone = new Metaphone();
        assertEquals("ON", metaphone.metaphone("on"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMetaphone_UbwE0_14() {
        Metaphone metaphone = new Metaphone();
        assertEquals("UN", metaphone.metaphone("un"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_BCzL0() {
        Metaphone metaphone = new Metaphone();
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_PgKo1() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(10);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_sUvH2() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(0);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_AAyv3() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(5);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_iXTn4() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(100);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_qLOj5() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(1000);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_UCfz6() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(10000);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_mMpj7() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(100000);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_dnoJ8() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(1000000);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_wHnh9() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(10000000);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testGetMaxCodeLen_IqTK10() {
        Metaphone metaphone = new Metaphone();
        metaphone.setMaxCodeLen(100000000);
        int maxCodeLen = metaphone.getMaxCodeLen();
    }
}