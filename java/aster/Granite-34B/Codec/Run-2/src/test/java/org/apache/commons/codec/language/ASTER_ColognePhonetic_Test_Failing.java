/**
 * Generated by Aster
 */
package org.apache.commons.codec.language;

import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;

public class Aster_ColognePhonetic_Test_Failing {
    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_pzHe0_1() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_1_UFce0() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = "ABC";
        final String expected = "012";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_2_qAls1() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = "XYZ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_3_HtYV2() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = " foo ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_4_wsNW3() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = " foo 123 ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_5_JTpL4() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = " foo 123 bar ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_6_EVHV5() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = " foo 123 bar 456 ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_7_aKbt6() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = " foo 123 bar 456 qux ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_8_sbQc7() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = " foo 123 bar 456 qux 789 ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_9_rcqk8() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = " foo 123 bar 456 qux 789 quux ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testColognePhonetic_10_qOBZ9() {
        final ColognePhonetic colognePhonetic = new ColognePhonetic();
        final String text = " foo 123 bar 456 qux 789 quux corge grault garply waldo fred plugh xyzzy thud 1234567890 ";
        final String expected = "";
        final String actual = colognePhonetic.colognePhonetic(text);
        assertEquals(expected, actual);
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_pzHe0() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
        assertEquals("Klostermann", colognePhonetic.encode("Klostermann"));
    }

    @Test
    @Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEncode_pzHe0_1_fid2() {
        ColognePhonetic colognePhonetic = new ColognePhonetic();
        assertEquals("4582766", colognePhonetic.encode("4582766"));
    }
}