/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentOptions_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasClassFlagsHi_true_rPZx0() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        assertFalse(segmentOptions.hasClassFlagsHi());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasClassFlagsHi_false_VZFN1() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        assertFalse(segmentOptions.hasClassFlagsHi());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasSpecialFormats_true_pfvi0() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasSpecialFormats();
        assert result == true;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasSpecialFormats_false_UKrt1() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasSpecialFormats();
        assert result == false;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasAllCodeFlags_true_xVzI0() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        assertFalse(segmentOptions.hasAllCodeFlags());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasAllCodeFlags_false_xLca1() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        assertTrue(!segmentOptions.hasAllCodeFlags());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasFieldFlagsHi_JZwe0_sdlB1() {
    try {
        SegmentOptions segmentOptions = new SegmentOptions(10);
        boolean actual = segmentOptions.hasFieldFlagsHi();
        boolean expected = true;
        assertEquals(expected, actual);
    } catch (Pack200Exception e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtime_true_zJiS0_NXKi0() {
        try {
            SegmentOptions segmentOptions = new SegmentOptions(1);
            assertFalse(segmentOptions.hasFileModtime());
        } catch (Pack200Exception e) {
            fail("Exception not expected");
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtime_gEef0_BmfA0() {
        try {
            SegmentOptions segmentOptions = new SegmentOptions(1);
            assertEquals(false, segmentOptions.hasFileModtime());
        } catch (Pack200Exception e) {
            fail("Exception not expected");
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtimeFalse_SDRz1_gnXA0() {
        try {
            SegmentOptions options = new SegmentOptions(0);
            assertFalse(options.hasFileModtime());
        } catch (Pack200Exception e) {
            fail("Exception not expected");
        }
    }
}