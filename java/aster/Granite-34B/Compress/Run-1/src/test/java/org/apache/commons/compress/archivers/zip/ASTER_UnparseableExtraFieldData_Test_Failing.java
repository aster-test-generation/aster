/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnparseableExtraFieldData_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testparseFromCentralDirectoryDataWithNullBuffer_tzFA1_DvUb0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        byte[] buffer = null;
        int offset = 0;
        int length = 5;
        unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
        byte[] expected = null;
        assertArrayEquals(expected, unparseableExtraFieldData.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testparseFromCentralDirectoryDataWithNegativeOffset_jMko2_yqtV0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        byte[] buffer = new byte[10];
        int offset = -1;
        int length = 5;
        unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
        byte[] expected = Arrays.copyOfRange(buffer, 0, offset + length);
        assertArrayEquals(expected, unparseableExtraFieldData.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testparseFromCentralDirectoryDataWithNegativeLength_WWNK3_NTym0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        byte[] buffer = new byte[10];
        int offset = 0;
        int length = -1;
        unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
        byte[] expected = Arrays.copyOfRange(buffer, offset, offset + buffer.length);
        assertArrayEquals(expected, unparseableExtraFieldData.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testparseFromCentralDirectoryDataWithOffsetPlusLengthGreaterThanBufferLength_osCv4_oYno0() {
        UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();
        byte[] buffer = new byte[10];
        int offset = 5;
        int length = 15;
        unparseableExtraFieldData.parseFromCentralDirectoryData(buffer, offset, length);
        byte[] expected = Arrays.copyOfRange(buffer, offset, buffer.length);
        assertArrayEquals(expected, unparseableExtraFieldData.getCentralDirectoryData());
    }
}