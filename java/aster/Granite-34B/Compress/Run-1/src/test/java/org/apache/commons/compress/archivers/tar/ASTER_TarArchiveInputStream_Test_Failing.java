/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.tar;
import java.io.FileInputStream;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TarArchiveInputStream_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSkipWithInvalidInputStreamAndValidBlockSize_OxYR2() throws Exception {
        TarArchiveInputStream tarArchiveInputStream = new TarArchiveInputStream(null, 1024);
        assertEquals(0, tarArchiveInputStream.skip(100));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSkipWithInvalidInputStreamAndInvalidBlockSize_eJvs3() throws Exception {
        TarArchiveInputStream tarArchiveInputStream = new TarArchiveInputStream(null, -1);
        assertEquals(0, tarArchiveInputStream.skip(100));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void getNextTarEntry_should_return_null_when_inputstream_is_null_oGSe1() throws IOException {
    TarArchiveInputStream tais = new TarArchiveInputStream(null);
    tais.close();
    Assertions.assertNull(tais.getNextTarEntry(), "Inputstream is null, so getNextTarEntry() should return null");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLongNameDataWithFiveArgs_SCpy3_aaKq0() throws IOException {
        TarArchiveInputStream tarArchiveInputStream = new TarArchiveInputStream(new FileInputStream("test.txt"), 512, 1024, "UTF-8", true);
        byte[] longNameData = tarArchiveInputStream.getLongNameData();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void getNextTarEntry_should_return_null_when_inputstream_is_null_oGSe1_fid2() throws IOException {
    TarArchiveInputStream tais = new TarArchiveInputStream(null);
    tais.close();
    Assertions.assertNull(tais.getNextTarEntry());
}
}