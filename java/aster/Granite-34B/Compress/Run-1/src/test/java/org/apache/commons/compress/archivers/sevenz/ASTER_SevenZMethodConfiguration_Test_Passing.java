/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SevenZMethodConfiguration_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWithSameObject_MZxJ0() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.COPY);
    assertEquals(true, config.equals(config));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWithNullObject_phKG1() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.COPY);
    assertEquals(false, config.equals(null));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWithDifferentClassObject_Dujk2() {
    SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.COPY);
    assertEquals(false, config.equals(""));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testEqualsWithDifferentMethod_ziDL3() {
    SevenZMethodConfiguration config1 = new SevenZMethodConfiguration(SevenZMethod.COPY);
    SevenZMethodConfiguration config2 = new SevenZMethodConfiguration(SevenZMethod.LZMA);
    assertEquals(false, config1.equals(config2));
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCodeWithMethodNull_Ljec0() {
        SevenZMethodConfiguration configuration = new SevenZMethodConfiguration(null);
        assertEquals(0, configuration.hashCode());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_kvqJ0() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.COPY);
        assertEquals(SevenZMethod.COPY, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_bQvY1() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.LZMA);
        assertEquals(SevenZMethod.LZMA, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_flfL2() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.LZMA2);
        assertEquals(SevenZMethod.LZMA2, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_tIPe3() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.DEFLATE);
        assertEquals(SevenZMethod.DEFLATE, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_CTNd4() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.DEFLATE64);
        assertEquals(SevenZMethod.DEFLATE64, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_iDas5() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BZIP2);
        assertEquals(SevenZMethod.BZIP2, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_UKwR6() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.AES256SHA256);
        assertEquals(SevenZMethod.AES256SHA256, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_KdLH7() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_X86_FILTER);
        assertEquals(SevenZMethod.BCJ_X86_FILTER, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_Vtxl8() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_PPC_FILTER);
        assertEquals(SevenZMethod.BCJ_PPC_FILTER, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_gGor9() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_IA64_FILTER);
        assertEquals(SevenZMethod.BCJ_IA64_FILTER, config.getMethod());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetMethod_RAWV10() {
        SevenZMethodConfiguration config = new SevenZMethodConfiguration(SevenZMethod.BCJ_ARM_FILTER);
        assertEquals(SevenZMethod.BCJ_ARM_FILTER, config.getMethod());
    }
}