/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.pack200;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Pack200Utils_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNormalize_TVOY0() throws IOException {
        File jar = new File("example.jar");
        Map<String, String> props = new HashMap<>();
        props.put("key1", "value1");
        props.put("key2", "value2");
        Pack200Utils.normalize(jar, props);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testNormalize_JOuT1() throws IOException {
	    final File from = new File("input.jar");
	    final File to = new File("output.jar");
	    final Map<String, String> props = new HashMap<>();
	    props.put("key1", "value1");
	    props.put("key2", "value2");
	    Pack200Utils.normalize(from, to, props);
	    // Add assertion here
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testNormalizeWithNullProps_Qkfa2() throws IOException {
	    final File from = new File("input.jar");
	    final File to = new File("output.jar");
	    Pack200Utils.normalize(from, to, null);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testNormalizeWithEmptyProps_bkND3() throws IOException {
	    final File from = new File("input.jar");
	    final File to = new File("output.jar");
	    final Map<String, String> props = new HashMap<>();
	    Pack200Utils.normalize(from, to, props);
	    // Add assertion here
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testNormalize_JOuT1_fid1() throws IOException {
	    final File from = new File("input.jar");
	    final File to = new File("output.jar");
	    final Map<String, String> props = new HashMap<>();
	    props.put("key1", "value1");
	    props.put("key2", "value2");
	    Pack200Utils.normalize(from, to, props);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testNormalizeWithEmptyProps_bkND3_fid1() throws IOException {
	    final File from = new File("input.jar");
	    final File to = new File("output.jar");
	    final Map<String, String> props = new HashMap<>();
	    Pack200Utils.normalize(from, to, props);
	}
}