/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_InnerClassesAttribute_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_emfV0() {
        String name = "test";
        InnerClassesAttribute attribute = new InnerClassesAttribute(name);
        assertEquals("InnerClasses: " + name, attribute.toString());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testEqualsWithObjectOfSameClassAndDifferentName_AQvD5() {
        final InnerClassesAttribute attribute = new InnerClassesAttribute("name");
        final InnerClassesAttribute other = new InnerClassesAttribute("other");
        final boolean result = attribute.equals(other);
        assert !result;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode_UHeN0() {
        InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
        int actual = innerClassesAttribute.hashCode();
        int expected = 31 * super.hashCode() + (innerClassesAttribute.getAttributeName() == null ? 0 : innerClassesAttribute.getAttributeName().hashCode());
        assert actual == expected;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGet_WEmJ3() {
        ClassConstantPool classConstantPool = new ClassConstantPool();
        assertNotNull(classConstantPool.get(0));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testResolve_PETK7() {
        InnerClassesAttribute innerClassesAttribute = new InnerClassesAttribute("name");
        ClassConstantPool pool = new ClassConstantPool();
        innerClassesAttribute.resolve(pool);
    }
}