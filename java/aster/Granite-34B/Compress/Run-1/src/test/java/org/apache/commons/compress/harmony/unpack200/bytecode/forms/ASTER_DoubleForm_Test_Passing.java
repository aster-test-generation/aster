/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode.forms;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DoubleForm_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_Gvmt0() {
        DoubleForm doubleForm = new DoubleForm(0, "name", new int[]{1, 2, 3});
        int poolID = doubleForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_DOUBLE, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_opcode_1_MVcH1() {
        DoubleForm doubleForm = new DoubleForm(1, "name", new int[]{1, 2, 3});
        int poolID = doubleForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_DOUBLE, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_opcode_2_ifDg2() {
        DoubleForm doubleForm = new DoubleForm(2, "name", new int[]{1, 2, 3});
        int poolID = doubleForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_DOUBLE, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_rewrite_2_yhzj4() {
        DoubleForm doubleForm = new DoubleForm(0, "name", new int[]{2, 3, 4});
        int poolID = doubleForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_DOUBLE, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_name_1_QxOF5() {
        DoubleForm doubleForm = new DoubleForm(0, "name1", new int[]{1, 2, 3});
        int poolID = doubleForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_DOUBLE, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_name_2_IiBj6() {
        DoubleForm doubleForm = new DoubleForm(0, "name2", new int[]{1, 2, 3});
        int poolID = doubleForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_DOUBLE, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_all_1_kasK7() {
        DoubleForm doubleForm = new DoubleForm(1, "name1", new int[]{1, 2, 3});
        int poolID = doubleForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_DOUBLE, poolID);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetPoolID_all_2_mpfP8() {
        DoubleForm doubleForm = new DoubleForm(2, "name2", new int[]{2, 3, 4});
        int poolID = doubleForm.getPoolID();
        assertEquals(SegmentConstantPool.CP_DOUBLE, poolID);
    }
}