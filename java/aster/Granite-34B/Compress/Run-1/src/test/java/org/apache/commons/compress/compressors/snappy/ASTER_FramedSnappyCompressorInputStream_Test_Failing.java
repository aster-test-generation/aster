/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_FramedSnappyCompressorInputStream_Test_Failing {
    private final byte[] oneByte = new byte[1];
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnmask_Sugu0() {
        assertEquals(0, FramedSnappyCompressorInputStream.unmask(0));
        assertEquals(1, FramedSnappyCompressorInputStream.unmask(1));
        assertEquals(Long.MAX_VALUE, FramedSnappyCompressorInputStream.unmask(Long.MAX_VALUE));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnmask_Sugu0_1() {
        assertEquals(0, FramedSnappyCompressorInputStream.unmask(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnmask_Sugu0_2() {
        assertEquals(1, FramedSnappyCompressorInputStream.unmask(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnmask_Sugu0_3() {
        assertEquals(Long.MAX_VALUE, FramedSnappyCompressorInputStream.unmask(Long.MAX_VALUE));}
}