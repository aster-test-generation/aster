/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LocalVariableTypeTableAttribute_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRenumber_uUVW0() throws Exception {
        LocalVariableTypeTableAttribute attribute = new LocalVariableTypeTableAttribute(10, new int[]{1, 2, 3}, new int[]{4, 5, 6}, new CPUTF8[3], new CPUTF8[3], new int[]{7, 8, 9});
        List<Integer> byteCodeOffsets = new ArrayList<>();
        byteCodeOffsets.add(1);
        byteCodeOffsets.add(2);
        byteCodeOffsets.add(3);
        attribute.renumber(byteCodeOffsets);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRenumberWithEmptyList_eeKd1() throws Exception {
        LocalVariableTypeTableAttribute attribute = new LocalVariableTypeTableAttribute(10, new int[]{1, 2, 3}, new int[]{4, 5, 6}, new CPUTF8[3], new CPUTF8[3], new int[]{7, 8, 9});
        attribute.renumber(new ArrayList<>());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRenumberWithNullList_YhlL2() throws Exception {
        LocalVariableTypeTableAttribute attribute = new LocalVariableTypeTableAttribute(10, new int[]{1, 2, 3}, new int[]{4, 5, 6}, new CPUTF8[3], new CPUTF8[3], new int[]{7, 8, 9});
        attribute.renumber(null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testRenumberWithInvalidList_SdfF3() throws Exception {
        LocalVariableTypeTableAttribute attribute = new LocalVariableTypeTableAttribute(10, new int[]{1, 2, 3}, new int[]{4, 5, 6}, new CPUTF8[3], new CPUTF8[3], new int[]{7, 8, 9});
        List<Integer> byteCodeOffsets = new ArrayList<>();
        byteCodeOffsets.add(1);
        byteCodeOffsets.add(2);
        byteCodeOffsets.add(1); // Invalid offset
        try {
            attribute.renumber(byteCodeOffsets);
            fail("Expected Pack200Exception");
        } catch (Pack200Exception e) {
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testToStringWithNegativeLength_Jdmm3_fid1() {
        LocalVariableTypeTableAttribute attribute = new LocalVariableTypeTableAttribute(-1, new int[]{-1}, new int[]{-1}, new CPUTF8[]{}, new CPUTF8[]{}, new int[]{});
        String actual = attribute.toString();
        String expected = "LocalVariableTypeTable: 0 varaibles";
        org.junit.jupiter.api.Assertions.assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testResolve_kyNh0_teaz0() {
    LocalVariableTypeTableAttribute attribute = new LocalVariableTypeTableAttribute(10, new int[]{1, 2, 3}, new int[]{4, 5, 6}, new CPUTF8[]{new CPUTF8("name1"), new CPUTF8("name2"), new CPUTF8("name3")}, new CPUTF8[]{new CPUTF8("signature1"), new CPUTF8("signature2"), new CPUTF8("signature3")}, new int[]{7, 8, 9});
    ClassConstantPool pool = new ClassConstantPool();
    attribute.resolve(pool);
}
}