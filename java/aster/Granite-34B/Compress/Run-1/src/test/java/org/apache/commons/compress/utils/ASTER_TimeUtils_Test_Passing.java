/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.nio.file.attribute.FileTime;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.apache.commons.io.file.attribute.FileTimes;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Date;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_TimeUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToDate_fDVY0() {
		FileTime fileTime = FileTime.fromMillis(System.currentTimeMillis());
		Date expected = FileTimes.toDate(fileTime);
		Date actual =TimeUtils.toDate(fileTime);
		assertEquals(expected, actual);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testTruncateToHundredNanos_mVqJ0() {
		FileTime fileTime = FileTime.fromMillis(System.currentTimeMillis());
		FileTime truncatedFileTime = TimeUtils.truncateToHundredNanos(fileTime);
		assertEquals(truncatedFileTime.toInstant().getNano() % 100, 0);
	}
}