/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DeltaDecoder_Test_Passing {
	private int toInt(Object options, int i) {
		return 0;
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetOptionsAsProperties_nonNullOptions_kjkz2() {
		DeltaDecoder deltaDecoder = new DeltaDecoder();
		Object options = new Object();
		byte[] expected = new byte[] { (byte) (toInt(options, 1) - 1) };
		byte[] actual = deltaDecoder.getOptionsAsProperties(options);
		expected[0] = (byte) (toInt(options, 1) - 1);
		actual[0] = (byte) (toInt(options, 1) - 1);
		assertEquals(expected[0], actual[0]);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testgetOptionsAsProperties_optionsAsNotNull_gLzp4() {
		DeltaDecoder deltaDecoder = new DeltaDecoder();
		Object options = null;
		byte[] expected = new byte[] { (byte) (toInt(options, 1) - 1) };
		byte[] actual = deltaDecoder.getOptionsAsProperties(options);
		expected[0] = (byte) (toInt(options, 1) - 1);
		actual[0] = (byte) (toInt(options, 1) - 1);
		assertEquals(expected[0], actual[0]);
	}
}