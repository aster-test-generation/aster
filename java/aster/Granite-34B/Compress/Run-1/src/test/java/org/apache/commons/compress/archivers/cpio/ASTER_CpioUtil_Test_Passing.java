/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.cpio;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CpioUtil_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2long_fnFS0() {
        byte[] number = {0, 0, 0, 0};
        boolean swapHalfWord = false;
        long expected = 0;
        long actual = CpioUtil.byteArray2long(number, swapHalfWord);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByteArray2longWithSwapHalfWord_Jaka1() {
        byte[] number = {0, 0, 0, 0};
        boolean swapHalfWord = true;
        long expected = 0;
        long actual = CpioUtil.byteArray2long(number, swapHalfWord);
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2ByteArrayUnsupportedLength_srpl0() {
        long number = 1234567890;
        int length = 1;
        boolean swapHalfWord = false;
        UnsupportedOperationException exception = assertThrows(UnsupportedOperationException.class,
                () -> CpioUtil.long2byteArray(number, length, swapHalfWord));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLong2ByteArrayLengthOdd_Icdz2() {
        long number = 1234567890;
        int length = 9;
        boolean swapHalfWord = false;
        UnsupportedOperationException exception = assertThrows(UnsupportedOperationException.class,
                () -> CpioUtil.long2byteArray(number, length, swapHalfWord));
    }
}