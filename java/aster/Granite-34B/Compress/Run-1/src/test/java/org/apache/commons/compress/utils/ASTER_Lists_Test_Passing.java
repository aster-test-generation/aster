/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.util.ArrayList;
import java.util.Iterator;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Lists_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNewArrayList_IDHT0() {
        ArrayList<Object> actual = Lists.newArrayList();
        ArrayList<Object> expected = new ArrayList<>();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNewArrayListWithIterator_SBHe0() {
        Iterator<String> iterator = new ArrayList<String>().iterator();
        ArrayList<String> actual = Lists.newArrayList(iterator);
        ArrayList<String> expected = new ArrayList<String>();
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNewArrayListWithIteratorOfDifferentType_iqJg4() {
        Iterator<Integer> iterator = new ArrayList<Integer>(java.util.Arrays.asList(1, 2, 3)).iterator();
        ArrayList<Integer> actual = Lists.newArrayList(iterator);
        ArrayList<Integer> expected = new ArrayList<Integer>(java.util.Arrays.asList(1, 2, 3));
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNewArrayListWithIteratorOfsubtype_zqck5() {
        Iterator<Number> iterator = new ArrayList<Number>(java.util.Arrays.asList(1, 2, 3)).iterator();
        ArrayList<Number> actual = Lists.newArrayList(iterator);
        ArrayList<Number> expected = new ArrayList<Number>(java.util.Arrays.asList(1, 2, 3));
        assertEquals(expected, actual);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNewArrayListWithIteratorOfSupertype_bEPx6() {
        Iterator<Object> iterator = new ArrayList<Object>(java.util.Arrays.asList("a", "b", "c")).iterator();
        ArrayList<Object> actual = Lists.newArrayList(iterator);
        ArrayList<Object> expected = new ArrayList<Object>(java.util.Arrays.asList("a", "b", "c"));
        assertEquals(expected, actual);
    }
}