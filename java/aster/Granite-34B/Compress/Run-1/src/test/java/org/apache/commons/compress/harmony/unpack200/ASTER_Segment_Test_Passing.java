/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.jar.JarOutputStream;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Segment_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnPackNullInputStream_Qtyh1() throws IOException, Pack200Exception {
        Segment segment = new Segment();
        JarOutputStream out = new JarOutputStream(new ByteArrayOutputStream());
        try {
            segment.unpack(null, out);
            fail("Should have thrown an exception");
        } catch ( NullPointerException e) {
            assertNotNull(e);
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOverrideDeflateHint_Xptp0() {
        Segment segment = new Segment();
        segment.overrideDeflateHint(true);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOverrideDeflateHintFalse_TdHO1() {
        Segment segment = new Segment();
        segment.overrideDeflateHint(false);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPreRead_zpNs0() {
        Segment segment = new Segment();
        segment.setPreRead(true);
        segment.setPreRead(false);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPreRead_True_GSuY1() {
        Segment segment = new Segment();
        segment.setPreRead(true);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPreRead_False_qgyS2() {
        Segment segment = new Segment();
        segment.setPreRead(false);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCpBands_nUxl0() {
        Segment segment = new Segment();
        CpBands cpBands = segment.getCpBands();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogWithValidLogLevelAndMessage_rueZ0() {
        Segment segment = new Segment();
        segment.log(1, "This is a test message");
        assertTrue(true);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogWithInvalidLogLevelAndMessage_wVgq1() {
        Segment segment = new Segment();
        segment.log(5, "This is a test message");
        assertTrue(true);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getIcBandsTest_jnLd0() {
        Segment segment = new Segment();
        IcBands icBands = segment.getIcBands();
    }
}