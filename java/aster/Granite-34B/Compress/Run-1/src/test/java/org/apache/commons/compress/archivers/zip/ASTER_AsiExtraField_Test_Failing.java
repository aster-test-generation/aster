/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import java.util.zip.ZipException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AsiExtraField_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLinkedFileWithNull_Eqog1() {
        AsiExtraField asiExtraField = new AsiExtraField();
        asiExtraField.setLinkedFile(null);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_WnMJ0() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[14];
    int offset = 0;
    int length = 14;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_ValidData_eVHs8() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
    assertEquals(10, asiExtraField.getLocalFileDataLength());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_ValidDataWithLength_jqDU10() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 14;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthWithCoverage_YGTN1_YEew0_2() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(new byte[] {0x00, 0x0A}, zipShort.getBytes());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromLocalFileDataWithAllParameters2_znWZ6() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] data = new byte[35];
    int offset = 0;
    int length = 35;
    asiExtraField.parseFromLocalFileData(data, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLength_Bjxq0_fid1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(10, zipShort.getValue());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_WnMJ0_fid1() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 10;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_NullBuffer_QntE1_fid1() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = null;
    int offset = 0;
    int length = 10;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_NegativeOffset_cVsV2_fid1() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = -1;
    int length = 10;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_NegativeLength_auHj3_fid1() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = -1;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_InvalidOffset_zNHl4_fid1() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 10;
    int length = 10;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_InvalidLength_cUSO5_fid1() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 20;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_InsufficientBuffer_CQFN6_fid1() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 15;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_ValidDataWithOffset_MxDf9() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 5;
    int length = 10;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testparseFromCentralDirectoryData_ValidDataWithLength_jqDU10_fid1() throws ZipException {
    AsiExtraField asiExtraField = new AsiExtraField();
    byte[] buffer = new byte[10];
    int offset = 0;
    int length = 5;
    asiExtraField.parseFromCentralDirectoryData(buffer, offset, length);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthWithCoverage_YGTN1_YEew0_3_fid1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(10, ZipShort.getValue(new byte[] {0x00, 0x0A}));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthWithCoverage_YGTN1_YEew0_4_fid1() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(10, ZipShort.getValue(new byte[] {0x00, 0x0A}, 0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthWithCoverage_YGTN1_YEew0_5() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(10, ZipShort.getValue(new byte[] {0x00, 0x0A}, 1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthWithCoverage_YGTN1_YEew0_6() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(2560, ZipShort.getValue(new byte[] {(byte) 0x0A, (byte) 0xF0}, 0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthWithCoverage_YGTN1_YEew0_7() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertEquals(2560, ZipShort.getValue(new byte[] {(byte) 0x0A, (byte) 0xF0}, 1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthWithCoverage_YGTN1_YEew0_10() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertNotEquals(10, ZipShort.getValue(new byte[] {0x00, 0x0B}, 1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetLocalFileDataLengthWithCoverage_YGTN1_YEew0_12() {
    AsiExtraField asiExtraField = new AsiExtraField();
    ZipShort zipShort = asiExtraField.getLocalFileDataLength();
    assertNotEquals(2560, ZipShort.getValue(new byte[] {(byte) 0x0A, (byte) 0xF0}, 1));}
}