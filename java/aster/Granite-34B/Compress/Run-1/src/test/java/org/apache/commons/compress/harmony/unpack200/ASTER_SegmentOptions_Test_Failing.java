/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentOptions_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasClassFlagsHi_true_rPZx0_fid1() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        assertTrue(segmentOptions.hasClassFlagsHi());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasAllCodeFlags_true_xVzI0_fid1() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        assertTrue(segmentOptions.hasAllCodeFlags());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtime_true_zJiS0_NXKi0_fid1() {
        try {
            SegmentOptions segmentOptions = new SegmentOptions(1);
            assertTrue(segmentOptions.hasFileModtime());
        } catch (Pack200Exception e) {
            fail("Exception not expected");
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtime_gEef0_BmfA0_fid1() {
        try {
            SegmentOptions segmentOptions = new SegmentOptions(1);
            assertEquals(true, segmentOptions.hasFileModtime());
        } catch (Pack200Exception e) {
            fail("Exception not expected");
        }
    }
}