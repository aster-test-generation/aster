/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Coders_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_2() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.COPY));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_3() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.LZMA));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_4() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.LZMA2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_5() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.DEFLATE));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_6() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.DEFLATE64));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_7() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.BZIP2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_8() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.AES256SHA256));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_9() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_X86_FILTER));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_10() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_PPC_FILTER));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_11() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_IA64_FILTER));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_12() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_ARM_FILTER));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_13() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_ARM_THUMB_FILTER));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_14() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_SPARC_FILTER));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0_15() {
        assertEquals(null, Coders.findByMethod(SevenZMethod.DELTA_FILTER));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindByMethod_Lcqq0() {
        assertEquals(null, Coders.findByMethod(null));
        assertEquals(null, Coders.findByMethod(SevenZMethod.COPY));
        assertEquals(null, Coders.findByMethod(SevenZMethod.LZMA));
        assertEquals(null, Coders.findByMethod(SevenZMethod.LZMA2));
        assertEquals(null, Coders.findByMethod(SevenZMethod.DEFLATE));
        assertEquals(null, Coders.findByMethod(SevenZMethod.DEFLATE64));
        assertEquals(null, Coders.findByMethod(SevenZMethod.BZIP2));
        assertEquals(null, Coders.findByMethod(SevenZMethod.AES256SHA256));
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_X86_FILTER));
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_PPC_FILTER));
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_IA64_FILTER));
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_ARM_FILTER));
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_ARM_THUMB_FILTER));
        assertEquals(null, Coders.findByMethod(SevenZMethod.BCJ_SPARC_FILTER));
        assertEquals(null, Coders.findByMethod(SevenZMethod.DELTA_FILTER));
    }
}