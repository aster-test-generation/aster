/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LineNumberTableAttribute_Test_Failing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetStartPCs_nullLineNumbers_CMRX4() {
        LineNumberTableAttribute attribute = new LineNumberTableAttribute(10, new int[]{1, 2, 3}, null);
        int[] expected = null;
        assertArrayEquals(expected, attribute.getStartPCs());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetStartPCs_emptyLineNumbers_davs5() {
        LineNumberTableAttribute attribute = new LineNumberTableAttribute(10, new int[]{1, 2, 3}, new int[]{});
        int[] expected = new int[]{};
        assertArrayEquals(expected, attribute.getStartPCs());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testToStringWithNegativeLength_dlcn4() {
        LineNumberTableAttribute attribute = new LineNumberTableAttribute(-1, new int[]{}, new int[]{});
        String actual = attribute.toString();
        String expected = "LineNumberTable: 0 lines";
        org.junit.jupiter.api.Assertions.assertEquals(expected, actual);
    }
}