/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.bzip2;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CRC_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testGetValue_BYdB0() {
		CRC crc = new CRC();
		assertEquals(~crc.getValue(), crc.getValue());
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testUpdate_WvYk0() {
        CRC crc = new CRC();
        crc.update(0);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testUpdate_withNegativeInput_LuLm1() {
        CRC crc = new CRC();
        crc.update(-1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void update_withValidInput_shouldReturnExpectedResult_IxpY0() {
        CRC crc = new CRC();
        int inCh = 123;
        int repeat = 5;
        crc.update(inCh, repeat);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void update_withNegativeRepeat_shouldThrowException_amgh2() {
        CRC crc = new CRC();
        int inCh = 123;
        int repeat = -1;
    }
}