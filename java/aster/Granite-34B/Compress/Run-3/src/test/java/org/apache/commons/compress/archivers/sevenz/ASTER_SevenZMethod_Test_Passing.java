/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SevenZMethod_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithCopyMethod_bwry0() throws Exception {
        byte[] id = {0x00};
        SevenZMethod method = SevenZMethod.byId(id);
        assertEquals(SevenZMethod.COPY, method);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithLzmaMethod_LByX1() throws Exception {
        byte[] id = {0x03};
        SevenZMethod method = SevenZMethod.byId(id);
        assertEquals(SevenZMethod.LZMA, method);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithLzma2Method_bQPO2() throws Exception {
        byte[] id = {0x21};
        SevenZMethod method = SevenZMethod.byId(id);
        assertEquals(SevenZMethod.LZMA2, method);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithDeflateMethod_IkeJ3() throws Exception {
        byte[] id = {0x04};
        SevenZMethod method = SevenZMethod.byId(id);
        assertEquals(SevenZMethod.DEFLATE, method);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithDeflate64Method_rgTe4() throws Exception {
        byte[] id = {0x06};
        SevenZMethod method = SevenZMethod.byId(id);
        assertEquals(SevenZMethod.DEFLATE64, method);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithBzip2Method_YsQS5() throws Exception {
        byte[] id = {0x02};
        SevenZMethod method = SevenZMethod.byId(id);
        assertEquals(SevenZMethod.BZIP2, method);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithAes256Sha256Method_jVPy6() throws Exception {
        byte[] id = {0x67};
        SevenZMethod method = SevenZMethod.byId(id);
        assertEquals(SevenZMethod.AES256SHA256, method);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithNoMatchMethod_zIVR7() throws Exception {
        byte[] id = {0x01};
        SevenZMethod method = SevenZMethod.byId(id);
        assertNull(method);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testByIdWithNullId_FztA8() throws Exception {
        byte[] id = null;
        SevenZMethod method = SevenZMethod.byId(id);
        assertNull(method);
    }
}