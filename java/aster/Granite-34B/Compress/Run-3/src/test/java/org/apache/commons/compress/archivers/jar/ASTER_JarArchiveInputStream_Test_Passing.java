/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.jar;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_JarArchiveInputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testMatches_MMAP0() throws Exception {
        byte[] signature = new byte[10];
        int length = 5;
        assertTrue(JarArchiveInputStream.matches(signature, length));
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getNextJarEntryWithNullInputStream_QXGR2() throws Exception {
        final JarArchiveInputStream jarArchiveInputStream = new JarArchiveInputStream(null);
        try {
            jarArchiveInputStream.getNextJarEntry();
            fail("Should have thrown IOException");
        } catch (final IOException e) {
        }
    }
}