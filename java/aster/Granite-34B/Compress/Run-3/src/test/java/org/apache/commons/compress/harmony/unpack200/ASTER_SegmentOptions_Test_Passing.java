/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SegmentOptions_Test_Passing {
    private SegmentOptions segmentOptions;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFieldFlagsHi_true_iUfl0() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        assertTrue(segmentOptions.hasFieldFlagsHi());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFieldFlagsHi_false_Onur1() throws Pack200Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        assertFalse(segmentOptions.hasFieldFlagsHi());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void setUp_YXDL0() throws Exception {
        segmentOptions = new SegmentOptions(1);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasClassFlagsHi_UNKV1() throws Exception {
        assertTrue(segmentOptions.hasClassFlagsHi());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasClassFlagsHi2_Xvtj2() throws Exception {
        segmentOptions = new SegmentOptions(0);
        assertFalse(segmentOptions.hasClassFlagsHi());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileSizeHi_true_JHVA0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(10);
        boolean result = segmentOptions.hasFileSizeHi();
        assertEquals(true, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileSizeHi_false_VUxW1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(5);
        boolean result = segmentOptions.hasFileSizeHi();
        assertEquals(false, result);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasCodeFlagsHi_SFvn0() throws Exception {
    SegmentOptions segmentOptions = new SegmentOptions(10);
    boolean result = segmentOptions.hasCodeFlagsHi();
    assertTrue(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasCodeFlagsHi2_hCFk1() throws Exception {
    SegmentOptions segmentOptions = new SegmentOptions(20);
    boolean result = segmentOptions.hasCodeFlagsHi();
    assertFalse(result);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasSpecialFormatsTrue_wVSP0() throws Exception {
        try {
            SegmentOptions segmentOptions = new SegmentOptions(1);
            assertTrue(segmentOptions.hasSpecialFormats());
        } catch (Pack200Exception e) {
            e.printStackTrace();
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasSpecialFormatsFalse_YeyB1() throws Exception {
        try {
            SegmentOptions segmentOptions = new SegmentOptions(0);
            assertFalse(segmentOptions.hasSpecialFormats());
        } catch (Pack200Exception e) {
            e.printStackTrace();
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasArchiveFileCounts2_FDDT1() throws Exception {
    SegmentOptions segmentOptions = new SegmentOptions(0);
    assertFalse(segmentOptions.hasArchiveFileCounts());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileOptionsWhenFileOptionsAreNotSet_axKW1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        assertFalse(segmentOptions.hasFileOptions());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testShouldDeflateWhenDeflationHintNotSet_iDzP1() throws Exception {
        SegmentOptions options = new SegmentOptions(0);
        assertFalse(options.shouldDeflate());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasAllCodeFlagsTrue_zILq0() throws Exception {
        SegmentOptions options = new SegmentOptions(1);
        assertTrue(options.hasAllCodeFlags());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasAllCodeFlagsFalse_btvx1() throws Exception {
        SegmentOptions options = new SegmentOptions(0);
        assertFalse(options.hasAllCodeFlags());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasMethodFlagsHi_CuTi0() throws Exception {
    SegmentOptions segmentOptions = new SegmentOptions(1);
    boolean actual = segmentOptions.hasMethodFlagsHi();
    boolean expected = true;
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testHasMethodFlagsHi2_hLKT1() throws Exception {
    SegmentOptions segmentOptions = new SegmentOptions(0);
    boolean actual = segmentOptions.hasMethodFlagsHi();
    boolean expected = false;
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtimeWhenFileModtimeIsAvailable_pMHj0() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(1);
        boolean result = segmentOptions.hasFileModtime();
        assert result == true;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHasFileModtimeWhenFileModtimeIsUnavailable_vyAk1() throws Exception {
        SegmentOptions segmentOptions = new SegmentOptions(0);
        boolean result = segmentOptions.hasFileModtime();
        assert result == false;
    }
}