/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode.forms;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SuperFieldRefForm_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getPoolIDTest_Iake0() throws Exception {
        SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "name", new int[]{1, 2, 3});
        int poolID = superFieldRefForm.getPoolID();
        assert poolID == SegmentConstantPool.CP_FIELD;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getPoolIDTest_lineCoverage_vBnh1() throws Exception {
        SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "name", new int[]{1, 2, 3});
        int poolID = superFieldRefForm.getPoolID();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void getPoolIDTest_branchCoverage_uaqi2() throws Exception {
        SuperFieldRefForm superFieldRefForm = new SuperFieldRefForm(1, "name", new int[]{1, 2, 3});
        int poolID = superFieldRefForm.getPoolID();
        if (poolID == SegmentConstantPool.CP_FIELD) {
        } else {
        }
    }
}