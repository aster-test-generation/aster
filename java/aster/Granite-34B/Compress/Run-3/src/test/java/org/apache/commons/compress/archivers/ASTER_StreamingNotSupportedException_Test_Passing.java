/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_StreamingNotSupportedException_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFormat_PObf0() throws Exception {
        StreamingNotSupportedException exception = new StreamingNotSupportedException("mp3");
        String format = exception.getFormat();
        assert format.equals("mp3");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFormatWithNullFormat_zved1() throws Exception {
        StreamingNotSupportedException exception = new StreamingNotSupportedException(null);
        String format = exception.getFormat();
        assert format == null;
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFormatWithEmptyFormat_VvXC2() throws Exception {
        StreamingNotSupportedException exception = new StreamingNotSupportedException("");
        String format = exception.getFormat();
        assert format.isEmpty();
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFormatWithMultipleFormats_GblG3() throws Exception {
        StreamingNotSupportedException exception1 = new StreamingNotSupportedException("mp3");
        String format1 = exception1.getFormat();
        assert format1.equals("mp3");
        StreamingNotSupportedException exception2 = new StreamingNotSupportedException("wav");
        String format2 = exception2.getFormat();
        assert format2.equals("wav");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFormatWithInvalidFormat_MQtc4() throws Exception {
        StreamingNotSupportedException exception = new StreamingNotSupportedException("invalid");
        String format = exception.getFormat();
        assert format == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFormatWithMultipleFormatsAndInvalidFormat_SYBm5() throws Exception {
        StreamingNotSupportedException exception1 = new StreamingNotSupportedException("mp3");
        String format1 = exception1.getFormat();
        assert format1.equals("mp3");
        StreamingNotSupportedException exception2 = new StreamingNotSupportedException("wav");
        String format2 = exception2.getFormat();
        assert format2.equals("wav");
        StreamingNotSupportedException exception3 = new StreamingNotSupportedException("invalid");
        String format3 = exception3.getFormat();
        assert format3 == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFormatWithMultipleFormatsAndInvalidFormatAndNullFormat_hHIs6() throws Exception {
        StreamingNotSupportedException exception1 = new StreamingNotSupportedException("mp3");
        String format1 = exception1.getFormat();
        assert format1.equals("mp3");
        StreamingNotSupportedException exception2 = new StreamingNotSupportedException("wav");
        String format2 = exception2.getFormat();
        assert format2.equals("wav");
        StreamingNotSupportedException exception3 = new StreamingNotSupportedException("invalid");
        String format3 = exception3.getFormat();
        assert format3 == null;
        StreamingNotSupportedException exception4 = new StreamingNotSupportedException(null);
        String format4 = exception4.getFormat();
        assert format4 == null;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetFormatWithMultipleFormatsAndInvalidFormatAndNullFormatAndEmptyFormat_uBqA7() throws Exception {
        StreamingNotSupportedException exception1 = new StreamingNotSupportedException("mp3");
        String format1 = exception1.getFormat();
        assert format1.equals("mp3");
        StreamingNotSupportedException exception2 = new StreamingNotSupportedException("wav");
        String format2 = exception2.getFormat();
        assert format2.equals("wav");
        StreamingNotSupportedException exception3 = new StreamingNotSupportedException("invalid");
        String format3 = exception3.getFormat();
        assert format3 == null;
        StreamingNotSupportedException exception4 = new StreamingNotSupportedException(null);
        String format4 = exception4.getFormat();
        assert format4 == null;
        StreamingNotSupportedException exception5 = new StreamingNotSupportedException("");
        String format5 = exception5.getFormat();
        assert format5.isEmpty();
    }
}