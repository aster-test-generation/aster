/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_DeltaDecoder_Test_Passing {
    private int toInt(Object options, int i) {
        return 0;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetOptionsFromCoder_nullCoderAndNullInputStream_returnsOptions_ZPQs3() throws Exception {
    DeltaDecoder deltaDecoder = new DeltaDecoder();
    Object options = deltaDecoder.getOptionsFromCoder(null, null);
    assertNotNull(options);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetOptionsAsProperties_uhAu0() throws Exception {
        DeltaDecoder deltaDecoder = new DeltaDecoder();
        Object options = new Object();
        byte[] expected = new byte[] { (byte) (toInt(options, 1) - 1) };
        byte[] actual = deltaDecoder.getOptionsAsProperties(options);
        assertArrayEquals(expected, actual);
    }
}