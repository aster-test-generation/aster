/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Segment_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLogStream_zgsY0() throws Exception {
        Segment segment = new Segment();
        OutputStream logStream = new ByteArrayOutputStream();
        segment.setLogStream(logStream);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLogStreamWithNullParameter_cTQF1() throws Exception {
        Segment segment = new Segment();
        OutputStream logStream = null;
        segment.setLogStream(logStream);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAttrDefinitionBands_Ckxo0() throws Exception {
        Segment segment = new Segment();
        AttrDefinitionBands attrDefinitionBands = segment.getAttrDefinitionBands();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetConstantPool_WuoS0() throws Exception {
        Segment segment = new Segment();
        SegmentConstantPool segmentConstantPool = segment.getConstantPool();
        assertNotNull(segmentConstantPool);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOverrideDeflateHint_IPmd0() throws Exception {
        Segment segment = new Segment();
        segment.overrideDeflateHint(true);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOverrideDeflateHintFalse_Vtlp1() throws Exception {
        Segment segment = new Segment();
        segment.overrideDeflateHint(false);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPreRead_OlNw0() throws Exception {
        Segment segment = new Segment();
        segment.setPreRead(true);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetPreReadFalse_ksWB1() throws Exception {
        Segment segment = new Segment();
        segment.setPreRead(false);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogWithValidLogLevelAndMessage_Ilqu0() throws Exception {
        Segment segment = new Segment();
        segment.log(1, "This is a test message");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testLogWithInvalidLogLevelAndMessage_cwdQ1() throws Exception {
        Segment segment = new Segment();
        segment.log(5, "This is a test message");
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void test_getIcBands_0_vPny0() throws Exception {
		Segment segment = new Segment();
		IcBands icBands = segment.getIcBands();
		assertEquals(icBands, null);
	}
}