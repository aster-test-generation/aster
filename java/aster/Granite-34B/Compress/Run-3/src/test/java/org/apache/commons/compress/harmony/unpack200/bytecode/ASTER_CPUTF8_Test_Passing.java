/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200.bytecode;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_CPUTF8_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetGlobalIndex_KTsS0() throws Exception {
    CPUTF8 cputf8 = new CPUTF8("string");
    cputf8.setGlobalIndex(100);
    assertEquals(100, cputf8.globalIndex);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetGlobalIndexWithNegativeIndex_SIgM1() throws Exception {
    CPUTF8 cputf8 = new CPUTF8("utf8", -10);
    cputf8.setGlobalIndex(-10);
    assertEquals(-10, cputf8.globalIndex);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetGlobalIndexWithZeroIndex_ggNr2() throws Exception {
    CPUTF8 cputf8 = new CPUTF8("utf8", 0);
    cputf8.setGlobalIndex(0);
    assertEquals(0, cputf8.globalIndex);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testSetGlobalIndexWithPositiveIndex_Jkds3() throws Exception {
    CPUTF8 cputf8 = new CPUTF8("utf8", 100);
    cputf8.setGlobalIndex(100);
    assertEquals(100, cputf8.globalIndex);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnderlyingString_UxfS0() throws Exception {
        CPUTF8 utf8 = new CPUTF8("Hello, World!");
        assertEquals("Hello, World!", utf8.underlyingString());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode1_sRUP0() throws Exception {
        CPUTF8 cputf8 = new CPUTF8("string");
        int hashCode = cputf8.hashCode();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testHashCode2_RZSc1() throws Exception {
        CPUTF8 cputf8 = new CPUTF8("utf8", 10);
        int hashCode = cputf8.hashCode();
    }
}