/**
 * Generated by Aster
 */
package org.apache.commons.compress.utils;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ParsingUtils_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void parseIntValue_radix10_validString_returnsCorrectInt_YkpK0() throws IOException {
    final String value = "123";
    final int radix = 10;
    final int expected = 123;
    final int actual = ParsingUtils.parseIntValue(value, radix);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void parseIntValue_radix8_validString_returnsCorrectInt_dpbh1() throws IOException {
    final String value = "123";
    final int radix = 8;
    final int expected = 83;
    final int actual = ParsingUtils.parseIntValue(value, radix);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void parseIntValue_radix16_validString_returnsCorrectInt_LYTQ2() throws IOException {
    final String value = "123";
    final int radix = 16;
    final int expected = 291;
    final int actual = ParsingUtils.parseIntValue(value, radix);
    assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParseLongValue_gxCl0_1() throws IOException {
		assertEquals(10L, ParsingUtils.parseLongValue("10", 10));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParseLongValue_gxCl0_2() throws IOException {
		assertEquals(16L, ParsingUtils.parseLongValue("10", 16));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParseLongValue_gxCl0_3() throws IOException {
		assertEquals(12L, ParsingUtils.parseLongValue("12", 10));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParseLongValue_gxCl0_4() throws IOException {
		assertEquals(12L, ParsingUtils.parseLongValue("C", 16));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testParseLongValue_gxCl0_5() throws IOException {
		assertEquals(10L, ParsingUtils.parseLongValue("A", 16));}
}