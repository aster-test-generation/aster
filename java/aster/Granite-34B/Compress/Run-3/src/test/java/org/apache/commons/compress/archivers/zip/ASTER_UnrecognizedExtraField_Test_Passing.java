/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.zip;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_UnrecognizedExtraField_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetHeaderId_JXXQ0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        ZipShort headerId = new ZipShort(1);
        unrecognizedExtraField.setHeaderId(headerId);
        assertEquals(headerId, unrecognizedExtraField.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCentralDirectoryData_HkLj0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[10]; // Replace 10 with the actual length of the data
        unrecognizedExtraField.setCentralDirectoryData(data);
        assertArrayEquals(data, unrecognizedExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCentralDirectoryDataNull_UCDQ1() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        unrecognizedExtraField.setCentralDirectoryData(null);
        assertArrayEquals(new byte[0], unrecognizedExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetCentralDirectoryDataEmpty_vHzM2() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[0];
        unrecognizedExtraField.setCentralDirectoryData(data);
        assertArrayEquals(data, unrecognizedExtraField.getCentralDirectoryData());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void getCentralDirectoryData_whenCentralDataNull_returnsLocalFileDataData_XqIO1() {
    byte[] expected = new byte[0]; // Initialize with appropriate value
    UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
    byte[] actual = unrecognizedExtraField.getCentralDirectoryData();
    assertArrayEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderId_omlO0() {
        UnrecognizedExtraField uef = new UnrecognizedExtraField();
        ZipShort headerId = new ZipShort(1);
        assertEquals(headerId, uef.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderIdWithBytes_VGwI1() {
        UnrecognizedExtraField uef = new UnrecognizedExtraField();
        byte[] bytes = new byte[1];
        ZipShort headerId = new ZipShort(bytes);
        assertEquals(headerId, uef.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderIdWithBytesAndOffset_zjYm2() {
        UnrecognizedExtraField uef = new UnrecognizedExtraField();
        byte[] bytes = new byte[1];
        int offset = 0;
        ZipShort headerId = new ZipShort(bytes, offset);
        assertEquals(headerId, uef.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderIdWithAnotherObject_dNgr3() {
        UnrecognizedExtraField uef = new UnrecognizedExtraField();
        UnrecognizedExtraField anotherUef = new UnrecognizedExtraField();
        assertEquals(uef.getHeaderId(), anotherUef.getHeaderId());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetLocalFileDataLengthWhenLocalDataIsNullOrEmpty_BhSL0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        assertEquals(0, unrecognizedExtraField.getLocalFileDataLength().getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetHeaderIdWithAnotherObjectAndBytesAndOffsetAndAnotherOffset_kMLt6_Yvpw0() {
        UnrecognizedExtraField uef = new UnrecognizedExtraField();
        UnrecognizedExtraField anotherUef = new UnrecognizedExtraField();
        byte[] bytes = new byte[1];
        int offset = 0;
        int anotherOffset = 1;
        ZipShort actual = uef.getCentralDirectoryLength();
        ZipShort expected = anotherUef.getCentralDirectoryLength();
        assertEquals(actual, expected);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocalFileDataData_NullData_XzTC1_WHLx0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        unrecognizedExtraField.setLocalFileDataData(null);
        assertEquals(0, unrecognizedExtraField.getCentralDirectoryLength().getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocalFileDataData_EmptyData_MavV2_kIZq0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[0];
        unrecognizedExtraField.setLocalFileDataData(data);
        assertEquals(0, unrecognizedExtraField.getCentralDirectoryLength().getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocalFileDataData_InvalidData_lrSS4_AZDQ0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[10]; // Replace with actual invalid data
        unrecognizedExtraField.setLocalFileDataData(data);
        assertEquals(0, unrecognizedExtraField.getCentralDirectoryLength().getValue());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testSetLocalFileDataData_NegativeData_RPcl6_SVgk0() {
        UnrecognizedExtraField unrecognizedExtraField = new UnrecognizedExtraField();
        byte[] data = new byte[10]; // Replace with actual negative data
        unrecognizedExtraField.setLocalFileDataData(data);
        assertEquals(0, unrecognizedExtraField.getCentralDirectoryLength().getValue());
    }
}