/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.jar;
import java.security.cert.Certificate;
import java.util.jar.Attributes;
import java.util.jar.JarEntry;
import java.util.zip.ZipEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_JarArchiveEntry_Test_Passing {
JarArchiveEntry jararchiveentry;
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetCertificates() throws Exception{
        jararchiveentry = mock(JarArchiveEntry.class);
        Certificate[] certificates = jararchiveentry.getCertificates();
        // Add meaningful assertions here
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetCertificates_wPUC0() throws Exception {
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("name");
        Certificate[] certificates = jarArchiveEntry.getCertificates();
        assertEquals(null, certificates);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testgetManifestAttributes() throws Exception{
        jararchiveentry = new JarArchiveEntry("name");
        Attributes attributes = jararchiveentry.getManifestAttributes();
        assertNotNull(attributes);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test1_JvVG0() throws Exception {
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry("name");
        Attributes attributes = jarArchiveEntry.getManifestAttributes();
        assertEquals(null, attributes);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test2_Wraq1() throws Exception {
        ZipArchiveEntry zipArchiveEntry = new ZipArchiveEntry("entryName");
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry(zipArchiveEntry);
        Attributes attributes = jarArchiveEntry.getManifestAttributes();
        assertEquals(null, attributes);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test3_fSOO2() throws Exception {
        ZipEntry zipEntry = new ZipEntry("entryName");
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry(zipEntry);
        Attributes attributes = jarArchiveEntry.getManifestAttributes();
        assertEquals(null, attributes);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void test4_sKCV3() throws Exception {
        JarEntry jarEntry = new JarEntry("entryName");
        JarArchiveEntry jarArchiveEntry = new JarArchiveEntry(jarEntry);
        Attributes attributes = jarArchiveEntry.getManifestAttributes();
        assertEquals(null, attributes);
    }
}