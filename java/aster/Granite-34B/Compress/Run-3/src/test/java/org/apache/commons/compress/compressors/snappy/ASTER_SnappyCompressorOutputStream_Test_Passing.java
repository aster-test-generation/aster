/**
 * Generated by Aster
 */
package org.apache.commons.compress.compressors.snappy;
import java.io.IOException;
import java.io.OutputStream;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SnappyCompressorOutputStream_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrite2_suon1() throws Exception {
        byte[] data = new byte[0];
        int off = 0;
        int len = 5;
        SnappyCompressorOutputStream snappyCompressorOutputStream = new SnappyCompressorOutputStream(null, 0L);
        snappyCompressorOutputStream.write(data, off, len);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testWrite3_QtEy2() throws Exception {
        byte[] data = new byte[0];
        int off = 0;
        int len = 5;
        SnappyCompressorOutputStream snappyCompressorOutputStream = new SnappyCompressorOutputStream(null, 0L, 0);
        snappyCompressorOutputStream.write(data, off, len);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClose2_fxRu1_SuaX0() throws IOException {
        OutputStream os = mock(OutputStream.class);
        long uncompressedSize = 100;
        SnappyCompressorOutputStream snappyCompressorOutputStream = new SnappyCompressorOutputStream(os, uncompressedSize);
        snappyCompressorOutputStream.close();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testClose3_zltV2_mkwa0() throws IOException {
        OutputStream os = mock(OutputStream.class);
        long uncompressedSize = 100;
        int blockSize = 1024;
        SnappyCompressorOutputStream snappyCompressorOutputStream = new SnappyCompressorOutputStream(os, uncompressedSize, blockSize);
        snappyCompressorOutputStream.close();
    }
}