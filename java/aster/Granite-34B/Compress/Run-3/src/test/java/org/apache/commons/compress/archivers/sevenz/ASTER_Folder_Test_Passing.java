/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import java.io.IOException;
import java.util.Collections;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Collections;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_Folder_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    void testFindBindPairForInStreamWhenBindPairsAreNull_ewLw2() throws Exception {
        Folder folder = new Folder();
        int result = folder.findBindPairForInStream(5);
        assert result == -1;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testFindBindPairForOutStreamWithBindPairsNull_eAmG2() throws Exception {
        Folder folder = new Folder();
        int result = folder.findBindPairForOutStream(0);
        assert result == -1;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrderedCoders_withNullPackedStreams_shouldReturnEmptyList_QXOp0() throws IOException {
        Folder folder = new Folder();
        folder.packedStreams = null;
        folder.coders = new Coder[1];
        Iterable<Coder> result = folder.getOrderedCoders();
        assert result.equals(Collections.emptyList());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrderedCoders_withEmptyPackedStreams_shouldReturnEmptyList_Ylyq1() throws IOException {
        Folder folder = new Folder();
        folder.packedStreams = new long[0];
        folder.coders = new Coder[1];
        Iterable<Coder> result = folder.getOrderedCoders();
        assert result.equals(Collections.emptyList());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrderedCoders_withNullCoders_shouldReturnEmptyList_UBuV2() throws IOException {
        Folder folder = new Folder();
        folder.packedStreams = new long[1];
        folder.coders = null;
        Iterable<Coder> result = folder.getOrderedCoders();
        assert result.equals(Collections.emptyList());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrderedCoders_withEmptyCoders_shouldReturnEmptyList_lILr3() throws IOException {
        Folder folder = new Folder();
        folder.packedStreams = new long[1];
        folder.coders = new Coder[0];
        Iterable<Coder> result = folder.getOrderedCoders();
        assert result.equals(Collections.emptyList());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOrderedCoders_withValidData_shouldReturnCorrectList_QHZW4() throws IOException {
        Folder folder = new Folder();
        folder.packedStreams = new long[1];
        folder.coders = new Coder[1];
        Iterable<Coder> result = folder.getOrderedCoders();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetUnpackSizeWhenTotalOutputStreamsIsZero_mkqf0() throws Exception {
        Folder folder = new Folder();
        folder.totalOutputStreams = 0;
        assertEquals(0, folder.getUnpackSize());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testGetUnpackSizeForCoder_coderNull_returnZero_xKUC1() throws Exception {
    Folder folder = new Folder();
    Coder coder = null;
    long expected = 0L;
    long actual = folder.getUnpackSizeForCoder(coder);
    assertEquals(expected, actual);
}
}