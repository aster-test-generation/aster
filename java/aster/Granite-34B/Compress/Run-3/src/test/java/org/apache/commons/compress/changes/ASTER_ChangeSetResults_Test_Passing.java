/**
 * Generated by Aster
 */
package org.apache.commons.compress.changes;
import java.util.List;
import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_ChangeSetResults_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddedFromChangeSet_btSC0() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        String fileName = "file1.txt";
        boolean result = changeSetResults.hasBeenAdded(fileName);
        assert result == true;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testAddedFromStream_jrkH1() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        String fileName = "file2.txt";
        boolean result = changeSetResults.hasBeenAdded(fileName);
        assert result == true;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testNotAdded_gPed2() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        String fileName = "file3.txt";
        boolean result = changeSetResults.hasBeenAdded(fileName);
        assert result == false;
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddedFromChangeSet_GDjp0_1() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> result = changeSetResults.getAddedFromChangeSet();
        assertNotNull(result);}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAddedFromChangeSet_GDjp0_2() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> result = changeSetResults.getAddedFromChangeSet();
        assertTrue(result.isEmpty());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeleted_svEM0() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> deleted = changeSetResults.getDeleted();
        assertNotNull(deleted);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeletedWithNoDeletedItems_mcGe1() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> deleted = changeSetResults.getDeleted();
        assertTrue(deleted.isEmpty());
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeletedWithOneDeletedItem_pjYN2_1() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> deleted = changeSetResults.getDeleted();
        assertEquals(1, deleted.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeletedWithOneDeletedItem_pjYN2_2() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> deleted = changeSetResults.getDeleted();
        assertEquals("item1", deleted.get(0));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeletedWithMultipleDeletedItems_MgaE3_1() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> deleted = changeSetResults.getDeleted();
        assertEquals(3, deleted.size());}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeletedWithMultipleDeletedItems_MgaE3_3() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> deleted = changeSetResults.getDeleted();
        assertEquals("item2", deleted.get(1));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDeletedWithMultipleDeletedItems_MgaE3_4() throws Exception {
        ChangeSetResults changeSetResults = new ChangeSetResults();
        List<String> deleted = changeSetResults.getDeleted();
        assertEquals("item3", deleted.get(2));}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDeleted_ZKnH0() throws Exception {
	ChangeSetResults changeSetResults = new ChangeSetResults();
	changeSetResults.deleted("fileName");
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testDeleted2_GZRo1() throws Exception {
	ChangeSetResults changeSetResults = new ChangeSetResults();
	changeSetResults.deleted("fileName2");
}
}