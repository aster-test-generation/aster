/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.io.IOException;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_IcBands_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void getRelevantIcTuples_relevantCandidates_relevantTuples_Flbc0() throws Exception {
    IcBands icBands = new IcBands(new Segment());
    String className = "class";
    ClassConstantPool cp = new ClassConstantPool();
    IcTuple[] actual = icBands.getRelevantIcTuples(className, cp);
    IcTuple[] expected = new IcTuple[0];
    assertArrayEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testUnPack1_FTuU0() throws IOException, Pack200Exception {
    IcBands icBands = new IcBands(new Segment());
    icBands.unpack();
}
}