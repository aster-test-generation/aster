/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.unpack200;
import java.io.IOException;
import java.io.InputStream;
import org.apache.commons.compress.harmony.pack200.Pack200Exception;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.mockito.Mockito.doThrow;
import static org.mockito.Mockito.mock;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_AttrDefinitionBands_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testUnpack_GhCI0() throws Pack200Exception, IOException {
        Segment segment = new Segment();
        AttrDefinitionBands attrDefinitionBands = new AttrDefinitionBands(segment);
        attrDefinitionBands.unpack();
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetAttributeDefinitionMap_VqoV0() throws Exception {
        Segment segment = new Segment();
        AttrDefinitionBands attrDefinitionBands = new AttrDefinitionBands(segment);
        AttributeLayoutMap attributeLayoutMap = attrDefinitionBands.getAttributeDefinitionMap();
        assertNotNull(attributeLayoutMap);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadWithIOException_hbbo1() throws IOException, Pack200Exception {
    InputStream in = mock(InputStream.class);
    doThrow(IOException.class).when(in).read();
    AttrDefinitionBands attrDefinitionBands = new AttrDefinitionBands(new Segment());
    try {
        attrDefinitionBands.read(in);
        fail("Should have thrown IOException");
    } catch (IOException e) {
    }
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testReadWithPack200Exception_GbCL2() throws IOException, Pack200Exception {
    InputStream in = mock(InputStream.class);
    doThrow(Pack200Exception.class).when(in).read();
    AttrDefinitionBands attrDefinitionBands = new AttrDefinitionBands(new Segment());
    try {
        attrDefinitionBands.read(in);
        fail("Should have thrown Pack200Exception");
    } catch (Pack200Exception e) {
    }
}
}