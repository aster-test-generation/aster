/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import java.util.Random;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_LZMADecoder_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionsAsPropertiesNullOptsTest_XupN1() throws Exception {
        final LZMADecoder lzmaDecoder = new LZMADecoder();
        try {
            lzmaDecoder.getOptionsAsProperties(null);
            fail("Expected IOException");
        } catch (final IOException e) {
            assertNotNull(e);
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void getOptionsAsPropertiesRandomOptsTest_UCcH2() throws Exception {
        final Random random = new Random();
        final LZMADecoder lzmaDecoder = new LZMADecoder();
        for (int i = 0; i < 100; i++) {
            final Object opts = new Object();
            try {
                lzmaDecoder.getOptionsAsProperties(opts);
            } catch (final IOException e) {
                fail("Unexpected IOException");
            }
        }
    }
}