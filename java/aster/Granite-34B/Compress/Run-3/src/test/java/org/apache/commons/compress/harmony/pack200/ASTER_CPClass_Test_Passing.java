/**
 * Generated by Aster
 */
package org.apache.commons.compress.harmony.pack200;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;
import org.mockito.junit.jupiter.MockitoExtension;   
@ExtendWith(MockitoExtension.class)
@MockitoSettings(strictness = Strictness.LENIENT)
public class Aster_CPClass_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetIndexInCpUtf8WithPositiveInput_LmaO6_fzzS0() {
        org.apache.commons.compress.harmony.pack200.CPUTF8 utf8 = new org.apache.commons.compress.harmony.pack200.CPUTF8("1");
        CPClass cpClass = new CPClass(utf8);
        int index = cpClass.getIndexInCpUtf8();
        org.junit.jupiter.api.Assertions.assertEquals(1, index);
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testToString_aUGS0_GpMz0() {
		org.apache.commons.compress.harmony.pack200.CPUTF8 utf8 = new org.apache.commons.compress.harmony.pack200.CPUTF8("string");
		CPClass cpClass = new CPClass(utf8);
		String actual = cpClass.toString();
		String expected = "CPClass";
		org.junit.jupiter.api.Assertions.assertEquals(expected, actual);
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcompareTo_ZXoc0_Plgo0() {
	org.apache.commons.compress.harmony.pack200.CPUTF8 utf8 = new org.apache.commons.compress.harmony.pack200.CPUTF8("string");
	CPClass cpClass = new CPClass(utf8);
	CPClass arg0 = new CPClass(utf8);
	int expected = 0;
	int actual = cpClass.compareTo(arg0);
	assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcompareTo4_mHZb3_cUOE0() {
	org.apache.commons.compress.harmony.pack200.CPUTF8 utf8 = new org.apache.commons.compress.harmony.pack200.CPUTF8("string");
	CPClass cpClass = new CPClass(utf8);
	CPClass arg0 = new CPClass(utf8);
	int expected = 1;
	int actual = cpClass.compareTo(arg0);
	assertEquals(expected, actual);
}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
public void testcompareTo5_mdgS4_zbGo0() {
	org.apache.commons.compress.harmony.pack200.CPUTF8 utf8 = new org.apache.commons.compress.harmony.pack200.CPUTF8("string");
	CPClass cpClass = new CPClass(utf8);
	CPClass arg0 = new CPClass(utf8);
	int expected = -1;
	int actual = cpClass.compareTo(arg0);
	assertEquals(expected, actual);
}
}