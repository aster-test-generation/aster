/**
 * Generated by Aster
 */
package org.apache.commons.compress.archivers.sevenz;
import java.io.File;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.Timeout.ThreadMode;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Timeout.ThreadMode.SEPARATE_THREAD;
public class Aster_SevenZFile_Test_Passing {
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMatchesWithValidSignatureAndLength_pXTl0() throws Exception {
		byte[] signature = new byte[] { 0x37, 0x7A, 0x58, 0x5A, 0x00 };
		int length = 5;
		assertTrue(SevenZFile.matches(signature, length));
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMatchesWithInvalidSignatureAndLength_ZZJQ1() throws Exception {
		byte[] signature = new byte[] { 0x37, 0x7A, 0x58, 0x5A, 0x01 };
		int length = 5;
		assertTrue(!SevenZFile.matches(signature, length));
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMatchesWithValidSignatureAndShorterLength_xzYL2() throws Exception {
		byte[] signature = new byte[] { 0x37, 0x7A, 0x58, 0x5A };
		int length = 4;
		assertTrue(SevenZFile.matches(signature, length));
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
	public void testMatchesWithInvalidSignatureAndShorterLength_UzRq3() throws Exception {
		byte[] signature = new byte[] { 0x37, 0x7A, 0x58, 0x5A };
		int length = 3;
		assertTrue(!SevenZFile.matches(signature, length));
	}
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testToString_Kzha0() throws Exception {
        SevenZFile sevenZFile = new SevenZFile(new File("test.7z"), new char[] {'p', 'a', 's', 's', 'w', 'o', 'r', 'd'});
        String expected = "Archive{path='test.7z'}";
        assertEquals(expected, sevenZFile.toString());
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOpenArchive_CuvG0() throws IOException {
        try (SevenZFile archive = new SevenZFile(new File("test-data/7z/test.7z"))) {
            assertNotNull(archive);
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOpenArchiveWithPassword_wMgW1() throws IOException {
        try (SevenZFile archive = new SevenZFile(new File("test-data/7z/test-solid-deflate.7z"), "test".toCharArray())) {
            assertNotNull(archive);
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testOpenArchiveWithIncorrectPassword_ClEK2() throws Exception {
        try {
            new SevenZFile(new File("test-data/7z/test-solid-deflate.7z"), " incorrect".toCharArray());
            fail("Expected IOException");
        } catch (final IOException ex) {
        }
    }
@Test
@Timeout(value = 1, unit = TimeUnit.SECONDS, threadMode = SEPARATE_THREAD)
    public void testGetDefaultNameWithFileName_WBwB0() throws Exception {
        SevenZFile sevenZFile = new SevenZFile(new File("test.7z"), new char[0]);
        String defaultName = sevenZFile.getDefaultName();
        assertEquals("test", defaultName);
    }
}