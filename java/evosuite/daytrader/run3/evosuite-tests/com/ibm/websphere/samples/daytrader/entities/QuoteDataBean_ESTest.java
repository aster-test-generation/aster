/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:22:01 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.entities;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteDataBean_ESTest extends QuoteDataBean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      double double0 = quoteDataBean0.getVolume();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-913.4734747948967));
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("</LI><LI>      change1: ", "</LI><LI>      change1: ", (-1.0), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, (-2229.18307));
      double double0 = quoteDataBean0.getVolume();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-2229.18307), quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      String string0 = quoteDataBean0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("", "", 732.808140502354, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 732.808140502354);
      quoteDataBean0.getSymbol();
      assertEquals(732.808140502354, quoteDataBean0.getChange(), 0.01);
      assertEquals(732.808140502354, quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Random.setNextRandom((-2085));
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      assertEquals(20000.0, quoteDataBean0.getChange(), 0.01);
      
      QuoteDataBean quoteDataBean1 = QuoteDataBean.getRandomInstance();
      assertEquals("s:3999 Incorporated", quoteDataBean1.getCompanyName());
      assertEquals(50000.0, quoteDataBean1.getVolume(), 0.01);
      assertEquals("s:2999", quoteDataBean1.getSymbol());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Random.setNextRandom((-2147483645));
      QuoteDataBean.getRandomInstance();
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      assertEquals((-10000.0), quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:-2999", quoteDataBean0.getSymbol());
      assertEquals((-60000.0), quoteDataBean0.getChange(), 0.01);
      assertEquals("s:-1999 Incorporated", quoteDataBean0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      BigDecimal bigDecimal0 = quoteDataBean0.getPrice();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("&");
      BigDecimal bigDecimal0 = quoteDataBean0.getOpen();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal0 = new BigDecimal((-2335L), mathContext0);
      quoteDataBean0.setOpen(bigDecimal0);
      quoteDataBean0.getOpen();
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals("s:0", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("", "", 732.808140502354, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 732.808140502354);
      quoteDataBean0.getOpen();
      assertEquals(732.808140502354, quoteDataBean0.getChange(), 0.01);
      assertEquals(732.808140502354, quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("o^v:|", "\n\t\t        open1: ", (-2319.14892), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, (-1986301717));
      quoteDataBean0.getOpen();
      assertEquals((-1.986301717E9), quoteDataBean0.getChange(), 0.01);
      assertEquals("o^v:|", quoteDataBean0.getSymbol());
      assertEquals((-2319.14892), quoteDataBean0.getVolume(), 0.01);
      assertEquals("\n\t\t        open1: ", quoteDataBean0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      BigDecimal bigDecimal0 = quoteDataBean0.getLow();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = new BigDecimal((-2557));
      quoteDataBean0.setLow(bigDecimal0);
      quoteDataBean0.getLow();
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean(";^v:|");
      quoteDataBean0.setLow(bigDecimal0);
      BigDecimal bigDecimal1 = quoteDataBean0.getLow();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      
      QuoteDataBean quoteDataBean1 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = quoteDataBean1.getLow();
      assertEquals("s:7999", quoteDataBean1.getSymbol());
      assertEquals("s:8999 Incorporated", quoteDataBean1.getCompanyName());
      assertEquals(50000.0, quoteDataBean1.getChange(), 0.01);
      assertEquals((byte)44, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("+_/");
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      BigDecimal bigDecimal1 = BigDecimal.TEN;
      BigDecimal bigDecimal2 = bigDecimal0.subtract(bigDecimal1);
      quoteDataBean0.setHigh(bigDecimal2);
      BigDecimal bigDecimal3 = quoteDataBean0.getHigh();
      assertFalse(bigDecimal3.equals((Object)bigDecimal1));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      quoteDataBean0.setHigh(bigDecimal0);
      BigDecimal bigDecimal1 = quoteDataBean0.getHigh();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = quoteDataBean0.getHigh();
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals((byte)88, bigDecimal0.byteValue());
      assertEquals("s:0", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      String string0 = quoteDataBean0.getCompanyName();
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals("s:999 Incorporated", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("", "", 612.729671929964, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, (-1.0));
      quoteDataBean0.getCompanyName();
      assertEquals(612.729671929964, quoteDataBean0.getVolume(), 0.01);
      assertEquals((-1.0), quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      double double0 = quoteDataBean0.getChange();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("/quote.jsp", "o^v:|", 0.0, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, (-1511.753302328679));
      double double0 = quoteDataBean0.getChange();
      assertEquals((-1511.753302328679), double0, 0.01);
      assertEquals(0.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("o^v:|", quoteDataBean0.getCompanyName());
      assertEquals("/quote.jsp", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      double double0 = quoteDataBean0.getVolume();
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals(20000.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      quoteDataBean0.setVolume((-3075.7672040133));
      assertEquals((-3075.7672040133), quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      quoteDataBean0.setCompanyName("\n\tQuote Data for: ");
      assertEquals(0.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("q'=AQOH<N&o;&%E{", ";[Y93(=E<]PO9mBLN", 0.01, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 0.01);
      double double0 = quoteDataBean0.getChange();
      assertEquals(";[Y93(=E<]PO9mBLN", quoteDataBean0.getCompanyName());
      assertEquals("q'=AQOH<N&o;&%E{", quoteDataBean0.getSymbol());
      assertEquals(0.01, double0, 0.01);
      assertEquals(0.01, quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      BigDecimal bigDecimal0 = quoteDataBean0.getHigh();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      quoteDataBean0.setChange(0.0);
      assertEquals(0.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = quoteDataBean0.getPrice();
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals((short)300, bigDecimal0.shortValue());
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals("s:0", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = new BigDecimal((-2158.1916391875));
      quoteDataBean0.setPrice(bigDecimal0);
      quoteDataBean0.getPrice();
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean(";^v:|");
      String string0 = quoteDataBean0.toString();
      assertEquals("\n\tQuote Data for: ;^v:|\n\t\t companyName: null\n\t\t      volume: 0.0\n\t\t       price: null\n\t\t        open1: null\n\t\t         low: null\n\t\t        high: null\n\t\t      change1: 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      String string0 = quoteDataBean0.getCompanyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean(";^v:|");
      String string0 = quoteDataBean0.getSymbol();
      assertEquals(";^v:|", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("/welcomeImg.jsp", "", 0.0, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 0.0);
      quoteDataBean0.getPrice();
      assertEquals(0.0, quoteDataBean0.getChange(), 0.01);
      assertEquals("/welcomeImg.jsp", quoteDataBean0.getSymbol());
      assertEquals("", quoteDataBean0.getCompanyName());
      assertEquals(0.0, quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      TradeConfig.setMAX_QUOTES(1);
      QuoteDataBean quoteDataBean1 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean1.equals(quoteDataBean0);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals(50000.0, quoteDataBean1.getChange(), 0.01);
      assertTrue(boolean0);
      assertEquals("s:0 Incorporated", quoteDataBean1.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      QuoteDataBean quoteDataBean1 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean0.equals(quoteDataBean1);
      assertEquals(20000.0, quoteDataBean1.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean1.getCompanyName());
      assertEquals("s:0", quoteDataBean1.getSymbol());
      assertFalse(boolean0);
      assertEquals(70000.0, quoteDataBean1.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      QuoteDataBean quoteDataBean1 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean0.equals(quoteDataBean1);
      assertEquals(50000.0, quoteDataBean1.getChange(), 0.01);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertFalse(boolean0);
      assertEquals("s:7999", quoteDataBean1.getSymbol());
      assertEquals("s:8999 Incorporated", quoteDataBean1.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean0.equals((Object) null);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean0.equals(quoteDataBean0);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertTrue(boolean0);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals("s:0", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      quoteDataBean0.setSymbol("$rc/");
      quoteDataBean0.hashCode();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      // Undeclared exception!
      try { 
        quoteDataBean0.print();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      String string0 = quoteDataBean0.toHTML();
      assertEquals("<BR>Quote Data for: s:0<LI> companyName: s:999 Incorporated</LI><LI>      volume: 20000.0</LI><LI>       price: 300.00</LI><LI>        open1: 400.00</LI><LI>         low: 500.00</LI><LI>        high: 600.00</LI><LI>      change1: 70000.0</LI>", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      quoteDataBean0.hashCode();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = quoteDataBean0.getLow();
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals((byte) (-12), bigDecimal0.byteValue());
  }
}
