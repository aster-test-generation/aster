/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:12:21 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.util.MDBStats;
import com.ibm.websphere.samples.daytrader.util.TimerStat;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MDBStats_ESTest extends MDBStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = new TimerStat();
      BiFunction<Object, TimerStat, TimerStat> biFunction0 = (BiFunction<Object, TimerStat, TimerStat>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      mDBStats0.merge("muf 'ms5<;l>`z!T", timerStat0, biFunction0);
      MDBStats mDBStats1 = MDBStats.getInstance();
      assertSame(mDBStats1, mDBStats0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = mDBStats0.addTiming("v!n@p+", 0L, 1L);
      assertEquals(0.001, timerStat0.getAvgSecs(), 0.01);
      assertEquals(0.001, timerStat0.getMaxSecs(), 0.01);
      assertEquals(0.001, timerStat0.getMinSecs(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = new TimerStat();
      timerStat0.setCount((-806));
      BiFunction<Object, Object, TimerStat> biFunction0 = (BiFunction<Object, Object, TimerStat>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      mDBStats0.merge("", timerStat0, biFunction0);
      TimerStat timerStat1 = mDBStats0.addTiming("", 1L, (-806));
      assertEquals((-0.807), timerStat1.getMinSecs(), 0.01);
      assertEquals(0.0010024844720496896, timerStat1.getAvgSecs(), 0.01);
      assertEquals(0.0, timerStat1.getMaxSecs(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      // Undeclared exception!
      try { 
        mDBStats0.addTiming((String) null, 1L, 1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.util.MDBStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = mDBStats0.addTiming("", 1L, (-806));
      assertEquals((-0.807), timerStat0.getAvgSecs(), 0.01);
      assertEquals(0.0, timerStat0.getMaxSecs(), 0.01);
      
      TimerStat timerStat1 = mDBStats0.addTiming("", 0L, 0L);
      assertEquals((-807.0), timerStat1.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = new TimerStat();
      timerStat0.setMax((-2046.60235288522));
      BiFunction<Object, Object, TimerStat> biFunction0 = (BiFunction<Object, Object, TimerStat>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      mDBStats0.merge("", timerStat0, biFunction0);
      TimerStat timerStat1 = mDBStats0.addTiming("", 1L, (-806));
      assertEquals((-0.807), timerStat1.getMinSecs(), 0.01);
      assertEquals((-0.807), timerStat1.getAvgSecs(), 0.01);
      assertEquals((-807.0), timerStat1.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = mDBStats0.addTiming("M/,${c,qY&Em+'sLZ", (-1L), (-1L));
      assertEquals(1, timerStat0.getCount());
      
      timerStat0.setCount((-1));
      TimerStat timerStat1 = mDBStats0.addTiming("M/,${c,qY&Em+'sLZ", (-1115L), (-1115L));
      assertEquals(0.0, timerStat1.getTotalTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      mDBStats0.reset();
      assertEquals(0, mDBStats0.size());
  }
}
