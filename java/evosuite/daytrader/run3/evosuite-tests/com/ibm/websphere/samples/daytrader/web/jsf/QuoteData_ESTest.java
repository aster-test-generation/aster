/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 15:52:14 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.web.jsf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.web.jsf.QuoteData;
import java.math.BigDecimal;
import java.math.MathContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteData_ESTest extends QuoteData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Double double0 = new Double(283.40874946162876);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "{4x5Uvqfi", bigDecimal0, bigDecimal0, "arrowdown.gif", double0, double0);
      String string0 = quoteData0.getChangeHTML();
      assertEquals("<FONT color=\"#009900\">283.41</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", string0);
      assertEquals("{4x5Uvqfi", quoteData0.getSymbol());
      assertEquals("1-1", quoteData0.getRange());
      assertEquals("arrowdown.gif", quoteData0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(96L);
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      Double double0 = new Double(96L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", bigDecimal1, bigDecimal1, "x?zb6OY`1uc?y1", double0, double0);
      assertEquals("1-1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "VIe!t:n u");
      double double0 = quoteData0.getVolume();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(96L);
      Double double0 = new Double(96L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", double0, double0);
      quoteData0.setVolume((-2587.06101));
      double double1 = quoteData0.getVolume();
      assertEquals((-2587.06101), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double(0L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, (String) null, bigDecimal0, bigDecimal0, (String) null, double0, double0);
      quoteData0.getSymbol();
      assertEquals("0-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-390));
      Double double0 = new Double((-343.4966));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "UF}*rvd^UfdF8/LqvJ", bigDecimal0, bigDecimal0, "V;{Sa46M", double0, double0);
      String string0 = quoteData0.getSymbol();
      assertEquals("UF}*rvd^UfdF8/LqvJ", string0);
      assertEquals("-390--390", quoteData0.getRange());
      assertEquals("V;{Sa46M", quoteData0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(96L);
      Double double0 = new Double(96L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", double0, double0);
      String string0 = quoteData0.getRange();
      assertEquals("96-96", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      quoteData0.setRange("");
      String string0 = quoteData0.getRange();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "v-&Ps(#0");
      BigDecimal bigDecimal1 = quoteData0.getPrice();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      Double double0 = new Double(1032.048466);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "-6b", bigDecimal0, bigDecimal0, "-6b", double0, double0);
      quoteData0.getPrice();
      assertEquals("-1--1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "/n_3+)nj", double0, double0);
      quoteData0.getOpen();
      assertEquals("/n_3+)nj", quoteData0.getCompanyName());
      assertEquals("", quoteData0.getSymbol());
      assertEquals("0-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      Double double0 = new Double(1032.048466);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "-6b", bigDecimal0, bigDecimal0, "-6b", double0, double0);
      quoteData0.getOpen();
      assertEquals("-1--1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "arrowup.gif");
      BigDecimal bigDecimal1 = quoteData0.getLow();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(96L);
      Double double0 = new Double(96L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", double0, double0);
      quoteData0.getLow();
      assertEquals("96-96", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Double double0 = new Double(2301.60641114);
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal1 = bigDecimal0.negate(mathContext0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "XcNi'u", double0, double0);
      quoteData0.setLow(bigDecimal1);
      quoteData0.getLow();
      assertEquals("XcNi'u", quoteData0.getCompanyName());
      assertEquals("1-1", quoteData0.getRange());
      assertEquals("", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "</A>");
      BigDecimal bigDecimal1 = quoteData0.getHigh();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Double double0 = new Double(283.40874946162876);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "{4x5Uvqfi", bigDecimal0, bigDecimal0, "arrowdown.gif", double0, double0);
      quoteData0.getHigh();
      assertEquals("arrowdown.gif", quoteData0.getCompanyName());
      assertEquals("1-1", quoteData0.getRange());
      assertEquals("{4x5Uvqfi", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double(0L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, (String) null, bigDecimal0, bigDecimal0, (String) null, double0, double0);
      quoteData0.getHigh();
      assertEquals("0-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-390));
      Double double0 = new Double((-343.4966));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "UF}*rvd^UfdF8/LqvJ", bigDecimal0, bigDecimal0, "V;{Sa46M", double0, double0);
      quoteData0.getHigh();
      assertEquals("UF}*rvd^UfdF8/LqvJ", quoteData0.getSymbol());
      assertEquals("V;{Sa46M", quoteData0.getCompanyName());
      assertEquals("-390--390", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "J%&_IV+yXb%");
      BigDecimal bigDecimal1 = quoteData0.getGainPercent();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-390));
      Double double0 = new Double((-343.4966));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "UF}*rvd^UfdF8/LqvJ", bigDecimal0, bigDecimal0, "V;{Sa46M", double0, double0);
      quoteData0.setGainPercent(bigDecimal0);
      BigDecimal bigDecimal1 = quoteData0.getGainPercent();
      assertNotSame(bigDecimal1, bigDecimal0);
      assertEquals("V;{Sa46M", quoteData0.getCompanyName());
      assertEquals("-390--390", quoteData0.getRange());
      assertEquals("UF}*rvd^UfdF8/LqvJ", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(96L);
      Double double0 = new Double(96L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", double0, double0);
      quoteData0.setGainPercent(bigDecimal0);
      BigDecimal bigDecimal1 = quoteData0.getGainPercent();
      assertNotSame(bigDecimal1, bigDecimal0);
      assertEquals("96-96", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      BigDecimal bigDecimal1 = new BigDecimal(1822L);
      Double double0 = new Double(1822L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal1, "", bigDecimal1, bigDecimal0, "", double0, double0);
      BigDecimal bigDecimal2 = quoteData0.getGainPercent();
      assertEquals("1822-10", quoteData0.getRange());
      assertEquals((short)18100, bigDecimal2.shortValue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "R@");
      BigDecimal bigDecimal1 = quoteData0.getGain();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(3349.762864553348);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, ";0x\"", double0, double0);
      quoteData0.setGain(bigDecimal0);
      quoteData0.getGain();
      assertEquals(";0x\"", quoteData0.getCompanyName());
      assertEquals("10-10", quoteData0.getRange());
      assertEquals("", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "s4rpn\"e\u0005V `");
      String string0 = quoteData0.getCompanyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Double double0 = new Double(44.88859138);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getCompanyName();
      assertEquals("1-1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "/n_3+)nj", double0, double0);
      double double1 = quoteData0.getChange();
      assertEquals("", quoteData0.getSymbol());
      assertEquals("/n_3+)nj", quoteData0.getCompanyName());
      assertEquals(0.0, double1, 0.01);
      assertEquals("0-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Double double0 = new Double((-1052.7));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "Ht;p.iBaLTw", bigDecimal0, bigDecimal0, "Ht;p.iBaLTw", double0, double0);
      double double1 = quoteData0.getChange();
      assertEquals((-1052.7), double1, 0.01);
      assertEquals("1-1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-2878.09));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "mPq-Ar?vwm#{!K");
      // Undeclared exception!
      try { 
        quoteData0.setGainPercent(bigDecimal0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      // Undeclared exception!
      try { 
        quoteData0.getGainPercentHTML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.util.FinancialUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(96L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "0{i7][Gl)>I=");
      // Undeclared exception!
      try { 
        quoteData0.getGainHTML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.util.FinancialUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      QuoteData quoteData0 = null;
      try {
        quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "arrowdown.gif", bigDecimal0, bigDecimal0, "arrowdown.gif", (Double) null, (Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.QuoteData", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-778.9987608888));
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      Double double0 = new Double((-778.9987608888));
      QuoteData quoteData0 = null;
      try {
        quoteData0 = new QuoteData(bigDecimal0, bigDecimal1, "VO0:..7|9", bigDecimal1, bigDecimal1, "VO0:..7|9", double0, double0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QuoteData quoteData0 = null;
      try {
        quoteData0 = new QuoteData((BigDecimal) null, (BigDecimal) null, "p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.QuoteData", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      BigDecimal bigDecimal1 = new BigDecimal((-1187.71341));
      QuoteData quoteData0 = null;
      try {
        quoteData0 = new QuoteData(bigDecimal0, bigDecimal1, "{~v~[Ob1gu&//s^oWU|");
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1822L);
      Double double1 = new Double((-748.37556));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double1);
      String string0 = quoteData0.getChangeHTML();
      assertEquals(1822.0, quoteData0.getVolume(), 0.01);
      assertEquals("10-10", quoteData0.getRange());
      assertEquals("<FONT color=\"#cc0000\">-748.38</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      String string0 = quoteData0.getChangeHTML();
      assertEquals("<FONT color=\"#009900\">0.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      String string0 = quoteData0.getRange();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      quoteData0.setOpen((BigDecimal) null);
      BigDecimal bigDecimal1 = quoteData0.getOpen();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1));
      Double double0 = new Double((-1));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "Y[7,bg^i=5BTJ.", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getHigh();
      assertEquals("-1--1", quoteData0.getRange());
      assertEquals("Y[7,bg^i=5BTJ.", quoteData0.getSymbol());
      assertEquals("", quoteData0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(96L);
      Double double0 = new Double(96L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", bigDecimal0, bigDecimal0, "x?zb6OY`1uc?y1", double0, double0);
      double double1 = quoteData0.getVolume();
      assertEquals("96-96", quoteData0.getRange());
      assertEquals(96.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      String string0 = quoteData0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      Double double0 = new Double(1032.048466);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "-6b", bigDecimal0, bigDecimal0, "-6b", double0, double0);
      quoteData0.getCompanyName();
      assertEquals("-1--1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1822L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getOpen();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      Double double0 = new Double(1032.048466);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "-6b", bigDecimal0, bigDecimal0, "-6b", double0, double0);
      quoteData0.setGain(bigDecimal0);
      quoteData0.getGain();
      assertEquals("-1--1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Double double0 = new Double(3657.5307223);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "Ht;p.iBaLTw", bigDecimal0, bigDecimal0, "Ht;p.iBaLTw", double0, double0);
      double double1 = quoteData0.getChange();
      assertEquals(3657.5307223, double1, 0.01);
      assertEquals("1-1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1822L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getPrice();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1822L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getGainPercent();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      Double double0 = new Double(1032.048466);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "-6b", bigDecimal0, bigDecimal0, "-6b", double0, double0);
      quoteData0.getGain();
      assertEquals("-1--1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1822L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getGainHTML();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      quoteData0.setSymbol("");
      assertEquals("", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      quoteData0.setHigh(bigDecimal0);
      assertEquals((short)10, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1822L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getGainPercentHTML();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1822L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.setCompanyName(" y");
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1822L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.setPrice(bigDecimal0);
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "J%&_IV+yXb%");
      quoteData0.setChange(2626.85850665);
      assertEquals(2626.85850665, quoteData0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "/n_3+)nj", double0, double0);
      quoteData0.getLow();
      assertEquals("0-0", quoteData0.getRange());
      assertEquals("", quoteData0.getSymbol());
      assertEquals("/n_3+)nj", quoteData0.getCompanyName());
  }
}
