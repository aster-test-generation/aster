/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 15:52:38 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.web.jsf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.web.jsf.OrderData;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrderData_ESTest extends OrderData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-5251));
      BigDecimal bigDecimal0 = new BigDecimal((long) (-5251));
      MockDate mockDate1 = new MockDate((-1327), (-1327), (-5251), (-1), (-1), (-5251));
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate1, bigDecimal0, "", 1.0, "", bigDecimal0);
      assertEquals(1.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(3905);
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      MockDate mockDate1 = new MockDate();
      OrderData orderData0 = new OrderData(integer0, "", mockDate1, mockDate0, bigDecimal0, "", 3798, "7w");
      assertEquals(3798.0, orderData0.getQuantity(), 0.01);
      assertEquals("7w", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, 0, (-2050), (-2050));
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "eGZ2[Y/V}2|2Vz+9m", mockDate0, mockDate0, bigDecimal0, "eGZ2[Y/V}2|2Vz+9m", (-2050), "RKV.B");
      orderData0.getTotal();
      assertEquals((-2050.0), orderData0.getQuantity(), 0.01);
      assertEquals("eGZ2[Y/V}2|2Vz+9m", orderData0.getOrderStatus());
      assertEquals("eGZ2[Y/V}2|2Vz+9m", orderData0.getOrderType());
      assertEquals("RKV.B", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(1294);
      MockDate mockDate0 = new MockDate((-1515), 53, (-1515));
      BigInteger bigInteger0 = BigInteger.ONE;
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, mathContext0);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", 53, "]m`:Fm8T;,SeQ_");
      orderData0.setTotal(bigDecimal0);
      orderData0.getTotal();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderType());
      assertEquals("]m`:Fm8T;,SeQ_", orderData0.getSymbol());
      assertEquals(53.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-3473));
      MockDate mockDate0 = new MockDate((-3473));
      BigDecimal bigDecimal0 = BigDecimal.valueOf(322L);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 939.3931573033, "K0+#1", bigDecimal0);
      BigDecimal bigDecimal1 = orderData0.getTotal();
      assertEquals(939.3931573033, orderData0.getQuantity(), 0.01);
      assertEquals("K0+#1", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals((short) (-25196), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "+fO[.Q4K^beBs^LxA", (Date) null, (Date) null, bigDecimal0, "", 0.0, (String) null, bigDecimal0);
      String string0 = orderData0.getSymbol();
      assertNull(string0);
      assertEquals("", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("+fO[.Q4K^beBs^LxA", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(1294);
      MockDate mockDate0 = new MockDate((-1515), 53, (-1515));
      BigInteger bigInteger0 = BigInteger.ONE;
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, mathContext0);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", 53, "]m`:Fm8T;,SeQ_");
      String string0 = orderData0.getSymbol();
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderType());
      assertEquals(53.0, orderData0.getQuantity(), 0.01);
      assertEquals("]m`:Fm8T;,SeQ_", string0);
      assertEquals("", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "", (Date) null, (Date) null, bigDecimal0, "", 0, "4z\"5R");
      double double0 = orderData0.getQuantity();
      assertEquals("4z\"5R", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1);
      MockDate mockDate0 = new MockDate((-1931), 0, 0);
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", (-1931), "FGB:R`!euIUZ_~*ILm|", bigDecimal0);
      double double0 = orderData0.getQuantity();
      assertEquals("FGB:R`!euIUZ_~*ILm|", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("", orderData0.getOrderType());
      assertEquals((-1931.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer((-5251));
      MockDate mockDate0 = new MockDate((-5251));
      BigDecimal bigDecimal0 = new BigDecimal((long) (-5251));
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, "", (-5251), "", bigDecimal0);
      orderData0.getPrice();
      assertEquals((-5251.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(6);
      BigDecimal bigDecimal0 = new BigDecimal(2203L);
      MockDate mockDate0 = new MockDate((-1), 1, 0);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 2203L, "", bigDecimal0);
      orderData0.getPrice();
      assertEquals(2203.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-376));
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = new BigDecimal((-1918.665));
      OrderData orderData0 = new OrderData(integer0, "SZj<|", mockDate0, mockDate0, bigDecimal0, "SZj<|", (-376), (String) null, bigDecimal0);
      String string0 = orderData0.getOrderType();
      assertNotNull(string0);
      assertEquals((-376.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(6);
      BigDecimal bigDecimal0 = new BigDecimal(2203L);
      MockDate mockDate0 = new MockDate((-1), 1, 0);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 2203L, "", bigDecimal0);
      orderData0.getOrderType();
      assertEquals(2203.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, "", 0, "*0)9");
      String string0 = orderData0.getOrderStatus();
      assertEquals("", orderData0.getOrderType());
      assertEquals("*0)9", orderData0.getSymbol());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(1294);
      MockDate mockDate0 = new MockDate((-1515), 53, (-1515));
      BigInteger bigInteger0 = BigInteger.ONE;
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, mathContext0);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", 53, "]m`:Fm8T;,SeQ_");
      String string0 = orderData0.getOrderStatus();
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderType());
      assertEquals(53.0, orderData0.getQuantity(), 0.01);
      assertEquals("", string0);
      assertEquals("]m`:Fm8T;,SeQ_", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(0);
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "+fO[.Q4K^beBs^LxA", (Date) null, (Date) null, bigDecimal0, "", 0.0, (String) null, bigDecimal0);
      orderData0.getOrderID();
      assertEquals("", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("+fO[.Q4K^beBs^LxA", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(1);
      MockDate mockDate0 = new MockDate(1L);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "D=|!M %L$oh", 0.0, "", bigDecimal0);
      orderData0.getOrderID();
      assertEquals("D=|!M %L$oh", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Instant instant0 = MockInstant.ofEpochMilli(1);
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "2:5Y7gR}.0Fd", date0, date0, bigDecimal0, "}~zf;>F", (-2429.79), "");
      orderData0.setOrderID((Integer) null);
      orderData0.getOrderID();
      assertEquals("2:5Y7gR}.0Fd", orderData0.getOrderStatus());
      assertEquals((-2429.79), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getSymbol());
      assertEquals("}~zf;>F", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer(6);
      BigDecimal bigDecimal0 = new BigDecimal(6);
      OrderData orderData0 = new OrderData(integer0, "A1Zm", (Date) null, (Date) null, bigDecimal0, "b96@3VpvCqyJ", (-2275.1889), "N1", bigDecimal0);
      orderData0.getOrderFee();
      assertEquals((-2275.1889), orderData0.getQuantity(), 0.01);
      assertEquals("N1", orderData0.getSymbol());
      assertEquals("A1Zm", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Integer integer0 = new Integer((-1775));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", (-1775), "", bigDecimal0);
      orderData0.getOrderFee();
      assertEquals((-1775.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer((-5251));
      MockDate mockDate0 = new MockDate((-5251));
      BigDecimal bigDecimal0 = new BigDecimal((-5251));
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, "", (-5251), "", bigDecimal0);
      orderData0.getOrderFee();
      assertEquals((-5251.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Integer integer0 = new Integer(1351);
      BigDecimal bigDecimal0 = new BigDecimal((-779));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, (String) null, 0, (String) null, bigDecimal0);
      orderData0.getOrderFee();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(1);
      MockDate mockDate0 = new MockDate(1L);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "D=|!M %L$oh", 0.0, "", bigDecimal0);
      orderData0.getOpenDate();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("D=|!M %L$oh", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer((-5251));
      MockDate mockDate0 = new MockDate((-5251));
      BigDecimal bigDecimal0 = new BigDecimal((-5251));
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, "", (-5251), "", bigDecimal0);
      orderData0.getCompletionDate();
      assertEquals((-5251.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(2481);
      MockDate mockDate0 = new MockDate();
      OrderData orderData0 = null;
      try {
        orderData0 = new OrderData(integer0, "Qdvp]w$k!k)X/^", mockDate0, mockDate0, (BigDecimal) null, (String) null, (-1131), "Qdvp]w$k!k)X/^", (BigDecimal) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Integer integer0 = new Integer((-1775));
      OrderData orderData0 = new OrderData(integer0, "CFzR*?gv(B::", mockDate0, mockDate0, bigDecimal0, ":L", (-1775), "CFzR*?gv(B::", bigDecimal0);
      orderData0.setCompletionDate(mockDate0);
      assertEquals("CFzR*?gv(B::", orderData0.getOrderStatus());
      assertEquals((-1775.0), orderData0.getQuantity(), 0.01);
      assertEquals(":L", orderData0.getOrderType());
      assertEquals("CFzR*?gv(B::", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Integer integer0 = new Integer((-1775));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", (-1775), "", bigDecimal0);
      orderData0.getOrderID();
      assertEquals((-1775.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer((-3473));
      MockDate mockDate0 = new MockDate((-3473));
      BigDecimal bigDecimal0 = BigDecimal.valueOf(322L);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 939.3931573033, "K0+#1", bigDecimal0);
      orderData0.setOrderFee(bigDecimal0);
      assertEquals("", orderData0.getOrderType());
      assertEquals("K0+#1", orderData0.getSymbol());
      assertEquals(939.3931573033, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer((-5251));
      MockDate mockDate0 = new MockDate((-5251));
      BigDecimal bigDecimal0 = new BigDecimal((-5251));
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, "", (-5251), "", bigDecimal0);
      orderData0.setSymbol("");
      assertEquals((-5251.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Integer integer0 = new Integer((-1775));
      OrderData orderData0 = new OrderData(integer0, "CFzR*?gv(B::", mockDate0, mockDate0, bigDecimal0, ":L", (-1775), "CFzR*?gv(B::", bigDecimal0);
      String string0 = orderData0.getOrderStatus();
      assertEquals(":L", orderData0.getOrderType());
      assertEquals("CFzR*?gv(B::", orderData0.getSymbol());
      assertEquals("CFzR*?gv(B::", string0);
      assertEquals((-1775.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Integer integer0 = new Integer((-376));
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = new BigDecimal((-1918.665));
      OrderData orderData0 = new OrderData(integer0, "SZj<|", mockDate0, mockDate0, bigDecimal0, "SZj<|", (-376), (String) null, bigDecimal0);
      orderData0.setQuantity((-376));
      assertEquals((-376.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer((-5251));
      MockDate mockDate0 = new MockDate((-5251));
      BigDecimal bigDecimal0 = new BigDecimal((-5251));
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, "", (-5251), "", bigDecimal0);
      orderData0.setOpenDate(mockDate0);
      assertEquals((-5251.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Integer integer0 = new Integer((-2764));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, ";NJlF!Rbx", 4078, "");
      double double0 = orderData0.getQuantity();
      assertEquals("", orderData0.getSymbol());
      assertEquals(4078.0, double0, 0.01);
      assertEquals(";NJlF!Rbx", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Integer integer0 = new Integer(1909);
      OrderData orderData0 = new OrderData(integer0, "f0t2AR92U4", (Date) null, (Date) null, bigDecimal0, (String) null, (-1.0), "");
      String string0 = orderData0.getOrderType();
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getSymbol());
      assertNull(string0);
      assertEquals("f0t2AR92U4", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Integer integer0 = new Integer(3905);
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 3798, "7w");
      assertEquals("", orderData0.getOrderType());
      
      orderData0.setOrderType("");
      assertEquals("7w", orderData0.getSymbol());
      assertEquals(3798.0, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer(2320);
      MockDate mockDate0 = new MockDate(115L);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 115L, "", bigDecimal0);
      orderData0.getTotal();
      assertEquals(115.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Integer integer0 = new Integer(1909);
      OrderData orderData0 = new OrderData(integer0, "f0t2AR92U4", (Date) null, (Date) null, bigDecimal0, (String) null, (-1.0), "");
      orderData0.getPrice();
      assertEquals("f0t2AR92U4", orderData0.getOrderStatus());
      assertEquals("", orderData0.getSymbol());
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Integer integer0 = new Integer(0);
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      OrderData orderData0 = new OrderData(integer0, "WE')", mockDate0, mockDate0, (BigDecimal) null, "~qIzy(F?T4O-b/.6q.", 0, "", bigDecimal0);
      assertEquals("WE')", orderData0.getOrderStatus());
      
      orderData0.setOrderStatus("");
      assertEquals("", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Integer integer0 = new Integer(1909);
      OrderData orderData0 = new OrderData(integer0, "f0t2AR92U4", (Date) null, (Date) null, bigDecimal0, (String) null, (-1.0), "");
      orderData0.getCompletionDate();
      assertEquals("f0t2AR92U4", orderData0.getOrderStatus());
      assertEquals("", orderData0.getSymbol());
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Integer integer0 = new Integer(1909);
      OrderData orderData0 = new OrderData(integer0, "f0t2AR92U4", (Date) null, (Date) null, bigDecimal0, (String) null, (-1.0), "");
      orderData0.setPrice(bigDecimal0);
      orderData0.getPrice();
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getSymbol());
      assertEquals("f0t2AR92U4", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Integer integer0 = new Integer(1909);
      OrderData orderData0 = new OrderData(integer0, "f0t2AR92U4", (Date) null, (Date) null, bigDecimal0, (String) null, (-1.0), "");
      String string0 = orderData0.getSymbol();
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
      assertEquals("f0t2AR92U4", orderData0.getOrderStatus());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer(0);
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.UNLIMITED;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, mathContext0);
      OrderData orderData0 = new OrderData(integer0, "FAv#0,", (Date) null, (Date) null, bigDecimal0, "FAv#0,", 0, "HX1zsErq7s7_s", bigDecimal0);
      orderData0.getOpenDate();
      assertEquals("HX1zsErq7s7_s", orderData0.getSymbol());
      assertEquals("FAv#0,", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("FAv#0,", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Integer integer0 = new Integer(0);
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      OrderData orderData0 = new OrderData(integer0, "WE')", mockDate0, mockDate0, (BigDecimal) null, "~qIzy(F?T4O-b/.6q.", 0, "", bigDecimal0);
      BigDecimal bigDecimal1 = orderData0.getOrderFee();
      assertEquals("", orderData0.getSymbol());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("WE')", orderData0.getOrderStatus());
      assertEquals("~qIzy(F?T4O-b/.6q.", orderData0.getOrderType());
      assertNull(bigDecimal1);
  }
}
