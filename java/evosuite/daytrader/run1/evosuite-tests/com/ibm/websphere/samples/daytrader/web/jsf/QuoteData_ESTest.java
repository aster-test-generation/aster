/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 15:51:21 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.web.jsf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.web.jsf.QuoteData;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteData_ESTest extends QuoteData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(3514.23561286);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "-", bigDecimal0, bigDecimal0, "<FONT color=\"#009900\">", double0, double0);
      String string0 = quoteData0.getChangeHTML();
      assertEquals("<FONT color=\"#009900\">3514.24</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", string0);
      assertEquals("0-0", quoteData0.getRange());
      assertEquals("-", quoteData0.getSymbol());
      assertEquals("<FONT color=\"#009900\">", quoteData0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      Double double0 = new Double(0.0);
      Double double1 = new Double((-3530.7302389881147));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "hYrU8DZzM|", bigDecimal0, bigDecimal0, "hYrU8DZzM|", double0, double1);
      assertEquals(0.0, quoteData0.getVolume(), 0.01);
      assertEquals((-3530.7302389881147), quoteData0.getChange(), 0.01);
      assertEquals("0-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      BigDecimal bigDecimal1 = new BigDecimal((-701L));
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "hYrU8DZzM|", bigDecimal0, bigDecimal1, "hYrU8DZzM|", double0, double0);
      assertEquals("0--701", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(3514.23561286);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#ff0000\">", bigDecimal0, bigDecimal0, "<FONT color=\"#ff0000\">", double0, double0);
      double double1 = quoteData0.getVolume();
      assertEquals(3514.23561286, double1, 0.01);
      assertEquals("0-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.valueOf((-1L));
      Double double0 = new Double((-1L));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      double double1 = quoteData0.getVolume();
      assertEquals((-1.0), double1, 0.01);
      assertEquals("-1--1", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "_As/a%");
      String string0 = quoteData0.getSymbol();
      assertEquals("_As/a%", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-14L));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      String string0 = quoteData0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "q:~?oud+5W");
      String string0 = quoteData0.getRange();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-3343));
      Double double0 = new Double((-1.0));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, (String) null, bigDecimal0, bigDecimal0, (String) null, double0, double0);
      quoteData0.getPrice();
      assertEquals("-3343--3343", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, mathContext0);
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#ff0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getPrice();
      assertEquals("<FONT color=\"#ff0000\">", quoteData0.getSymbol());
      assertEquals("", quoteData0.getCompanyName());
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1954.0030618122144);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getOpen();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1358));
      Double double0 = new Double(100.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "<A href=\"app?action=quotes&symbols=", double0, double0);
      quoteData0.getOpen();
      assertEquals("-1358--1358", quoteData0.getRange());
      assertEquals("<A href=\"app?action=quotes&symbols=", quoteData0.getCompanyName());
      assertEquals("", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "J@%.?8>Kh$C");
      BigDecimal bigDecimal1 = quoteData0.getLow();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getLow();
      assertEquals("0-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(466.311480718032);
      Double double0 = new Double(466.311480718032);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "com.ibm.websphere.samples.daytrader.we.jsf.QuoteData", bigDecimal0, bigDecimal0, "com.ibm.websphere.samples.daytrader.we.jsf.QuoteData", double0, double0);
      quoteData0.getLow();
      assertEquals("466.31148071803198718043859116733074188232421875-466.31148071803198718043859116733074188232421875", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "v");
      BigDecimal bigDecimal1 = quoteData0.getHigh();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, (String) null, bigDecimal0, bigDecimal0, (String) null, double0, double0);
      quoteData0.getHigh();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(532L);
      BigDecimal bigDecimal1 = new BigDecimal((-3148.794198690781));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "J@%.?8>Kh$C", bigDecimal1, bigDecimal0, "J@%.?8>Kh$C", double0, double0);
      BigDecimal bigDecimal2 = quoteData0.getHigh();
      assertEquals("-3148.794198690780831384472548961639404296875-0", quoteData0.getRange());
      assertEquals((byte) (-76), bigDecimal2.byteValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-1498), mathContext0);
      Double double0 = new Double((-1498));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#cc0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getGainPercentHTML();
      assertEquals("1.0E+1499-1.0E+1499", quoteData0.getRange());
      assertEquals("", quoteData0.getCompanyName());
      assertEquals("<FONT color=\"#cc0000\">", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "_As/a%");
      BigDecimal bigDecimal1 = quoteData0.getGainPercent();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "hYrU8DZzM|", bigDecimal0, bigDecimal0, "hYrU8DZzM|", double0, double0);
      quoteData0.getGainPercent();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, (String) null);
      quoteData0.setGainPercent(bigDecimal0);
      BigDecimal bigDecimal1 = quoteData0.getGainPercent();
      assertNotSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "Tz^\u0006^:3~V T@2f");
      BigDecimal bigDecimal1 = quoteData0.getGain();
      assertNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.UNLIMITED;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, mathContext0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "dy");
      quoteData0.setGain(bigDecimal0);
      BigDecimal bigDecimal1 = quoteData0.getGain();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      MathContext mathContext0 = MathContext.UNLIMITED;
      BigDecimal bigDecimal1 = new BigDecimal(532L, mathContext0);
      Double double0 = new Double(532L);
      QuoteData quoteData0 = new QuoteData(bigDecimal1, bigDecimal0, "yJ5DP ", bigDecimal1, bigDecimal0, "?%*", double0, double0);
      BigDecimal bigDecimal2 = quoteData0.getGain();
      assertEquals("?%*", quoteData0.getCompanyName());
      assertEquals("yJ5DP ", quoteData0.getSymbol());
      assertEquals((short) (-532), bigDecimal2.shortValue());
      assertEquals("532-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "D4LWdp");
      String string0 = quoteData0.getCompanyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "_As/a%");
      quoteData0.setCompanyName("_As/a%");
      String string0 = quoteData0.getCompanyName();
      assertEquals("_As/a%", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(3514.23561286);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#ff0000\">", bigDecimal0, bigDecimal0, "<FONT color=\"#ff0000\">", double0, double0);
      double double1 = quoteData0.getChange();
      assertEquals("0-0", quoteData0.getRange());
      assertEquals(3514.23561286, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = Double.valueOf((-206.14768818877));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      double double1 = quoteData0.getChange();
      assertEquals("0-0", quoteData0.getRange());
      assertEquals((-206.14768818877), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.valueOf((-727L), 1836);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "&J;V)$dn6pF");
      // Undeclared exception!
      try { 
        quoteData0.setGainPercent(bigDecimal0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "q:<l~?oud+5W");
      // Undeclared exception!
      try { 
        quoteData0.getGainHTML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.util.FinancialUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      QuoteData quoteData0 = null;
      try {
        quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", (Double) null, (Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.QuoteData", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(2959.9428871263094);
      BigDecimal bigDecimal1 = new BigDecimal((-449));
      Double double0 = new Double(2959.9428871263094);
      QuoteData quoteData0 = null;
      try {
        quoteData0 = new QuoteData(bigDecimal0, bigDecimal1, " f0KCD_e~$gL)O7rO", bigDecimal1, bigDecimal1, " f0KCD_e~$gL)O7rO", double0, double0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      QuoteData quoteData0 = null;
      try {
        quoteData0 = new QuoteData((BigDecimal) null, (BigDecimal) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.QuoteData", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      BigDecimal bigDecimal1 = new BigDecimal((-285.57));
      QuoteData quoteData0 = null;
      try {
        quoteData0 = new QuoteData(bigDecimal1, bigDecimal0, "arrowdown.gif");
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-1498), mathContext0);
      Double double0 = new Double((-1498));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#cc0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      String string0 = quoteData0.getChangeHTML();
      assertEquals("<FONT color=\"#cc0000\">-1498.00</FONT><IMG src=\"images/arrowdown.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", string0);
      assertEquals("1.0E+1499-1.0E+1499", quoteData0.getRange());
      assertEquals("", quoteData0.getCompanyName());
      assertEquals("<FONT color=\"#cc0000\">", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      String string0 = quoteData0.getChangeHTML();
      assertEquals("<FONT color=\"#009900\">0.00</FONT><IMG src=\"images/arrowup.gif\" width=\"10\" height=\"10\" border=\"0\"></IMG>", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-1498), mathContext0);
      Double double0 = new Double((-1498));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#cc0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      String string0 = quoteData0.getRange();
      assertEquals("", quoteData0.getCompanyName());
      assertEquals("<FONT color=\"#cc0000\">", quoteData0.getSymbol());
      assertEquals("1.0E+1499-1.0E+1499", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-1498), mathContext0);
      Double double0 = new Double((-1498));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#cc0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.setLow(bigDecimal0);
      assertEquals("", quoteData0.getCompanyName());
      assertEquals("1.0E+1499-1.0E+1499", quoteData0.getRange());
      assertEquals("<FONT color=\"#cc0000\">", quoteData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "_As/a%");
      quoteData0.setOpen(bigDecimal0);
      assertEquals(0.0, quoteData0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(532L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "yJ5DP ", bigDecimal0, bigDecimal0, "?%*", double0, double0);
      quoteData0.getHigh();
      assertEquals("0-0", quoteData0.getRange());
      assertEquals("yJ5DP ", quoteData0.getSymbol());
      assertEquals("?%*", quoteData0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "_As/a%");
      double double0 = quoteData0.getVolume();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-3343));
      Double double0 = new Double((-1.0));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, (String) null, bigDecimal0, bigDecimal0, (String) null, double0, double0);
      quoteData0.getSymbol();
      assertEquals("-3343--3343", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(1954.0030618122144);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getCompanyName();
      assertEquals("10-10", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-1498), mathContext0);
      Double double0 = new Double((-1498));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#cc0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getOpen();
      assertEquals("1.0E+1499-1.0E+1499", quoteData0.getRange());
      assertEquals("<FONT color=\"#cc0000\">", quoteData0.getSymbol());
      assertEquals("", quoteData0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "&");
      quoteData0.setVolume(1745.25);
      assertEquals(1745.25, quoteData0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, (String) null);
      // Undeclared exception!
      try { 
        quoteData0.setGainPercent((BigDecimal) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.QuoteData", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      double double0 = quoteData0.getChange();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-1498), mathContext0);
      Double double0 = new Double((-1498));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#cc0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getPrice();
      assertEquals("<FONT color=\"#cc0000\">", quoteData0.getSymbol());
      assertEquals("", quoteData0.getCompanyName());
      assertEquals("1.0E+1499-1.0E+1499", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-1498), mathContext0);
      Double double0 = new Double((-1498));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#cc0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getGainPercent();
      assertEquals("<FONT color=\"#cc0000\">", quoteData0.getSymbol());
      assertEquals("", quoteData0.getCompanyName());
      assertEquals("1.0E+1499-1.0E+1499", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(532L);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "yJ5DP ", bigDecimal0, bigDecimal0, "?%*", double0, double0);
      BigDecimal bigDecimal1 = quoteData0.getGain();
      assertNotSame(bigDecimal1, bigDecimal0);
      assertEquals("yJ5DP ", quoteData0.getSymbol());
      assertEquals("?%*", quoteData0.getCompanyName());
      assertEquals("0-0", quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-1498), mathContext0);
      Double double0 = new Double((-1498));
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "<FONT color=\"#cc0000\">", bigDecimal0, bigDecimal0, "", double0, double0);
      quoteData0.getGainHTML();
      assertEquals("1.0E+1499-1.0E+1499", quoteData0.getRange());
      assertEquals("<FONT color=\"#cc0000\">", quoteData0.getSymbol());
      assertEquals("", quoteData0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      quoteData0.setSymbol("");
      assertNull(quoteData0.getRange());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, (String) null);
      quoteData0.setHigh(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "_As/a%");
      // Undeclared exception!
      try { 
        quoteData0.getGainPercentHTML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.util.FinancialUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      quoteData0.setRange("");
      String string0 = quoteData0.getRange();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "(B!2TD~Qo|$S(");
      quoteData0.setPrice(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "");
      quoteData0.setChange(100.0);
      assertEquals(100.0, quoteData0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-3460));
      Double double0 = new Double(0.0);
      QuoteData quoteData0 = new QuoteData(bigDecimal0, bigDecimal0, "uc%^u,CA&+0I~s", bigDecimal0, bigDecimal0, "<A href=\"app?action=quotes&symbols=", double0, double0);
      quoteData0.getLow();
      assertEquals("-3460--3460", quoteData0.getRange());
      assertEquals("uc%^u,CA&+0I~s", quoteData0.getSymbol());
      assertEquals("<A href=\"app?action=quotes&symbols=", quoteData0.getCompanyName());
  }
}
