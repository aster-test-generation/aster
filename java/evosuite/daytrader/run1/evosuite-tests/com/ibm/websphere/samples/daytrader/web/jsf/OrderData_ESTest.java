/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 15:51:38 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.web.jsf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.web.jsf.OrderData;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrderData_ESTest extends OrderData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-1554.155075165), "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", bigDecimal0);
      BigDecimal bigDecimal1 = orderData0.getTotal();
      assertEquals((short) (-1554), bigDecimal1.shortValue());
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals((-1554.155075165), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", 0.3549, "", bigDecimal0);
      orderData0.getTotal();
      assertEquals(0.3549, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(1828);
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "gP!E3.C}4d%a#aS/iJ", mockDate0, mockDate0, bigDecimal0, "gP!E3.C}4d%a#aS/iJ", 1.0, "gP!E3.C}4d%a#aS/iJ", bigDecimal0);
      BigDecimal bigDecimal1 = orderData0.getTotal();
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals(1.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-671));
      MockDate mockDate0 = new MockDate(0, (-671), 0, 0, 0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, (String) null, (-671), (String) null, bigDecimal0);
      String string0 = orderData0.getSymbol();
      assertEquals((-671.0), orderData0.getQuantity(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-671));
      MockDate mockDate0 = new MockDate(0, (-671), 0, (-1344), (-1344));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 3950.9562945, "RKD@NMH|?,)<", bigDecimal0);
      String string0 = orderData0.getSymbol();
      assertEquals(3950.9562945, orderData0.getQuantity(), 0.01);
      assertEquals("RKD@NMH|?,)<", string0);
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-671));
      MockDate mockDate0 = new MockDate(0, (-671), 0, (-1344), (-1344));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 3950.9562945, "RKD@NMH|?,)<", bigDecimal0);
      double double0 = orderData0.getQuantity();
      assertEquals("RKD@NMH|?,)<", orderData0.getSymbol());
      assertEquals(3950.9562945, double0, 0.01);
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-97));
      MockDate mockDate0 = new MockDate((-97), 0, (-1709));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "=p}muiMt&\"3WV ;H@wN", mockDate0, mockDate0, bigDecimal0, "D=w6$$L2N%qWbHCzG", (-1709), "", bigDecimal0);
      double double0 = orderData0.getQuantity();
      assertEquals("", orderData0.getSymbol());
      assertEquals("D=w6$$L2N%qWbHCzG", orderData0.getOrderType());
      assertEquals((-1709.0), double0, 0.01);
      assertEquals("=p}muiMt&\"3WV ;H@wN", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-3045));
      MockDate mockDate0 = new MockDate(0, (-3045), (-1), (-680), 0, (-1));
      BigDecimal bigDecimal0 = new BigDecimal((long) (-3045));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, (Date) null, bigDecimal0, "", 0, ";`v");
      orderData0.getPrice();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals(";`v", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, (-5));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", mockDate0, mockDate0, bigDecimal0, "", 0.0, "", bigDecimal0);
      orderData0.getPrice();
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderStatus());
      assertEquals("", orderData0.getSymbol());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1);
      MockDate mockDate0 = new MockDate(1, 1, 1);
      BigDecimal bigDecimal0 = BigDecimal.valueOf((-1152.319401718531));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", (-1152.319401718531), "]Ih !+fs({8", bigDecimal0);
      orderData0.getPrice();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals((-1152.319401718531), orderData0.getQuantity(), 0.01);
      assertEquals("]Ih !+fs({8", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-97));
      MockDate mockDate0 = new MockDate((-97), 0, (-1709));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "=p}muiMt&\"3WV ;H@wN", mockDate0, mockDate0, bigDecimal0, "D=w6$$L2N%qWbHCzG", (-1709), "", bigDecimal0);
      String string0 = orderData0.getOrderType();
      assertEquals("D=w6$$L2N%qWbHCzG", string0);
      assertEquals("=p}muiMt&\"3WV ;H@wN", orderData0.getOrderStatus());
      assertEquals((-1709.0), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, (-5));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", mockDate0, mockDate0, bigDecimal0, "", 0.0, "", bigDecimal0);
      String string0 = orderData0.getOrderType();
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderStatus());
      assertEquals("", string0);
      assertEquals("", orderData0.getSymbol());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, (-5));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, ";G~xl(+a:;8JH?", (-892.5380149195694), "]\"", bigDecimal0);
      String string0 = orderData0.getOrderStatus();
      assertNull(string0);
      assertEquals(";G~xl(+a:;8JH?", orderData0.getOrderType());
      assertEquals((-892.5380149195694), orderData0.getQuantity(), 0.01);
      assertEquals("]\"", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, (-5));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", mockDate0, mockDate0, bigDecimal0, "", 0.0, "", bigDecimal0);
      String string0 = orderData0.getOrderStatus();
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", string0);
      assertEquals("", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(1828);
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "gP!E3.C}4d%a#aS/iJ", mockDate0, mockDate0, bigDecimal0, "gP!E3.C}4d%a#aS/iJ", 1.0, "gP!E3.C}4d%a#aS/iJ", bigDecimal0);
      orderData0.getOrderID();
      assertEquals(1.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", 0.3549, "", bigDecimal0);
      orderData0.getOrderID();
      assertEquals(0.3549, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-97));
      MockDate mockDate0 = new MockDate((-97), 0, (-1709));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "=p}muiMt&\"3WV ;H@wN", mockDate0, mockDate0, bigDecimal0, "D=w6$$L2N%qWbHCzG", (-1709), "", bigDecimal0);
      orderData0.getOrderID();
      assertEquals("", orderData0.getSymbol());
      assertEquals("=p}muiMt&\"3WV ;H@wN", orderData0.getOrderStatus());
      assertEquals((-1709.0), orderData0.getQuantity(), 0.01);
      assertEquals("D=w6$$L2N%qWbHCzG", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer((-1909));
      MockDate mockDate0 = new MockDate((-1909), 0, (-1909), (-1909), (-534), (-3496));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "(P=T{A,d#XC=", mockDate0, mockDate0, bigDecimal0, "(P=T{A,d#XC=", 0.0, "(P=T{A,d#XC=");
      orderData0.setOrderFee((BigDecimal) null);
      orderData0.getOrderFee();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-1.0), "", bigDecimal0);
      orderData0.getOrderFee();
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, (-5));
      BigDecimal bigDecimal0 = new BigDecimal((long) (-5));
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, ";G~xl(+a:;8JH?", (-892.5380149195694), "]\"", bigDecimal0);
      orderData0.getOrderFee();
      assertEquals("]\"", orderData0.getSymbol());
      assertEquals((-892.5380149195694), orderData0.getQuantity(), 0.01);
      assertEquals(";G~xl(+a:;8JH?", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(1467);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      OrderData orderData0 = new OrderData(integer0, "\"&U?", (Date) null, (Date) null, bigDecimal0, "\"&U?", 0.0, "|O<X,Q2Ph9vkMF", bigDecimal0);
      orderData0.getOpenDate();
      assertEquals("|O<X,Q2Ph9vkMF", orderData0.getSymbol());
      assertEquals("\"&U?", orderData0.getOrderStatus());
      assertEquals("\"&U?", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer((-671));
      MockDate mockDate0 = new MockDate(0, (-671), 0, (-1344), (-1344));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "", 3950.9562945, "RKD@NMH|?,)<", bigDecimal0);
      orderData0.getCompletionDate();
      assertEquals("RKD@NMH|?,)<", orderData0.getSymbol());
      assertEquals(3950.9562945, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Integer integer0 = new Integer(0);
      OrderData orderData0 = null;
      try {
        orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, "", (-4465.596363920606), "", (BigDecimal) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", 0.0, "", bigDecimal0);
      orderData0.setCompletionDate(mockDate0);
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, (-5));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", mockDate0, mockDate0, bigDecimal0, "", 0.0, "", bigDecimal0);
      orderData0.getOrderID();
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderStatus());
      assertEquals("", orderData0.getOrderType());
      assertEquals("", orderData0.getSymbol());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer((-1909));
      MockDate mockDate0 = new MockDate((-1909), 0, (-1909), (-1909), (-534), (-3496));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "(P=T{A,d#XC=", mockDate0, mockDate0, bigDecimal0, "(P=T{A,d#XC=", 0.0, "(P=T{A,d#XC=");
      orderData0.setTotal(bigDecimal0);
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, (-5));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", mockDate0, mockDate0, bigDecimal0, "", 0.0, "", bigDecimal0);
      assertEquals("", orderData0.getSymbol());
      
      orderData0.setSymbol("");
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderType());
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer((-343));
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      OrderData orderData0 = new OrderData(integer0, "", (Date) null, date0, bigDecimal0, (String) null, 0.0, "yf*!DA{{");
      String string0 = orderData0.getOrderStatus();
      assertNotNull(string0);
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("yf*!DA{{", orderData0.getSymbol());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", 1.0, "", bigDecimal0);
      orderData0.setQuantity((-852.523191289947));
      assertEquals((-852.523191289947), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer((-1909));
      MockDate mockDate0 = new MockDate((-1909), 0, (-1909), (-1909), (-534), (-3496));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "(P=T{A,d#XC=", mockDate0, mockDate0, bigDecimal0, "(P=T{A,d#XC=", 0.0, "(P=T{A,d#XC=");
      orderData0.setOpenDate(mockDate0);
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Integer integer0 = new Integer((-343));
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      OrderData orderData0 = new OrderData(integer0, "", (Date) null, date0, bigDecimal0, (String) null, 0.0, "yf*!DA{{");
      double double0 = orderData0.getQuantity();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals(0.0, double0, 0.01);
      assertEquals("yf*!DA{{", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer((-343));
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      OrderData orderData0 = new OrderData(integer0, "", (Date) null, date0, bigDecimal0, (String) null, 0.0, "yf*!DA{{");
      String string0 = orderData0.getOrderType();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("yf*!DA{{", orderData0.getSymbol());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = new Integer((-343));
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      OrderData orderData0 = new OrderData(integer0, "", (Date) null, date0, bigDecimal0, (String) null, 0.0, "yf*!DA{{");
      orderData0.setOrderType((String) null);
      assertEquals("yf*!DA{{", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer((-1909));
      MockDate mockDate0 = new MockDate((-1909), 0, (-1909), (-1909), (-534), (-3496));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "(P=T{A,d#XC=", mockDate0, mockDate0, bigDecimal0, "(P=T{A,d#XC=", 0.0, "(P=T{A,d#XC=");
      orderData0.getTotal();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "s4", mockDate0, mockDate0, bigDecimal0, "s4", (-3833.2945795), "9#1j\"~3j5Qn8~|Bu", bigDecimal0);
      orderData0.getPrice();
      assertEquals("s4", orderData0.getOrderType());
      assertEquals("9#1j\"~3j5Qn8~|Bu", orderData0.getSymbol());
      assertEquals((-3833.2945795), orderData0.getQuantity(), 0.01);
      assertEquals("s4", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "s4", mockDate0, mockDate0, bigDecimal0, "s4", (-3833.2945795), "9#1j\"~3j5Qn8~|Bu", bigDecimal0);
      assertEquals("s4", orderData0.getOrderStatus());
      
      orderData0.setOrderStatus("");
      assertEquals("9#1j\"~3j5Qn8~|Bu", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer((-402));
      MockDate mockDate0 = new MockDate((-402), (-811), 0, (-811), (-811));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, (Date) null, bigDecimal0, "", 0.0, "Rj}/yRH!u", bigDecimal0);
      Date date0 = orderData0.getCompletionDate();
      assertNull(date0);
      assertEquals("Rj}/yRH!u", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0, 0, (-5));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, ";G~xl(+a:;8JH?", (-892.5380149195694), "]\"", bigDecimal0);
      orderData0.setOrderID((Integer) null);
      assertEquals((-892.5380149195694), orderData0.getQuantity(), 0.01);
      assertEquals("]\"", orderData0.getSymbol());
      assertEquals(";G~xl(+a:;8JH?", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Integer integer0 = new Integer((-1909));
      MockDate mockDate0 = new MockDate((-1909), 0, (-1909), (-1909), (-534), (-3496));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "(P=T{A,d#XC=", mockDate0, mockDate0, bigDecimal0, "(P=T{A,d#XC=", 0.0, "(P=T{A,d#XC=");
      orderData0.setPrice((BigDecimal) null);
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", 1.0, "", bigDecimal0);
      orderData0.getSymbol();
      assertEquals(1.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = new Integer((-1909));
      MockDate mockDate0 = new MockDate((-1909), 0, (-1909), (-1909), (-534), (-3496));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "(P=T{A,d#XC=", mockDate0, mockDate0, bigDecimal0, "(P=T{A,d#XC=", 0.0, "(P=T{A,d#XC=");
      orderData0.getOpenDate();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer((-1909));
      MockDate mockDate0 = new MockDate((-1909), 0, (-1909), (-1909), (-534), (-3496));
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      OrderData orderData0 = new OrderData(integer0, "(P=T{A,d#XC=", mockDate0, mockDate0, bigDecimal0, "(P=T{A,d#XC=", 0.0, "(P=T{A,d#XC=");
      orderData0.getOrderFee();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }
}
