/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 15:49:49 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.web.jsf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.util.TradeConfig;
import com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TradeConfigJSF_ESTest extends TradeConfigJSF_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setWebInterfaceList((String[]) null);
      // Undeclared exception!
      try { 
        tradeConfigJSF0.updateConfig();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setDisplayOrderAlerts(false);
      boolean boolean0 = tradeConfigJSF0.isDisplayOrderAlerts();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setWebInterfaceList((String[]) null);
      String[] stringArray0 = tradeConfigJSF0.getWebInterfaceList();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String[] stringArray0 = new String[0];
      tradeConfigJSF0.setWebInterfaceList(stringArray0);
      String[] stringArray1 = tradeConfigJSF0.getWebInterfaceList();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setWebInterface((String) null);
      String string0 = tradeConfigJSF0.getWebInterface();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setRuntimeModeList((String[]) null);
      String[] stringArray0 = tradeConfigJSF0.getRuntimeModeList();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setRuntimeMode("");
      String string0 = tradeConfigJSF0.getRuntimeMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setResult((String) null);
      String string0 = tradeConfigJSF0.getResult();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setPrimIterations(0);
      int int0 = tradeConfigJSF0.getPrimIterations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setPrimIterations((-2339));
      int int0 = tradeConfigJSF0.getPrimIterations();
      assertEquals((-2339), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setOrderProcessingModeList((String[]) null);
      String[] stringArray0 = tradeConfigJSF0.getOrderProcessingModeList();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String[] stringArray0 = new String[0];
      tradeConfigJSF0.setOrderProcessingModeList(stringArray0);
      String[] stringArray1 = tradeConfigJSF0.getOrderProcessingModeList();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setOrderProcessingMode((String) null);
      String string0 = tradeConfigJSF0.getOrderProcessingMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setOrderProcessingMode("");
      String string0 = tradeConfigJSF0.getOrderProcessingMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setMaxUsers(0);
      int int0 = tradeConfigJSF0.getMaxUsers();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setMaxUsers((-1994522441));
      int int0 = tradeConfigJSF0.getMaxUsers();
      assertEquals((-1994522441), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setmaxQuotes(0);
      int int0 = tradeConfigJSF0.getMaxQuotes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setmaxQuotes((-1199));
      int int0 = tradeConfigJSF0.getMaxQuotes();
      assertEquals((-1199), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setMarketSummaryInterval(0);
      int int0 = tradeConfigJSF0.getMarketSummaryInterval();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setMarketSummaryInterval((-1998));
      int int0 = tradeConfigJSF0.getMarketSummaryInterval();
      assertEquals((-1998), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setListQuotePriceChangeFrequency(0);
      int int0 = tradeConfigJSF0.getListQuotePriceChangeFrequency();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setListQuotePriceChangeFrequency((-1));
      int int0 = tradeConfigJSF0.getListQuotePriceChangeFrequency();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setOrderProcessingModeList((String[]) null);
      // Undeclared exception!
      try { 
        tradeConfigJSF0.updateConfig();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      TradeConfig.setRunTimeMode((-84));
      // Undeclared exception!
      try { 
        tradeConfigJSF0.updateConfig();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -84 out of bounds for length 3
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      // Undeclared exception!
      try { 
        tradeConfigJSF0.buildDatabaseTables();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TradeConfig.setOrderProcessingMode(115);
      TradeConfigJSF tradeConfigJSF0 = null;
      try {
        tradeConfigJSF0 = new TradeConfigJSF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 115 out of bounds for length 3
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setWebInterface((String) null);
      tradeConfigJSF0.updateConfig();
      assertEquals("Sync", tradeConfigJSF0.getOrderProcessingMode());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String string0 = tradeConfigJSF0.getWebInterface();
      assertEquals("JSP", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      int int0 = tradeConfigJSF0.getMaxQuotes();
      assertEquals(10000, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String[] stringArray0 = tradeConfigJSF0.getRuntimeModeList();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      // Undeclared exception!
      try { 
        tradeConfigJSF0.resetTrade();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // javax/faces/context/ExternalContext
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String string0 = tradeConfigJSF0.getResult();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String[] stringArray0 = new String[0];
      tradeConfigJSF0.setRuntimeModeList(stringArray0);
      String[] stringArray1 = tradeConfigJSF0.getRuntimeModeList();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      boolean boolean0 = tradeConfigJSF0.isLongRun();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setOrderProcessingMode((String) null);
      tradeConfigJSF0.updateConfig();
      assertEquals("DayTrader Configuration Updated", tradeConfigJSF0.getResult());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      int int0 = tradeConfigJSF0.getMarketSummaryInterval();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setRuntimeMode((String) null);
      String string0 = tradeConfigJSF0.getRuntimeMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      int int0 = tradeConfigJSF0.getListQuotePriceChangeFrequency();
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String[] stringArray0 = tradeConfigJSF0.getWebInterfaceList();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String[] stringArray0 = tradeConfigJSF0.getOrderProcessingModeList();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      int int0 = tradeConfigJSF0.getPrimIterations();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String string0 = tradeConfigJSF0.getRuntimeMode();
      assertEquals("Full EJB3", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setWebInterface("");
      String string0 = tradeConfigJSF0.getWebInterface();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      String string0 = tradeConfigJSF0.getOrderProcessingMode();
      assertEquals("Sync", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      boolean boolean0 = tradeConfigJSF0.isDisplayOrderAlerts();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setPublishQuotePriceChange(false);
      boolean boolean0 = tradeConfigJSF0.isPublishQuotePriceChange();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.setLongRun(false);
      boolean boolean0 = tradeConfigJSF0.isLongRun();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      int int0 = tradeConfigJSF0.getMaxUsers();
      assertEquals(15000, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      boolean boolean0 = tradeConfigJSF0.isPublishQuotePriceChange();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TradeConfigJSF tradeConfigJSF0 = new TradeConfigJSF();
      tradeConfigJSF0.populateDatabase();
      tradeConfigJSF0.getResult();
      assertEquals("TradeBuildDB: **** DayTrader Database Built - 15000 users created, 10000 quotes created. ****<br/>TradeBuildDB: **** Check System.Out for any errors. ****<br/>", tradeConfigJSF0.getResult());
  }
}
