/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:12:02 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.util.MDBStats;
import com.ibm.websphere.samples.daytrader.util.TimerStat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MDBStats_ESTest extends MDBStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      mDBStats0.addTiming("+OcQH'mg\"Ir7<Z", (-115L), (-115L));
      TimerStat timerStat0 = mDBStats0.addTiming("+OcQH'mg\"Ir7<Z", (-115L), (-115L));
      assertEquals(0.0, timerStat0.getAvgSecs(), 0.01);
      assertEquals(0.0, timerStat0.getMinSecs(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      mDBStats0.addTiming("", (-388L), 0L);
      MDBStats mDBStats1 = MDBStats.getInstance();
      assertFalse(mDBStats1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = mDBStats0.addTiming("", (-388L), 0L);
      assertEquals(0.388, timerStat0.getMaxSecs(), 0.01);
      
      timerStat0.setMax((-388L));
      TimerStat timerStat1 = mDBStats0.addTiming("", 0L, (-388L));
      assertEquals(0.0, timerStat1.getAvgSecs(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = mDBStats0.addTiming("com.ibm.websphere.samples.daytrader.util.MDBStats", 0L, (-2680L));
      assertEquals(1, timerStat0.getCount());
      
      timerStat0.setCount((-1));
      TimerStat timerStat1 = mDBStats0.addTiming("com.ibm.websphere.samples.daytrader.util.MDBStats", 0L, 0L);
      assertEquals((-2680.0), timerStat1.getTotalTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      TimerStat timerStat0 = mDBStats0.addTiming("", (-388L), 0L);
      timerStat0.setCount((-796));
      assertEquals((-4.8743718592964827E-4), timerStat0.getAvgSecs(), 0.01);
      
      TimerStat timerStat1 = mDBStats0.addTiming("", 0L, (-388L));
      assertEquals((-795), timerStat1.getCount());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      // Undeclared exception!
      try { 
        mDBStats0.addTiming((String) null, 2206L, 2206L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.util.MDBStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MDBStats mDBStats0 = MDBStats.getInstance();
      mDBStats0.reset();
      assertTrue(mDBStats0.isEmpty());
  }
}
