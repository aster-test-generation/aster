/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:20:40 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.entities;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.entities.QuoteDataBean;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteDataBean_ESTest extends QuoteDataBean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(112);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("Sync", "Sync", (-1078.429172535), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 112);
      quoteDataBean0.setVolume(1.0);
      double double0 = quoteDataBean0.getVolume();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(112);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("Sync", "Sync", (-1078.429172535), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 112);
      double double0 = quoteDataBean0.getVolume();
      assertEquals(112.0, quoteDataBean0.getChange(), 0.01);
      assertEquals((-1078.429172535), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      String string0 = quoteDataBean0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("", "precision=34 roundingMode=HALF_EVEN", 0.0, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 0L);
      String string0 = quoteDataBean0.getSymbol();
      assertEquals(0.0, quoteDataBean0.getChange(), 0.01);
      assertEquals(0.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("", string0);
      assertEquals("precision=34 roundingMode=HALF_EVEN", quoteDataBean0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Random.setNextRandom(3163);
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      assertEquals(50000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:2999", quoteDataBean0.getSymbol());
      assertEquals("s:3999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals(0.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Random.setNextRandom((-2147483645));
      QuoteDataBean.getRandomInstance();
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      assertEquals("s:-1999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals((-10000.0), quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:-2999", quoteDataBean0.getSymbol());
      assertEquals((-60000.0), quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("", "precision=34 roundingMode=HALF_EVEN", 0.0, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 0L);
      quoteDataBean0.getPrice();
      assertEquals(0.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("precision=34 roundingMode=HALF_EVEN", quoteDataBean0.getCompanyName());
      assertEquals("", quoteDataBean0.getSymbol());
      assertEquals(0.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(112);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("Sync", "Sync", (-1078.429172535), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 112);
      quoteDataBean0.getPrice();
      assertEquals(112.0, quoteDataBean0.getChange(), 0.01);
      assertEquals((-1078.429172535), quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("g", "$ZI<7{{[V(TY8$D^", 0.0, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 0.1);
      BigDecimal bigDecimal1 = new BigDecimal((-346));
      quoteDataBean0.setPrice(bigDecimal1);
      quoteDataBean0.getPrice();
      assertEquals(0.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals(0.1, quoteDataBean0.getChange(), 0.01);
      assertEquals("g", quoteDataBean0.getSymbol());
      assertEquals("$ZI<7{{[V(TY8$D^", quoteDataBean0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("t");
      BigDecimal bigDecimal0 = quoteDataBean0.getOpen();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QuoteDataBean.getRandomInstance();
      QuoteDataBean.getRandomInstance();
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = quoteDataBean0.getOpen();
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(80000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals(30000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals("s:6999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals("s:5999", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("", "", (-119.9897996003479), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 0.1);
      quoteDataBean0.getOpen();
      assertEquals(0.1, quoteDataBean0.getChange(), 0.01);
      assertEquals((-119.9897996003479), quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      quoteDataBean0.setLow(bigDecimal0);
      quoteDataBean0.getLow();
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals("s:0", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(112);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("Sync", "Sync", (-1078.429172535), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 112);
      quoteDataBean0.getLow();
      assertEquals(112.0, quoteDataBean0.getChange(), 0.01);
      assertEquals((-1078.429172535), quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("", "", (-119.9897996003479), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 0.1);
      BigDecimal bigDecimal1 = new BigDecimal((-346));
      quoteDataBean0.setLow(bigDecimal1);
      quoteDataBean0.getLow();
      assertEquals((-119.9897996003479), quoteDataBean0.getVolume(), 0.01);
      assertEquals(0.1, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      BigDecimal bigDecimal1 = new BigDecimal((long) (-346));
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("", "", (-85.21415925119), bigDecimal1, bigDecimal0, bigDecimal0, bigDecimal1, (-124.99132331));
      BigDecimal bigDecimal2 = quoteDataBean0.getHigh();
      assertEquals((-85.21415925119), quoteDataBean0.getVolume(), 0.01);
      assertEquals((-124.99132331), quoteDataBean0.getChange(), 0.01);
      assertEquals((byte) (-90), bigDecimal2.byteValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("</LI><LI>         low: ", "</LI><LI>         low: ", 0.0, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 2887.39110556284);
      quoteDataBean0.getHigh();
      assertEquals(0.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals(2887.39110556284, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = quoteDataBean0.getHigh();
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals((short)600, bigDecimal0.shortValue());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      String string0 = quoteDataBean0.getCompanyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      double double0 = quoteDataBean0.getChange();
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals(70000.0, double0, 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("6", "1]E9DrSW$cG", (-438.801), bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, (-0.593575041472849));
      double double0 = quoteDataBean0.getChange();
      assertEquals("6", quoteDataBean0.getSymbol());
      assertEquals((-438.801), quoteDataBean0.getVolume(), 0.01);
      assertEquals("1]E9DrSW$cG", quoteDataBean0.getCompanyName());
      assertEquals((-0.593575041472849), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("AAlX");
      double double0 = quoteDataBean0.getVolume();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("t");
      BigDecimal bigDecimal0 = quoteDataBean0.getLow();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("");
      quoteDataBean0.setCompanyName("");
      String string0 = quoteDataBean0.getCompanyName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("");
      double double0 = quoteDataBean0.getChange();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("");
      BigDecimal bigDecimal0 = quoteDataBean0.getHigh();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      quoteDataBean0.setChange(473.17792887924);
      assertEquals(473.17792887924, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      BigDecimal bigDecimal0 = BigDecimal.valueOf((-1L));
      quoteDataBean0.setOpen(bigDecimal0);
      quoteDataBean0.getOpen();
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      assertEquals("s:0", quoteDataBean0.getSymbol());
      
      quoteDataBean0.setSymbol("s:7999");
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      String string0 = quoteDataBean0.toString();
      assertEquals("\n\tQuote Data for: s:0\n\t\t companyName: s:999 Incorporated\n\t\t      volume: 20000.0\n\t\t       price: 300.00\n\t\t        open1: 400.00\n\t\t         low: 500.00\n\t\t        high: 600.00\n\t\t      change1: 70000.0", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      String string0 = quoteDataBean0.getCompanyName();
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals("s:999 Incorporated", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      String string0 = quoteDataBean0.getSymbol();
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals("s:0", string0);
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      quoteDataBean0.setHigh((BigDecimal) null);
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertEquals("s:0", quoteDataBean0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      Random.setNextRandom(530);
      QuoteDataBean quoteDataBean1 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean0.equals(quoteDataBean1);
      assertTrue(boolean0);
      assertEquals("s:0", quoteDataBean1.getSymbol());
      assertEquals(70000.0, quoteDataBean1.getChange(), 0.01);
      assertEquals(20000.0, quoteDataBean1.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean1.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      QuoteDataBean quoteDataBean1 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean0.equals(quoteDataBean1);
      assertFalse(boolean0);
      assertEquals(70000.0, quoteDataBean1.getChange(), 0.01);
      assertEquals("s:0", quoteDataBean1.getSymbol());
      assertEquals(20000.0, quoteDataBean1.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean1.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      QuoteDataBean quoteDataBean1 = new QuoteDataBean();
      boolean boolean0 = quoteDataBean0.equals(quoteDataBean1);
      assertFalse(boolean0);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean0.equals("0");
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertFalse(boolean0);
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      boolean boolean0 = quoteDataBean0.equals(quoteDataBean0);
      assertEquals(70000.0, quoteDataBean0.getChange(), 0.01);
      assertEquals("s:0", quoteDataBean0.getSymbol());
      assertEquals(20000.0, quoteDataBean0.getVolume(), 0.01);
      assertEquals("s:999 Incorporated", quoteDataBean0.getCompanyName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("</LI><LI>         low: ", "</LI><LI>         low: ", 0.0, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 2887.39110556284);
      quoteDataBean0.hashCode();
      assertEquals(2887.39110556284, quoteDataBean0.getChange(), 0.01);
      assertEquals(0.0, quoteDataBean0.getVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean("");
      BigDecimal bigDecimal0 = quoteDataBean0.getPrice();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      String string0 = quoteDataBean0.toHTML();
      assertEquals("<BR>Quote Data for: s:0<LI> companyName: s:999 Incorporated</LI><LI>      volume: 20000.0</LI><LI>       price: 300.00</LI><LI>        open1: 400.00</LI><LI>         low: 500.00</LI><LI>        high: 600.00</LI><LI>      change1: 70000.0</LI>", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = new QuoteDataBean();
      quoteDataBean0.hashCode();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      QuoteDataBean quoteDataBean0 = QuoteDataBean.getRandomInstance();
      // Undeclared exception!
      try { 
        quoteDataBean0.print();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }
}
