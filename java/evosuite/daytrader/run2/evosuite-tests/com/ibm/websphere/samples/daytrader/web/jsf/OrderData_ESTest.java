/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 15:52:29 GMT 2024
 */

package com.ibm.websphere.samples.daytrader.web.jsf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.websphere.samples.daytrader.web.jsf.OrderData;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrderData_ESTest extends OrderData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), (-1), (-1));
      MockDate mockDate1 = new MockDate((-1), 1, 1);
      BigDecimal bigDecimal0 = new BigDecimal((double) (-1));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate1, bigDecimal0, "<0)", (-1), "<0)", bigDecimal0);
      assertEquals("", orderData0.getOrderStatus());
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
      assertEquals("<0)", orderData0.getSymbol());
      assertEquals("<0)", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-2012));
      MockDate mockDate0 = new MockDate();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      OrderData orderData0 = new OrderData(integer0, "`j", mockDate0, mockDate0, bigDecimal0, "", (-2012), "~10+36:T!A4OXNMuS@.", bigDecimal0);
      orderData0.getTotal();
      assertEquals((-2012.0), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderType());
      assertEquals("`j", orderData0.getOrderStatus());
      assertEquals("~10+36:T!A4OXNMuS@.", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), (-1), (-1));
      BigDecimal bigDecimal0 = new BigDecimal((double) (-1));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "<0)", (-1), "<0)", bigDecimal0);
      BigDecimal bigDecimal1 = orderData0.getTotal();
      assertEquals((short)1, bigDecimal1.shortValue());
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
      assertEquals("<0)", orderData0.getSymbol());
      assertEquals("<0)", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(715);
      MockDate mockDate0 = new MockDate(715, (-1894), (-1));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "!w#&~X?{", (-873.96467613), "", bigDecimal0);
      BigDecimal bigDecimal1 = orderData0.getTotal();
      assertEquals((-873.96467613), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("", orderData0.getSymbol());
      assertEquals("!w#&~X?{", orderData0.getOrderType());
      assertEquals((byte) (-35), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-491));
      byte[] byteArray0 = new byte[9];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (byte)0);
      MockDate mockDate0 = new MockDate(270, 0, (byte)0, 1, 0);
      OrderData orderData0 = new OrderData(integer0, ">sGhV#", mockDate0, mockDate0, bigDecimal0, "tGlJ);39[#k", (byte)0, "b%sYOwCMZ+t05ga}T", bigDecimal0);
      assertEquals("b%sYOwCMZ+t05ga}T", orderData0.getSymbol());
      
      orderData0.setSymbol((String) null);
      orderData0.getSymbol();
      assertEquals("tGlJ);39[#k", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals(">sGhV#", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, (Date) null, bigDecimal0, "w}I('bF5H~+X", 0.0, "");
      String string0 = orderData0.getSymbol();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("", string0);
      assertEquals("w}I('bF5H~+X", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(3934);
      MockDate mockDate0 = new MockDate((-577), (-577), (-577));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "X", mockDate0, mockDate0, bigDecimal0, "X", 3934, "X");
      orderData0.setQuantity(0.0);
      double double0 = orderData0.getQuantity();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-3492L), "=", bigDecimal0);
      double double0 = orderData0.getQuantity();
      assertEquals("=", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals((-3492.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "|*8X3Qx;upA6>", date0, date0, bigDecimal0, "", (-1006L), "?Sh", bigDecimal0);
      orderData0.getPrice();
      assertEquals("", orderData0.getOrderType());
      assertEquals("|*8X3Qx;upA6>", orderData0.getOrderStatus());
      assertEquals((-1006.0), orderData0.getQuantity(), 0.01);
      assertEquals("?Sh", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-3492L), "=", bigDecimal0);
      orderData0.getPrice();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("", orderData0.getOrderType());
      assertEquals("=", orderData0.getSymbol());
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), (-1), (-1));
      BigDecimal bigDecimal0 = new BigDecimal((double) (-1));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "<0)", (-1), "<0)", bigDecimal0);
      orderData0.getPrice();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("<0)", orderData0.getOrderType());
      assertEquals("<0)", orderData0.getSymbol());
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1L);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, (String) null, (-3492L), "", bigDecimal0);
      String string0 = orderData0.getOrderType();
      assertNull(string0);
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), (-1), (-1));
      BigDecimal bigDecimal0 = new BigDecimal((double) (-1));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "<0)", (-1), "<0)", bigDecimal0);
      String string0 = orderData0.getOrderType();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
      assertEquals("<0)", orderData0.getSymbol());
      assertEquals("<0)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = Integer.getInteger("/eO@'{O.G\"y <j]y\"", 0);
      MockDate mockDate0 = new MockDate(0, 0, 0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      OrderData orderData0 = new OrderData(integer0, (String) null, mockDate0, mockDate0, bigDecimal0, (String) null, 0.0, "yUm]aZ=M!<{O!E#", bigDecimal0);
      String string0 = orderData0.getOrderStatus();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(0L);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData(integer0, "HTvbGx+\"rH", mockDate0, mockDate0, bigDecimal0, (String) null, 5553.993977880095, "", bigDecimal0);
      orderData0.getOrderID();
      assertEquals("HTvbGx+\"rH", orderData0.getOrderStatus());
      assertEquals("", orderData0.getSymbol());
      assertEquals(5553.993977880095, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "|*8X3Qx;upA6>", date0, date0, bigDecimal0, "", (-1006L), "?Sh", bigDecimal0);
      orderData0.getOrderID();
      assertEquals((-1006.0), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderType());
      assertEquals("|*8X3Qx;upA6>", orderData0.getOrderStatus());
      assertEquals("?Sh", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), (-1), (-1));
      BigDecimal bigDecimal0 = new BigDecimal((double) (-1));
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, bigDecimal0, "<0)", (-1), "<0)", bigDecimal0);
      orderData0.getOrderID();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals((-1.0), orderData0.getQuantity(), 0.01);
      assertEquals("<0)", orderData0.getSymbol());
      assertEquals("<0)", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "|*8X3Qx;upA6>", date0, date0, bigDecimal0, "", (-1006L), "?Sh", bigDecimal0);
      orderData0.getOrderFee();
      assertEquals("|*8X3Qx;upA6>", orderData0.getOrderStatus());
      assertEquals((-1006.0), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderType());
      assertEquals("?Sh", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-3492L), "", bigDecimal0);
      orderData0.getOrderFee();
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer((-1883));
      Instant instant0 = MockInstant.ofEpochMilli(0L);
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = new BigDecimal((-1883));
      OrderData orderData0 = new OrderData(integer0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", date0, date0, bigDecimal0, "com.ibm.websphere.samples.daytrader.web.jsf.OrderData", 1629.9147, "", bigDecimal0);
      orderData0.getOrderFee();
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderType());
      assertEquals("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", orderData0.getOrderStatus());
      assertEquals("", orderData0.getSymbol());
      assertEquals(1629.9147, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer((-3154));
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      OrderData orderData0 = new OrderData(integer0, "cFQ4V/Kgp:E{}EF`mf}", (Date) null, (Date) null, bigDecimal0, "cFQ4V/Kgp:E{}EF`mf}", (-1040.3), "cFQ4V/Kgp:E{}EF`mf}");
      orderData0.getOpenDate();
      assertEquals((-1040.3), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "?=", mockDate0, mockDate0, bigDecimal0, "?=", (-1906.0), "?=", bigDecimal0);
      orderData0.getCompletionDate();
      assertEquals((-1906.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderData orderData0 = null;
      try {
        orderData0 = new OrderData((Integer) null, "CM~kxfCo<? |H+mMe", mockDate0, mockDate0, bigDecimal0, "CM~kxfCo<? |H+mMe", 0L, "CM~kxfCo<? |H+mMe", (BigDecimal) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.websphere.samples.daytrader.web.jsf.OrderData", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-3492L), "", bigDecimal0);
      orderData0.setCompletionDate(mockDate0);
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, (Date) null, bigDecimal0, "w}I('bF5H~+X", 0.0, "");
      orderData0.getOrderID();
      assertEquals("", orderData0.getSymbol());
      assertEquals("w}I('bF5H~+X", orderData0.getOrderType());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "|*8X3Qx;upA6>", date0, date0, bigDecimal0, "", (-1006L), "?Sh", bigDecimal0);
      orderData0.setTotal(bigDecimal0);
      assertEquals((-1006.0), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderType());
      assertEquals("|*8X3Qx;upA6>", orderData0.getOrderStatus());
      assertEquals("?Sh", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer(3934);
      MockDate mockDate0 = new MockDate((-577), (-577), (-577));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "X", mockDate0, mockDate0, bigDecimal0, "X", 3934, "X");
      orderData0.setOrderFee(bigDecimal0);
      assertEquals(3934.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "|*8X3Qx;upA6>", date0, date0, bigDecimal0, "", (-1006L), "?Sh", bigDecimal0);
      String string0 = orderData0.getOrderStatus();
      assertEquals("", orderData0.getOrderType());
      assertEquals("|*8X3Qx;upA6>", string0);
      assertEquals("?Sh", orderData0.getSymbol());
      assertEquals((-1006.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "|*8X3Qx;upA6>", date0, date0, bigDecimal0, "", (-1006L), "?Sh", bigDecimal0);
      orderData0.setOpenDate(date0);
      assertEquals("?Sh", orderData0.getSymbol());
      assertEquals((-1006.0), orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderType());
      assertEquals("|*8X3Qx;upA6>", orderData0.getOrderStatus());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer(3934);
      MockDate mockDate0 = new MockDate((-577), (-577), (-577));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "X", mockDate0, mockDate0, bigDecimal0, "X", 3934, "X");
      double double0 = orderData0.getQuantity();
      assertEquals(3934.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-3492L), "", bigDecimal0);
      orderData0.getOrderType();
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-3492L), "=", bigDecimal0);
      assertEquals("", orderData0.getOrderType());
      
      orderData0.setOrderType("=");
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, (Date) null, bigDecimal0, "w}I('bF5H~+X", 0.0, "");
      orderData0.getTotal();
      assertEquals("w}I('bF5H~+X", orderData0.getOrderType());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, (Date) null, bigDecimal0, "w}I('bF5H~+X", 0.0, "");
      orderData0.getPrice();
      assertEquals("w}I('bF5H~+X", orderData0.getOrderType());
      assertEquals("", orderData0.getSymbol());
      assertEquals("", orderData0.getOrderStatus());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      OrderData orderData0 = new OrderData(integer0, "|*8X3Qx;upA6>", date0, date0, bigDecimal0, "", (-1006L), "?Sh", bigDecimal0);
      assertEquals("|*8X3Qx;upA6>", orderData0.getOrderStatus());
      
      orderData0.setOrderStatus("");
      orderData0.getOrderStatus();
      assertEquals("?Sh", orderData0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, (Date) null, bigDecimal0, "w}I('bF5H~+X", 0.0, "");
      Date date0 = orderData0.getCompletionDate();
      assertEquals("", orderData0.getOrderStatus());
      assertEquals("w}I('bF5H~+X", orderData0.getOrderType());
      assertEquals("", orderData0.getSymbol());
      assertNull(date0);
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-3492L), "", bigDecimal0);
      orderData0.setOrderID((Integer) null);
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, (Date) null, bigDecimal0, "w}I('bF5H~+X", 0.0, "");
      orderData0.setPrice(bigDecimal0);
      assertEquals("", orderData0.getOrderStatus());
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
      assertEquals("", orderData0.getSymbol());
      assertEquals("w}I('bF5H~+X", orderData0.getOrderType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "CiX9KHDU", mockDate0, mockDate0, bigDecimal0, "CiX9KHDU", (-3492L), "CiX9KHDU", bigDecimal0);
      orderData0.getSymbol();
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3492L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      OrderData orderData0 = new OrderData((Integer) null, "", mockDate0, mockDate0, bigDecimal0, "", (-3492L), "", bigDecimal0);
      orderData0.getOpenDate();
      assertEquals((-3492.0), orderData0.getQuantity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = new Integer(477);
      MockDate mockDate0 = new MockDate();
      OrderData orderData0 = new OrderData(integer0, "", mockDate0, mockDate0, (BigDecimal) null, "", 0.0, "");
      orderData0.getOrderFee();
      assertEquals(0.0, orderData0.getQuantity(), 0.01);
  }
}
