/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:15:17 GMT 2024
 */

package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.eclipse.cargotracker.domain.model.cargo.Cargo;
import org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler.CargoRouteDtoAssembler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CargoRouteDtoAssembler_ESTest extends CargoRouteDtoAssembler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Cargo cargo0 = new Cargo();
      CargoRouteDtoAssembler cargoRouteDtoAssembler0 = new CargoRouteDtoAssembler();
      // Undeclared exception!
      try { 
        cargoRouteDtoAssembler0.toDto(cargo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler.CargoRouteDtoAssembler", e);
      }
  }
}
