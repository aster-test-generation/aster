/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:07:58 GMT 2024
 */

package org.eclipse.cargotracker.interfaces.booking.facade.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.Location;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Leg_ESTest extends Leg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Location location0 = new Location("", (String) null);
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg((String) null, location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getVoyageNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Location location0 = new Location("cRef{?Be1R+ QLj", "cRef{?Be1R+ QLj");
      Clock clock0 = MockClock.systemUTC();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getVoyageNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Location location1 = new Location((String) null, (String) null);
      Leg leg0 = new Leg("", location0, location1, localDateTime0, localDateTime0);
      leg0.getToUnLocode();
      assertEquals("Leg{voyageNumber=, from=, to=null, loadTime=2/15/2014 2:21 PM, unloadTime=2/15/2014 2:21 PM}", leg0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Location location0 = new Location("]{cG)]G9{MF9fb&Ogm", "q(FCJ?fw%52c3IU");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("]{cG)]G9{MF9fb&Ogm", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getToUnLocode();
      assertEquals("]{cG)]G9{MF9fb&Ogm", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Location location0 = new Location("", (String) null);
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("qIw", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getToName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Location location0 = new Location("", "");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getToName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Location location0 = new Location((String) null, (String) null);
      Leg leg0 = new Leg((String) null, location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getFromUnLocode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Location location0 = new Location("]{cG)]G9{MF9fb&Ogm", "q(FCJ?fw%52c3IU");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("]{cG)]G9{MF9fb&Ogm", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getFromUnLocode();
      assertEquals("]{cG)]G9{MF9fb&Ogm", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Location location0 = new Location("", (String) null);
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg((String) null, location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getFromName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getFromName();
      assertEquals("Cr2_|6U~&[!S--D", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("TzZEA", (Location) null, (Location) null, localDateTime0, localDateTime0);
      // Undeclared exception!
      try { 
        leg0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Location location0 = new Location("", "");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg(" ()", location0, (Location) null, localDateTime0, localDateTime0);
      // Undeclared exception!
      try { 
        leg0.getToName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("org.eclipse.cargotracker.application.util.DateConverter", (Location) null, (Location) null, localDateTime0, localDateTime0);
      // Undeclared exception!
      try { 
        leg0.getTo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("", (Location) null, (Location) null, localDateTime0, localDateTime0);
      // Undeclared exception!
      try { 
        leg0.getFromUnLocode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("", (Location) null, (Location) null, localDateTime0, localDateTime0);
      // Undeclared exception!
      try { 
        leg0.getFrom();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Location location0 = new Location("", "");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = null;
      try {
        leg0 = new Leg("", location0, location0, localDateTime0, (LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.application.util.DateConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Location location0 = new Location("", "SU");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("SU", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getVoyageNumber();
      assertEquals("SU", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getTo();
      assertEquals("Cr2_|6U~&[!S--D ()", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getFromUnLocode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.toString();
      assertEquals("Leg{voyageNumber=, from=, to=, loadTime=2/15/2014 2:21 PM, unloadTime=2/15/2014 2:21 PM}", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Location location0 = new Location("", "SU");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("SU", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getFrom();
      assertEquals("SU ()", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getUnloadTime();
      assertEquals("2/15/2014 2:21 PM", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getLoadTime();
      assertEquals("2/15/2014 2:21 PM", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getToUnLocode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Location location0 = new Location("", "Cr2_|6U~&[!S--D");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Leg leg0 = new Leg("", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getToName();
      assertEquals("Cr2_|6U~&[!S--D", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Location location0 = new Location("", "");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("qIw", location0, location0, localDateTime0, localDateTime0);
      String string0 = leg0.getFromName();
      assertEquals("", string0);
  }
}
