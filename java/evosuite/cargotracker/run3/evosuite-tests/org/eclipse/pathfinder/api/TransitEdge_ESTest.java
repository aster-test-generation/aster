/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 15:50:49 GMT 2024
 */

package org.eclipse.pathfinder.api;

import org.junit.Test;
import static org.junit.Assert.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.eclipse.pathfinder.api.TransitEdge;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransitEdge_ESTest extends TransitEdge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      TransitEdge transitEdge0 = new TransitEdge("75[}Z.63I7w1{", "75[}Z.63I7w1{", "9)", localDateTime0, (LocalDateTime) null);
      assertEquals("TransitEdge{voyageNumber=75[}Z.63I7w1{, fromUnLocode=75[}Z.63I7w1{, toUnLocode=9), fromDate=2014-02-14T20:21:21.320, toDate=null}", transitEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge();
      String string0 = transitEdge0.getVoyageNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge();
      transitEdge0.setVoyageNumber("`o7NK?]");
      String string0 = transitEdge0.getVoyageNumber();
      assertEquals("`o7NK?]", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge();
      String string0 = transitEdge0.getToUnLocode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge();
      transitEdge0.setToUnLocode("29h ");
      String string0 = transitEdge0.getToUnLocode();
      assertEquals("29h ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge("`", "`", "8szLS/:ji&O@ab*{/W(", (LocalDateTime) null, (LocalDateTime) null);
      LocalDateTime localDateTime0 = MockLocalDateTime.of(2249, 1, 1, 1, 0);
      transitEdge0.setToDate(localDateTime0);
      LocalDateTime localDateTime1 = transitEdge0.getToDate();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge("`", "`", "8szLS/:ji&O@ab*{/W(", (LocalDateTime) null, (LocalDateTime) null);
      String string0 = transitEdge0.getFromUnLocode();
      assertEquals("`", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge();
      transitEdge0.setFromUnLocode("");
      String string0 = transitEdge0.getFromUnLocode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      LocalTime localTime0 = MockLocalTime.ofSecondOfDay(1975L);
      LocalDateTime localDateTime0 = MockLocalDateTime.of(localDate0, localTime0);
      transitEdge0.setFromDate(localDateTime0);
      LocalDateTime localDateTime1 = transitEdge0.getFromDate();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge("`", "`", "8szLS/:ji&O@ab*{/W(", (LocalDateTime) null, (LocalDateTime) null);
      LocalDateTime localDateTime0 = transitEdge0.getToDate();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge("`", "`", "8szLS/:ji&O@ab*{/W(", (LocalDateTime) null, (LocalDateTime) null);
      String string0 = transitEdge0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge();
      LocalDateTime localDateTime0 = transitEdge0.getFromDate();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge("", "", "", (LocalDateTime) null, (LocalDateTime) null);
      String string0 = transitEdge0.getVoyageNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge();
      String string0 = transitEdge0.getFromUnLocode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TransitEdge transitEdge0 = new TransitEdge("", "", "", (LocalDateTime) null, (LocalDateTime) null);
      String string0 = transitEdge0.getToUnLocode();
      assertEquals("", string0);
  }
}
