/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 15:48:27 GMT 2024
 */

package org.eclipse.pathfinder.api;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.eclipse.pathfinder.api.TransitEdge;
import org.eclipse.pathfinder.api.TransitPath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransitPath_ESTest extends TransitPath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransitPath transitPath0 = new TransitPath();
      transitPath0.setTransitEdges((List<TransitEdge>) null);
      List<TransitEdge> list0 = transitPath0.getTransitEdges();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransitPath transitPath0 = new TransitPath();
      LinkedList<TransitEdge> linkedList0 = new LinkedList<TransitEdge>();
      TransitEdge transitEdge0 = new TransitEdge();
      linkedList0.add(transitEdge0);
      transitPath0.setTransitEdges(linkedList0);
      List<TransitEdge> list0 = transitPath0.getTransitEdges();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TransitPath transitPath0 = new TransitPath();
      String string0 = transitPath0.toString();
      assertEquals("TransitPath{transitEdges=[]}", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TransitPath transitPath0 = new TransitPath();
      List<TransitEdge> list0 = transitPath0.getTransitEdges();
      TransitPath transitPath1 = new TransitPath(list0);
      assertFalse(transitPath1.equals((Object)transitPath0));
  }
}
