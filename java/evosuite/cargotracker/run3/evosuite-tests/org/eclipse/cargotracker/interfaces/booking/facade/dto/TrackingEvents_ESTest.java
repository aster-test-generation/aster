/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:06:49 GMT 2024
 */

package org.eclipse.cargotracker.interfaces.booking.facade.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TrackingEvents_ESTest extends TrackingEvents_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(true, "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", "");
      boolean boolean0 = trackingEvents0.isExpected();
      assertEquals("org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", trackingEvents0.getDescription());
      assertTrue(boolean0);
      assertEquals("", trackingEvents0.getTime());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(false, "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents");
      trackingEvents0.getTime();
      assertFalse(trackingEvents0.isExpected());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(true, "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", "");
      String string0 = trackingEvents0.getTime();
      assertEquals("", string0);
      assertEquals("org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", trackingEvents0.getDescription());
      assertTrue(trackingEvents0.isExpected());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(false, "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents");
      trackingEvents0.getDescription();
      assertFalse(trackingEvents0.isExpected());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(false, "", (String) null);
      String string0 = trackingEvents0.getDescription();
      assertFalse(trackingEvents0.isExpected());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(false, (String) null, (String) null);
      trackingEvents0.getTime();
      assertFalse(trackingEvents0.isExpected());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(false, (String) null, (String) null);
      trackingEvents0.getDescription();
      assertFalse(trackingEvents0.isExpected());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(false, (String) null, (String) null);
      boolean boolean0 = trackingEvents0.isExpected();
      assertFalse(boolean0);
  }
}
