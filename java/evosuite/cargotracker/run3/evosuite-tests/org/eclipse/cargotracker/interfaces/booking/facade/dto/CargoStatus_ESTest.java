/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:11:50 GMT 2024
 */

package org.eclipse.cargotracker.interfaces.booking.facade.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoStatus;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CargoStatus_ESTest extends CargoStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(true, "!{$H670cVi\"jO", "!{$H670cVi\"jO");
      List<TrackingEvents> list0 = List.of(trackingEvents0, trackingEvents0);
      CargoStatus cargoStatus0 = new CargoStatus("!{$H670cVi\"jO", "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", true, "!{$H670cVi\"jO", "/`\"MPmN;", list0);
      boolean boolean0 = cargoStatus0.isMisdirected();
      assertEquals("/`\"MPmN;", cargoStatus0.getNextExpectedActivity());
      assertEquals("!{$H670cVi\"jO", cargoStatus0.getEta());
      assertEquals("!{$H670cVi\"jO", cargoStatus0.getTrackingId());
      assertEquals("org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", cargoStatus0.getDestination());
      assertTrue(boolean0);
      assertEquals("org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", cargoStatus0.getStatusText());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("U8Q;tiXw", "U8Q;tiXw", "^n", false, "", "", linkedList0);
      String string0 = cargoStatus0.getTrackingId();
      assertEquals("^n", cargoStatus0.getStatusText());
      assertEquals("U8Q;tiXw", string0);
      assertEquals("U8Q;tiXw", cargoStatus0.getDestination());
      assertEquals("", cargoStatus0.getNextExpectedActivity());
      assertEquals("", cargoStatus0.getEta());
      assertFalse(cargoStatus0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("", "", (String) null, true, "", (String) null, linkedList0);
      String string0 = cargoStatus0.getTrackingId();
      assertTrue(cargoStatus0.isMisdirected());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(true, "!{$H670cVi\"jO", "!{$H670cVi\"jO");
      List<TrackingEvents> list0 = List.of(trackingEvents0, trackingEvents0);
      CargoStatus cargoStatus0 = new CargoStatus("!{$H670cVi\"jO", "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", "org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", true, "!{$H670cVi\"jO", "/`\"MPmN;", list0);
      String string0 = cargoStatus0.getStatusText();
      assertTrue(cargoStatus0.isMisdirected());
      assertEquals("!{$H670cVi\"jO", cargoStatus0.getTrackingId());
      assertEquals("org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", cargoStatus0.getDestination());
      assertEquals("!{$H670cVi\"jO", cargoStatus0.getEta());
      assertEquals("/`\"MPmN;", cargoStatus0.getNextExpectedActivity());
      assertEquals("org.eclipse.cargotracker.interfaces.booking.facade.dto.TrackingEvents", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("", "", "", false, " UM[a63ZbbP", "", linkedList0);
      String string0 = cargoStatus0.getStatusText();
      assertEquals("", cargoStatus0.getDestination());
      assertEquals("", string0);
      assertEquals("", cargoStatus0.getTrackingId());
      assertEquals(" UM[a63ZbbP", cargoStatus0.getEta());
      assertEquals("", cargoStatus0.getNextExpectedActivity());
      assertFalse(cargoStatus0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("", "", (String) null, true, "", (String) null, linkedList0);
      String string0 = cargoStatus0.getNextExpectedActivity();
      assertNull(string0);
      assertTrue(cargoStatus0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("U8Q;tiXw", "U8Q;tiXw", "^n", false, "", "", linkedList0);
      String string0 = cargoStatus0.getNextExpectedActivity();
      assertEquals("", cargoStatus0.getEta());
      assertEquals("^n", cargoStatus0.getStatusText());
      assertEquals("", string0);
      assertFalse(cargoStatus0.isMisdirected());
      assertEquals("U8Q;tiXw", cargoStatus0.getDestination());
      assertEquals("U8Q;tiXw", cargoStatus0.getTrackingId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus((String) null, (String) null, (String) null, false, (String) null, "S!6Ii\"~Mo+Rg! ", linkedList0);
      String string0 = cargoStatus0.getEta();
      assertNull(string0);
      assertFalse(cargoStatus0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("U8Q;tiXw", "U8Q;tiXw", "^n", false, "", "", linkedList0);
      String string0 = cargoStatus0.getEta();
      assertEquals("U8Q;tiXw", cargoStatus0.getTrackingId());
      assertEquals("U8Q;tiXw", cargoStatus0.getDestination());
      assertEquals("", cargoStatus0.getNextExpectedActivity());
      assertEquals("", string0);
      assertFalse(cargoStatus0.isMisdirected());
      assertEquals("^n", cargoStatus0.getStatusText());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      List<TrackingEvents> list0 = List.of();
      CargoStatus cargoStatus0 = new CargoStatus((String) null, (String) null, "|r@lY~5?MO", true, "at,<-^]s,", (String) null, list0);
      String string0 = cargoStatus0.getDestination();
      assertNull(string0);
      assertEquals("|r@lY~5?MO", cargoStatus0.getStatusText());
      assertEquals("at,<-^]s,", cargoStatus0.getEta());
      assertTrue(cargoStatus0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TrackingEvents trackingEvents0 = new TrackingEvents(false, (String) null, (String) null);
      List<TrackingEvents> list0 = List.of(trackingEvents0, trackingEvents0, trackingEvents0, trackingEvents0, trackingEvents0, trackingEvents0, trackingEvents0, trackingEvents0, trackingEvents0);
      CargoStatus cargoStatus0 = new CargoStatus("wbV,43*", "", "", true, "", (String) null, list0);
      String string0 = cargoStatus0.getDestination();
      assertEquals("wbV,43*", cargoStatus0.getTrackingId());
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals("", cargoStatus0.getEta());
      assertTrue(cargoStatus0.isMisdirected());
      assertEquals("", cargoStatus0.getStatusText());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CargoStatus cargoStatus0 = null;
      try {
        cargoStatus0 = new CargoStatus("z4p?%}`L", "z4p?%}`L", "z4p?%}`L", true, "z4p?%}`L", "z4p?%}`L", (List<TrackingEvents>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.dto.CargoStatus", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("", "", (String) null, true, "", (String) null, linkedList0);
      String string0 = cargoStatus0.getStatusText();
      assertNull(string0);
      assertTrue(cargoStatus0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("U8Q;tiXw", "U8Q;tiXw", "^n", false, "", "", linkedList0);
      boolean boolean0 = cargoStatus0.isMisdirected();
      assertEquals("", cargoStatus0.getEta());
      assertEquals("", cargoStatus0.getNextExpectedActivity());
      assertEquals("U8Q;tiXw", cargoStatus0.getDestination());
      assertEquals("U8Q;tiXw", cargoStatus0.getTrackingId());
      assertFalse(boolean0);
      assertEquals("^n", cargoStatus0.getStatusText());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      List<TrackingEvents> list0 = List.of();
      CargoStatus cargoStatus0 = new CargoStatus((String) null, ":Iw2eh>0/6vV", "|r@lY~5?MO", true, "at,<-^]s,", ":Iw2eh>0/6vV", list0);
      String string0 = cargoStatus0.getNextExpectedActivity();
      assertEquals("at,<-^]s,", cargoStatus0.getEta());
      assertEquals(":Iw2eh>0/6vV", string0);
      assertTrue(cargoStatus0.isMisdirected());
      assertEquals("|r@lY~5?MO", cargoStatus0.getStatusText());
      assertEquals(":Iw2eh>0/6vV", cargoStatus0.getDestination());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      List<TrackingEvents> list0 = List.of();
      CargoStatus cargoStatus0 = new CargoStatus((String) null, ":Iw2eh>0/6vV", "|r@lY~5?MO", true, "at,<-^]s,", ":Iw2eh>0/6vV", list0);
      String string0 = cargoStatus0.getTrackingId();
      assertEquals("at,<-^]s,", cargoStatus0.getEta());
      assertEquals(":Iw2eh>0/6vV", cargoStatus0.getDestination());
      assertEquals("|r@lY~5?MO", cargoStatus0.getStatusText());
      assertTrue(cargoStatus0.isMisdirected());
      assertNull(string0);
      assertEquals(":Iw2eh>0/6vV", cargoStatus0.getNextExpectedActivity());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      List<TrackingEvents> list0 = List.of();
      CargoStatus cargoStatus0 = new CargoStatus((String) null, ":Iw2eh>0/6vV", "|r@lY~5?MO", true, "at,<-^]s,", ":Iw2eh>0/6vV", list0);
      cargoStatus0.getEvents();
      assertEquals("|r@lY~5?MO", cargoStatus0.getStatusText());
      assertEquals("at,<-^]s,", cargoStatus0.getEta());
      assertTrue(cargoStatus0.isMisdirected());
      assertEquals(":Iw2eh>0/6vV", cargoStatus0.getDestination());
      assertEquals(":Iw2eh>0/6vV", cargoStatus0.getNextExpectedActivity());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      List<TrackingEvents> list0 = List.of();
      CargoStatus cargoStatus0 = new CargoStatus((String) null, ":Iw2eh>0/6vV", "|r@lY~5?MO", true, "at,<-^]s,", ":Iw2eh>0/6vV", list0);
      String string0 = cargoStatus0.getEta();
      assertEquals("at,<-^]s,", string0);
      assertEquals("|r@lY~5?MO", cargoStatus0.getStatusText());
      assertEquals(":Iw2eh>0/6vV", cargoStatus0.getDestination());
      assertNotNull(string0);
      assertEquals(":Iw2eh>0/6vV", cargoStatus0.getNextExpectedActivity());
      assertTrue(cargoStatus0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<TrackingEvents> linkedList0 = new LinkedList<TrackingEvents>();
      CargoStatus cargoStatus0 = new CargoStatus("Vpp+c]=P$GTF-Oi`D", "Vpp+c]=P$GTF-Oi`D", "Vpp+c]=P$GTF-Oi`D", false, "Vpp+c]=P$GTF-Oi`D", "Vpp+c]=P$GTF-Oi`D", linkedList0);
      cargoStatus0.getDestination();
      assertFalse(cargoStatus0.isMisdirected());
  }
}
