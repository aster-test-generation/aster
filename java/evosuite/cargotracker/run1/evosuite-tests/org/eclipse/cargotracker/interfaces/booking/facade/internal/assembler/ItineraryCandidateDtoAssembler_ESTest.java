/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:17:07 GMT 2024
 */

package org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import java.util.LinkedList;
import java.util.List;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.infrastructure.persistence.jpa.JpaLocationRepository;
import org.eclipse.cargotracker.infrastructure.persistence.jpa.JpaVoyageRepository;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.Leg;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.Location;
import org.eclipse.cargotracker.interfaces.booking.facade.dto.RouteCandidate;
import org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler.ItineraryCandidateDtoAssembler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ItineraryCandidateDtoAssembler_ESTest extends ItineraryCandidateDtoAssembler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ItineraryCandidateDtoAssembler itineraryCandidateDtoAssembler0 = new ItineraryCandidateDtoAssembler();
      // Undeclared exception!
      try { 
        itineraryCandidateDtoAssembler0.toDto((Itinerary) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler.ItineraryCandidateDtoAssembler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ItineraryCandidateDtoAssembler itineraryCandidateDtoAssembler0 = new ItineraryCandidateDtoAssembler();
      JpaVoyageRepository jpaVoyageRepository0 = new JpaVoyageRepository();
      JpaLocationRepository jpaLocationRepository0 = new JpaLocationRepository();
      // Undeclared exception!
      try { 
        itineraryCandidateDtoAssembler0.fromDTO((RouteCandidate) null, jpaVoyageRepository0, jpaLocationRepository0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler.ItineraryCandidateDtoAssembler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ItineraryCandidateDtoAssembler itineraryCandidateDtoAssembler0 = new ItineraryCandidateDtoAssembler();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = new Leg("Completed on: ", (Location) null, (Location) null, localDateTime0, localDateTime0);
      List<Leg> list0 = List.of(leg0, leg0, leg0, leg0, leg0, leg0, leg0, leg0, leg0, leg0);
      RouteCandidate routeCandidate0 = new RouteCandidate(list0);
      JpaVoyageRepository jpaVoyageRepository0 = new JpaVoyageRepository();
      JpaLocationRepository jpaLocationRepository0 = new JpaLocationRepository();
      // Undeclared exception!
      try { 
        itineraryCandidateDtoAssembler0.fromDTO(routeCandidate0, jpaVoyageRepository0, jpaLocationRepository0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/Validate
         //
         verifyException("org.eclipse.cargotracker.domain.model.voyage.VoyageNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ItineraryCandidateDtoAssembler itineraryCandidateDtoAssembler0 = new ItineraryCandidateDtoAssembler();
      LinkedList<Leg> linkedList0 = new LinkedList<Leg>();
      RouteCandidate routeCandidate0 = new RouteCandidate(linkedList0);
      JpaVoyageRepository jpaVoyageRepository0 = new JpaVoyageRepository();
      JpaLocationRepository jpaLocationRepository0 = new JpaLocationRepository();
      // Undeclared exception!
      try { 
        itineraryCandidateDtoAssembler0.fromDTO(routeCandidate0, jpaVoyageRepository0, jpaLocationRepository0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/Validate
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Itinerary", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ItineraryCandidateDtoAssembler itineraryCandidateDtoAssembler0 = new ItineraryCandidateDtoAssembler();
      Itinerary itinerary0 = new Itinerary();
      RouteCandidate routeCandidate0 = itineraryCandidateDtoAssembler0.toDto(itinerary0);
      assertEquals("RouteCandidate{legs=[]}", routeCandidate0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ItineraryCandidateDtoAssembler itineraryCandidateDtoAssembler0 = new ItineraryCandidateDtoAssembler();
      org.eclipse.cargotracker.domain.model.cargo.Leg leg0 = new org.eclipse.cargotracker.domain.model.cargo.Leg();
      // Undeclared exception!
      try { 
        itineraryCandidateDtoAssembler0.toLegDTO(leg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.cargotracker.interfaces.booking.facade.internal.assembler.ItineraryCandidateDtoAssembler", e);
      }
  }
}
