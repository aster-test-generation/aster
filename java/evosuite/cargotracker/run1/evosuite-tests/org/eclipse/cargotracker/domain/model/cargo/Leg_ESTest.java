/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 16:43:00 GMT 2024
 */

package org.eclipse.cargotracker.domain.model.cargo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import org.eclipse.cargotracker.domain.model.cargo.Leg;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.eclipse.cargotracker.domain.model.voyage.Voyage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Leg_ESTest extends Leg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Leg leg0 = null;
      try {
        leg0 = new Leg((Voyage) null, (Location) null, (Location) null, (LocalDateTime) null, localDateTime0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/Validate
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Leg", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Leg leg0 = new Leg();
      Object object0 = new Object();
      boolean boolean0 = leg0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Leg leg0 = new Leg();
      boolean boolean0 = leg0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Leg leg0 = new Leg();
      boolean boolean0 = leg0.equals(leg0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Leg leg0 = new Leg();
      Leg leg1 = new Leg();
      // Undeclared exception!
      try { 
        leg1.equals(leg0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/EqualsBuilder
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Leg", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Leg leg0 = new Leg();
      // Undeclared exception!
      try { 
        leg0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/HashCodeBuilder
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Leg", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Leg leg0 = new Leg();
      Location location0 = leg0.getLoadLocation();
      assertNull(location0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Leg leg0 = new Leg();
      LocalDateTime localDateTime0 = leg0.getUnloadTime();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Leg leg0 = new Leg();
      LocalDateTime localDateTime0 = leg0.getLoadTime();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Leg leg0 = new Leg();
      Voyage voyage0 = leg0.getVoyage();
      assertNull(voyage0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Leg leg0 = new Leg();
      String string0 = leg0.toString();
      assertEquals("Leg{id=null, voyage=null, loadLocation=null, unloadLocation=null, loadTime=null, unloadTime=null}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Leg leg0 = new Leg();
      Location location0 = leg0.getUnloadLocation();
      assertNull(location0);
  }
}
