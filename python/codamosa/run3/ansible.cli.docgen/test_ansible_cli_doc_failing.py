# Automatically generated by Pynguin.
import ansible.cli.doc as module_0

def test_case_0():
    try:
        str_0 = '.4l'
        set_0 = {str_0, str_0}
        var_0 = module_0.jdump(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ',@<=,'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "{'"
        float_0 = 1279.223494
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        var_0 = doc_c_l_i_0.display_plugin_list(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'cDn&)'
        str_1 = 'NL?EzmD3D"'
        list_0 = [str_0, str_1]
        dict_0 = {str_0: str_0}
        bytes_0 = None
        float_0 = -386.87
        int_0 = None
        plugin_not_found_0 = module_0.PluginNotFound()
        str_2 = ' terminate the connection '
        doc_c_l_i_0 = module_0.DocCLI(str_2)
        var_0 = doc_c_l_i_0.format_plugin_doc(list_0, dict_0, bytes_0, float_0, int_0, plugin_not_found_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'W_xyx9rm@b'
        bytes_0 = b'\xbfk\xce\x97_\x01\x8a\x89\x02\x9eMy\x9d\xdb\x93ff\x8bl'
        int_0 = 2592
        plugin_not_found_0 = None
        bool_0 = True
        doc_c_l_i_0 = module_0.DocCLI(bool_0)
        var_0 = doc_c_l_i_0.add_fields(str_0, bytes_0, int_0, bool_0, plugin_not_found_0)
    except BaseException:
        pass

def test_case_5():
    try:
        role_mixin_0 = module_0.RoleMixin()
        float_0 = 476.6258
        bytes_0 = b'\xab]?"\x92G\xcd\xe3K\xff\x94<'
        bytes_1 = b'\xf0D\x99'
        doc_c_l_i_0 = module_0.DocCLI(bytes_1)
        var_0 = doc_c_l_i_0.get_role_man_text(float_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "'\\UhpE-#O7D@)H00l\\"
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        dict_0 = {doc_c_l_i_0: str_0, str_0: doc_c_l_i_0}
        var_0 = doc_c_l_i_0.get_man_text(dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        plugin_not_found_0 = None
        str_0 = 'module'
        float_0 = 0.2
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        dict_0 = {plugin_not_found_0: doc_c_l_i_0, doc_c_l_i_0: float_0}
        var_0 = module_0.add_collection_plugins(dict_0, plugin_not_found_0)
        var_1 = doc_c_l_i_0.get_all_plugins_of_type(str_0)
        bool_0 = False
        var_2 = doc_c_l_i_0.get_plugin_metadata(bool_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = None
        bytes_0 = b'DA0n#\xc9'
        str_0 = 'c}uQz$B<wBKNC9{\n@~'
        bytes_1 = b'\x0f\xc9\x1b\xdb\x00\xbc\x9f\xe9\xdb\r\xf1\xb6\xbdp\x07\xb47U'
        doc_c_l_i_0 = module_0.DocCLI(bytes_1)
        bytes_2 = b'\xdd\x11-a\x8b\xa2\xdf\xbe\x0f\x0c\x86\xe2\xf0\xe1\xcft\x8d\xe1K\x01'
        bytes_3 = b'\x9f\x1fdn\xa7\xfb\xc1\x0f\x84\x1bG\x14-'
        role_mixin_0 = module_0.RoleMixin()
        var_0 = doc_c_l_i_0.find_plugins(bytes_2, bytes_3, role_mixin_0)
        var_1 = doc_c_l_i_0.namespace_from_plugin_filepath(tuple_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = -2784.3906448738503
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        doc_c_l_i_1 = module_0.DocCLI(doc_c_l_i_0)
        str_0 = '&A=FU'
        bool_0 = False
        float_1 = -417.0
        role_mixin_0 = module_0.RoleMixin()
        float_2 = -1375.5122
        doc_c_l_i_2 = module_0.DocCLI(float_2)
        var_0 = doc_c_l_i_2.find_plugins(bool_0, doc_c_l_i_0, float_1, role_mixin_0)
        plugin_not_found_0 = None
        str_1 = 'module'
        float_3 = -289.8415933759379
        doc_c_l_i_3 = module_0.DocCLI(float_3)
        var_1 = doc_c_l_i_3.get_all_plugins_of_type(str_1)
        list_0 = [str_0, plugin_not_found_0]
        doc_c_l_i_4 = module_0.DocCLI(list_0)
        var_2 = doc_c_l_i_4.run()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = ''
        bytes_0 = b'\xd6+\xe1\x87<\x12\xecd{\xd5'
        str_1 = 'inventory'
        doc_c_l_i_0 = module_0.DocCLI(str_1)
        var_0 = doc_c_l_i_0.init_parser()
        set_0 = {str_0, str_0, bytes_0, bytes_0}
        dict_0 = {}
        tuple_0 = ()
        list_0 = [tuple_0, bytes_0, set_0, bytes_0]
        var_1 = doc_c_l_i_0.get_man_text(dict_0, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        str_0 = 'Sorry, a password is required to run sudo'
        dict_0 = {str_0: list_0, str_0: list_0}
        bool_0 = True
        doc_c_l_i_0 = module_0.DocCLI(bool_0)
        str_1 = 'daemon-reexec'
        dict_1 = {str_0: str_0, str_0: dict_0, str_1: list_0}
        float_0 = -2776.429996
        bytes_0 = b'*\xc2\xc8c@\x99$pX'
        var_0 = doc_c_l_i_0.add_fields(dict_1, dict_1, bytes_0, float_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'inventory'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.init_parser()
        list_0 = [var_0]
        float_0 = 1932.799
        var_1 = doc_c_l_i_0.format_snippet(list_0, str_0, float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = None
        float_0 = 2122.7656
        str_0 = '.'
        bool_0 = True
        bytes_0 = b'\xc0\xbb\xbb\x98\x7f\xe0\xc2[X\xda\xb4\xb1\xab\x0e\xa3\xd9\xd9\x8b'
        doc_c_l_i_0 = module_0.DocCLI(bytes_0)
        var_0 = doc_c_l_i_0.find_plugins(str_0, str_0, str_0, bool_0)
        doc_c_l_i_1 = module_0.DocCLI(float_0)
        var_1 = doc_c_l_i_1.print_paths(dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'inventory'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.init_parser()
        plugin_not_found_0 = module_0.PluginNotFound()
        str_1 = 'r&4n[mf?#7VM}*yDj\rE'
        tuple_0 = (str_1,)
        list_0 = [str_1]
        var_1 = module_0.add_collection_plugins(list_0, tuple_0)
        str_2 = 'T~t\x0bzF:1gAFnI;2s'
        float_0 = 1411.4
        str_3 = 'M`'
        var_2 = doc_c_l_i_0.namespace_from_plugin_filepath(str_2, float_0, str_3)
    except BaseException:
        pass