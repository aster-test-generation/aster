# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        int_0 = -1139
        var_0 = module_0.to_bits(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'u\x08\x85\xc1Lo%Yw\xbd\x8f'
        var_0 = module_0.to_masklen(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xa2;?\xb0'
        tuple_0 = ()
        bytes_1 = b'Q\xea\n\xb7z\xee8\x14\xaaM\xcdV\xe3\xdaJ\xaf'
        int_0 = -459
        tuple_1 = (bytes_0, tuple_0, bytes_1, int_0)
        var_0 = module_0.is_masklen(tuple_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'M-`\x913'
        var_0 = module_0.to_netmask(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x0691~\xf3\xc9\xb6\x89e\xb7\x08\xa9g\xfe\x1e??\xd8\x98'
        bool_0 = False
        var_0 = module_0.to_subnet(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 27
        int_1 = -1362
        var_0 = module_0.to_subnet(int_0, int_1)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'a_\x1b\x11\x8el|\xef\xb0\xef\xa5\xd3\xf5'
        var_0 = module_0.to_ipv6_network(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -2041
        var_0 = module_0.is_mac(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        dict_0 = None
        bytes_0 = b'\xc3\xe6\x86\x99\x85e!\xaf\x11\x19<\xdf\xb8\xd0\x13\xa5Z\xe1\xab\xdb'
        var_0 = module_0.to_subnet(str_0, dict_0, bytes_0)
    except BaseException:
        pass