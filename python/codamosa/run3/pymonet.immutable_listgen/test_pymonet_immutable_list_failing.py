# Automatically generated by Pynguin.
import pymonet.immutable_list as module_0
import builtins as module_1

def test_case_0():
    try:
        callable_0 = None
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(bool_0)
        str_0 = immutable_list_0.__str__()
        optional_0 = immutable_list_0.find(callable_0)
    except BaseException:
        pass

def test_case_1():
    try:
        callable_0 = None
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(bool_0)
        var_0 = immutable_list_0.__len__()
        optional_0 = immutable_list_0.find(callable_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callable_0 = None
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.__len__()
        bool_0 = False
        immutable_list_1 = module_0.ImmutableList(bool_0)
        optional_0 = immutable_list_1.find(callable_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '([ngxOsG#,W|9A?a3\n'
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(str_0, bool_0)
        str_1 = immutable_list_0.__str__()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 1736
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(bool_0)
        var_0 = immutable_list_0.to_list()
        optional_0 = immutable_list_0.find(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.__len__()
        optional_0 = None
        var_1 = immutable_list_0.unshift(optional_0)
        bool_0 = False
        var_2 = immutable_list_0.__len__()
        immutable_list_1 = module_0.ImmutableList(bool_0)
        immutable_list_2 = module_0.ImmutableList()
        list_0 = []
        object_0 = module_1.object(*list_0)
        bool_1 = immutable_list_2.__eq__(object_0)
        bool_2 = False
        var_3 = immutable_list_0.to_list()
        immutable_list_3 = module_0.ImmutableList(bool_2)
        complex_0 = None
        immutable_list_4 = module_0.ImmutableList(complex_0, var_1)
        var_4 = immutable_list_1.__len__()
        immutable_list_5 = module_0.ImmutableList()
        callable_0 = None
        var_5 = immutable_list_4.map(callable_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = None
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(bool_0)
        var_0 = immutable_list_0.map(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        callable_0 = None
        tuple_0 = ()
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(tuple_0, bool_0)
        var_0 = immutable_list_0.filter(callable_0)
    except BaseException:
        pass

def test_case_8():
    try:
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.filter(immutable_list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        callable_0 = None
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(bool_0)
        optional_0 = immutable_list_0.find(callable_0)
    except BaseException:
        pass

def test_case_10():
    try:
        callable_0 = None
        float_0 = 3160.0
        list_0 = [float_0, float_0, float_0, float_0]
        immutable_list_0 = module_0.ImmutableList(float_0, list_0)
        optional_0 = immutable_list_0.find(callable_0)
    except BaseException:
        pass

def test_case_11():
    try:
        callable_0 = None
        immutable_list_0 = module_0.ImmutableList()
        optional_0 = immutable_list_0.find(callable_0)
        var_0 = immutable_list_0.filter(callable_0)
    except BaseException:
        pass

def test_case_12():
    try:
        dict_0 = {}
        str_0 = 'a5$[(c+e%ym(F{{P'
        float_0 = 1702.0
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList(float_0, bool_0)
        var_0 = immutable_list_0.append(str_0)
        immutable_list_1 = module_0.ImmutableList(str_0, var_0, bool_0)
        optional_0 = immutable_list_1.find(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        list_0 = []
        object_0 = module_1.object(*list_0)
        var_0 = None
        immutable_list_0 = module_0.ImmutableList()
        var_1 = immutable_list_0.unshift(var_0)
        int_0 = -349
        immutable_list_1 = module_0.ImmutableList()
        optional_0 = immutable_list_1.find(int_0)
        immutable_list_2 = module_0.ImmutableList()
        var_2 = None
        var_3 = immutable_list_2.__add__(var_2)
    except BaseException:
        pass

def test_case_14():
    try:
        immutable_list_0 = module_0.ImmutableList()
        callable_0 = None
        var_0 = immutable_list_0.__len__()
        optional_0 = immutable_list_0.find(callable_0)
        var_1 = immutable_list_0.__len__()
        immutable_list_1 = module_0.ImmutableList()
        object_0 = module_1.object()
        bool_0 = immutable_list_0.__eq__(object_0)
        var_2 = immutable_list_1.__len__()
        var_3 = immutable_list_0.__len__()
        immutable_list_2 = module_0.ImmutableList()
        callable_1 = None
        var_4 = None
        var_5 = immutable_list_1.reduce(callable_1, var_4)
        var_6 = immutable_list_2.reduce(callable_1, var_4)
        float_0 = 1229.1113
        immutable_list_3 = module_0.ImmutableList(float_0)
        var_7 = immutable_list_3.reduce(callable_1, var_4)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '..w8-\x0bxLIt'
        str_1 = ''
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_1}
        float_0 = 3493.119
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.__len__()
        immutable_list_1 = module_0.ImmutableList(float_0, bool_0)
        var_1 = immutable_list_0.to_list()
        object_0 = module_1.object()
        bool_1 = immutable_list_0.__eq__(object_0)
        var_2 = None
        var_3 = immutable_list_1.reduce(dict_0, var_2)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = 1736
        str_0 = '\n        :param value: value to store in Box\n        :type value: Any\n        '
        dict_0 = {int_0: int_0, int_0: str_0, int_0: int_0}
        immutable_list_0 = module_0.ImmutableList(dict_0, str_0)
        var_0 = immutable_list_0.__len__()
        optional_0 = immutable_list_0.find(int_0)
    except BaseException:
        pass