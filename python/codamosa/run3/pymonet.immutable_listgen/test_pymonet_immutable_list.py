# Automatically generated by Pynguin.
import pymonet.immutable_list as module_0
import builtins as module_1

def test_case_0():
    immutable_list_0 = module_0.ImmutableList()

def test_case_1():
    object_0 = module_1.object()
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(object_0)

def test_case_2():
    float_0 = -372.47
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(float_0)

def test_case_3():
    optional_0 = None
    float_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.append(float_0)
    bool_0 = False
    immutable_list_1 = module_0.ImmutableList(optional_0, bool_0)

def test_case_4():
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(list_0)
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_1.__len__()
    str_0 = '\n        Take function and applied this function on current box value and returns mapped value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new box with mapped value\n        :rtype: B\n        '
    var_1 = immutable_list_1.append(str_0)
    var_2 = immutable_list_1.to_list()
    var_3 = None
    immutable_list_2 = module_0.ImmutableList()
    var_4 = immutable_list_2.reduce(str_0, var_3)
    var_5 = immutable_list_1.reduce(str_0, var_4)

def test_case_5():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = module_0.ImmutableList(int_0)
    int_1 = 2
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = module_0.ImmutableList(int_1)
    immutable_list_4 = module_0.ImmutableList(int_0, immutable_list_3)
    immutable_list_5 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_4 == immutable_list_5

def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    int_0 = 1
    immutable_list_2 = module_0.ImmutableList(int_0)
    immutable_list_3 = module_0.ImmutableList(int_0)
    bool_1 = immutable_list_2.__eq__(immutable_list_3)
    str_0 = 'fB.b*#6;cS|'
    immutable_list_4 = module_0.ImmutableList(str_0)
    str_1 = ''
    str_2 = 'ImmutableList[T]'
    immutable_list_5 = module_0.ImmutableList(str_1, str_2)
    immutable_list_6 = module_0.ImmutableList()
    bool_2 = True
    immutable_list_7 = module_0.ImmutableList(bool_2)
    immutable_list_8 = module_0.ImmutableList()
    int_1 = 2681
    bool_3 = True
    immutable_list_9 = module_0.ImmutableList(int_1, bool_3)

def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    int_0 = 1
    immutable_list_2 = module_0.ImmutableList(int_0)
    immutable_list_3 = module_0.ImmutableList(int_0)
    bool_1 = immutable_list_2.__eq__(immutable_list_3)
    int_1 = 2
    immutable_list_4 = module_0.ImmutableList(int_1)
    immutable_list_5 = module_0.ImmutableList(int_0)
    bool_2 = immutable_list_4.__eq__(immutable_list_5)
    immutable_list_6 = module_0.ImmutableList(int_1)
    immutable_list_7 = module_0.ImmutableList(int_0, immutable_list_6)
    immutable_list_8 = module_0.ImmutableList(int_1)
    immutable_list_9 = module_0.ImmutableList(int_0, immutable_list_8)
    bool_3 = immutable_list_7.__eq__(immutable_list_9)
    int_2 = 3
    immutable_list_10 = module_0.ImmutableList(int_2)
    immutable_list_11 = module_0.ImmutableList(int_0, immutable_list_10)
    immutable_list_12 = module_0.ImmutableList(int_1)
    immutable_list_13 = module_0.ImmutableList(int_0, immutable_list_12)
    bool_4 = immutable_list_11.__eq__(immutable_list_13)