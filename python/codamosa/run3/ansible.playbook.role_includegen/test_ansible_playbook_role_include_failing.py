# Automatically generated by Pynguin.
import ansible.playbook.role_include as module_0
import ansible.playbook.task_include as module_1
import ansible.playbook.block as module_2
import ansible.playbook.role as module_3

def test_case_0():
    try:
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.copy()
        var_1 = include_role_0.get_name()
        var_2 = include_role_0.get_name()
        include_role_1 = module_0.IncludeRole(include_role_0)
        var_3 = include_role_1.copy()
        bool_0 = False
        var_4 = include_role_1.get_name()
        var_5 = include_role_1.get_block_list(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.copy()
        var_1 = include_role_0.get_name()
        var_2 = include_role_0.get_name()
        include_role_1 = module_0.IncludeRole()
        var_3 = include_role_1.copy()
        int_0 = 1101
        include_role_2 = module_0.IncludeRole(int_0)
        var_4 = include_role_2.get_name()
        var_5 = include_role_0.get_block_list()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'i\x1f\x18?\xea\xa0<\xa1\x85\xa4\xac\x17\xe8\x97'
        str_0 = 'uqktg)`:K#nRu'
        str_1 = '&lV?~Z2TE8'
        include_role_0 = module_0.IncludeRole(str_0, str_1)
        var_0 = include_role_0.load(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        include_role_0 = module_0.IncludeRole(tuple_0)
        tuple_1 = ()
        bool_0 = True
        include_role_1 = module_0.IncludeRole()
        var_0 = include_role_1.copy()
        var_1 = include_role_1.load(tuple_1, tuple_1, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.get_name()
        str_0 = 'J8v'
        include_role_1 = module_0.IncludeRole()
        var_1 = include_role_0.get_name()
        var_2 = include_role_1.get_include_params()
        list_0 = [include_role_0, include_role_1]
        tuple_0 = (list_0, str_0, list_0)
        float_0 = -200.11917
        task_include_0 = module_1.TaskInclude(tuple_0, float_0)
        block_0 = module_2.Block(task_include_0)
        include_role_2 = module_0.IncludeRole(block_0, tuple_0)
        var_3 = include_role_2.get_include_params()
    except BaseException:
        pass

def test_case_5():
    try:
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.get_name()
        str_0 = 'set %s flags %s'
        set_0 = {str_0, str_0, str_0, str_0}
        bool_0 = False
        role_0 = module_3.Role()
        var_1 = include_role_0.get_name()
        include_role_1 = module_0.IncludeRole(bool_0, role_0)
        var_2 = include_role_1.get_include_params()
        int_0 = None
        var_3 = include_role_0.get_include_params()
        var_4 = include_role_0.copy(int_0)
        bytes_0 = b'\xfbB\xd9\xd9\x97\xf2\xd8b\x88SNw\xf2\xf2\x14'
        var_5 = include_role_0.get_name()
        include_role_2 = module_0.IncludeRole(bytes_0)
        var_6 = include_role_2.get_block_list(str_0, set_0)
    except BaseException:
        pass