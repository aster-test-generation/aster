# Automatically generated by Pynguin.
import ansible.plugins.become.su as module_0

def test_case_0():
    try:
        int_0 = None
        become_module_0 = module_0.BecomeModule()
        var_0 = become_module_0.check_password_prompt(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'tBr45{"'
        bool_0 = False
        become_module_0 = module_0.BecomeModule()
        var_0 = become_module_0.build_become_command(str_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        become_module_0 = module_0.BecomeModule()
        bytes_0 = b''
        var_0 = become_module_0.build_become_command(bytes_0, bytes_0)
        var_1 = become_module_0.build_become_command(become_module_0, become_module_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'test'
        str_1 = 'test'
        str_2 = 'test'
        become_module_0 = module_0.BecomeModule()
        str_3 = 'become_exe'
        var_0 = become_module_0.set_option(str_3, str_2)
        str_4 = 'become_user'
        var_1 = become_module_0.set_option(str_4, str_3)
        var_2 = become_module_0.build_become_command(str_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'sh'
        str_1 = 'become_exe'
        str_2 = 'su'
        var_0 = become_module_0.set_option(str_1, str_2)
        str_3 = 'become_flags'
        str_4 = ''
        var_1 = become_module_0.set_option(str_3, str_4)
        str_5 = 'become_user'
        var_2 = become_module_0.set_option(str_5, str_4)
        var_3 = become_module_0.build_become_command(str_2, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Unit test for method build_become_command of class BecomeModule'
        str_1 = 'test'
        str_2 = 'test'
        str_3 = 'test'
        str_4 = '_R0,<j8l\x0bO$paCG-h^B'
        become_module_0 = module_0.BecomeModule()
        str_5 = 'become_exe'
        var_0 = become_module_0.set_option(str_5, str_3)
        str_6 = 'become_flags'
        var_1 = become_module_0.set_option(str_6, str_4)
        str_7 = 'become_user'
        var_2 = become_module_0.set_option(str_7, str_2)
        var_3 = become_module_0.build_become_command(str_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        become_module_0 = module_0.BecomeModule()
        var_0 = None
        var_1 = None
        var_2 = become_module_0.build_become_command(var_0, var_1)
        str_0 = 'whoami'
        str_1 = 'sh'
        str_2 = 'become_exe'
        str_3 = 'su'
        var_3 = become_module_0.set_option(str_2, str_3)
        str_4 = 'become_flags'
        str_5 = ''
        var_4 = become_module_0.set_option(str_4, str_5)
        var_5 = become_module_0.set_option(str_2, str_5)
        var_6 = become_module_0.build_become_command(str_0, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        become_module_0 = module_0.BecomeModule()
        become_module_1 = module_0.BecomeModule()
        var_0 = None
        var_1 = None
        var_2 = become_module_1.build_become_command(var_0, var_1)
        str_0 = 'become_exe'
        str_1 = 'su'
        var_3 = become_module_1.set_option(str_0, str_1)
        str_2 = 'become_flags'
        var_4 = become_module_1.set_option(str_2, str_2)
        str_3 = 'become_user'
        var_5 = become_module_1.set_option(str_3, str_1)
        tuple_0 = None
        dict_0 = {var_2: tuple_0}
        var_6 = become_module_0.build_become_command(tuple_0, dict_0)
        bytes_0 = b''
        var_7 = become_module_1.build_become_command(become_module_1, bytes_0)
    except BaseException:
        pass