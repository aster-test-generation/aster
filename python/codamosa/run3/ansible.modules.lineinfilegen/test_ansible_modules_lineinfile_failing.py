# Automatically generated by Pynguin.
import ansible.modules.lineinfile as module_0

def test_case_0():
    try:
        bytes_0 = None
        bool_0 = False
        tuple_0 = None
        var_0 = module_0.write_changes(bool_0, tuple_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = None
        bytes_0 = b'U\x81]$Q\xf6\xce\x8a'
        float_0 = None
        set_0 = set()
        var_0 = module_0.check_file_attrs(int_0, bytes_0, float_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = None
        dict_0 = {}
        str_0 = 'l'
        bytes_0 = None
        int_0 = 5
        var_0 = module_0.present(list_0, dict_0, str_0, str_0, bytes_0, str_0, bytes_0, str_0, int_0, bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = None
        dict_0 = {}
        str_0 = ''
        bytes_0 = None
        int_0 = 5
        var_0 = module_0.present(list_0, dict_0, str_0, str_0, bytes_0, str_0, bytes_0, str_0, int_0, bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '/tmp/dest_file}<'
        var_0 = module_0.absent(str_0, str_0, str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\n- name: Checkout subversion repository to specified folder\n  ansible.builtin.subversion:\n    repo: svn+ssh://an.exampl.org/pah/to/repo\n    dest: /src/checkout\n\n- name: Export subversion directory to folder\n  ansible.builtin.subversion:\n    repo: svn+ssh://an.example.org/path/to/repo\n    dest: /src/export    eport: yes\n\n- name: Get information about the repository whether or not it has already b~en cloned locally\n  ansible.builtin.subversion:\n    repo: svn+ssh://an.example.org/path/to/repo\n    dest:/src/checkout\n    checkout: no\n    update: no\n'
        dict_0 = {str_0: str_0, str_0: str_0}
        complex_0 = None
        list_0 = []
        bytes_0 = b'\xab\xba~\xae\x95\xa7\x9f\xbc'
        bool_0 = True
        var_0 = module_0.present(str_0, dict_0, complex_0, str_0, str_0, list_0, str_0, bytes_0, bool_0, dict_0, str_0)
    except BaseException:
        pass