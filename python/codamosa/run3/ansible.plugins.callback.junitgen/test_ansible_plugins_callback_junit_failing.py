# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        str_0 = None
        list_0 = [str_0, str_0, str_0, str_0]
        str_1 = 'reset_connection'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_task_start(list_0, str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 2082.67596
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'j\rZc`s]/'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_play_start(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        host_data_0 = None
        list_0 = [host_data_0, host_data_0, host_data_0, host_data_0]
        tuple_0 = (host_data_0, list_0)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_no_hosts(tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(callback_module_0)
        callback_module_1 = module_0.CallbackModule()
        bytes_0 = b'\xae\x8b\xe2\x05\xef\xe4\xa3b?'
        dict_0 = {bytes_0: callback_module_0}
        int_0 = 20
        host_data_0 = module_0.HostData(bytes_0, dict_0, dict_0, int_0)
        var_1 = callback_module_1.v2_playbook_on_cleanup_task_start(host_data_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '*2cicY}\x0bKzSEX)'
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b'S\x0f'
        var_0 = callback_module_0.v2_playbook_on_stats(callback_module_0)
        int_0 = -2558
        bool_0 = False
        host_data_0 = module_0.HostData(bool_0, bool_0, int_0, str_0)
        str_1 = '8aV\x0cU\r 2sLQO'
        dict_0 = {str_1: bytes_0, str_0: int_0}
        tuple_0 = (host_data_0, str_1, dict_0, callback_module_0)
        host_data_1 = module_0.HostData(tuple_0, tuple_0, dict_0, dict_0)
        var_1 = callback_module_0.v2_playbook_on_handler_task_start(host_data_1)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        float_0 = 1098.76
        var_0 = callback_module_0.v2_runner_on_failed(float_0, float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callback_module_0 = module_0.CallbackModule()
        list_0 = None
        bool_0 = False
        set_0 = {list_0}
        int_0 = 13
        bytes_0 = b'\xe63\xfc\x88\x8d\x8d\x8e\x072\x14[\x81\xfc\xcd'
        callback_module_1 = module_0.CallbackModule()
        bool_1 = False
        bool_2 = False
        float_0 = None
        tuple_0 = (bytes_0, int_0, set_0, float_0)
        task_data_0 = module_0.TaskData(bytes_0, callback_module_1, bool_1, bool_2, tuple_0)
        callback_module_2 = module_0.CallbackModule()
        task_data_1 = module_0.TaskData(int_0, task_data_0, callback_module_2, float_0, bytes_0)
        task_data_2 = module_0.TaskData(list_0, bool_0, list_0, set_0, task_data_1)
        callback_module_3 = module_0.CallbackModule()
        list_1 = [task_data_1, list_0]
        callback_module_4 = module_0.CallbackModule()
        dict_0 = {bool_0: tuple_0, callback_module_3: list_1, callback_module_4: tuple_0, bool_1: task_data_1}
        host_data_0 = module_0.HostData(list_0, bytes_0, dict_0, callback_module_3)
        tuple_1 = (task_data_2, host_data_0)
        var_0 = callback_module_0.v2_playbook_on_stats(tuple_1)
        callback_module_5 = module_0.CallbackModule()
        var_1 = callback_module_5.v2_runner_on_ok(callback_module_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'temppath'
        float_0 = -3151.8
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b"\x87$\x89!\xe4n&'\xff\xf3h"
        host_data_0 = module_0.HostData(callback_module_0, bytes_0, float_0, float_0)
        int_0 = 1356
        tuple_0 = (str_0, float_0, host_data_0, int_0)
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_skipped(tuple_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '\x0b<\rh'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 615
        float_0 = 0.1
        callback_module_0 = module_0.CallbackModule()
        list_0 = [callback_module_0, callback_module_0, int_0]
        task_data_0 = module_0.TaskData(int_0, float_0, callback_module_0, list_0, callback_module_0)
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_failed(callback_module_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'xyz'
        str_1 = 'Run a command'
        str_2 = 'xyz.yml'
        str_3 = 'shell'
        task_data_0 = module_0.TaskData(str_0, str_1, str_2, str_0, str_3)
        str_4 = '0'
        str_5 = 'host1'
        str_6 = 'ok'
        str_7 = 'output1'
        host_data_0 = module_0.HostData(str_4, str_5, str_6, str_7)
        var_0 = task_data_0.add_host(host_data_0)
        var_1 = task_data_0.add_host(host_data_0)
    except BaseException:
        pass

def test_case_13():
    try:
        tuple_0 = ()
        list_0 = [tuple_0]
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, callback_module_0, callback_module_0}
        host_data_0 = module_0.HostData(list_0, callback_module_0, set_0, list_0)
        int_0 = 69
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_failed(host_data_0, int_0)
    except BaseException:
        pass