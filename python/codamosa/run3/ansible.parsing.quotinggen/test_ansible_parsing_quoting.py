# Automatically generated by Pynguin.
import ansible.parsing.quoting as module_0

def test_case_0():
    float_0 = -4527.055
    tuple_0 = (float_0,)
    var_0 = module_0.unquote(tuple_0)

def test_case_1():
    str_0 = '\n- name: Sleep for 300 seconds and continue with play\n  wait_for:\n    timeout: 300\n  delegate_to: localhost\n\n- name: Wait for port 8000 to become open on the host, don\'t start checking for 10 seconds\n  wait_for:\n    port: 8000\n    delay: 10\n\n- name: Waits for port 8000 of any IP to close active connections, don\'t start checking for 10 seconds\n  wait_for:\n    host: 0.0.0.0\n    port: 8000\n    delay: 10\n    state: drained\n\n- name: Wait for port 8000 of any IP to close active connections, ignoring connections for specified hosts\n  wait_for:\n    host: 0.0.0.0\n    port: 8000\n    state: drained\n    exclude_hosts: 10.2.1.2,10.2.1.3\n\n- name: Wait until the file /tmp/foo is present before continuing\n  wait_for:\n    path: /tmp/foo\n\n- name: Wait until the string "completed" is in the file /tmp/foo before continuing\n  wait_for:\n    path: /tmp/foo\n    search_regex: completed\n\n- name: Wait until regex pattern matches in the file /tmp/foo and print the matched group\n  wait_for:\n    path: /tmp/foo\n    search_regex: completed (?P<task>\\w+)\n  register: waitfor\n- debug:\n    msg: Completed {{ waitfor[\'match_groupdict\'][\'task\'] }}\n\n- name: Wait until the lock file is removed\n  wait_for:\n    path: /var/lock/file.lock\n    state: absent\n\n- name: Wait until the process is finished and pid was destroyed\n  wait_for:\n    path: /proc/3466/status\n    state: absent\n\n- name: Output customized message when failed\n  wait_for:\n    path: /tmp/foo\n    state: present\n    msg: Timeout to find file /tmp/foo\n\n# Do not assume the inventory_hostname is resolvable and delay 10 seconds at start\n- name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"\n  wait_for:\n    port: 22\n    host: \'{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}\'\n    search_regex: OpenSSH\n    delay: 10\n  connection: local\n\n# Same as above but you normally have ansible_connection set in inventory, which overrides \'connection\'\n- name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"\n  wait_for:\n    port: 22\n    host: \'{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}\'\n    search_regex: OpenSSH\n    delay: 10\n  vars:\n    ansible_connection: local\n'
    bytes_0 = b'V'
    var_0 = module_0.is_quoted(bytes_0)
    var_1 = module_0.is_quoted(str_0)

def test_case_2():
    str_0 = '.p)OX)k-Es#'
    set_0 = {str_0, str_0, str_0}
    var_0 = module_0.unquote(set_0)
    list_0 = [str_0, str_0]
    var_1 = module_0.unquote(list_0)
    str_1 = '"kZI;9^#!^c4S"'
    var_2 = module_0.unquote(str_1)
    str_2 = '7}-CvY$Ya=~7'
    var_3 = module_0.unquote(str_2)
    str_3 = "7/uUGs HlB'akk"
    var_4 = module_0.unquote(str_3)