# Automatically generated by Pynguin.
import ansible.plugins.filter.core as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = 45.08
    list_0 = [float_0]
    var_0 = module_0.to_nice_yaml(float_0, *list_0)

def test_case_2():
    int_0 = -936
    var_0 = module_0.to_bool(int_0)
    int_1 = 903
    var_1 = module_0.from_yaml_all(int_1)

def test_case_3():
    str_0 = 'DISTRIB_CODENAME'
    var_0 = module_0.strftime(str_0)

def test_case_4():
    list_0 = None
    var_0 = module_0.quote(list_0)

def test_case_5():
    var_0 = module_0.regex_replace()

def test_case_6():
    str_0 = 'AA;\r5f7^8'
    var_0 = module_0.regex_search(str_0, str_0)

def test_case_7():
    dict_0 = {}
    var_0 = module_0.from_yaml(dict_0)

def test_case_8():
    str_0 = 'D!$nNR*4D*y^z$CdiS{'
    var_0 = module_0.from_yaml_all(str_0)
    dict_0 = {}
    var_1 = module_0.randomize_list(dict_0)

def test_case_9():
    float_0 = -305.08
    var_0 = module_0.from_yaml_all(float_0)

def test_case_10():
    int_0 = 2379
    tuple_0 = (int_0,)
    var_0 = module_0.rand(tuple_0, tuple_0)

def test_case_11():
    str_0 = 'KVy\nx[S'
    var_0 = module_0.randomize_list(str_0)

def test_case_12():
    dict_0 = None
    var_0 = module_0.randomize_list(dict_0)

def test_case_13():
    str_0 = 'password'
    var_0 = module_0.get_hash(str_0)

def test_case_14():
    bytes_0 = b'\x01\xd0V0\xf4j\xc0x?'
    var_0 = module_0.mandatory(bytes_0)

def test_case_15():
    var_0 = module_0.combine()

def test_case_16():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.combine(*list_0, **dict_0)

def test_case_17():
    tuple_0 = ()
    list_0 = [tuple_0]
    var_0 = module_0.combine(*list_0)

def test_case_18():
    filter_module_0 = module_0.FilterModule()
    var_0 = filter_module_0.filters()

def test_case_19():
    bool_0 = True
    var_0 = module_0.quote(bool_0)
    str_0 = 'example'
    var_1 = module_0.regex_replace(str_0, str_0, str_0)

def test_case_20():
    str_0 = '/etc/ssh/ssh_config.*'
    var_0 = module_0.fileglob(str_0)

def test_case_21():
    filter_module_0 = module_0.FilterModule()
    str_0 = '.BT^\nV'
    var_0 = module_0.rand(filter_module_0, str_0)
    var_1 = module_0.combine()
    set_0 = set()
    str_1 = 'R+2{cK"Hoe Wyk'
    var_2 = module_0.regex_findall(set_0, str_1)

def test_case_22():
    bool_0 = False
    var_0 = module_0.to_json(bool_0)

def test_case_23():
    str_0 = 'mo{{I\tb@~>|"W'
    var_0 = module_0.regex_escape(str_0)

def test_case_24():
    str_0 = '-)%ljf/La@jKh'
    var_0 = module_0.comment(str_0)

def test_case_25():
    float_0 = -426.2576
    int_0 = -455
    str_0 = 'R=B{>Sp(6p'
    var_0 = module_0.randomize_list(int_0, str_0)
    var_1 = module_0.to_nice_json(float_0)

def test_case_26():
    str_0 = 'vV;E57W8'
    var_0 = module_0.regex_search(str_0, str_0)

def test_case_27():
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.combine()
    str_0 = "*137~:q~y>'Cl"
    var_1 = module_0.flatten(str_0)
    str_1 = 'D!$nNR*4D*y^z$CdiS{'
    tuple_0 = ()
    list_0 = [var_0, str_1]
    bool_0 = None
    int_0 = None
    var_2 = module_0.ternary(tuple_0, list_0, bool_0, int_0)

def test_case_28():
    str_0 = '^[0-9]+$'
    var_0 = module_0.regex_escape(str_0)
    str_1 = 'posix_basic'
    var_1 = module_0.regex_escape(str_0, str_1)

def test_case_29():
    str_0 = ''
    int_0 = 288
    var_0 = module_0.regex_search(int_0, str_0)
    str_1 = 'i3R;WL5{gf1iCwH)'
    bool_0 = None
    int_1 = 2155
    bytes_0 = b''
    list_0 = [bytes_0, var_0]
    list_1 = [bool_0, list_0, bytes_0, str_1]
    list_2 = None
    var_1 = module_0.ternary(bool_0, list_1, int_1, list_2)

def test_case_30():
    str_0 = 'name'
    str_1 = 'groups'
    str_2 = 'authorized'
    str_3 = 'alice'
    str_4 = 'wheel'
    str_5 = [str_4]
    str_6 = '/tmp/alice/onekey.pub'
    str_7 = [str_6]
    str_8 = {str_0: str_3, str_1: str_5, str_2: str_7}
    str_9 = [str_8]
    var_0 = module_0.subelements(str_9, str_1)

def test_case_31():
    bytes_0 = b'\xfb\x11\xc05,[\xc77n\xcb'
    dict_0 = {}
    bytes_1 = b'b4\x083Bt\x98\xd5\xd4\xec\xee\xd4?\xf6\xff'
    str_0 = '1fSq'
    list_0 = [dict_0, bytes_0, bytes_1, bytes_0]
    bool_0 = False
    var_0 = module_0.regex_findall(bytes_1, str_0, list_0, bool_0)
    list_1 = None
    var_1 = module_0.from_yaml_all(list_1)
    list_2 = [dict_0]
    var_2 = module_0.to_json(list_2)
    dict_1 = {}
    str_1 = 'H,.0m'
    tuple_0 = (bytes_0, dict_1, str_1)
    list_3 = [tuple_0, tuple_0]
    list_4 = [list_3, tuple_0]
    var_3 = module_0.flatten(list_4)

def test_case_32():
    str_0 = 'Test for regex_replace filter:'
    var_0 = print(str_0)
    str_1 = '[a-zA-Z]+'
    str_2 = '123-abc-456'
    str_3 = '-'
    var_1 = module_0.regex_replace(str_1, str_2, str_3)
    str_4 = 'abc'
    var_2 = module_0.regex_replace(str_4, str_2, str_3)
    str_5 = '123'
    var_3 = module_0.regex_replace(str_5, str_2, str_3)
    bool_0 = True
    var_4 = module_0.regex_replace(str_1, str_2, str_3, bool_0)
    var_5 = module_0.regex_replace(str_4, str_2, str_3, bool_0)
    var_6 = module_0.regex_replace(str_1, str_2, str_3, bool_0)
    var_7 = module_0.regex_replace(str_4, str_2, str_3, bool_0)

def test_case_33():
    str_0 = ' unit test case for fileglob() '
    str_1 = './test_*'
    var_0 = module_0.fileglob(str_1)
    str_2 = './test_fileglob'
    str_3 = [str_2, str_0]
    var_1 = var_0 == str_3

def test_case_34():
    str_0 = 'Just a simple text'
    var_0 = module_0.comment(str_0)
    str_1 = 'erlang'
    var_1 = module_0.comment(str_0, str_1)
    str_2 = 'c'
    var_2 = module_0.comment(str_0, str_2)
    str_3 = 'cblock'
    var_3 = module_0.comment(str_0, str_3)
    int_0 = 2
    var_4 = module_0.comment(str_0, str_3)
    str_4 = 'xml'
    var_5 = module_0.comment(str_0, str_4)

def test_case_35():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = 4
    int_4 = 5
    int_5 = 6
    int_6 = 7
    int_7 = 8
    int_8 = [int_6, int_7]
    int_9 = [int_8]
    int_10 = [int_9]
    int_11 = [int_10]
    int_12 = [int_1, int_5, int_11]
    int_13 = [int_2, int_3, int_12]
    int_14 = [int_0, int_1, int_13]
    var_0 = module_0.flatten(int_14)
    int_15 = [int_4]
    int_16 = [int_2, int_3, int_15]
    int_17 = [int_0, int_1, int_16]
    var_1 = module_0.flatten(int_17, int_2)
    int_18 = [int_4]
    int_19 = [int_18]
    int_20 = [int_6, int_7]
    int_21 = [int_20]
    int_22 = [int_21]
    int_23 = [int_22]
    int_24 = [int_19, int_5, int_23]
    int_25 = [int_2, int_3, int_24]
    int_26 = [int_0, int_1, int_25]
    var_2 = module_0.flatten(int_26, int_1)

def test_case_36():
    str_0 = 'banana'
    str_1 = 'a'
    str_2 = 'o'
    var_0 = module_0.regex_replace(str_0, str_1, str_2)
    bool_0 = True
    var_1 = module_0.regex_replace(str_0, str_1, str_2, bool_0)
    bool_1 = False
    var_2 = module_0.regex_replace(str_0, str_1, str_2, bool_1)
    str_3 = 'A'
    var_3 = module_0.regex_replace(str_0, str_3, str_2)
    var_4 = module_0.regex_replace(str_0, str_3, str_2, bool_0)
    var_5 = module_0.regex_replace(str_0, str_3, str_2, bool_1)
    var_6 = module_0.regex_replace(str_0, str_1, str_2, bool_0, bool_0)
    var_7 = module_0.regex_replace(str_0, str_1, str_2, bool_1, bool_0)
    var_8 = module_0.regex_replace(str_0, str_1, str_2, bool_0, bool_1)