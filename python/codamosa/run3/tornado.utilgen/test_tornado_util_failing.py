# Automatically generated by Pynguin.
import tornado.util as module_0
import builtins as module_1

def test_case_0():
    try:
        str_0 = 'YE&L&xA\x0bFB@;lh1\x0b?\x0bY'
        object_dict_0 = module_0.ObjectDict()
        any_0 = object_dict_0.__getattr__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Rya|X?ab~'
        str_1 = ' m"S\\92)^DXA'
        dict_0 = {}
        object_dict_0 = module_0.ObjectDict(**dict_0)
        object_dict_0.__setattr__(str_1, str_1)
        var_0 = module_0.raise_exc_info(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_0 = gzip_decompressor_0.flush()
        bytes_1 = b'^\xa4'
        int_0 = -202
        bytes_2 = gzip_decompressor_0.decompress(bytes_1, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '">GLysN{hQKgC~DS'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Rya|X?ab~'
        var_0 = module_0.raise_exc_info(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'tornado.escape'
        any_0 = module_0.import_object(str_0)
        str_1 = 'tornado.escape.utf8'
        base_exception_0 = module_1.BaseException()
        optional_0 = module_0.errno_from_exception(base_exception_0)
        any_1 = module_0.import_object(str_1)
        str_2 = 'tornado'
        any_2 = module_0.import_object(str_2)
        dict_0 = {str_1: str_2, str_1: any_2}
        configurable_0 = module_0.Configurable(**dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'J(?Tl4S'
        arg_replacer_0 = module_0.ArgReplacer(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = None
        var_0 = module_0.timedelta_to_seconds(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = module_0.doctests()
        str_0 = 'tornado.escape.ut8'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = None
        str_0 = 'Galician'
        str_1 = '-Wp\x0cK`x\r5B(BkOp'
        str_2 = 'mio~O(NPX+!^Qt 3T2'
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: float_0}
        module_0.exec_in(float_0, dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b''
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_1 = gzip_decompressor_0.decompress(bytes_0)
        str_0 = '\\foZzXL|U4\tZ42q'
        str_1 = module_0.re_unescape(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'W\'SrD2"Sm$Q~s`_9]'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        str_1 = ''
        str_2 = None
        str_3 = '1'
        str_4 = None
        dict_1 = {str_1: str_1, str_2: dict_0, str_3: str_2, str_4: str_3}
        module_0.exec_in(str_0, dict_1)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 3
        var_0 = lambda a, b, c: (int_0 * a, b, c)
        str_0 = ''
        arg_replacer_0 = module_0.ArgReplacer(var_0, str_0)
        int_1 = 1
        int_2 = -26
        int_3 = (int_1, int_2, int_0)
        var_1 = {}
        any_0 = arg_replacer_0.get_old_value(int_3, var_1)
        any_1 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        var_0 = None
        var_1 = lambda a, b: var_0
        str_0 = '96Y_mqQQxyW'
        arg_replacer_0 = module_0.ArgReplacer(var_1, str_0)
        int_0 = 1
        int_1 = 2
        int_2 = (int_0, int_1)
        var_2 = {}
        tuple_0 = arg_replacer_0.replace(var_0, int_2, var_2)
        var_3 = lambda a, b: var_0
        arg_replacer_1 = module_0.ArgReplacer(var_3, str_0)
        var_4 = ()
        list_0 = [arg_replacer_0, var_4, int_0]
        configurable_0 = module_0.Configurable(*list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'tornado.escape.ut8'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'tornado.escape.utf8'
        base_exception_0 = module_1.BaseException()
        optional_0 = module_0.errno_from_exception(base_exception_0)
        any_0 = module_0.import_object(str_0)
        str_1 = 'try'
        dict_0 = {}
        object_dict_0 = module_0.ObjectDict(**dict_0)
        object_dict_0.__setattr__(str_1, base_exception_0)
        str_2 = 'tornado'
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_0 = gzip_decompressor_0.flush()
        str_3 = None
        sequence_0 = None
        str_4 = 'H\x0b7{nXk=(wY9b'
        str_5 = '[V/,'
        dict_1 = {str_2: object_dict_0, str_4: gzip_decompressor_0, str_0: bytes_0, str_5: str_2}
        tuple_0 = (str_3, sequence_0, dict_1)
        var_0 = module_0.raise_exc_info(tuple_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'c6'
        str_1 = module_0.re_unescape(str_0)
        str_2 = 'Override to customize the login URL based on the request.\n\n        By default, we use the ``login_url`` application setting.\n        '
        list_0 = []
        str_3 = '&t(?s\'p"J\',\'\\(6'
        str_4 = module_0.re_unescape(str_3)
        object_dict_0 = module_0.ObjectDict(*list_0)
        object_dict_0.__setattr__(str_0, str_0)
        any_0 = module_0.import_object(str_2)
    except BaseException:
        pass