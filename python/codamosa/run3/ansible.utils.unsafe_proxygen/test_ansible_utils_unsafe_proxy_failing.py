# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0
import ansible.utils.native_jinja as module_1

def test_case_0():
    try:
        dict_0 = {}
        list_0 = []
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        str_0 = 'O\x0c'
        var_0 = module_0.wrap_var(str_0)
        var_1 = module_0.wrap_var(ansible_unsafe_0)
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText(*list_0)
        ansible_unsafe_text_1 = module_0.AnsibleUnsafeText()
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes(**dict_0)
        var_2 = ansible_unsafe_bytes_0.decode()
        var_3 = ansible_unsafe_text_1.encode()
        str_1 = 'fullclone'
        dict_1 = {str_1: ansible_unsafe_text_1, str_1: var_3}
        ansible_unsafe_bytes_1 = module_0.AnsibleUnsafeBytes(**dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        str_0 = 'Show Ansible inventory information, by default it uses the inventory script JSON format'
        var_0 = module_0.wrap_var(str_0)
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_1 = ansible_unsafe_text_0.encode()
        dict_0 = {str_0: ansible_unsafe_text_0, str_0: var_1}
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_0 = ansible_unsafe_text_0.encode()
        int_0 = 2
        bool_0 = True
        list_0 = [var_0, ansible_unsafe_text_0, tuple_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        var_1 = unsafe_proxy_0.__new__(int_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        list_0 = [ansible_unsafe_text_0]
        var_0 = module_0.wrap_var(list_0)
        dict_0 = None
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_1 = ansible_unsafe_bytes_0.decode(**dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'test_bytes: {0} : {1} : {2}'
        set_0 = None
        int_0 = -3189
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        list_0 = [set_0, set_0, str_0, int_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        dict_0 = {}
        var_0 = module_0.to_unsafe_bytes(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = None
        list_1 = [list_0, list_0]
        var_0 = module_0.wrap_var(list_1)
        str_0 = '\\+;.`.HM]>;qG=eG7Tf'
        list_2 = [str_0, str_0]
        ansible_unsafe_0 = module_0.AnsibleUnsafe(*list_2)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '+l!{LcJKMd|'
        float_0 = -577.0
        set_0 = {str_0, float_0, str_0}
        var_0 = module_0.wrap_var(set_0)
        var_1 = module_0.to_unsafe_bytes()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '+l!{LcJKMd|'
        list_0 = [str_0, str_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        var_0 = module_0.to_unsafe_bytes()
    except BaseException:
        pass

def test_case_9():
    try:
        native_jinja_text_0 = module_1.NativeJinjaText()
        list_0 = [native_jinja_text_0]
        var_0 = module_0.wrap_var(list_0)
        str_0 = '+l!{LcJKMd|'
        float_0 = -577.0
        set_0 = {str_0, float_0, str_0}
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        var_1 = module_0.wrap_var(set_0)
        list_1 = [var_1]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_1)
        var_2 = module_0.to_unsafe_bytes()
    except BaseException:
        pass