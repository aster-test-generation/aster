# Automatically generated by Pynguin.
import ansible.playbook.block as module_0

def test_case_0():
    try:
        float_0 = -46.51258
        int_0 = 1563
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
        block_0 = module_0.Block(dict_0)
        var_0 = block_0.__eq__(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'k/f_FQWElBKi%X'
        str_1 = '^>\\o~Rs\r'
        block_0 = module_0.Block(str_1)
        var_0 = block_0.has_tasks()
        list_0 = []
        str_2 = ''
        block_1 = module_0.Block(str_0, list_0, str_2)
        str_3 = '3'
        set_0 = set()
        block_2 = module_0.Block(str_3, set_0)
        var_1 = block_2.__ne__(block_1)
        block_3 = None
        bytes_0 = b'\x10\x1bi-8?\x1ff'
        tuple_0 = (bytes_0,)
        str_4 = 'dest'
        block_4 = module_0.Block(tuple_0, str_4)
        bool_0 = True
        block_5 = module_0.Block(bool_0)
        var_2 = block_3.has_tasks()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        str_0 = '+feM'
        list_0 = []
        int_0 = 4079
        set_0 = {int_0, int_0}
        block_0 = module_0.Block(set_0)
        block_1 = module_0.Block(int_0, block_0)
        var_0 = block_1.filter_tagged_tasks(list_0)
        block_2 = module_0.Block(bool_0, str_0, bool_0)
        var_1 = block_2.get_vars()
    except BaseException:
        pass

def test_case_3():
    try:
        block_0 = module_0.Block()
        str_0 = "'H5-q?94c8 stv"
        bytes_0 = b'N\x0b\xec'
        float_0 = -2400.05299
        var_0 = block_0.load(block_0, str_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        block_0 = module_0.Block()
        var_0 = block_0.preprocess_data(list_0)
        str_0 = '\t@5z4UNxDw])q'
        list_1 = []
        block_1 = module_0.Block(list_1)
        var_1 = block_1.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        float_0 = 4117.0
        block_0 = module_0.Block(dict_0, float_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'fJkU9\\w3l?.'
        list_0 = [str_0, str_0, str_0]
        block_0 = module_0.Block(str_0, list_0, list_0)
        var_0 = block_0.copy()
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        int_0 = 146
        dict_0 = {}
        list_0 = []
        block_0 = module_0.Block(list_0)
        var_0 = block_0.get_first_parent_include()
        bool_1 = False
        block_1 = module_0.Block(int_0, bool_1)
        list_1 = [bool_1, int_0, bool_0]
        block_2 = module_0.Block(int_0, block_1, list_1)
        var_1 = block_2.copy()
        var_2 = block_1.get_include_params()
        str_0 = '#S[]f\tmg(qndA'
        block_3 = module_0.Block(str_0, dict_0, str_0, int_0)
        bytes_0 = b'\x18e*\xc8\xf8\xec'
        var_3 = block_3.set_loader(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ')Q'
        str_1 = 'F@G1Y|wN[8\x0bm@j'
        block_0 = module_0.Block(str_0, str_1)
        var_0 = block_0.__repr__()
        bool_0 = True
        block_1 = module_0.Block(bool_0, block_0)
        var_1 = block_1.serialize()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'rET_4q6V\x0c\rf&yj'
        bool_0 = True
        block_0 = module_0.Block(str_0, bool_0)
        var_0 = block_0.all_parents_static()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '06135b5f-f788-c2aa-41f8-000000002150'
        block_0 = module_0.Block(str_0, str_0)
        var_0 = block_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_11():
    try:
        block_0 = module_0.Block()
        str_0 = 'bR8B:D(00[8?MZuG0W'
        var_0 = block_0.filter_tagged_tasks(str_0)
        var_1 = block_0.all_parents_static()
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 1282
        block_0 = module_0.Block(int_0)
        bool_0 = True
        float_0 = 0.0
        var_0 = block_0.get_first_parent_include()
        var_1 = block_0.filter_tagged_tasks(bool_0)
        list_0 = [int_0]
        var_2 = block_0.preprocess_data(list_0)
        str_0 = None
        var_3 = block_0.filter_tagged_tasks(str_0)
        block_1 = module_0.Block(bool_0, float_0, list_0)
        var_4 = block_1.set_loader(block_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'\x93\xfd\x10\x1d>\x88'
        bool_0 = False
        str_0 = 's0hpR!|,(8AP\r`'
        block_0 = module_0.Block(bytes_0, bool_0, str_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        float_0 = -1445.14372
        list_0 = [float_0, str_0, dict_0]
        block_0 = module_0.Block(float_0, list_0)
        bytes_0 = b'\x94\xbb\xaa\xf8\xa9\xabU\x0bP'
        bool_0 = True
        bool_1 = False
        dict_1 = {bool_0: bool_1, bool_1: bool_1}
        dict_2 = {bool_0: bytes_0, bool_0: bool_0, bool_1: bytes_0, bytes_0: dict_1}
        list_1 = None
        tuple_0 = (bool_0, bool_1, dict_2, list_1)
        block_1 = module_0.Block()
        block_2 = module_0.Block(tuple_0, block_1)
        str_1 = 'G=,qLpB|Sc'
        block_3 = module_0.Block(bytes_0, block_2, str_1)
        var_0 = block_3.load(dict_0, block_0, block_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 146
        bool_0 = True
        block_0 = module_0.Block(bool_0)
        float_0 = None
        var_0 = block_0.set_loader(float_0)
        var_1 = block_0.has_tasks()
        str_0 = 'TbKE|0&'
        dict_0 = {}
        block_1 = module_0.Block(str_0, dict_0)
        var_2 = block_1.get_dep_chain()
        dict_1 = {}
        var_3 = block_1.preprocess_data(block_1)
        bool_1 = False
        block_2 = module_0.Block(int_0, bool_1)
        list_0 = [bool_1]
        block_3 = module_0.Block(int_0, block_2, list_0)
        var_4 = block_3.copy()
        str_1 = '4'
        var_5 = block_2.filter_tagged_tasks(str_1)
        var_6 = block_2.serialize()
        var_7 = block_3.get_dep_chain()
        var_8 = block_2.get_include_params()
        var_9 = block_3.all_parents_static()
        var_10 = block_3.preprocess_data(dict_1)
        var_11 = block_2.get_vars()
        tuple_0 = None
        tuple_1 = (tuple_0,)
        block_4 = module_0.Block(tuple_1, block_3)
        var_12 = block_4.serialize()
    except BaseException:
        pass

def test_case_16():
    try:
        block_0 = module_0.Block()
        var_0 = block_0.has_tasks()
        var_1 = block_0.copy()
        list_0 = []
        block_1 = module_0.Block(var_1)
        str_0 = ',ak!o,\\\tFO+x'
        block_2 = module_0.Block(list_0, str_0, block_0)
        var_2 = block_2.serialize()
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'depich1aiY'
        str_1 = 'block'
        str_2 = 'always'
        var_0 = None
        str_3 = 'action'
        str_4 = 'args'
        str_5 = 'when'
        str_6 = 'foo'
        str_7 = "baz == 'foo'"
        str_8 = {str_3: str_6, str_4: str_7, str_5: str_7}
        str_9 = [str_8]
        str_10 = 'always-do-something'
        str_11 = {str_3: str_10}
        str_12 = [str_11]
        var_1 = {str_0: var_0, str_1: str_9, str_2: str_12}
        block_0 = module_0.Block()
        var_2 = block_0.deserialize(var_1)
        int_0 = 0
        var_3 = block_0.block[int_0]
    except BaseException:
        pass