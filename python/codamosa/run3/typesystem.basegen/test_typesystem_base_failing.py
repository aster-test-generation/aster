# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    try:
        int_0 = 1303
        position_0 = module_0.Position(int_0, int_0, int_0)
        str_0 = 'v\x0bV9vpQo|$7'
        message_0 = module_0.Message(text=str_0, position=position_0, end_position=position_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '"nga3, A|D&>/yJ#'
        validation_result_0 = module_0.ValidationResult()
        str_1 = validation_result_0.__repr__()
        int_0 = 1652
        int_1 = -2939
        position_0 = module_0.Position(int_0, int_0, int_1)
        base_error_0 = module_0.BaseError(text=str_0, position=position_0)
        int_2 = base_error_0.__hash__()
        var_0 = base_error_0.__getitem__(int_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'j*\x0b~$A=_r%'
        int_0 = 2
        position_0 = module_0.Position(int_0, int_0, int_0)
        base_error_0 = module_0.BaseError(text=str_0, position=position_0)
        str_1 = base_error_0.__str__()
        str_2 = "('H"
        int_1 = 1098
        message_0 = module_0.Message(text=str_2, start_position=position_0, end_position=position_0)
        str_3 = message_0.__repr__()
        int_2 = message_0.__hash__()
        str_4 = message_0.__repr__()
        bool_0 = message_0.__eq__(int_1)
        bool_1 = message_0.__eq__(message_0)
        list_0 = []
        base_error_1 = module_0.BaseError(messages=list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        base_error_0 = module_0.BaseError(code=list_0, messages=list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        base_error_0 = module_0.BaseError()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'N~cN1WL\n/_l. ^'
        float_0 = -2159.955
        tuple_0 = (float_0,)
        int_0 = 1399
        position_0 = module_0.Position(int_0, int_0, int_0)
        bool_0 = position_0.__eq__(tuple_0)
        validation_result_0 = module_0.ValidationResult(error=str_0)
        str_1 = validation_result_0.__repr__()
        int_1 = 3
        int_2 = 1477
        int_3 = -128
        bool_1 = position_0.__eq__(int_3)
        position_1 = module_0.Position(int_2, int_2, int_3)
        int_4 = -3295
        int_5 = -154
        position_2 = module_0.Position(int_4, int_1, int_5)
        base_error_0 = module_0.BaseError(code=position_2, position=position_2)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -2508
        str_0 = "String reference missing 'definitions'."
        int_1 = 2156
        list_0 = [int_0, str_0, int_1]
        validation_result_0 = module_0.ValidationResult()
        iterator_0 = validation_result_0.__iter__()
        tuple_0 = (iterator_0, iterator_0)
        int_2 = 4
        position_0 = module_0.Position(int_1, int_2, int_2)
        message_0 = module_0.Message(text=str_0, index=list_0, position=tuple_0, start_position=position_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'KY\t4g{S>[D^s*O69'
        list_0 = []
        base_error_0 = module_0.BaseError(key=str_0, messages=list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'r#Vb'
        dict_0 = {}
        str_1 = 'boolean_schema'
        list_0 = []
        message_0 = module_0.Message(text=str_1, index=list_0)
        list_1 = [message_0, message_0]
        base_error_0 = module_0.BaseError(text=str_0, code=str_0, key=str_0, position=dict_0, messages=list_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '0'
        message_0 = module_0.Message(text=str_0, code=str_0)
        list_0 = [message_0]
        base_error_0 = module_0.BaseError(messages=list_0)
        list_1 = base_error_0.messages()
        int_0 = 1
        int_1 = -1662
        position_0 = module_0.Position(int_0, int_0, int_1)
        parse_error_0 = module_0.ParseError()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'G%p\ti(ayZ~{\\#Ah'
        int_0 = 1
        int_1 = 898
        list_0 = []
        position_0 = module_0.Position(int_0, int_0, int_1)
        message_0 = module_0.Message(text=str_0, code=str_0, key=int_0, index=list_0, position=position_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -582
        str_0 = "('H"
        int_1 = 1098
        message_0 = module_0.Message(text=str_0, start_position=int_1)
        int_2 = 323
        int_3 = -2012
        position_0 = module_0.Position(int_3, int_2, int_0)
        int_4 = 1098
        int_5 = None
        int_6 = -321
        position_1 = module_0.Position(int_4, int_5, int_6)
        bool_0 = position_0.__eq__(position_1)
        str_1 = message_0.__repr__()
        validation_result_0 = module_0.ValidationResult()
        iterator_0 = validation_result_0.__iter__()
        validation_result_1 = module_0.ValidationResult(value=message_0)
        str_2 = '|\rtm[[V=.Q'
        base_error_0 = module_0.BaseError(code=str_2)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'j*\x0b~$A=_r%'
        int_0 = 2
        position_0 = module_0.Position(int_0, int_0, int_0)
        base_error_0 = module_0.BaseError(text=str_0, position=position_0)
        str_1 = base_error_0.__str__()
        int_1 = -582
        str_2 = "('H"
        int_2 = 1098
        message_0 = module_0.Message(text=str_2, start_position=int_2)
        str_3 = message_0.__repr__()
        int_3 = message_0.__hash__()
        str_4 = message_0.__repr__()
        bool_0 = message_0.__eq__(int_2)
        int_4 = 1159
        int_5 = 3
        position_1 = module_0.Position(int_1, int_4, int_5)
        str_5 = position_1.__repr__()
        position_2 = module_0.Position(int_1, int_5, int_5)
        list_0 = [message_0, message_0, message_0, message_0]
        base_error_1 = module_0.BaseError(position=position_1, messages=list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = 1800.0
        int_0 = -582
        list_0 = []
        int_1 = -2012
        int_2 = 1098
        position_0 = module_0.Position(int_1, int_2, int_0)
        int_3 = 1098
        int_4 = None
        int_5 = -321
        position_1 = module_0.Position(int_3, int_4, int_5)
        bool_0 = position_0.__eq__(position_1)
        validation_result_0 = module_0.ValidationResult()
        iterator_0 = validation_result_0.__iter__()
        validation_result_1 = module_0.ValidationResult(value=list_0, error=float_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = None
        int_0 = -990
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_0, start_position=position_0)
        list_0 = [message_0, message_0, message_0]
        list_1 = [list_0, list_0, list_0, message_0]
        str_1 = 'TG'
        int_1 = 1090
        int_2 = -299
        int_3 = 2732
        position_1 = module_0.Position(int_1, int_2, int_3)
        message_1 = module_0.Message(text=str_1, code=str_1, key=str_1, start_position=position_1)
        bool_0 = message_1.__eq__(list_1)
        str_2 = "\r*<;V'"
        str_3 = 'range'
        int_4 = -1625
        int_5 = -1357
        position_2 = module_0.Position(int_4, int_4, int_5)
        message_2 = module_0.Message(text=str_2)
        list_2 = [message_2, message_2, message_2]
        base_error_0 = module_0.BaseError(messages=list_2)
        str_4 = base_error_0.__str__()
        message_3 = module_0.Message(text=str_2, index=str_3, position=position_2, end_position=position_2)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'qe4j6\t$;1yy'
        int_0 = -649
        int_1 = 1083
        int_2 = 1267
        position_0 = module_0.Position(int_0, int_1, int_2)
        message_0 = module_0.Message(text=str_0, start_position=position_0, end_position=position_0)
        int_3 = message_0.__hash__()
        str_1 = None
        message_1 = module_0.Message(text=str_1)
        list_0 = [message_1, message_1, message_1, message_1]
        validation_result_0 = module_0.ValidationResult()
        base_error_0 = module_0.BaseError(code=str_1, messages=list_0)
        iterator_0 = validation_result_0.__iter__()
        str_2 = base_error_0.__repr__()
        base_error_1 = module_0.BaseError(key=str_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'UsrVna srequir2g;ed'
        list_0 = [str_0, str_0]
        message_0 = module_0.Message(text=str_0, code=str_0, index=list_0)
        bool_0 = message_0.__eq__(str_0)
        list_1 = [message_0, message_0]
        bool_1 = message_0.__eq__(list_1)
        base_error_0 = module_0.BaseError(messages=list_1)
        iterator_0 = base_error_0.__iter__()
        base_error_1 = module_0.BaseError()
    except BaseException:
        pass