# Automatically generated by Pynguin.
import httpie.cli.argtypes as module_0
import httpie.cli.requestitems as module_1

def test_case_0():
    try:
        str_0 = 'C2fT\\|(('
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        str_1 = module_1.process_empty_header_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_1():
    try:
        key_value_arg_0 = None
        str_0 = module_1.process_query_param_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        tuple_0 = module_1.process_file_upload_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'L~H8\nzd,^EmFjiW[ kLV'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        str_1 = module_1.process_data_embed_file_contents_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'W'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        var_0 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'User-Agent'
        str_1 = '/'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_1, str_1)
        var_0 = module_1.process_data_raw_json_embed_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\n    Controls output processing. The value can be "none" to not prettify\n    the output (default for redirected output), "all" to apply both colors\n    and formatting (default for terminal output), "colors", or "format".\n\n    '
        str_1 = 'r"ND^r'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_1)
        var_0 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '0'
        str_1 = 'H.y|M(8\\LvYc8'
        str_2 = 'hVn'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_2, str_0)
        str_3 = module_1.process_data_item_arg(key_value_arg_0)
        request_items_0 = module_1.RequestItems(str_3)
        optional_0 = module_1.process_header_arg(key_value_arg_0)
        str_4 = 'bC Q N4V;F'
        key_value_arg_1 = module_0.KeyValueArg(str_4, str_2, str_2, str_1)
        tuple_0 = module_1.process_file_upload_arg(key_value_arg_0)
        var_0 = key_value_arg_0.__repr__()
        tuple_1 = module_1.process_file_upload_arg(key_value_arg_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ''
        str_1 = '$'
        str_2 = '\r'
        key_value_arg_0 = module_0.KeyValueArg(str_2, str_0, str_2, str_1)
        optional_0 = module_1.process_header_arg(key_value_arg_0)
        key_value_arg_1 = module_0.KeyValueArg(str_0, str_0, str_1, str_1)
        tuple_0 = module_1.process_file_upload_arg(key_value_arg_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = None
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        str_1 = module_1.process_query_param_arg(key_value_arg_0)
        var_0 = key_value_arg_0.__repr__()
        str_2 = module_1.load_text_file(key_value_arg_0)
    except BaseException:
        pass

def test_case_10():
    try:
        request_items_0 = module_1.RequestItems()
        str_0 = None
        str_1 = "e}m&,ov#ob@'ZZ7\x0b=g"
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_1, str_1)
        var_0 = module_1.process_data_raw_json_embed_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ''
        str_1 = '$'
        str_2 = '\r'
        key_value_arg_0 = module_0.KeyValueArg(str_2, str_0, str_2, str_1)
        str_3 = module_1.process_empty_header_arg(key_value_arg_0)
        key_value_arg_1 = module_0.KeyValueArg(str_0, str_0, str_1, str_1)
        tuple_0 = module_1.process_file_upload_arg(key_value_arg_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '0'
        str_1 = 'H.y|M(8\\LvYc8'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_1)
        str_2 = 'hVn'
        tuple_0 = module_1.process_file_upload_arg(key_value_arg_0)
        key_value_arg_1 = module_0.KeyValueArg(str_0, str_0, str_2, str_0)
        str_3 = module_1.process_data_item_arg(key_value_arg_1)
        var_0 = module_1.process_data_raw_json_embed_arg(key_value_arg_1)
        str_4 = '#af0(000'
        str_5 = '\rE+6MIf(xBy'
        key_value_arg_2 = module_0.KeyValueArg(str_5, str_5, str_2, str_4)
        var_1 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'text_file.txt'
        str_1 = 'w'
        var_0 = open(str_0, str_1)
        str_2 = 'arg_orig'
        str_3 = ';'
        str_4 = 'data'
        key_value_arg_0 = module_0.KeyValueArg(str_4, str_0, str_3, str_2)
        str_5 = module_1.load_text_file(key_value_arg_0)
        str_6 = 'json_file.json'
        var_1 = open(str_6, str_1)
        key_value_arg_1 = module_0.KeyValueArg(str_4, str_6, str_3, str_2)
        var_2 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_1)
    except BaseException:
        pass