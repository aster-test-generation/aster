# Automatically generated by Pynguin.
import ansible.plugins.callback.default as module_0

def test_case_0():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_poll(callback_module_0)
    except BaseException:
        pass

def test_case_1():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.set_options()
    except BaseException:
        pass

def test_case_2():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        float_0 = -2359.3
        bytes_0 = b'\xbe\xb2\xdbA\xff\xdd1q-\xf34\xc0'
        int_0 = -1465
        set_0 = {callback_module_1, int_0}
        var_0 = callback_module_0.v2_playbook_on_notify(bytes_0, set_0)
        callback_module_2 = module_0.CallbackModule()
        var_1 = callback_module_2.v2_runner_on_failed(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = False
        var_0 = callback_module_0.v2_runner_on_ok(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        callback_module_0 = module_0.CallbackModule()
        dict_0 = {callback_module_0: callback_module_0, callback_module_0: callback_module_0, callback_module_0: callback_module_0, callback_module_0: callback_module_0}
        float_0 = -2359.3
        var_0 = callback_module_0.v2_playbook_on_notify(dict_0, float_0)
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_runner_on_skipped(callback_module_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '3=%Dm\r d;hT\nQ'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_unreachable(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xba\x95\xad\xbe\xb6\xf4\xdd>H\x83. '
        dict_0 = {}
        list_0 = [dict_0, bytes_0]
        float_0 = -1812.9
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        var_1 = callback_module_0.v2_playbook_on_notify(list_0, float_0)
        callback_module_1 = module_0.CallbackModule()
        dict_1 = None
        callback_module_2 = module_0.CallbackModule()
        var_2 = callback_module_2.v2_playbook_on_start(dict_1)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        bool_0 = False
        var_1 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        callback_module_1 = module_0.CallbackModule()
        var_2 = callback_module_1.v2_playbook_on_task_start(callback_module_0, bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = 'unable to access ansible.module_utils.basic._ANSIBLE_ARGS (not launched by AnsiballZ?)'
        var_0 = callback_module_0.v2_playbook_on_task_start(callback_module_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        tuple_0 = ()
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(tuple_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ';G79\x0c9RP+sT\t'
        bool_0 = False
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_start(str_0, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = 'G)\x0b}QGA0L(d<+#JJ'
        var_0 = callback_module_0.v2_on_file_diff(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '{0}(path={1})'
        bytes_0 = b'\xba\x95\xad\xbe\xb6\xf4\xdd>H\x83. '
        dict_0 = {str_0: bytes_0, bytes_0: str_0, bytes_0: str_0, bytes_0: str_0}
        tuple_0 = (dict_0,)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_notify(bytes_0, tuple_0)
        var_1 = callback_module_0.v2_runner_item_on_failed(callback_module_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = 373.0
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_skipped(float_0)
    except BaseException:
        pass

def test_case_15():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        bytes_0 = b'\xb2\xeb\xc6\x8eJ\x91l\x83\x9a\xe8-\x0f\xe6\xc8\x8e\xf8V'
        var_0 = callback_module_0.v2_playbook_on_include(bytes_0)
    except BaseException:
        pass

def test_case_16():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = True
        var_0 = callback_module_0.v2_playbook_on_stats(bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'U8E'
        dict_0 = {str_0: str_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_retry(dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_async_ok(callback_module_0)
    except BaseException:
        pass

def test_case_19():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        float_0 = 512.0
        var_1 = callback_module_0.v2_playbook_on_no_hosts_matched()
        var_2 = callback_module_0.v2_runner_on_async_failed(float_0)
    except BaseException:
        pass

def test_case_20():
    try:
        tuple_0 = ()
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_ok(tuple_0)
    except BaseException:
        pass

def test_case_21():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        float_0 = None
        var_0 = callback_module_1.v2_playbook_on_play_start(float_0)
    except BaseException:
        pass

def test_case_22():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(callback_module_0)
    except BaseException:
        pass