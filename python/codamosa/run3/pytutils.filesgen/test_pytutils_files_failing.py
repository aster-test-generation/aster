# Automatically generated by Pynguin.
import pytutils.files as module_0

def test_case_0():
    try:
        str_0 = 'ZvDXYM;@*PZ20\t,5'
        int_0 = 743
        var_0 = module_0.islurp(str_0, int_0)
        str_1 = '%(asctime)s| %(name)s/%(processName)s[%(process)d]-%(threadName)s[%(thread)d]: %(message)s @%(funcName)s:%(lineno)d #%(levelname)s'
        str_2 = None
        bool_0 = False
        bytes_0 = b'\x08!n5\x98\x9e'
        set_0 = set()
        var_1 = module_0.burp(str_1, str_2, bool_0, bytes_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '8(Cx8'
        set_0 = None
        var_0 = module_0.burp(str_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '8(Cx0'
        set_0 = None
        var_0 = module_0.burp(str_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'test'
        str_1 = '\rK'
        str_2 = 'line3\n'
        str_3 = '-'
        list_0 = [str_1]
        var_0 = module_0.islurp(list_0, str_3)
        bool_0 = True
        var_1 = module_0.islurp(str_3, str_2, str_0, bool_0, bool_0, str_3)
        var_2 = list(str_0)
        var_3 = module_0.islurp(str_3, str_1, str_0, bool_0, bool_0, bool_0)
        var_4 = list(var_3)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'wb'
        str_1 = 'E'
        bool_0 = True
        var_0 = module_0.islurp(str_1, str_0, str_1, bool_0, bool_0, bool_0)
        var_1 = list(var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'E'
        bool_0 = True
        var_0 = module_0.islurp(str_0, str_0, str_0, bool_0, bool_0, bool_0)
        var_1 = list(var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'line1\n'
        str_1 = 'testfile'
        str_2 = 'wb'
        var_0 = open(str_1, str_2)
        str_3 = '-'
        bool_0 = False
        var_1 = module_0.islurp(str_3, str_0, str_3, bool_0, bool_0, bool_0)
        var_2 = list(var_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '-'
        str_1 = 'G'
        bool_0 = True
        var_0 = module_0.burp(str_0, str_1, bool_0)
        list_0 = [str_1, bool_0, str_1]
        set_0 = set()
        bool_1 = False
        var_1 = module_0.burp(str_0, list_0, set_0, bool_1)
    except BaseException:
        pass