# Automatically generated by Pynguin.
import flutils.codecs.b64 as module_0
import collections as module_1
import codecs as module_2

def test_case_0():
    try:
        str_0 = 'author'
        tuple_0 = module_0.encode(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        tuple_0 = module_0.decode(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = None
        str_0 = 'RM$+z '
        tuple_0 = module_0.encode(str_0)
        str_1 = ''
        tuple_1 = module_0.encode(str_1, str_1)
        list_0 = [set_0, set_0, set_0, set_0]
        int_0 = 2234
        tuple_2 = (list_0, int_0, set_0)
        tuple_3 = (tuple_2,)
        list_1 = [tuple_3, tuple_3]
        module_0.register()
        user_string_0 = module_1.UserString(tuple_3)
        tuple_4 = module_0.decode(list_1, user_string_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        user_string_0 = module_1.UserString(dict_0)
        tuple_0 = module_0.encode(user_string_0)
        module_0.register()
        str_0 = '0Pp8wn]Dl6m(Y$.n.'
        var_0 = module_2.getdecoder(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        module_0.register()
        str_0 = 'G/M\nsd+&r2ni'
        int_0 = 2397
        tuple_0 = (str_0, int_0)
        user_string_0 = module_1.UserString(tuple_0)
        tuple_1 = module_0.decode(user_string_0, user_string_0)
    except BaseException:
        pass