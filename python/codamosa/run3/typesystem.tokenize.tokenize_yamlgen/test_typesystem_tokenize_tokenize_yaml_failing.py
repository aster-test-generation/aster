# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_yaml as module_0
import typesystem.fields as module_1

def test_case_0():
    try:
        str_0 = 'bk2NLX#o&C\tT'
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '/:*'
        any_0 = module_0.validate_yaml(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        any_0 = module_0.validate_yaml(str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x07&8\xf6.C\x13]L{\xae}4\x12\x07\x8c+'
        token_0 = module_0.tokenize_yaml(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '/:'
        any_0 = module_0.validate_yaml(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Pp0|(5H(,Q\x0bg_hF'
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\n    - 123\n    - abc\n    - 4\n    - true\n    - false\n    - null\n    - 0.1\n    - 0.1-0\n    - 0.1.0\n    - 0.1.0.0\n    - 0-1\n    - -true\n    - [0.1, 0.2, 0.3]\n    - \n        - abc: 123\n          def: 456\n        - ghi: 123\n          jkl: 456\n    '
        field_0 = module_1.Field()
        field_1 = module_1.Field()
        field_2 = module_1.Field()
        field_3 = module_1.Field()
        any_0 = module_0.validate_yaml(str_0, field_1)
    except BaseException:
        pass