# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    try:
        ansible_j2_vars_0 = None
        bytes_0 = b'\xa8g\xb78\xaf\x89'
        set_0 = set()
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(bytes_0, set_0)
        var_0 = ansible_j2_vars_1.__contains__(ansible_j2_vars_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = None
        set_0 = {int_0, int_0, int_0, int_0}
        list_0 = []
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(set_0, set_0, list_0)
        var_0 = ansible_j2_vars_0.__iter__()
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 443
        bytes_0 = b'}\x83e=\xae'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_0, bytes_0)
        var_0 = ansible_j2_vars_0.__len__()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        str_0 = 'R+@ AJ~Knr\rIsO'
        int_0 = 2585
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, int_0)
        var_0 = ansible_j2_vars_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "role '%s' params"
        int_0 = -356
        set_0 = {int_0, int_0, int_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_0, set_0)
        var_0 = ansible_j2_vars_0.add_locals(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 443
        bytes_0 = b'}\x83e=\xae'
        tuple_0 = ()
        int_1 = -1106
        dict_0 = {int_1: bytes_0, bytes_0: int_0, bytes_0: int_1}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_1, dict_0)
        var_0 = ansible_j2_vars_0.add_locals(tuple_0)
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(int_0, bytes_0)
        var_1 = ansible_j2_vars_1.__len__()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'an\x0cibleK3'
        str_1 = 'ok'
        str_2 = 'l_ansi"le_3'
        list_0 = None
        int_0 = 989
        bool_0 = False
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_0, bool_0)
        var_0 = ansible_j2_vars_0.add_locals(list_0)
        str_3 = 'ansible_4'
        str_4 = {str_1: str_3, str_1: str_3, str_2: str_3, str_3: str_2}
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(str_0, str_0, str_4)
        var_1 = ansible_j2_vars_1.__getitem__(str_3)
        bool_1 = True
        int_1 = None
        tuple_0 = (int_1,)
        set_0 = set()
        ansible_j2_vars_2 = module_0.AnsibleJ2Vars(bool_1, tuple_0, set_0)
        ansible_j2_vars_3 = module_0.AnsibleJ2Vars(tuple_0, set_0)
        var_2 = ansible_j2_vars_2.__getitem__(int_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'ok'
        str_1 = 'l_ansible_3'
        str_2 = '6Dg'
        str_3 = {str_1: str_0, str_2: str_2}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_3, str_1, str_3)
        var_0 = ansible_j2_vars_0.__getitem__(str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = None
        str_0 = 'local_va,'
        str_1 = {str_0: str_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(var_0, str_0, str_1)
        var_1 = ansible_j2_vars_0.__contains__(str_0)
        str_2 = 'fvo~'
        var_2 = ansible_j2_vars_0.__contains__(str_2)
    except BaseException:
        pass