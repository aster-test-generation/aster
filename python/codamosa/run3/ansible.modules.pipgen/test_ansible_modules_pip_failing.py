# Automatically generated by Pynguin.
import ansible.modules.pip as module_0

def test_case_0():
    try:
        int_0 = 476
        str_0 = None
        str_1 = '-V^'
        set_0 = set()
        float_0 = 618.427
        bool_0 = None
        dict_0 = {float_0: str_0, bool_0: set_0, int_0: float_0}
        var_0 = module_0.setup_virtualenv(str_0, str_1, set_0, float_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        package_0 = module_0.Package(dict_0)
        bool_0 = True
        tuple_0 = (package_0, dict_0, package_0, bool_0)
        str_0 = 'nWo'
        package_1 = module_0.Package(tuple_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        package_0 = module_0.Package(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Xi!5c+`O:<eld*kSrN'
        package_0 = module_0.Package(str_0)
        float_0 = None
        package_1 = module_0.Package(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'f\x11z)'
        str_0 = ';B-.h$<i'
        package_0 = module_0.Package(str_0)
        var_0 = package_0.is_satisfied_by(bytes_0)
        bool_0 = True
        package_1 = module_0.Package(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'nit-aEt'
        package_0 = module_0.Package(str_0)
        var_0 = package_0.is_satisfied_by(package_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '2?'
        package_0 = module_0.Package(str_0)
        var_0 = package_0.__str__()
        str_1 = 'nit-at'
        package_1 = module_0.Package(str_1)
        complex_0 = None
        var_1 = package_1.is_satisfied_by(complex_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'XzoS.^ZNITo,rM +['
        bool_0 = False
        list_0 = [str_0, str_0, str_0, str_0]
        package_0 = module_0.Package(list_0)
        var_0 = package_0.__str__()
        var_1 = package_0.is_satisfied_by(bool_0)
        var_2 = package_0.__str__()
        str_1 = None
        var_3 = package_0.is_satisfied_by(str_1)
        str_2 = '>B=uvHDh1-'
        tuple_0 = ()
        package_1 = module_0.Package(str_2, tuple_0)
        float_0 = 4403.2092
        var_4 = package_1.is_satisfied_by(float_0)
        var_5 = package_1.__str__()
        bool_1 = False
        str_3 = '6Xf'
        package_2 = module_0.Package(bool_1, str_3)
    except BaseException:
        pass