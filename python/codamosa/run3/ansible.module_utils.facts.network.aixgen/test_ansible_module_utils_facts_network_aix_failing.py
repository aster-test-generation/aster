# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.aix as module_0

def test_case_0():
    try:
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector()
        float_0 = -504.3
        str_0 = ':v7^\r6}w[y\n@h~bd,!\\-'
        str_1 = 'Ua'
        tuple_0 = (float_0, str_0, str_1)
        bool_0 = True
        a_i_x_network_0 = module_0.AIXNetwork(bool_0)
        a_i_x_network_1 = module_0.AIXNetwork(tuple_0, a_i_x_network_0)
        a_i_x_network_collector_1 = module_0.AIXNetworkCollector(a_i_x_network_1)
        a_i_x_network_2 = module_0.AIXNetwork(a_i_x_network_collector_1)
        var_0 = a_i_x_network_2.get_default_interfaces(a_i_x_network_collector_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -1135.345026
        dict_0 = {}
        a_i_x_network_0 = module_0.AIXNetwork(dict_0)
        var_0 = a_i_x_network_0.get_interfaces_info(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        list_0 = [set_0, set_0, set_0]
        str_0 = ' j"G"p\r'
        a_i_x_network_0 = module_0.AIXNetwork(str_0)
        var_0 = a_i_x_network_0.parse_interface_line(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = None
        str_0 = "K%L_uZ'@o34M$"
        set_0 = {tuple_0, tuple_0, tuple_0, str_0}
        list_0 = [str_0, str_0, set_0, tuple_0]
        str_1 = 'P@M:7j*XZ'
        a_i_x_network_0 = module_0.AIXNetwork(str_1)
        var_0 = a_i_x_network_0.parse_interface_line(list_0)
    except BaseException:
        pass