# Automatically generated by Pynguin.
import ansible.plugins.action.pause as module_0

def test_case_0():
    try:
        str_0 = 'block_end_string'
        set_0 = {str_0, str_0, str_0}
        var_0 = module_0.timeout_handler(str_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n    Timeout decorator to expire after a set number of seconds.  This raises an\n    ansible.module_utils.facts.TimeoutError if the timeout is hit before the\n    function completes.\n    '
        var_0 = module_0.clear_line(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '!p"xV1(oTX:VRfp'
        str_1 = 'tarring %s from %s to %s'
        bool_0 = False
        float_0 = -1478.22
        str_2 = 'qb:\r27yYDb3'
        str_3 = ';dH;*A:;}HQ4'
        int_0 = 232
        set_0 = {float_0, bool_0, int_0}
        dict_0 = {str_2: str_0, str_3: set_0}
        action_module_0 = module_0.ActionModule(str_0, str_1, bool_0, float_0, dict_0, set_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        str_0 = '5S`By'
        bool_1 = True
        list_0 = []
        int_0 = 254
        bool_2 = False
        bool_3 = True
        list_1 = [bool_3, bool_2]
        tuple_0 = (bool_2, list_1)
        str_1 = '\n        Compiles and returns the task list for this play, compiled from the\n        roles (which are themselves compiled recursively) and/or the list of\n        tasks specified in the play.\n        '
        str_2 = 'LwSsB^Z_\x0c_/PGs%YHanx'
        dict_0 = {str_1: int_0, str_2: str_1}
        str_3 = '{0]2'
        int_1 = 3716
        bytes_0 = b"\x8a\xe2\x89\x8c%'4\xb8\r\x81U\xb1\xa8\xd9Z>"
        set_0 = {int_0}
        str_4 = '\n        Return the version of the OS distribution, as a tuple of version\n        numbers.\n\n        For details, see :func:`distro.version_parts`.\n        '
        action_module_0 = module_0.ActionModule(bytes_0, set_0, str_4, set_0, list_1, tuple_0)
        float_0 = -726.381
        action_module_1 = module_0.ActionModule(tuple_0, str_3, int_1, action_module_0, float_0, tuple_0)
        float_1 = 0.001
        bytes_1 = b'w\xf4\t\xd4'
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        action_module_2 = module_0.ActionModule(action_module_1, float_1, str_0, bytes_1, bytes_1, ansible_timeout_exceeded_0)
        action_module_3 = module_0.ActionModule(list_1, bool_0, str_0, dict_0, int_0, action_module_2)
        action_module_4 = module_0.ActionModule(int_0, tuple_0, list_1, action_module_3, ansible_timeout_exceeded_0, action_module_0)
        var_0 = action_module_4.run(bool_1, list_0)
    except BaseException:
        pass