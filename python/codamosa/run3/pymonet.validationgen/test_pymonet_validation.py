# Automatically generated by Pynguin.
import pymonet.validation as module_0

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'\xdb\xf6\xa4\x02\xc9~7\x0e\xb2\xc59'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()

def test_case_2():
    float_0 = 1868.64
    set_0 = {float_0, float_0, float_0, float_0}
    list_0 = None
    bytes_0 = b'\xc6'
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.__eq__(list_0)
    bool_0 = False
    bytes_1 = b'\t\xaa\x04J\xc7'
    validation_1 = module_0.Validation(bool_0, bytes_1)
    var_1 = validation_1.is_fail()
    var_2 = validation_0.to_lazy()

def test_case_3():
    float_0 = -1986.0
    bytes_0 = b'\xffE\x8b\xebj\x13-\xe2\xea\xca\xa4\xd2\x0b\xd1\xa8\xc4\x82\x81\x91'
    int_0 = False
    validation_0 = module_0.Validation(bytes_0, int_0)
    var_0 = validation_0.to_lazy()
    str_0 = 'Xzd[]'
    dict_0 = {float_0: float_0}
    validation_1 = module_0.Validation(str_0, dict_0)
    var_1 = validation_1.__str__()
    set_0 = {float_0, float_0, float_0, float_0}
    validation_2 = module_0.Validation(float_0, set_0)
    var_2 = validation_2.__str__()

def test_case_4():
    str_0 = '\n        Return rejected Task with stored value argument.\n\n        :param value: value to store in Task\n        :type value: A\n        :returns: rejected Task\n        :rtype: Task[Function(reject, _) -> A]\n        '
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()

def test_case_5():
    bool_0 = True
    str_0 = 'Lp(Sh:{IzT'
    list_0 = [str_0, bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_try()

def test_case_6():
    float_0 = 1868.64
    set_0 = {float_0, float_0, float_0, float_0}
    list_0 = None
    bytes_0 = b'\xc6'
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.__eq__(list_0)
    bool_0 = True
    bytes_1 = b'\t\xaa\x04J\xc7'
    validation_1 = module_0.Validation(bool_0, bytes_1)
    var_1 = validation_1.__eq__(bool_0)
    var_2 = validation_0.is_fail()
    var_3 = validation_1.to_either()
    var_4 = validation_1.__str__()
    var_5 = validation_1.is_success()
    var_6 = validation_0.__eq__(validation_1)
    var_7 = validation_0.is_fail()