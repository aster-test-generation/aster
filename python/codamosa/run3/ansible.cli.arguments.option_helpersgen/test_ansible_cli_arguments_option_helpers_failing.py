# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    try:
        float_0 = -787.31575
        bytes_0 = b'@\x8d\xbe'
        int_0 = 2553
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bytes_0, int_0, float_0)
        bool_0 = False
        prepend_list_action_0 = module_0.PrependListAction(float_0, unrecognized_argument_0, float_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        int_0 = -1418
        str_0 = '#`dE!*k,.Z|qw\rU r-F['
        float_0 = 1556.97
        int_1 = 334
        bool_1 = False
        bytes_0 = b'&'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(float_0, int_1, bool_1, bytes_0)
        var_0 = unrecognized_argument_0.__call__(bool_0, int_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = module_0.version()
        set_0 = set()
        var_1 = module_0.add_verbosity_options(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xdc\x19\xbe\x06\x86\x03\xa2'
        var_0 = module_0.add_async_options(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        var_0 = module_0.add_module_options(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'default'
        argument_parser_0 = module_1.ArgumentParser()
        var_0 = module_0.add_module_options(argument_parser_0)
        str_1 = '-M'
        str_2 = [str_1, str_0]
        var_1 = argument_parser_0.parse_args(str_2)
        int_0 = None
        var_2 = module_0.add_output_options(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 1170.657
        var_0 = module_0.add_vault_options(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -574.6299
        str_0 = 'ok\x0ba?\\s1A0UQ'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_0)
        var_0 = module_0.add_basedir_options(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        prepend_list_action_0 = None
        var_0 = module_0.add_connect_options(prepend_list_action_0)
    except BaseException:
        pass

def test_case_9():
    try:
        var_0 = module_0.version()
        bytes_0 = b'\x98\xf3\x9d\x89\x84\xd8)\x90`\xe6\xdb\xfb\xee\x92'
        var_1 = module_0.add_fork_options(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = ()
        bytes_0 = b'\xc8\xee\x87\xdd\xbb\xea\x12qiP\xa1d\x19\xaa\xcb\xbd q'
        float_0 = 3.4
        prepend_list_action_0 = module_0.PrependListAction(tuple_0, bytes_0, float_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(prepend_list_action_0)
        var_0 = sorting_help_formatter_0.add_arguments(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = module_0.version()
        unrecognized_argument_0 = None
        var_1 = module_0.maybe_unfrack_path(unrecognized_argument_0)
        bytes_0 = b'@\x8d\xbe'
        int_0 = 4317
        set_0 = {int_0, bytes_0}
        bool_0 = True
        var_2 = module_0.create_base_parser(set_0, bool_0)
        str_0 = 'c'
        bool_1 = True
        bool_2 = False
        str_1 = 'oK:Bb#`WWW8+{'
        dict_0 = {str_1: var_1, str_0: bool_1, str_1: str_1, str_0: bool_1}
        var_3 = module_0.add_runas_prompt_options(bool_2, dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        tuple_0 = ()
        str_0 = '\x0b-2Y:L40PqM4w8}X^.Mo'
        set_0 = {str_0}
        list_0 = [tuple_0, str_0]
        ansible_version_0 = module_0.AnsibleVersion(tuple_0, tuple_0, set_0, list_0)
        str_1 = None
        dict_0 = None
        bool_0 = False
        prepend_list_action_0 = module_0.PrependListAction(str_1, dict_0, bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = -787.31575
        var_0 = module_0.version()
        bytes_0 = b'@\x8d\xbe'
        int_0 = 4299
        set_0 = {int_0, bytes_0}
        bool_0 = True
        list_0 = []
        str_0 = '?'
        bool_1 = True
        tuple_0 = (list_0, str_0, bool_1, bytes_0)
        ansible_version_0 = module_0.AnsibleVersion(int_0, tuple_0, bool_1, set_0, float_0)
        var_1 = ansible_version_0.__call__(ansible_version_0, bool_0, ansible_version_0)
    except BaseException:
        pass

def test_case_14():
    try:
        namespace_0 = None
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(namespace_0)
        var_0 = module_0.add_inventory_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = True
        str_0 = '-V!'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bool_0, str_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(unrecognized_argument_0)
        var_0 = module_0.add_fork_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = module_0.version()
        int_0 = -3239
        var_1 = module_0.maybe_unfrack_path(int_0)
        int_1 = 28
        var_2 = module_0.add_runtask_options(int_1)
    except BaseException:
        pass

def test_case_17():
    try:
        var_0 = module_0.version()
        bytes_0 = b'@\x8d\xbe'
        int_0 = 4299
        set_0 = {int_0, bytes_0}
        bool_0 = True
        var_1 = module_0.create_base_parser(set_0, bool_0)
        bool_1 = True
        bool_2 = False
        set_1 = set()
        list_0 = []
        str_0 = '#?2u\tp#\x0c\x0cGTSr'
        tuple_0 = (bool_2, list_0, bool_0, bool_1)
        unrecognized_argument_0 = module_0.UnrecognizedArgument(list_0, str_0, tuple_0, bytes_0, set_1)
        var_2 = module_0.add_tasknoplay_options(unrecognized_argument_0)
    except BaseException:
        pass

def test_case_18():
    try:
        var_0 = module_0.version()
        unrecognized_argument_0 = None
        var_1 = module_0.maybe_unfrack_path(unrecognized_argument_0)
        str_0 = 'Fklq2]'
        argument_parser_0 = module_1.ArgumentParser(str_0)
        var_2 = module_0.add_output_options(argument_parser_0)
        int_0 = None
        float_0 = 272.2
        list_0 = None
        bool_0 = None
        ansible_version_0 = module_0.AnsibleVersion(int_0, float_0, unrecognized_argument_0, list_0, bool_0)
        bytes_0 = b'(\xc6\xb5\x07\r'
        int_1 = 4317
        set_0 = {int_1, bytes_0}
        bool_1 = True
        var_3 = module_0.create_base_parser(set_0, var_0, bool_1)
        var_4 = module_0.add_module_options(ansible_version_0)
    except BaseException:
        pass

def test_case_19():
    try:
        float_0 = -787.31575
        var_0 = module_0.version()
        bytes_0 = b'@\x8d\xbe'
        int_0 = 4294
        set_0 = {int_0, bytes_0}
        bool_0 = True
        var_1 = module_0.create_base_parser(set_0, bool_0)
        str_0 = 'kf/};xYJPa4Wf<AM'
        list_0 = [bool_0, bool_0]
        int_1 = None
        tuple_0 = (str_0, list_0, int_1, list_0)
        str_1 = 'num_pvs'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bytes_0, str_1)
        unrecognized_argument_1 = module_0.UnrecognizedArgument(bool_0, tuple_0, unrecognized_argument_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(unrecognized_argument_1, float_0)
        var_2 = module_0.add_tasknoplay_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_20():
    try:
        prepend_list_action_0 = None
        set_0 = {prepend_list_action_0, prepend_list_action_0, prepend_list_action_0}
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0)
        var_0 = module_0.add_runtask_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_21():
    try:
        prepend_list_action_0 = None
        set_0 = {prepend_list_action_0, prepend_list_action_0, prepend_list_action_0}
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0)
        list_0 = []
        var_0 = sorting_help_formatter_0.add_arguments(list_0)
        var_1 = module_0.add_runtask_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_22():
    try:
        var_0 = module_0.version()
        bytes_0 = b'@\x8d\xbe'
        int_0 = 4317
        set_0 = {int_0, bytes_0}
        bool_0 = True
        var_1 = module_0.create_base_parser(set_0, bool_0)
        str_0 = 'c'
        float_0 = -1804.941
        list_0 = None
        str_1 = '\n5c'
        bool_1 = False
        ansible_version_0 = module_0.AnsibleVersion(str_1, str_1, bytes_0, bool_1)
        dict_0 = {}
        argument_parser_0 = module_1.ArgumentParser(float_0, list_0, ansible_version_0, dict_0)
        var_2 = module_0.add_basedir_options(argument_parser_0)
        list_1 = []
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0)
        prepend_list_action_0 = module_0.PrependListAction(set_0, sorting_help_formatter_0, str_0, list_1)
    except BaseException:
        pass

def test_case_23():
    try:
        float_0 = -787.31575
        var_0 = module_0.version()
        bytes_0 = b'@\x8d\xbe'
        int_0 = 4299
        set_0 = {int_0, bytes_0}
        bool_0 = True
        list_0 = []
        str_0 = '?'
        bool_1 = True
        tuple_0 = (list_0, str_0, bool_1, bytes_0)
        ansible_version_0 = module_0.AnsibleVersion(int_0, tuple_0, bool_1, set_0, float_0)
        str_1 = 'cy\n@:\tBtC'
        list_1 = [bool_0, str_0, set_0, bool_1]
        prepend_list_action_0 = module_0.PrependListAction(tuple_0, list_1, str_0, list_0)
        var_1 = prepend_list_action_0.__call__(set_0, str_1, str_1)
    except BaseException:
        pass