# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    try:
        str_0 = 'The subprotocol returned by `select_subprotocol`.\n\n        .. versionadded:: 5.1\n        '
        var_0 = module_0.url_unescape(str_0)
        str_1 = module_0.json_encode(var_0)
        str_2 = module_0.squeeze(str_0)
        any_0 = module_0.json_decode(str_2)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'MI=p-(%]ur&wk]\n0nBY'
        any_0 = module_0.json_decode(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '8{Sn&|+%kBB;!eh++c'
        str_1 = module_0.url_escape(str_0)
        str_2 = module_0.xhtml_escape(str_0)
        str_3 = module_0.xhtml_unescape(str_2)
        var_0 = module_0.url_unescape(str_2, str_2)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xe5'
        optional_0 = module_0.utf8(bytes_0)
        str_0 = module_0.xhtml_unescape(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        any_0 = module_0.recursive_unicode(list_0)
        bytes_0 = b'\xbd$\xcb\xc5\xe0'
        bool_0 = True
        str_0 = module_0.url_escape(bytes_0, bool_0)
        str_1 = module_0.linkify(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x91\x1b_\xcc\x1d\xe1\xf8^*\xf9`\xa2\n\xdf'
        any_0 = module_0.recursive_unicode(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'#?^,\xca\x01\x04\xe3\x19\x11S\x19\xef\xb1'
        dict_0 = module_0.parse_qs_bytes(bytes_0)
        str_0 = '8{Sn&|+%kBB;!eh++c'
        str_1 = module_0.url_escape(str_0)
        str_2 = '+\x0b$E"|CZp3ke/y<B4UI#'
        str_3 = module_0.squeeze(str_2)
        any_0 = module_0.recursive_unicode(str_0)
        str_4 = module_0.xhtml_unescape(str_0)
        bool_0 = None
        optional_0 = module_0.to_unicode(str_0)
        str_5 = module_0.xhtml_unescape(str_4)
        var_0 = module_0.url_unescape(str_4, str_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\x9bzF\x97\x07P\x0c\xf5$\x10\x05\xd95\xd7\x91'
        dict_0 = module_0.parse_qs_bytes(bytes_0)
        str_0 = '8{S1&|+%qBBa!eh++c'
        str_1 = module_0.url_escape(str_0)
        str_2 = '+\x0b$E"|CZp3ke/y<B4UI#'
        str_3 = module_0.squeeze(str_2)
        any_0 = module_0.recursive_unicode(str_0)
        str_4 = module_0.xhtml_unescape(str_0)
        optional_0 = module_0.to_unicode(str_0)
        var_0 = module_0.url_unescape(str_0)
        str_5 = '#'
        bool_0 = True
        str_6 = module_0.url_escape(str_5, bool_0)
        tuple_0 = None
        set_0 = set()
        int_0 = 848
        tuple_1 = (str_1, tuple_0, set_0, int_0)
        any_1 = module_0.recursive_unicode(tuple_1)
        bytes_1 = b'(\x7f\xce'
        str_7 = module_0.xhtml_escape(bytes_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        bytes_0 = b'\x96\x05B\xe3\x1a\xfd<v\x9f\xa1'
        bytes_1 = b'\x1b\x1bL J\xf9'
        bytes_2 = b'Z\x1d'
        list_0 = [bytes_0, bytes_1, bytes_2]
        str_1 = "@sl';KHox3,e0)rI2h("
        str_2 = 'sw_KE'
        list_1 = [bytes_2]
        dict_0 = {str_0: list_0, str_1: list_0, str_1: list_0, str_2: list_1}
        optional_0 = module_0.to_unicode(dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\x9bzF\x97\x07P\x0c\xf5$\x10\x05\xd95\xd7\x91'
        dict_0 = module_0.parse_qs_bytes(bytes_0)
        str_0 = '8{Sn&|+%kBB;!eh++c'
        str_1 = module_0.url_escape(str_0)
        str_2 = 'g\th%FP6U.\x0cW'
        str_3 = module_0.squeeze(str_2)
        any_0 = module_0.recursive_unicode(str_0)
        dict_1 = {any_0: str_0, str_0: any_0}
        any_1 = module_0.recursive_unicode(dict_1)
        str_4 = module_0.xhtml_unescape(str_1)
        optional_0 = module_0.to_unicode(str_0)
        str_5 = '#'
        str_6 = module_0.xhtml_unescape(str_1)
        var_0 = module_0.url_unescape(str_1)
        optional_1 = module_0.to_unicode(str_5)
        str_7 = module_0.json_encode(optional_1)
        str_8 = module_0.xhtml_escape(str_4)
        var_1 = module_0.url_unescape(str_4, str_6)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\x9bzF\x97\x07P\x0c\xf5$\x10\x05\xd95\xd7\x91'
        dict_0 = module_0.parse_qs_bytes(bytes_0)
        str_0 = '8{Sn&|+%kBB;!eh++c'
        str_1 = module_0.url_escape(str_0)
        str_2 = '{m[m^6gdN'
        str_3 = module_0.squeeze(str_2)
        bytes_1 = b'"3\xcb\x18\x8e\x95A'
        list_0 = [dict_0, bytes_1, bytes_0]
        any_0 = module_0.recursive_unicode(list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 2791
        optional_0 = module_0.utf8(int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'www.google.com/?q=python+linkify'
        list_0 = []
        str_1 = module_0.linkify(str_0, str_0, list_0)
        str_2 = module_0.xhtml_escape(str_0)
        list_1 = None
        bool_0 = False
        str_3 = module_0.linkify(str_1, bool_0, list_1)
        optional_0 = module_0.to_unicode(str_0)
        str_4 = module_0.linkify(str_3, str_0)
        str_5 = module_0.xhtml_escape(str_0)
        str_6 = module_0.xhtml_unescape(str_1)
        str_7 = ''
        bytes_0 = b'\xbeV\x11\x00_\xa2\xdbm\xdf\xd4'
        bool_1 = False
        str_8 = module_0.linkify(bytes_0, str_7, bool_1)
    except BaseException:
        pass