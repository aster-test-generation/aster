# Automatically generated by Pynguin.
import tornado.concurrent as module_0
import concurrent.futures._base as module_1

def test_case_0():
    try:
        callable_0 = None
        dummy_executor_0 = module_0.DummyExecutor()
        future_0 = dummy_executor_0.submit(callable_0)
        str_0 = 'wm\tsyu4XDhu`.\x0cz('
        module_0.future_add_done_callback(future_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        future_0 = None
        module_0.chain_future(future_0, future_0)
    except BaseException:
        pass

def test_case_2():
    try:
        future_0 = module_1.Future()
        bytes_0 = b'h3\xc4\x12?\x19wY\xce\x1b'
        module_0.future_add_done_callback(future_0, bytes_0)
        dummy_executor_0 = module_0.DummyExecutor()
        bool_0 = module_0.is_future(future_0)
        list_0 = [future_0, future_0, dummy_executor_0]
        bool_1 = module_0.is_future(dummy_executor_0)
        str_0 = '^~FxE1{iz'
        str_1 = "M5s'5"
        dict_0 = {str_0: future_0, str_0: dummy_executor_0, str_0: future_0, str_1: str_1}
        callable_0 = module_0.run_on_executor(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        return_value_ignored_error_0 = module_0.ReturnValueIgnoredError()
        str_0 = '_#k\txSD[e8a'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        callable_0 = module_0.run_on_executor(**dict_0)
        str_1 = '{<=:!'
        future_0 = module_1.Future()
        var_0 = None
        module_0.future_set_result_unless_cancelled(future_0, var_0)
        list_0 = [future_0, str_1, callable_0]
        callable_1 = module_0.run_on_executor(*list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        return_value_ignored_error_0 = module_0.ReturnValueIgnoredError()
        str_0 = '_#k\txSD[e8a'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        callable_0 = module_0.run_on_executor(**dict_0)
        future_0 = module_1.Future()
        none_type_0 = None
        optional_0 = None
        tuple_0 = (return_value_ignored_error_0, none_type_0, optional_0)
        module_0.future_set_exc_info(future_0, tuple_0)
    except BaseException:
        pass