# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        float_0 = 1359.132439
        bytes_0 = None
        dict_0 = {float_0: float_0, float_0: bytes_0, float_0: float_0, bytes_0: bytes_0}
        sun_o_s_hardware_0 = module_0.SunOSHardware(dict_0)
        var_0 = sun_o_s_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        str_0 = 'Yrp;K,WV^\\L|w'
        sun_o_s_hardware_0 = module_0.SunOSHardware(set_0, str_0)
        sun_o_s_hardware_1 = module_0.SunOSHardware(sun_o_s_hardware_0)
        bytes_0 = b'\xc0\xcf#\xdd\xfc\x1d\xd0\xcew\xb2\xaaL$\x90i\x14\x7f>\x9e'
        float_0 = 3076.88838
        sun_o_s_hardware_2 = module_0.SunOSHardware(float_0)
        var_0 = sun_o_s_hardware_2.get_cpu_facts(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 627.109625
        sun_o_s_hardware_0 = module_0.SunOSHardware(float_0)
        var_0 = sun_o_s_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        set_0 = {bool_0}
        str_0 = 'error closing connection: %s'
        sun_o_s_hardware_0 = module_0.SunOSHardware(set_0, str_0)
        var_0 = sun_o_s_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xa1\xa8\x99+'
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_0)
        var_0 = sun_o_s_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'BCLe?IlK?Mmo'
        dict_0 = {str_0: str_0, str_0: str_0}
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(dict_0)
        set_0 = {sun_o_s_hardware_collector_0, str_0, sun_o_s_hardware_collector_0, str_0}
        sun_o_s_hardware_0 = module_0.SunOSHardware(set_0)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'E@A'
        float_0 = 200.0
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0, float_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts()
    except BaseException:
        pass