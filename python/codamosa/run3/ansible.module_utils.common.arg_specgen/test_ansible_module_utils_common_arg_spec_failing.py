# Automatically generated by Pynguin.
import ansible.module_utils.common.arg_spec as module_0

def test_case_0():
    try:
        int_0 = None
        tuple_0 = (int_0,)
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'C{O 6!4.lG/VDd,9w\x0cQ'
        dict_0 = {str_0: str_0, str_0: str_0}
        module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = {}
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(var_0)
        var_1 = argument_spec_validator_0.validate(argument_spec_validator_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'aliases'
        str_1 = {str_0: str_0, str_0: str_0}
        str_2 = {str_0: str_0, str_0: str_0, str_0: str_1, str_0: str_1}
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(str_2)
        var_0 = argument_spec_validator_0.validate(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = None
        validation_result_0 = module_0.ValidationResult(int_0)
        dict_0 = {}
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0)
        list_0 = [dict_0, argument_spec_validator_0, int_0, int_0, dict_0, argument_spec_validator_0]
        module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator(*list_0)
        var_0 = module_argument_spec_validator_0.validate(dict_0)
    except BaseException:
        pass