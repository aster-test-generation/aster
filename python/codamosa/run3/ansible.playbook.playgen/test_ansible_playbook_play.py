# Automatically generated by Pynguin.
import ansible.playbook.play as module_0
import ansible.errors as module_1

def test_case_0():
    pass

def test_case_1():
    play_0 = module_0.Play()

def test_case_2():
    play_0 = module_0.Play()
    var_0 = play_0.__repr__()

def test_case_3():
    play_0 = module_0.Play()
    var_0 = play_0.get_name()

def test_case_4():
    dict_0 = {}
    play_0 = module_0.Play()
    var_0 = play_0.load(dict_0)

def test_case_5():
    play_0 = module_0.Play()
    var_0 = play_0.compile()

def test_case_6():
    play_0 = module_0.Play()
    var_0 = play_0.compile_roles_handlers()

def test_case_7():
    play_0 = module_0.Play()
    var_0 = play_0.get_vars_files()

def test_case_8():
    play_0 = module_0.Play()
    var_0 = play_0.get_tasks()
    play_1 = module_0.Play()
    var_1 = play_1.get_roles()
    var_2 = play_1.get_handlers()
    var_3 = play_1.copy()

def test_case_9():
    play_0 = module_0.Play()
    var_0 = play_0.get_roles()

def test_case_10():
    play_0 = module_0.Play()
    var_0 = play_0.get_tasks()

def test_case_11():
    play_0 = module_0.Play()
    var_0 = play_0.serialize()

def test_case_12():
    bytes_0 = b'`\x16\xffs8D\r\x05m'
    ansible_parser_error_0 = module_1.AnsibleParserError(bytes_0, bytes_0)
    str_0 = 'backup'
    bool_0 = True
    dict_0 = {ansible_parser_error_0: bytes_0, str_0: bytes_0, str_0: bytes_0, bytes_0: bool_0}
    play_0 = module_0.Play()
    var_0 = play_0.deserialize(dict_0)
    var_1 = play_0.get_tasks()
    var_2 = play_0.get_name()
    var_3 = play_0.serialize()
    play_1 = module_0.Play()

def test_case_13():
    play_0 = module_0.Play()
    str_0 = 'name'
    str_1 = 'hosts'
    str_2 = 'become'
    str_3 = 'roles'
    str_4 = 'Install and Configure Apache'
    str_5 = 'all'
    str_6 = 'vars'
    str_7 = 'ansible-role-httpd'
    str_8 = 'somevalue'
    str_9 = {str_5: str_8}
    str_10 = 'no'
    str_11 = {str_0: str_7, str_6: str_9, str_2: str_10}
    str_12 = 'role'
    str_13 = 'ansible-role-mysql'
    str_14 = 'yes'
    str_15 = {str_12: str_13, str_2: str_14}
    str_16 = [str_11, str_15]
    str_17 = {str_0: str_4, str_1: str_5, str_2: str_4, str_3: str_16}
    var_0 = play_0.deserialize(str_17)
    var_1 = play_0.compile_roles_handlers()

def test_case_14():
    play_0 = module_0.Play()
    var_0 = play_0.compile()
    play_1 = module_0.Play()
    str_0 = 'name'
    str_1 = 'hosts'
    str_2 = 'become'
    str_3 = 'roles'
    str_4 = 'Install and Configure Apache'
    str_5 = 'all'
    str_6 = 'true'
    str_7 = 'vars'
    str_8 = 'ansible-role-httpd'
    str_9 = 'somevar'
    str_10 = 'somevalue'
    str_11 = {str_9: str_10}
    str_12 = 'no'
    str_13 = {str_0: str_8, str_7: str_11, str_2: str_12}
    str_14 = 'role'
    str_15 = 'ansible-role-mysql'
    str_16 = 'yes'
    str_17 = {str_14: str_15, str_2: str_16}
    str_18 = [str_13, str_17]
    str_19 = {str_0: str_4, str_1: str_5, str_2: str_6, str_3: str_18}
    var_1 = play_1.deserialize(str_19)
    int_0 = 0
    var_2 = play_1.roles[int_0]
    var_3 = play_1.__repr__()

def test_case_15():
    play_0 = module_0.Play()
    str_0 = 'hosts'
    str_1 = 'become'
    str_2 = 'roles'
    str_3 = 'Install and Configure Apache'
    str_4 = 'all'
    str_5 = 'true'
    str_6 = 'vars'
    str_7 = 'ansible-role-httpd'
    str_8 = 'somevar'
    str_9 = 'somevalue'
    str_10 = {str_8: str_9}
    str_11 = 'no'
    str_12 = {str_6: str_7, str_6: str_10, str_1: str_11}
    str_13 = 'role'
    str_14 = 'ansible-role-mysql'
    str_15 = 'yes'
    str_16 = {str_13: str_14, str_1: str_15}
    str_17 = [str_12, str_16]
    str_18 = {str_11: str_3, str_0: str_4, str_1: str_5, str_2: str_17}
    var_0 = play_0.deserialize(str_18)
    int_0 = 0
    var_1 = play_0.roles[int_0]
    var_2 = play_0.__repr__()