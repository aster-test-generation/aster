# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    choice_0 = module_0.Choice()

def test_case_1():
    choice_0 = module_0.Choice()
    str_0 = 'f5w*^@7Hz\tSK'
    bool_0 = True
    var_0 = choice_0.__call__(str_0, bool_0)

def test_case_2():
    choice_0 = module_0.Choice()
    list_0 = [choice_0, choice_0, choice_0, choice_0]
    bool_0 = True
    var_0 = choice_0.__call__(list_0, bool_0)

def test_case_3():
    choice_0 = module_0.Choice()
    str_0 = '+'
    int_0 = 497
    var_0 = choice_0.__call__(str_0, int_0)
    bytes_0 = b'*-k\x01\xc5\xf5u\x99A%'
    var_1 = choice_0.__call__(bytes_0)

def test_case_4():
    choice_0 = module_0.Choice()
    str_0 = '+'
    int_0 = 497
    var_0 = choice_0.__call__(str_0, int_0)

def test_case_5():
    choice_0 = module_0.Choice()
    str_0 = 'p4&\rY\tB\rmy(3xC\x0cA.'
    int_0 = 520
    tuple_0 = ()
    set_0 = {str_0, choice_0, int_0, int_0}
    tuple_1 = (tuple_0, choice_0, set_0, choice_0)
    bool_0 = True
    var_0 = choice_0.__call__(tuple_1, bool_0)

def test_case_6():
    str_0 = "choice = Choice()['a']"
    choice_0 = module_0.Choice()
    choice_1 = module_0.Choice()
    str_1 = 'b'
    str_2 = 'd'
    str_3 = [str_0, str_1, str_0, str_2]
    int_0 = 2
    choice_2 = module_0.Choice()
    var_0 = choice_2.__call__(str_3, int_0)
    choice_3 = module_0.Choice()
    bool_0 = True
    var_1 = choice_3.__call__(str_3, int_0, bool_0)
    str_4 = 'abc'
    int_1 = 2
    choice_4 = module_0.Choice()
    var_2 = choice_4.__call__(str_4, int_1)
    choice_5 = module_0.Choice()
    var_3 = choice_5.__call__(str_4, int_1, bool_0)