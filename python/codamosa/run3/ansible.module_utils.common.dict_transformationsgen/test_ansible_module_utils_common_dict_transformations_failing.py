# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    try:
        float_0 = -4160.18082
        var_0 = module_0.camel_dict_to_snake_dict(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        complex_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: complex_0}
        dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: dict_0}
        str_1 = '#0*[<B2/%sQ'
        var_0 = module_0.snake_dict_to_camel_dict(dict_1, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '/usrMbin/xbps-install'
        dict_0 = {str_0: str_0}
        bool_0 = True
        var_0 = module_0.snake_dict_to_camel_dict(dict_0, bool_0)
        str_1 = '[^rwxXstugo]'
        var_1 = module_0.camel_dict_to_snake_dict(str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '/usrMbin/xbps-install'
        dict_0 = {str_0: str_0}
        bool_0 = False
        var_0 = module_0.snake_dict_to_camel_dict(dict_0, bool_0)
        str_1 = 'Host arameter does not match hashed host field in spplied ey'
        var_1 = module_0.camel_dict_to_snake_dict(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '%prog <host-pattern> [options]'
        bool_0 = True
        dict_0 = {bool_0: bool_0, str_0: bool_0, bool_0: str_0}
        var_0 = module_0.dict_merge(bool_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '%prog <host-pattern> [options]'
        var_0 = module_0.recursive_diff(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '@+4\n;%p2MMWEIWcTZ\\'
        bytes_0 = b'\xe4#\x07\x0b\x05\xf4|U\xa9'
        var_0 = module_0.snake_dict_to_camel_dict(bytes_0)
        dict_0 = {var_0: bytes_0, str_0: var_0, str_0: var_0}
        var_1 = module_0.dict_merge(dict_0, dict_0)
        dict_1 = {}
        float_0 = -263.15971
        float_1 = 2.0
        var_2 = module_0.dict_merge(float_0, float_1)
        str_1 = 'proc\rIessor_count'
        var_3 = module_0.dict_merge(str_1, dict_1)
        float_2 = -2133.3625496784493
        var_4 = module_0.snake_dict_to_camel_dict(float_2)
        str_2 = '2&n:9JTKC:F6FW?\x0bRC;Q'
        var_5 = module_0.recursive_diff(dict_1, str_2)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'c\xa4\x17\x11'
        complex_0 = None
        tuple_0 = (complex_0,)
        dict_0 = {bytes_0: bytes_0, complex_0: tuple_0, complex_0: tuple_0}
        var_0 = module_0.camel_dict_to_snake_dict(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'forks must be greater than or equal to 1'
        dict_0 = None
        bytes_0 = b'\xcc\x02\xb6k\xc4'
        list_0 = [str_0, bytes_0, str_0]
        tuple_0 = (dict_0, dict_0, bytes_0, list_0)
        dict_1 = {str_0: str_0, str_0: tuple_0, bytes_0: dict_0}
        complex_0 = None
        float_0 = None
        var_0 = module_0.snake_dict_to_camel_dict(tuple_0, float_0)
        var_1 = module_0.camel_dict_to_snake_dict(dict_1, complex_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0}
        bool_1 = None
        var_0 = module_0.dict_merge(set_0, bool_1)
        str_0 = 'HttpEndpointArn'
        str_1 = 'TargetGroupARNs'
        dict_0 = {str_1: bool_1}
        var_1 = module_0.snake_dict_to_camel_dict(dict_0)
        str_2 = {str_0: str_0}
        str_3 = [str_2, str_2, str_2]
        str_4 = {str_0: str_2, str_1: str_3}
        bool_2 = True
        str_5 = [str_0]
        var_2 = module_0.camel_dict_to_snake_dict(str_4, bool_2, str_5)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 1
        str_0 = ''
        int_1 = -10
        int_2 = {str_0: int_0, str_0: int_1}
        int_3 = {str_0: int_0}
        str_1 = 'a`9/|"5+Hwghfz('
        str_2 = 'Fq4\ra5LcO'
        var_0 = module_0.recursive_diff(int_2, int_3)
        int_4 = {}
        int_5 = {str_1: int_0, str_0: int_1}
        var_1 = module_0.recursive_diff(int_4, int_5)
        str_3 = 'aa'
        int_6 = {str_3: int_0}
        int_7 = {str_0: int_6}
        int_8 = {str_3: int_5}
        int_9 = {str_0: int_8, str_0: int_8}
        var_2 = module_0.recursive_diff(int_7, int_9)
        int_10 = {str_3: int_0}
        int_11 = {str_0: int_1}
        int_12 = {str_2: int_10, str_0: int_11}
        dict_0 = {}
        str_4 = ')=Uj'
        var_3 = module_0.dict_merge(dict_0, str_4)
        int_13 = {str_3: int_0}
        int_14 = {str_0: int_13}
        var_4 = module_0.recursive_diff(int_12, int_14)
        list_0 = [int_8, var_1]
        float_0 = 512.0
        var_5 = module_0.snake_dict_to_camel_dict(list_0, float_0)
        set_0 = set()
        bytes_0 = b'\x91\xb8\x99[\x90\xe6u\xb9e\xd0\x98\x03\xbf\xcan\x86\xeb\xf1'
        tuple_0 = (str_3, dict_0, list_0, bytes_0)
        var_6 = module_0.dict_merge(tuple_0, bytes_0)
        dict_1 = {str_2: int_2, int_1: var_0, int_0: set_0}
        int_15 = -1782
        var_7 = module_0.camel_dict_to_snake_dict(dict_1, int_15)
    except BaseException:
        pass