# Automatically generated by Pynguin.
import ansible.module_utils.common.process as module_0

def test_case_0():
    try:
        str_0 = '  jinja version = %s'
        var_0 = module_0.get_bin_path(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ':q:'
        var_0 = module_0.get_bin_path(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        var_0 = module_0.get_bin_path(bool_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\n    name: lines\n    author: Daniel Hokka Zakrisson (!UNKNOWN) <daniel@hozac.com>\n    version_added: "0.9"\n    short_description: read lines from command\n    description:\n      - Run one or more commands and split the output into lines, returning them as a list\n    options:\n      _terms:\n        description: command(s) to run\n        required: True\n    notes:\n      - Like all lookups, this runs on the Ansible controller and is unaffected by other keywords such as \'become\'.\n        If you need to use different permissions, you must change the command or run Ansible as another user.\n      - Alternatively, you can use a shell/command task that runs against localhost and registers the result.\n'
        var_0 = module_0.get_bin_path(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        var_0 = module_0.get_bin_path(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ls'
        var_0 = module_0.get_bin_path(str_0)
        var_1 = print(str_0)
        float_0 = -2485.96138
        dict_0 = {var_1: float_0, str_0: float_0, str_0: var_0}
        var_2 = module_0.get_bin_path(float_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '/dev/null'
        var_0 = module_0.get_bin_path(str_0)
    except BaseException:
        pass