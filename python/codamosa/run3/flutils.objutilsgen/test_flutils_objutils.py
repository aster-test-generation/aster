# Automatically generated by Pynguin.
import flutils.objutils as module_0
import collections as module_1

def test_case_0():
    pass

def test_case_1():
    float_0 = None
    bool_0 = module_0.has_any_callables(float_0)

def test_case_2():
    str_0 = 'G#.[HgLf^mCj'
    str_1 = 'gp@.:$'
    list_0 = [str_0, str_1, str_0, str_1]
    bool_0 = module_0.has_any_callables(list_0, *list_0)

def test_case_3():
    bytes_0 = b'\x86\x93\x9b['
    bool_0 = module_0.has_attrs(bytes_0)

def test_case_4():
    str_0 = '1U =I0'
    list_0 = [str_0]
    bool_0 = module_0.has_attrs(list_0, *list_0)

def test_case_5():
    float_0 = 2959.0
    bool_0 = module_0.has_callables(float_0)

def test_case_6():
    bool_0 = None
    dict_0 = {bool_0: bool_0}
    str_0 = "*04'\x0b!i%gw>]'N|v"
    list_0 = [str_0, str_0, str_0]
    bool_1 = module_0.has_callables(dict_0, *list_0)

def test_case_7():
    str_0 = 'e6:.b)\x0bU@8'
    bool_0 = module_0.is_list_like(str_0)

def test_case_8():
    str_0 = 'get'
    str_1 = ')|tes'
    var_0 = dict()
    str_2 = [str_0, str_1, str_1, str_1]
    bool_0 = module_0.has_any_callables(var_0, *str_2)
    bool_1 = module_0.is_list_like(str_2)
    list_0 = []
    bool_2 = module_0.has_callables(str_0, *list_0)
    bool_3 = module_0.has_any_callables(str_0)

def test_case_9():
    str_0 = 'get'
    var_0 = dict()
    str_1 = [str_0, str_0, str_0, str_0]
    bool_0 = module_0.has_any_callables(var_0, *str_1)

def test_case_10():
    var_0 = dict()
    str_0 = 'keys'
    list_0 = [str_0, str_0]
    bool_0 = module_0.has_callables(var_0, *list_0)
    str_1 = 'cla;'
    bool_1 = module_0.has_any_callables(str_1)

def test_case_11():
    str_0 = ']<->TDZ>\\'
    bool_0 = module_0.has_any_callables(str_0)
    deque_0 = module_1.deque()
    bool_1 = module_0.has_any_callables(deque_0)
    bool_2 = module_0.has_attrs(deque_0)
    str_1 = '__doc__'
    list_0 = []
    bool_3 = module_0.has_any_attrs(list_0)
    list_1 = [str_1]
    bool_4 = module_0.has_callables(bool_2, *list_1)
    bool_5 = module_0.is_list_like(deque_0)
    list_2 = [str_0, str_0]
    bool_6 = module_0.has_callables(list_2)
    str_2 = 'invalid width %r (must be > 0)'
    bool_7 = module_0.has_callables(bool_1)
    bool_8 = module_0.has_callables(bool_1)
    str_3 = '1H<'
    str_4 = 'Q[1-'
    bool_9 = module_0.has_any_attrs(bool_1)
    str_5 = 'The given gid: %r, is not a valid gid for this operating system.'
    list_3 = [str_4, str_5]
    list_4 = []
    bool_10 = module_0.has_any_attrs(bool_0, *list_4)
    bool_11 = module_0.has_callables(str_3, *list_3)
    bool_12 = module_0.has_any_callables(bool_1, *list_1)
    bool_13 = module_0.is_list_like(list_3)
    bool_14 = module_0.is_subclass_of_any(str_2)
    bool_15 = module_0.is_list_like(list_2)
    list_5 = [str_2]
    bool_16 = module_0.is_list_like(bool_13)
    bool_17 = module_0.has_any_attrs(bool_1)
    bool_18 = module_0.has_any_attrs(deque_0, *list_5)
    bool_19 = module_0.has_any_attrs(deque_0)
    bool_20 = module_0.has_any_attrs(bool_19)
    bool_21 = module_0.is_subclass_of_any(deque_0)