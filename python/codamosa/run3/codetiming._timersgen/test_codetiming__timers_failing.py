# Automatically generated by Pynguin.
import codetiming._timers as module_0

def test_case_0():
    try:
        str_0 = '_5vat<cF%ES '
        float_0 = 1737.99
        timers_0 = module_0.Timers()
        timers_0.__setitem__(str_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        timers_0 = module_0.Timers()
        float_0 = timers_0.count(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '1CEL"\r?;xhz=gW+j\'_}'
        timers_0 = module_0.Timers()
        float_0 = timers_0.max(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        timers_0 = module_0.Timers()
        float_0 = timers_0.stdev(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        timers_0 = module_0.Timers()
        str_0 = '`}i0'
        float_0 = 3559.558
        timers_0.add(str_0, float_0)
        float_1 = timers_0.stdev(str_0)
        timers_1 = module_0.Timers()
        float_2 = timers_1.total(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        timers_0 = module_0.Timers()
        float_0 = 3559.558
        str_0 = 'sa6;Te'
        float_1 = -35.38
        str_1 = '|d1^=D'
        timers_0.add(str_1, float_0)
        float_2 = timers_0.max(str_1)
        timers_0.add(str_1, float_1)
        float_3 = timers_0.stdev(str_1)
        timers_1 = module_0.Timers()
        float_4 = timers_1.total(str_0)
    except BaseException:
        pass