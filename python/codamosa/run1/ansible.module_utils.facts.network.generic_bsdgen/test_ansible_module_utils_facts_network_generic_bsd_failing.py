# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.generic_bsd as module_0

def test_case_0():
    try:
        float_0 = 1259.766
        set_0 = {float_0, float_0, float_0}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0)
        var_0 = generic_bsd_ifconfig_network_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'J4dJ'
        bool_0 = False
        dict_0 = {bool_0: str_0}
        dict_1 = {str_0: bool_0}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(dict_1)
        var_0 = generic_bsd_ifconfig_network_0.detect_type_media(dict_0)
        var_1 = generic_bsd_ifconfig_network_0.get_default_interfaces(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
        var_0 = generic_bsd_ifconfig_network_0.get_default_interfaces(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "|SpA'"
        set_0 = set()
        dict_0 = None
        list_0 = [set_0, str_0, dict_0, dict_0]
        bool_0 = False
        str_1 = 'N1_%MCG8OYmR]'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
        int_0 = 2184
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(int_0)
        var_1 = generic_bsd_ifconfig_network_1.get_interfaces_info(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'mekFZ~*e!#Tu'
        str_1 = 'v64'
        float_0 = 3445.284174
        bool_0 = False
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_options_line(str_0, str_1, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'vHp_ UF:h'
        bytes_0 = b'7'
        str_1 = 'Depsolve Error occurred for package {0}.'
        tuple_0 = ()
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(tuple_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_nd6_line(bytes_0, str_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'J4dJ'
        bool_0 = True
        tuple_0 = (str_0, bool_0)
        dict_0 = {tuple_0: tuple_0, str_0: str_0, tuple_0: tuple_0, bool_0: bool_0}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        list_0 = [str_0]
        var_0 = generic_bsd_ifconfig_network_0.merge_default_interface(dict_0, list_0, str_0)
        list_1 = [str_0, tuple_0, str_0, str_0]
        set_0 = {tuple_0, tuple_0}
        var_1 = generic_bsd_ifconfig_network_0.parse_unknown_line(list_1, dict_0, set_0)
        var_2 = generic_bsd_ifconfig_network_0.parse_interface_line(str_0)
        str_1 = 'T-~qr4Km_hj2wGv('
        var_3 = generic_bsd_ifconfig_network_0.parse_media_line(str_1, dict_0, dict_0)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_1)
        var_4 = generic_bsd_ifconfig_network_1.get_default_interfaces(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 0.0001
        set_0 = set()
        int_0 = -788
        str_0 = 'C|aS(.d\t\nt\t'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(generic_bsd_ifconfig_network_0, generic_bsd_ifconfig_network_0)
        var_0 = generic_bsd_ifconfig_network_1.parse_status_line(float_0, set_0, int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'J4dJ'
        bool_0 = True
        dict_0 = {bool_0: str_0, str_0: str_0, str_0: str_0}
        dict_1 = {str_0: bool_0}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(dict_1)
        var_0 = generic_bsd_ifconfig_network_0.detect_type_media(dict_0)
        list_0 = None
        set_0 = {bool_0, generic_bsd_ifconfig_network_0}
        var_1 = generic_bsd_ifconfig_network_0.parse_lladdr_line(dict_0, dict_1, set_0)
        var_2 = generic_bsd_ifconfig_network_0.merge_default_interface(str_0, list_0, list_0)
        str_1 = 'K<z-yb+@QKB'
        var_3 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
        var_4 = generic_bsd_ifconfig_network_0.get_default_interfaces(dict_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'j\\'
        bool_0 = False
        tuple_0 = (str_0, bool_0)
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(tuple_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'J4dJ'
        bool_0 = False
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        list_0 = [str_0]
        int_0 = 540
        float_0 = 0.1
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(generic_bsd_ifconfig_network_0, float_0)
        str_1 = 'r&^a/,Q"4!XVh/-AZG'
        str_2 = '4k:G-{k<[8@g2*'
        var_0 = generic_bsd_ifconfig_network_0.get_options(str_2)
        var_1 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
        str_3 = "^_QHHWT7j\x0c&e=W-uc'"
        str_4 = 'vn"E3Tw4#[.'
        var_2 = generic_bsd_ifconfig_network_0.merge_default_interface(str_3, bool_0, str_4)
        bool_1 = True
        dict_0 = {str_1: bool_0, str_4: str_4, int_0: var_0, int_0: bool_0}
        var_3 = generic_bsd_ifconfig_network_0.parse_tunnel_line(bool_1, dict_0, dict_0)
        var_4 = generic_bsd_ifconfig_network_0.get_default_interfaces(list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'd5H$5r_ J;c5M5H'
        list_0 = None
        str_1 = 'M>\t/j7o\x0cG1tY3'
        tuple_0 = ()
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1, tuple_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet_line(str_0, str_1, list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = "}Nr4YQ[[<|\t<U2\ns{c'h"
        bool_0 = False
        tuple_0 = (str_0, bool_0)
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(tuple_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'J4dJ'
        bool_0 = False
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        str_1 = None
        var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_0)
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(str_1, bool_0, str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'J4dJ'
        bool_0 = False
        tuple_0 = (str_0, bool_0)
        dict_0 = {tuple_0: tuple_0, str_0: str_0, tuple_0: tuple_0, bool_0: bool_0}
        str_1 = 'k)'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        list_0 = [str_1, tuple_0, str_0, str_0]
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_0)
        set_0 = {tuple_0, tuple_0}
        var_0 = generic_bsd_ifconfig_network_0.parse_unknown_line(list_0, dict_0, set_0)
        str_2 = 'r&^ae[,"Q"\'!XVh/-AZG'
        var_1 = generic_bsd_ifconfig_network_1.parse_interface_line(str_2)
        var_2 = generic_bsd_ifconfig_network_0.parse_media_line(str_1, dict_0, dict_0)
        bool_1 = True
        var_3 = generic_bsd_ifconfig_network_1.get_default_interfaces(bool_1)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'J4dJ'
        bool_0 = False
        tuple_0 = (str_0, bool_0)
        dict_0 = {tuple_0: tuple_0, str_0: str_0, tuple_0: tuple_0, bool_0: bool_0}
        str_1 = 'kV)'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        list_0 = [str_1]
        var_0 = generic_bsd_ifconfig_network_0.merge_default_interface(dict_0, list_0, str_0)
        list_1 = [str_1, tuple_0, str_0, str_0]
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_1)
        set_0 = {tuple_0, tuple_0}
        var_1 = generic_bsd_ifconfig_network_0.parse_unknown_line(list_1, dict_0, set_0)
        str_2 = '|/GEpE*NNLi/&g;,Zw'
        bytes_0 = b''
        str_3 = 'wait_for_connection: skipping for check_mode'
        tuple_1 = (bytes_0, set_0, str_3, set_0)
        var_2 = generic_bsd_ifconfig_network_0.parse_inet_line(str_2, tuple_1, set_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = True
        bool_1 = None
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_1, bool_0)
        str_0 = '2397 '
        int_0 = -1131
        var_0 = generic_bsd_ifconfig_network_0.parse_inet_line(str_0, int_0, int_0)
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = True
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        str_0 = '23S97 '
        int_0 = -1131
        var_0 = generic_bsd_ifconfig_network_0.parse_inet_line(str_0, int_0, int_0)
    except BaseException:
        pass

def test_case_18():
    try:
        bool_0 = True
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        str_0 = 'r&^ae[,"Q"\'!XVh/-AZG'
        str_1 = '4k:G-{k<,[>@g2*'
        var_0 = generic_bsd_ifconfig_network_0.get_options(str_1)
        str_2 = "^_Q+HHT7j\x0c&e=W-uc'"
        str_3 = 'vn"E3Tw4#[.'
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(str_2, bool_0, str_3)
        tuple_0 = ()
        var_2 = generic_bsd_ifconfig_network_0.detect_type_media(tuple_0)
        dict_0 = {str_0: str_0, str_2: str_2}
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(dict_0)
        var_3 = generic_bsd_ifconfig_network_1.get_default_interfaces(str_1)
    except BaseException:
        pass