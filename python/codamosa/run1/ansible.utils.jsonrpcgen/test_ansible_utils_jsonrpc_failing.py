# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0

def test_case_0():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.header()
    except BaseException:
        pass

def test_case_1():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.response()
    except BaseException:
        pass

def test_case_2():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"jsonrpc": "2.0", "method": "method", "params": [11, "spam"], "id": 1}'
        var_0 = json_rpc_server_0.handle_request(str_0)
        var_1 = json_rpc_server_0.parse_error()
    except BaseException:
        pass

def test_case_3():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"jsonrp": "2.0", "method": "method", "params": [11, "spam"], "id": 1}'
        var_0 = json_rpc_server_0.handle_request(str_0)
        var_1 = json_rpc_server_0.invalid_request()
    except BaseException:
        pass

def test_case_4():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.register(json_rpc_server_0)
        str_0 = '{"jsonrpc": "2.0", "method": "response", "params": [[], {}], "id": 1}'
        var_1 = json_rpc_server_0.handle_request(str_0)
        var_2 = json_rpc_server_0.invalid_params()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.register(bool_0)
        str_0 = '{"jsonrpc": "2.0", "method": "rpc.not_found", "params": null, "id": 0}'
        var_1 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"jsonrpc":"2.0","method":"_method","params":[],"id":1}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '_identifier'
        var_0 = setattr(json_rpc_server_0, str_0, str_0)
        str_1 = '}KiGpI/TP1'
        bool_0 = False
        bytes_0 = b'f\xb4\x0b@'
        var_1 = json_rpc_server_0.response(bytes_0)
        var_2 = json_rpc_server_0.register(bool_0)
        var_3 = json_rpc_server_0.invalid_params()
        var_4 = json_rpc_server_0.handle_request(str_1)
    except BaseException:
        pass