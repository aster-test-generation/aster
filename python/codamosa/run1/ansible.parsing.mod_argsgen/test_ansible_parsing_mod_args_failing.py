# Automatically generated by Pynguin.
import ansible.parsing.mod_args as module_0

def test_case_0():
    try:
        int_0 = 232
        module_args_parser_0 = module_0.ModuleArgsParser(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_args_parser_0 = module_0.ModuleArgsParser()
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'args'
        str_1 = 'action'
        str_2 = {str_0: str_0}
        str_3 = {str_1: str_2, str_0: str_2, str_1: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_3)
        bool_0 = False
        var_0 = module_args_parser_0.parse(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'me'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse(module_args_parser_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'action'
        str_1 = 'args'
        str_2 = 'a'
        str_3 = 'local_action'
        str_4 = {str_3: str_2, str_2: str_2, str_1: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_4)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'e'
        str_1 = 'command'
        str_2 = {str_0: str_1, str_1: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_2)
        var_0 = module_args_parser_0.parse(module_args_parser_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'e'
        str_1 = {str_0: str_0, str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'name'
        str_1 = 'command'
        str_2 = 'create a volume'
        str_3 = 'lvm lvcreate -L2G -ntest myvg'
        str_4 = {str_0: str_2, str_1: str_3}
        module_args_parser_0 = module_0.ModuleArgsParser(str_4)
        var_0 = module_args_parser_0.parse()
        str_5 = 'with_items'
        str_6 = 'shell'
        str_7 = 'foo'
        str_8 = 'echo hi'
        str_9 = {str_0: str_2, str_5: str_7, str_6: str_8, str_1: str_3}
        module_args_parser_1 = module_0.ModuleArgsParser(str_9)
        var_1 = module_args_parser_1.parse()
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -2
        str_0 = 'action'
        str_1 = 'copy src=a dest=b'
        str_2 = {str_0: str_1}
        var_0 = None
        module_args_parser_0 = module_0.ModuleArgsParser(str_2, var_0)
        var_1 = var_5.parse()[int_0]
        str_3 = 'local_action'
        str_4 = 'shell echo hi'
        str_5 = {str_3: str_4, str_0: str_1}
        module_args_parser_1 = module_0.ModuleArgsParser(str_5, var_0)
        var_2 = var_10.parse()[int_0]
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'action'
        str_1 = ''
        var_0 = dict(_raw_params=str_1)
        str_2 = 'args'
        str_3 = 'chdir'
        str_4 = {str_3: str_1}
        str_5 = {str_0: str_4, str_2: str_4}
        module_args_parser_0 = module_0.ModuleArgsParser(str_5)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'pwd'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        str_2 = 'shell'
        str_3 = {str_2: module_args_parser_0, str_0: str_0, str_2: module_args_parser_0, str_2: str_1}
        module_args_parser_1 = module_0.ModuleArgsParser(str_3)
        var_0 = module_args_parser_1.parse()
        str_4 = 'action'
        str_5 = {str_4: str_4}
        module_args_parser_2 = module_0.ModuleArgsParser(str_5)
        var_1 = module_args_parser_2.parse()
        var_2 = module_args_parser_0.parse(module_args_parser_2)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'pwd'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = dict(_raw_params=str_0)
        str_2 = 'shell'
        str_3 = {str_2: str_0}
        module_args_parser_1 = module_0.ModuleArgsParser(str_3)
        var_1 = module_args_parser_1.parse()
        str_4 = 'action'
        str_5 = {str_4: module_args_parser_0}
        module_args_parser_2 = module_0.ModuleArgsParser(str_5)
        var_2 = module_args_parser_2.parse()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'me'
        module_args_parser_0 = module_0.ModuleArgsParser()
        str_1 = {str_0: str_0, str_0: str_0, str_0: module_args_parser_0}
        module_args_parser_1 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_1.parse(str_0)
    except BaseException:
        pass