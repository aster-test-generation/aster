# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.dict_unpacking as module_1
import py_backwards.utils.snippet as module_2

def test_case_0():
    try:
        module_x_var_0 = None
        a_s_t_0 = module_0.AST()
        dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
        module_x_var_1 = dict_unpacking_transformer_0.visit_Module(module_x_var_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = module_0.Dict()
        a_s_t_0 = module_0.AST()
        dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
        var_0 = dict_unpacking_transformer_0.visit_Dict(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xf3e\xdb\xd6\xd7\xe4\xa5\x91L4\xd3\xe2-\xa03 H'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        list_1 = [list_0, bytes_0]
        dict_0 = module_0.Dict(*list_1)
        list_2 = []
        a_s_t_0 = module_0.AST(*list_2)
        dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
        dict_unpacking_transformer_1 = module_1.DictUnpackingTransformer(a_s_t_0)
        str_0 = 'GN\x0by;hK@.B505'
        str_1 = '+Tb'
        str_2 = 'time'
        dict_1 = {str_0: dict_unpacking_transformer_1, str_1: dict_0, str_2: list_1}
        module_x_var_0 = module_0.Module(*list_1, **dict_1)
        module_x_var_1 = dict_unpacking_transformer_0.visit_Module(module_x_var_0)
        str_3 = 'Q=wHpZM\nQ4rM>q|380H"'
        dict_2 = {str_3: list_1, str_3: a_s_t_0}
        dict_3 = module_0.Dict(**dict_2)
        var_0 = dict_unpacking_transformer_0.visit_Dict(dict_3)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = None
        a_s_t_0 = module_0.AST()
        dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
        dict_0 = {a_s_t_0: a_s_t_0}
        float_0 = -1318.0
        snippet_0 = module_2.snippet(float_0)
        tuple_0 = (list_0, dict_unpacking_transformer_0, dict_0, snippet_0)
        list_1 = [tuple_0]
        dict_1 = module_0.Dict(*list_1)
        a_s_t_1 = module_0.AST()
        dict_unpacking_transformer_1 = module_1.DictUnpackingTransformer(a_s_t_1)
        var_0 = dict_unpacking_transformer_1.visit_Dict(dict_1)
    except BaseException:
        pass