# Automatically generated by Pynguin.
import pypara.monetary as module_0
import datetime as module_1
import decimal as module_2
import pypara.currencies as module_3

def test_case_0():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        int_0 = 2937
        var_0 = price_0.__round__(int_0)
        currency_0 = None
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
    except BaseException:
        pass

def test_case_1():
    try:
        none_money_0 = module_0.NoneMoney()
        int_0 = none_money_0.as_integer()
    except BaseException:
        pass

def test_case_2():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.lt(money_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        list_0 = [money_0, money_0, none_money_0]
        date_0 = module_1.date(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.as_boolean()
        int_0 = 2
        price_0 = none_price_0.round()
        money_0 = none_price_0.times(int_0)
        list_0 = [none_price_0]
        none_money_0 = module_0.NoneMoney(*list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b')S6H\xb0f\x9b\x15V\r'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_subtract(bytes_0)
        decimal_0 = module_2.Decimal()
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '3H&^H=3'
        int_0 = -1273
        currency_type_0 = module_3.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bytes_0 = b'\xca\xec\xd7\xbc\xd9\x8a\x85Y\xed\xe1h\xde\xf3\xb6]'
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.multiply(currency_0)
        none_price_1 = module_0.NonePrice()
        price_1 = none_price_1.subtract(price_0)
        list_1 = [bytes_0, bytes_0, bytes_0]
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_1, **dict_0)
        price_2 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_6():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        float_0 = money_0.as_float()
    except BaseException:
        pass

def test_case_7():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.divide(none_price_0)
        money_1 = money_0.abs()
        money_2 = money_0.__add__(money_0)
        var_0 = money_1.__round__()
        decimal_0 = module_2.Decimal()
        currency_0 = None
        str_0 = '<= comparision'
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.divide(none_price_0)
        money_1 = money_0.__sub__(money_0)
        var_0 = money_1.__round__()
        decimal_0 = module_2.Decimal()
        currency_0 = None
        str_0 = '<= comparision'
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        price_1 = price_0.__floordiv__(var_0)
        money_1 = money_0.multiply(var_0)
        money_2 = money_1.add(money_1)
        var_1 = money_2.__round__()
        decimal_0 = module_2.Decimal()
        date_0 = module_1.date(**dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        price_1 = none_price_0.abs()
        none_money_0 = module_0.NoneMoney()
        int_0 = 1627
        var_0 = price_1.__round__(int_0)
        currency_0 = None
        str_0 = '\n        Returns the list of currencies.\n        '
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        price_1 = price_0.__floordiv__(var_0)
        money_1 = money_0.abs()
        money_2 = money_1.add(money_1)
        var_1 = money_2.__round__()
        decimal_0 = module_2.Decimal()
        currency_0 = None
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
    except BaseException:
        pass

def test_case_12():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        price_1 = price_0.__abs__()
        bool_0 = none_price_0.lt(price_1)
    except BaseException:
        pass

def test_case_13():
    try:
        decimal_0 = module_2.Decimal()
        list_0 = []
        decimal_1 = module_2.Decimal(*list_0)
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.with_qty(decimal_1)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_14():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        bool_0 = price_0.__gt__(price_0)
        int_0 = 2937
        var_0 = price_0.__round__(int_0)
        list_0 = []
        some_money_0 = module_0.SomeMoney(*list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.divide(none_price_0)
        money_1 = money_0.abs()
        var_0 = money_1.__round__()
        money_2 = money_1.__add__(money_1)
        int_0 = 31
        var_1 = money_0.__round__(int_0)
        decimal_0 = module_2.Decimal()
        currency_0 = None
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
    except BaseException:
        pass

def test_case_16():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        bool_0 = price_0.lte(price_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.divide(none_price_0)
        money_1 = money_0.__sub__(money_0)
        money_2 = money_0.__add__(money_0)
        var_0 = money_1.__round__()
        decimal_0 = module_2.Decimal()
        currency_0 = None
        str_0 = '<= comparision'
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        var_0 = None
        price_1 = price_0.__floordiv__(var_0)
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.abs()
        money_1 = none_money_0.multiply(var_0)
        var_1 = money_1.__round__()
        list_0 = None
        bool_0 = money_0.__ge__(money_1)
        decimal_0 = module_2.Decimal(*list_0)
    except BaseException:
        pass

def test_case_18():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        price_1 = price_0.round()
    except BaseException:
        pass

def test_case_19():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        price_1 = none_price_0.abs()
        int_0 = 2937
        var_0 = price_0.__round__(int_0)
        bool_0 = price_1.is_equal(price_1)
        some_price_0 = module_0.SomePrice(**dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        bool_0 = none_price_0.gte(price_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        var_0 = None
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.divide(var_0)
        price_1 = price_0.__floordiv__(var_0)
        money_1 = money_0.abs()
        money_2 = money_0.add(money_0)
        var_1 = money_1.__round__()
        bytes_0 = None
        list_0 = [money_1, none_money_0, bytes_0]
        currency_0 = None
        price_2 = none_price_0.with_ccy(currency_0)
        decimal_0 = module_2.Decimal(*list_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = ''
        int_0 = -1555
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_price_0.gte(price_0)
        bool_1 = some_price_0.gt(price_0)
        none_price_0 = module_0.NonePrice()
        price_1 = none_price_0.with_ccy(currency_0)
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_22():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        price_1 = price_0.__floordiv__(var_0)
        money_1 = money_0.abs()
        price_2 = none_price_0.scalar_add(var_0)
        money_2 = money_1.add(money_1)
        var_1 = money_2.__round__()
        decimal_0 = module_2.Decimal()
        currency_0 = None
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = ''
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(monetary_operation_exception_0)
        int_0 = None
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_24():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        price_1 = none_price_0.abs()
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        int_0 = 2937
        var_1 = price_1.__round__(int_0)
        money_0 = none_money_0.scalar_subtract(var_0)
        var_2 = money_0.__round__()
        currency_0 = None
        str_0 = 'p[Mq6h'
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_0)
    except BaseException:
        pass

def test_case_25():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        bytes_0 = b'\xb3\xa1\x89\x7f\xc2V=2i\x16\xa8:\xb2\x13'
        money_0 = none_price_0.times(bytes_0)
        float_0 = none_price_0.as_float()
    except BaseException:
        pass

def test_case_26():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        price_1 = price_0.__floordiv__(var_0)
        money_1 = money_0.abs()
        price_2 = price_1.__add__(price_1)
        int_0 = 31
        money_2 = money_1.multiply(var_0)
        money_3 = money_2.__pos__()
        var_1 = money_3.__round__()
        str_0 = 'uq`UDnN\x0bq~1xJ\x0bf1\x0c"'
        str_1 = "'."
        dict_1 = {str_0: money_2, str_0: none_price_0, str_1: int_0, str_1: price_1}
        decimal_0 = module_2.Decimal(**dict_1)
    except BaseException:
        pass

def test_case_27():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        decimal_0 = module_2.Decimal(**dict_0)
        price_1 = none_price_0.with_qty(decimal_0)
        money_0 = none_money_0.divide(none_price_0)
        money_1 = money_0.abs()
        var_0 = money_1.__round__()
        str_0 = "#uu\r9)?YQ*;PT'p=cnt,"
        price_2 = price_0.__truediv__(str_0)
        money_2 = money_1.__add__(money_1)
        int_0 = 31
        var_1 = money_0.__round__(int_0)
        decimal_1 = module_2.Decimal()
        currency_0 = None
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
    except BaseException:
        pass

def test_case_28():
    try:
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        money_1 = none_money_1.negative()
        money_2 = money_0.__add__(money_0)
        var_1 = money_0.__round__()
        money_3 = money_0.scalar_add(var_0)
        list_0 = [money_0, money_2, dict_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gt(money_3)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_29():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        bool_0 = price_0.lte(price_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.divide(none_price_0)
        bool_1 = none_money_0.is_equal(none_money_0)
        money_1 = money_0.__sub__(money_0)
        money_2 = money_0.__add__(money_0)
        int_0 = 795
        var_0 = money_2.__round__(int_0)
        currency_0 = None
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = 'Rand],'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        var_0 = None
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        none_price_0 = module_0.NonePrice()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.positive()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.lte(money_0)
        bool_1 = money_0.__gt__(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_2 = some_money_0.gt(money_0)
        money_1 = some_money_0.subtract(money_0)
        bool_3 = money_1.__ge__(money_1)
        currency_1 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_2 = money_1.__sub__(money_1)
        money_3 = money_2.__sub__(money_0)
        money_4 = money_1.__floordiv__(var_0)
    except BaseException:
        pass

def test_case_31():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        list_0 = [dict_0, dict_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        money_0 = module_0.Money(**dict_0)
        money_1 = money_0.abs()
    except BaseException:
        pass

def test_case_32():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        price_1 = none_price_0.negative()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        price_2 = none_price_0.scalar_subtract(var_0)
        money_1 = money_0.abs()
        money_2 = money_1.__add__(money_0)
        list_0 = [money_0, money_0, dict_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_3 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_33():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        price_1 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        money_1 = money_0.abs()
        money_2 = none_money_0.abs()
        money_3 = money_0.__floordiv__(var_0)
        var_1 = money_0.__round__()
        list_0 = [money_0, money_2, dict_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_34():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        money_0 = module_0.Money()
        bool_0 = money_0.lt(money_0)
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.abs()
        var_0 = None
        money_1 = money_0.__truediv__(var_0)
        int_0 = 2937
        var_1 = price_1.__round__(int_0)
        currency_0 = None
        str_0 = "8@'Oy~,=|T'< vW"
        int_1 = 430
        currency_type_0 = None
        decimal_0 = module_2.Decimal()
        int_2 = -2810
        currency_1 = module_3.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_2)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_1)
    except BaseException:
        pass

def test_case_35():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        money_0 = None
        money_1 = module_0.Money()
        bool_0 = money_1.lt(money_0)
        price_1 = none_price_0.abs()
        money_2 = money_1.__neg__()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        var_0 = None
        money_3 = none_money_0.divide(var_0)
        money_4 = money_3.abs()
        money_5 = money_1.__add__(money_3)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_36():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        money_0 = None
        money_1 = module_0.Money()
        bool_0 = money_1.lt(money_0)
        price_1 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        var_0 = None
        money_2 = none_money_0.divide(var_0)
        money_3 = money_2.abs()
        money_4 = money_3.__sub__(money_2)
        money_5 = money_4.__add__(money_2)
        var_1 = money_5.__round__()
        int_0 = 2937
        list_0 = [money_2, money_4, dict_0]
        some_price_0 = module_0.SomePrice(*list_0)
        var_2 = price_1.__round__(int_0)
        money_6 = money_5.__sub__(money_2)
        money_7 = money_5.__sub__(money_2)
        money_8 = money_2.__add__(money_7)
        int_1 = 795
        money_9 = money_8.__floordiv__(var_0)
        var_3 = money_9.__round__(int_1)
        decimal_0 = module_2.Decimal()
        var_4 = money_1.__round__()
    except BaseException:
        pass

def test_case_37():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        money_0 = None
        money_1 = module_0.Money()
        bool_0 = money_1.lt(money_0)
        price_1 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        var_0 = None
        money_2 = none_money_0.divide(var_0)
        money_3 = money_2.abs()
        money_4 = money_3.__sub__(money_2)
        money_5 = money_4.__add__(money_2)
        var_1 = money_5.__round__()
        int_0 = price_1.__int__()
    except BaseException:
        pass

def test_case_38():
    try:
        str_0 = 'Bitcoin Cash'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        decimal_0 = None
        money_0 = none_money_0.abs()
        money_1 = none_money_0.with_qty(decimal_0)
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        none_price_0 = module_0.NonePrice()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.lte(money_1)
        bytes_0 = b'\n\x84\xdf\xb7v'
        var_0 = currency_0.__le__(bytes_0)
        money_2 = some_money_0.subtract(money_1)
        currency_1 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_1 = money_2.__bool__()
        money_3 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_39():
    try:
        str_0 = ''
        int_0 = -981
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gte(price_0)
        dict_0 = {}
        price_1 = some_price_0.multiply(dict_0)
    except BaseException:
        pass

def test_case_40():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        money_0 = None
        money_1 = module_0.Money()
        bool_0 = money_1.lt(money_0)
        price_1 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        var_0 = None
        money_2 = none_money_0.divide(var_0)
        money_3 = money_2.abs()
        money_4 = money_3.__sub__(money_2)
        bool_1 = money_1.__gt__(money_2)
        money_5 = money_4.__add__(money_2)
        var_1 = money_2.__round__()
        list_0 = [money_2, money_4, dict_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_41():
    try:
        str_0 = ''
        int_0 = -1583
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        some_money_0 = module_0.SomeMoney(*list_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        money_0 = none_price_0.times(some_money_0)
        money_1 = money_0.__mul__(var_0)
        bool_0 = some_money_0.gt(money_1)
        bool_1 = some_price_0.gte(price_0)
        money_2 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_42():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        money_0 = None
        money_1 = module_0.Money()
        bool_0 = money_1.lt(money_0)
        price_1 = none_price_0.abs()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_money_1 = module_0.NoneMoney()
        var_0 = None
        money_2 = none_money_0.divide(var_0)
        money_3 = money_2.abs()
        money_4 = money_3.__sub__(money_2)
        money_5 = money_4.__add__(money_2)
        var_1 = money_5.__round__()
        int_0 = 2937
        list_0 = [money_2, money_4, dict_0]
        some_price_0 = module_0.SomePrice(*list_0)
        int_1 = None
        var_2 = price_0.__round__(int_1)
        money_6 = money_5.__sub__(money_2)
        money_7 = money_5.__sub__(money_2)
        money_8 = money_2.__add__(money_7)
        int_2 = 795
        money_9 = money_8.__floordiv__(var_0)
        var_3 = money_9.__round__(int_2)
        currency_0 = None
        int_3 = 430
        currency_type_0 = None
        decimal_0 = module_2.Decimal()
        str_0 = ''
        str_1 = 'N+"i1zpA&\r$\x0ck^%NKz'
        currency_1 = module_3.Currency(str_0, str_1, int_3, currency_type_0, decimal_0, int_0)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_1, currency_0)
    except BaseException:
        pass

def test_case_43():
    try:
        str_0 = '8x;G'
        int_0 = -981
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_44():
    try:
        str_0 = 'E'
        int_0 = None
        currency_type_0 = module_3.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        decimal_1 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        decimal_2 = currency_0.quantize(decimal_0)
        list_0 = [int_0, decimal_1, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_45():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        date_0 = None
        money_1 = money_0.with_dov(date_0)
        decimal_0 = module_2.Decimal()
        decimal_1 = module_2.Decimal()
        str_0 = '8i2yI'
        str_1 = ">sRK'"
        dict_0 = {str_0: str_0, str_0: money_0, str_1: str_0, str_1: str_1, str_0: none_money_0}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_46():
    try:
        str_0 = '8x;G'
        int_0 = -981
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.is_equal(int_0)
        money_1 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_47():
    try:
        str_0 = 'E'
        int_0 = None
        currency_type_0 = module_3.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        decimal_1 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        decimal_2 = currency_0.quantize(decimal_0)
        list_0 = [int_0, decimal_1, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        price_1 = some_price_0.scalar_add(currency_0)
    except BaseException:
        pass

def test_case_48():
    try:
        str_0 = 'E'
        int_0 = None
        currency_type_0 = module_3.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_49():
    try:
        str_0 = ''
        int_0 = None
        currency_type_0 = module_3.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        price_1 = some_price_0.negative()
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.positive()
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_50():
    try:
        str_0 = '8i'
        int_0 = 1471
        currency_type_0 = module_3.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bytes_0 = b'\x1dn@\xd9T\\WG\xd4S\xd2'
        list_0 = [bytes_0, bytes_0, bytes_0]
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_51():
    try:
        decimal_0 = module_2.Decimal()
        bytes_0 = b'\xca\xec\xd7\xbc\xd9\x8a\x85Y\xed\xe1h\xde\xf3\xb6]'
        list_0 = [bytes_0, bytes_0, bytes_0]
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_0 = some_price_0.divide(some_price_0)
    except BaseException:
        pass

def test_case_52():
    try:
        str_0 = ''
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        int_0 = None
        currency_type_0 = module_3.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        decimal_1 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        decimal_2 = currency_0.quantize(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.round()
    except BaseException:
        pass

def test_case_53():
    try:
        str_0 = 'Rand'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = currency_0.__eq__(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        bool_1 = price_0.lt(price_0)
        price_1 = some_price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_54():
    try:
        str_0 = 'E'
        int_0 = None
        currency_type_0 = module_3.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bytes_0 = b'\n\xdf\xc9'
        var_0 = currency_0.__le__(bytes_0)
        price_0 = some_price_0.positive()
        money_0 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_55():
    try:
        none_price_0 = module_0.NonePrice()
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.positive()
        list_0 = [dict_0, none_price_0, decimal_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.lt(money_0)
        list_1 = [decimal_0]
        some_price_0 = module_0.SomePrice(*list_1)
    except BaseException:
        pass

def test_case_56():
    try:
        str_0 = '{HJ;-7S>W"I'
        str_1 = '+\rx@p'
        int_0 = 2316
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        int_1 = -341
        currency_0 = module_3.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        money_0 = module_0.Money()
        money_1 = money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_57():
    try:
        int_0 = -1011
        none_money_0 = module_0.NoneMoney()
        str_0 = '4\x0c<3Niv'
        currency_type_0 = module_3.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        money_1 = none_money_0.scalar_add(int_0)
        var_0 = money_1.__round__()
        int_1 = None
        decimal_1 = None
        money_2 = none_money_0.with_qty(decimal_1)
        currency_type_1 = module_3.CurrencyType.ALTERNATIVE
        decimal_2 = module_2.Decimal()
        currency_1 = module_3.Currency(str_0, str_0, int_1, currency_type_1, decimal_2, int_1)
        list_0 = [int_1, decimal_2, currency_1]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        price_1 = price_0.negative()
        bool_0 = price_0.is_equal(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.is_equal(price_0)
        int_2 = price_0.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = price_1.subtract(price_0)
        price_3 = price_2.negative()
        bytes_0 = b'\n\x84\xdf\xb7\xc9'
        var_1 = currency_1.__le__(bytes_0)
        price_4 = some_price_1.positive()
        money_3 = some_money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_58():
    try:
        str_0 = ''
        int_0 = -1583
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_price_0.gte(price_0)
        bool_1 = some_price_0.gt(price_0)
        set_0 = {currency_type_0}
        bool_2 = False
        money_0 = some_money_0.convert(currency_0, set_0, bool_2)
    except BaseException:
        pass

def test_case_59():
    try:
        str_0 = '~'
        int_0 = -2952
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.scalar_add(int_0)
        var_0 = money_0.__round__()
        int_1 = None
        decimal_0 = None
        money_1 = none_money_0.with_qty(decimal_0)
        decimal_1 = None
        money_2 = none_money_0.with_qty(decimal_1)
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_2 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_1, currency_type_0, decimal_2, int_1)
        list_0 = [int_1, decimal_2, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_0 = money_2.as_boolean()
        price_1 = some_price_0.subtract(price_0)
        none_price_0 = module_0.NonePrice()
        price_2 = none_price_0.multiply(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bytes_0 = b'\n\x84\xdf\xb7v'
        var_1 = currency_0.__le__(bytes_0)
        price_3 = module_0.Price()
        price_4 = price_3.__floordiv__(int_0)
        price_5 = some_price_1.positive()
        int_2 = 15
        currency_2 = module_3.Currency(str_0, str_0, int_1, currency_type_0, decimal_2, int_2)
        some_money_1 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_60():
    try:
        str_0 = ''
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(monetary_operation_exception_0)
        int_0 = None
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_61():
    try:
        str_0 = ''
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(monetary_operation_exception_0)
        int_0 = None
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.negative()
        price_2 = price_1.negative()
        bool_0 = some_price_0.as_boolean()
        bool_1 = price_1.is_equal(price_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = some_money_0.is_equal(monetary_operation_exception_0)
        price_3 = price_2.__neg__()
        price_4 = price_0.__sub__(price_3)
        bool_3 = price_4.__le__(price_0)
        some_price_1 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_62():
    try:
        str_0 = ';0fYN'
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(monetary_operation_exception_0)
        int_0 = None
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.negative()
        bool_0 = some_price_0.as_boolean()
        bool_1 = price_1.is_equal(price_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = some_money_0.is_equal(price_1)
        bool_3 = price_1.__le__(price_1)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_1)
        price_2 = some_price_0.add(price_1)
        money_0 = some_money_0.multiply(none_price_0)
    except BaseException:
        pass

def test_case_63():
    try:
        str_0 = ''
        int_0 = -981
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(monetary_operation_exception_0)
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.negative()
        bool_0 = some_price_0.as_boolean()
        bool_1 = price_1.is_equal(price_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = some_money_0.is_equal(price_1)
        bool_3 = price_1.__le__(price_1)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_1)
        bool_5 = some_price_0.gte(price_1)
        var_0 = None
        money_0 = some_money_0.positive()
        money_1 = money_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_64():
    try:
        str_0 = '~'
        int_0 = -311
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        var_0 = money_0.__round__()
        int_1 = None
        decimal_0 = None
        money_1 = none_money_0.with_qty(decimal_0)
        money_2 = money_1.__pos__()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_1 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_1, currency_type_0, decimal_1, int_1)
        list_0 = [int_1, decimal_1, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        bool_0 = price_0.lt(price_0)
        none_price_0 = module_0.NonePrice()
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bytes_0 = b'\n\x84\xf7\xb7v'
        var_1 = currency_0.__le__(bytes_0)
        price_1 = some_price_0.add(price_0)
    except BaseException:
        pass

def test_case_65():
    try:
        list_0 = []
        money_0 = module_0.Money()
        money_1 = money_0.__mul__(list_0)
        bool_0 = money_1.__ge__(money_0)
        str_0 = '2~+CWJj/@v>\r'
        str_1 = '?d`V:@m'
        int_0 = -52
        list_1 = [money_0, money_1]
        str_2 = '$12nC>w@syY@_akJ41\r\n'
        dict_0 = {str_2: str_0, str_2: str_0, str_1: int_0}
        date_0 = module_1.date(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_66():
    try:
        str_0 = ''
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        int_0 = None
        bool_0 = none_price_0.gte(price_0)
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        var_0 = None
        money_0 = some_price_0.times(var_0)
    except BaseException:
        pass

def test_case_67():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        price_1 = price_0.add(price_0)
    except BaseException:
        pass

def test_case_68():
    try:
        str_0 = ''
        int_0 = -984
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        price_1 = some_price_0.negative()
        bool_0 = price_1.lt(price_0)
    except BaseException:
        pass

def test_case_69():
    try:
        bool_0 = False
        price_0 = module_0.Price()
        price_1 = price_0.divide(bool_0)
    except BaseException:
        pass

def test_case_70():
    try:
        str_0 = '8x;G'
        int_0 = -981
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_1 = some_money_0.abs()
        money_2 = money_1.negative()
        money_3 = some_money_0.add(money_2)
        price_0 = module_0.Price()
        price_1 = price_0.floor_divide(int_0)
    except BaseException:
        pass

def test_case_71():
    try:
        str_0 = '8x;G}'
        int_0 = -981
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = some_money_0.with_ccy(currency_0)
        bool_0 = money_0.is_equal(int_0)
        money_1 = some_money_0.add(money_0)
    except BaseException:
        pass

def test_case_72():
    try:
        str_0 = ''
        int_0 = -1555
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = some_price_0.as_boolean()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.is_equal(money_0)
        money_1 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_73():
    try:
        str_0 = '%o'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        decimal_1 = currency_0.quantize(decimal_0)
        bool_0 = currency_0.__eq__(decimal_1)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        none_price_0 = module_0.NonePrice()
        price_0 = some_price_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lte(money_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_1 = price_0.add(price_0)
        none_price_1 = module_0.NonePrice()
        price_2 = none_price_1.add(price_1)
        float_0 = price_2.as_float()
        money_1 = some_money_0.subtract(money_0)
        bool_2 = money_1.__ge__(money_1)
        int_1 = -5
        currency_1 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        money_2 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_74():
    try:
        str_0 = ''
        int_0 = -1583
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        some_money_0 = module_0.SomeMoney(*list_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        bool_0 = some_price_0.gte(price_0)
        bool_1 = some_price_0.gt(price_0)
        money_0 = some_money_1.divide(var_0)
    except BaseException:
        pass

def test_case_75():
    try:
        str_0 = '%o'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = currency_0.__eq__(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_1 = price_0.lt(price_0)
        price_1 = some_price_0.subtract(price_0)
        none_price_0 = module_0.NonePrice()
        price_2 = some_price_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = some_money_0.lte(money_0)
        bool_3 = price_1.__gt__(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_4 = some_money_0.gt(money_0)
        price_3 = price_1.__add__(price_0)
        money_1 = some_money_0.subtract(money_0)
        bool_5 = money_1.__ge__(money_1)
        int_1 = -5
        currency_2 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        bool_6 = price_3.as_boolean()
        int_2 = some_money_0.as_integer()
        money_2 = money_1.add(money_0)
        bool_7 = none_money_0.lte(money_1)
        money_3 = some_money_0.convert(currency_0, bool_4)
    except BaseException:
        pass

def test_case_76():
    try:
        str_0 = '%o'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = currency_0.__eq__(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_1 = price_0.lt(price_0)
        price_1 = some_price_0.subtract(price_0)
        none_price_0 = module_0.NonePrice()
        price_2 = some_price_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = price_1.__gt__(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_3 = some_money_0.gt(money_0)
        price_3 = price_1.__add__(price_0)
        money_1 = some_money_0.subtract(money_0)
        bool_4 = money_1.__ge__(money_1)
        int_1 = -5
        currency_2 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        bool_5 = price_3.as_boolean()
        bytes_0 = b'\xe3\xf1\xc9m\xdf7\xe2\x7f\xc3'
        money_2 = some_money_0.scalar_subtract(bytes_0)
    except BaseException:
        pass

def test_case_77():
    try:
        str_0 = '%o'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_0 = price_0.lt(price_0)
        price_1 = some_price_0.with_ccy(currency_0)
        none_price_0 = module_0.NonePrice()
        price_2 = some_price_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lte(money_0)
        bool_2 = price_1.__gt__(price_0)
    except BaseException:
        pass

def test_case_78():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = None
        money_1 = module_0.Money()
        money_2 = money_1.add(money_0)
    except BaseException:
        pass

def test_case_79():
    try:
        str_0 = '8x;G'
        int_0 = -981
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = money_0.is_equal(str_0)
        money_1 = some_money_0.add(money_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_1.gt(money_0)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.positive()
        price_2 = price_1.__abs__()
        price_3 = price_2.__truediv__(incompatible_currency_error_0)
    except BaseException:
        pass

def test_case_80():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.as_boolean()
    except BaseException:
        pass

def test_case_81():
    try:
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_0 = module_0.Price()
        bool_0 = price_0.lt(price_0)
        price_1 = price_0.__mul__(monetary_operation_exception_0)
        bool_1 = price_1.gt(price_0)
    except BaseException:
        pass

def test_case_82():
    try:
        str_0 = 'Rand'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = currency_0.__eq__(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lte(money_0)
        bool_2 = money_0.__gt__(money_0)
        bool_3 = price_1.__gt__(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_4 = some_money_0.gt(money_0)
        price_2 = price_0.abs()
        money_1 = some_money_0.subtract(money_0)
        bool_5 = money_1.__ge__(money_1)
        currency_2 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_6 = price_2.as_boolean()
        money_2 = money_1.add(money_0)
        money_3 = module_0.Money()
        bool_7 = money_3.gt(money_2)
        bool_8 = none_money_0.lte(money_3)
        price_3 = price_2.convert(currency_1)
    except BaseException:
        pass

def test_case_83():
    try:
        str_0 = 'Rand'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_0 = price_0.lt(price_0)
        price_1 = some_price_0.subtract(price_0)
        none_price_0 = module_0.NonePrice()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lte(money_0)
        bool_2 = money_0.__gt__(money_0)
        bool_3 = price_1.__gt__(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_4 = some_money_0.gt(money_0)
        price_2 = price_1.__add__(price_0)
        money_1 = some_money_0.subtract(money_0)
        bool_5 = money_1.__ge__(money_1)
        currency_2 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_6 = price_2.as_boolean()
        money_2 = money_0.add(money_1)
        money_3 = money_0.add(money_0)
        money_4 = none_money_0.subtract(money_0)
        bool_7 = money_4.gt(money_0)
        bool_8 = none_money_0.lte(money_2)
        price_3 = price_2.convert(currency_0, list_0)
    except BaseException:
        pass

def test_case_84():
    try:
        none_price_0 = module_0.NonePrice()
        money_0 = module_0.Money()
        money_1 = money_0.__pos__()
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_85():
    try:
        money_0 = module_0.Money()
        decimal_0 = module_2.Decimal()
        money_1 = money_0.with_qty(decimal_0)
        int_0 = None
        money_2 = money_0.round(int_0)
    except BaseException:
        pass

def test_case_86():
    try:
        str_0 = ')o'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = currency_0.__eq__(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_1 = price_0.lt(price_0)
        price_1 = some_price_0.subtract(price_0)
        none_price_0 = module_0.NonePrice()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = some_money_0.lte(money_0)
        bool_3 = price_1.__gt__(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_4 = some_money_0.gt(money_0)
        price_2 = price_1.__add__(price_0)
        money_1 = some_money_0.subtract(money_0)
        bool_5 = money_1.__ge__(money_1)
        currency_2 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_6 = price_2.as_boolean()
        money_2 = money_1.add(money_0)
        money_3 = money_2.add(money_1)
        money_4 = money_1.__truediv__(decimal_0)
        money_5 = money_2.with_ccy(currency_0)
        float_0 = money_5.__float__()
        money_6 = money_5.add(money_4)
        bool_7 = money_3.gt(money_6)
    except BaseException:
        pass

def test_case_87():
    try:
        str_0 = 'Rand'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        var_0 = None
        money_0 = none_money_0.scalar_subtract(var_0)
        money_1 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_0 = price_0.lt(price_0)
        price_1 = some_price_0.subtract(price_0)
        none_price_0 = module_0.NonePrice()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lte(money_1)
        bool_2 = money_1.__gt__(money_1)
        bool_3 = price_1.__gt__(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_4 = some_money_0.gt(money_1)
        price_2 = price_1.__add__(price_0)
        money_2 = some_money_0.subtract(money_1)
        bool_5 = money_2.__ge__(money_2)
        currency_2 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_6 = price_2.as_boolean()
        money_3 = money_2.__sub__(money_2)
        money_4 = money_3.add(money_2)
        bool_7 = money_4.gt(money_3)
        bool_8 = none_money_0.lte(money_2)
        price_3 = module_0.Price()
        price_4 = price_3.convert(currency_2)
    except BaseException:
        pass

def test_case_88():
    try:
        str_0 = 'Oc$'
        str_1 = '8i'
        int_0 = 1471
        currency_type_0 = module_3.CurrencyType.METAL
        price_0 = module_0.Price()
        bool_0 = price_0.__eq__(int_0)
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bytes_0 = b'\x1dn@\xd9T\\WG\xd4S\xd2'
        list_0 = [bytes_0, bytes_0, bytes_0]
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_89():
    try:
        str_0 = ')o'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = currency_0.__eq__(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        bool_1 = money_0.__le__(money_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_2 = price_0.lt(price_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_3 = some_money_0.lte(money_0)
        bool_4 = price_1.__gt__(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_5 = some_money_0.gt(money_0)
        price_2 = price_1.__add__(price_0)
        bool_6 = price_0.__le__(price_1)
        money_1 = some_money_0.with_ccy(currency_0)
        bool_7 = money_1.__ge__(money_1)
        currency_2 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_0 = money_0.__round__()
        bool_8 = price_2.as_boolean()
        money_2 = money_0.subtract(money_0)
        money_3 = money_1.add(money_0)
        money_4 = money_3.add(money_1)
        bool_9 = money_1.gt(money_3)
        bool_10 = price_1.gte(price_1)
        money_5 = some_money_0.subtract(money_1)
    except BaseException:
        pass

def test_case_90():
    try:
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        money_0 = module_0.Money()
        money_1 = money_0.positive()
    except BaseException:
        pass

def test_case_91():
    try:
        str_0 = "^`e,S'7Rb$(1l\r\t7V5"
        price_0 = module_0.Price()
        price_1 = price_0.scalar_add(str_0)
    except BaseException:
        pass

def test_case_92():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.is_equal(price_0)
    except BaseException:
        pass

def test_case_93():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        complex_0 = None
        price_1 = price_0.scalar_subtract(complex_0)
    except BaseException:
        pass

def test_case_94():
    try:
        money_0 = module_0.Money()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        str_0 = 'cK0W2A%j*yd$.4\x0cv3ypz'
        str_1 = 'ee\'CJJ.i=zmdk=3"faB.'
        int_0 = -1426
        decimal_0 = None
        currency_0 = module_3.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
        money_1 = money_0.divide(incompatible_currency_error_0)
    except BaseException:
        pass

def test_case_95():
    try:
        str_0 = 'MAD'
        int_0 = -1273
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bytes_0 = b'\x98[\x12.\x9d,\xc2?\x1d\xa4bt'
        list_0 = [bytes_0, bytes_0, bytes_0]
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        bool_0 = False
        money_0 = module_0.Money(**dict_0)
        money_1 = money_0.__floordiv__(bool_0)
        none_money_0 = module_0.NoneMoney()
        bool_1 = none_money_0.lte(money_1)
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_96():
    try:
        money_0 = module_0.Money()
        int_0 = 10
        money_1 = money_0.scalar_add(int_0)
    except BaseException:
        pass

def test_case_97():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.negative()
    except BaseException:
        pass

def test_case_98():
    try:
        currency_type_0 = module_3.CurrencyType.CRYPTO
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_0 = module_0.Price()
        price_1 = price_0.__mul__(monetary_operation_exception_0)
        str_0 = '10'
        str_1 = '9'
        int_0 = 1
        bool_0 = price_0.gte(price_1)
        str_2 = 'JDk~Z,\\3r<'
        str_3 = '30U/360'
        dict_0 = {str_0: str_1, str_0: currency_type_0, str_2: bool_0, str_3: int_0}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_99():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        price_1 = price_0.positive()
    except BaseException:
        pass

def test_case_100():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.__neg__()
        price_2 = price_1.positive()
    except BaseException:
        pass

def test_case_101():
    try:
        str_0 = ')o'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = currency_0.__eq__(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        bool_1 = money_0.__le__(money_0)
        currency_1 = None
        price_0 = some_price_0.with_ccy(currency_1)
        bool_2 = price_0.lt(price_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_3 = some_money_0.lte(money_0)
        bool_4 = price_1.__gt__(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_5 = some_money_0.gt(money_0)
        price_2 = price_1.__add__(price_0)
        bool_6 = price_0.__le__(price_1)
        money_1 = some_money_0.subtract(money_0)
        bool_7 = money_1.__ge__(money_1)
        currency_2 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_0 = money_0.__round__()
        bool_8 = price_2.as_boolean()
        money_2 = some_money_0.abs()
        money_3 = money_2.add(money_1)
        bool_9 = False
        money_4 = money_3.__floordiv__(bool_9)
        bool_10 = money_1.gt(money_2)
        bool_11 = price_1.gte(price_1)
        money_5 = some_money_0.subtract(money_1)
        dict_0 = {}
        money_6 = some_money_0.floor_divide(dict_0)
    except BaseException:
        pass

def test_case_102():
    try:
        str_0 = ')o'
        none_money_0 = module_0.NoneMoney()
        int_0 = None
        price_0 = None
        price_1 = module_0.Price()
        bool_0 = price_1.__lt__(price_0)
        money_0 = none_money_0.negative()
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_1 = currency_0.__eq__(decimal_0)
        list_0 = [int_0, decimal_0, currency_0]
        some_price_0 = module_0.SomePrice(*list_0)
        bool_2 = money_0.__le__(money_0)
        currency_1 = None
        price_2 = some_price_0.with_ccy(currency_1)
        bool_3 = price_2.lt(price_2)
        price_3 = some_price_0.subtract(price_2)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_4 = some_money_0.lte(money_0)
        bool_5 = price_3.__gt__(price_2)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_6 = some_money_0.gt(money_0)
        price_4 = price_3.__add__(price_2)
        bool_7 = price_2.__le__(price_3)
        money_1 = some_money_0.subtract(money_0)
        bool_8 = money_1.__ge__(money_1)
        var_0 = money_0.__round__()
        bool_9 = price_4.as_boolean()
        money_2 = money_1.add(money_0)
        money_3 = money_2.add(money_1)
        bool_10 = money_1.gt(money_2)
        bool_11 = price_3.gte(price_3)
        money_4 = some_money_0.subtract(money_1)
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        bool_12 = none_money_0.lte(money_4)
        money_5 = some_money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_103():
    try:
        none_price_0 = module_0.NonePrice()
        dict_0 = {}
        money_0 = module_0.Money(**dict_0)
        money_1 = money_0.negative()
    except BaseException:
        pass