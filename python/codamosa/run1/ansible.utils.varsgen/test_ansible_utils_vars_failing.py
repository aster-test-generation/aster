# Automatically generated by Pynguin.
import ansible.utils.vars as module_0
import ansible.errors as module_1

def test_case_0():
    try:
        str_0 = 's=V {Qu.1[g^k;,B'
        float_0 = 4038.7
        var_0 = module_0.merge_hash(str_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -2268.850303
        ansible_error_0 = module_1.AnsibleError()
        var_0 = module_0.combine_vars(float_0, ansible_error_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'WeV'
        var_0 = module_0.get_unique_id()
        bool_0 = True
        var_1 = module_0.load_options_vars(bool_0)
        var_2 = module_0._isidentifier_PY3(str_0)
        bool_1 = False
        var_3 = module_0._isidentifier_PY3(bool_1)
        bytes_0 = b"\x82\xbb\x98>\xab8\x1d!\xc9'!K\xfa\xb9\xd4\xaf\x16R7S"
        str_1 = '_//)1x[\\9j.'
        bool_2 = True
        var_4 = module_0.combine_vars(bool_2, bytes_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xae\xc3\xee\x16A\x008,'
        list_0 = None
        int_0 = -1370
        set_0 = {bytes_0, int_0, bytes_0}
        var_0 = module_0._isidentifier_PY3(set_0)
        set_1 = set()
        var_1 = module_0.load_extra_vars(set_1)
        tuple_0 = (list_0, int_0)
        bytes_1 = b':\x12\xc7\x7f\x14E\xc3Z\x9f\xb1,\xc7\xca\x7fa\x88\xd3'
        var_2 = module_0.get_unique_id()
        var_3 = module_0.merge_hash(bytes_0, tuple_0, bytes_1, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        ansible_options_error_0 = module_1.AnsibleOptionsError()
        var_0 = module_0.combine_vars(dict_0, ansible_options_error_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'j;KMK*s8<> T>l'
        var_0 = module_0.load_extra_vars(str_0)
        float_0 = None
        str_1 = '$\nWD'
        var_1 = module_0.load_extra_vars(str_1)
        str_2 = "P#'GoOP"
        list_0 = []
        var_2 = module_0.combine_vars(float_0, str_2, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xae\xc3\xee\x16A\x008,'
        list_0 = None
        int_0 = -1370
        set_0 = {bytes_0, int_0, bytes_0}
        var_0 = module_0._isidentifier_PY3(set_0)
        set_1 = set()
        var_1 = module_0.load_extra_vars(set_1)
        tuple_0 = (list_0, int_0)
        bytes_1 = b':\x12\xc7\x7f\x14E\xc3Z\x9f\xb1,\xc7\xca\x7fa\x88\xd3'
        var_2 = module_0.get_unique_id()
        var_3 = module_0.load_options_vars(list_0)
        var_4 = module_0.get_unique_id()
        var_5 = module_0.merge_hash(bytes_0, tuple_0, bytes_1, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = {}
        var_1 = module_0.combine_vars(var_0, var_0)
        bool_0 = True
        dict_0 = {}
        var_2 = module_0.load_extra_vars(dict_0)
        float_0 = 15.00502
        var_3 = module_0.merge_hash(bool_0, float_0)
    except BaseException:
        pass