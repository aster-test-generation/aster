# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.super_without_arguments as module_1
import typed_ast.ast3 as module_2

def test_case_0():
    try:
        call_0 = module_0.Call()
        a_s_t_0 = module_0.AST()
        super_without_arguments_transformer_0 = module_1.SuperWithoutArgumentsTransformer(a_s_t_0)
        call_1 = super_without_arguments_transformer_0.visit_Call(call_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'def __init__(self, name): super()'
        super_without_arguments_transformer_0 = module_1.SuperWithoutArgumentsTransformer(str_0)
        var_0 = module_2.parse(str_0)
        list_0 = [var_0, str_0]
        call_0 = module_0.Call(*list_0)
        var_1 = super_without_arguments_transformer_0.visit(call_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'super()'
        var_0 = module_2.parse(str_0)
        super_without_arguments_transformer_0 = module_1.SuperWithoutArgumentsTransformer(var_0)
        var_1 = super_without_arguments_transformer_0.visit(var_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'super(\nd)'
        var_0 = module_2.parse(str_0)
        super_without_arguments_transformer_0 = module_1.SuperWithoutArgumentsTransformer(var_0)
        var_1 = super_without_arguments_transformer_0.visit(var_0)
        str_1 = 'd>sb|K'
        dict_0 = {str_0: var_0, str_1: str_1}
        call_0 = module_0.Call(**dict_0)
        a_s_t_0 = module_0.AST()
        super_without_arguments_transformer_1 = module_1.SuperWithoutArgumentsTransformer(a_s_t_0)
        call_1 = super_without_arguments_transformer_1.visit_Call(call_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'def __init__(self, name): super()'
        var_0 = module_2.parse(str_0)
        super_without_arguments_transformer_0 = module_1.SuperWithoutArgumentsTransformer(var_0)
        var_1 = super_without_arguments_transformer_0.visit(var_0)
    except BaseException:
        pass