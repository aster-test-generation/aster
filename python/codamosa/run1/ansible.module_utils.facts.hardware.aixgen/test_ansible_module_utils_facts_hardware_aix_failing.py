# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.aix as module_0

def test_case_0():
    try:
        bytes_0 = b'\xc9\xbe(\xbaa\xab\x84\x12\x14\x8c'
        set_0 = None
        list_0 = [set_0, set_0, set_0]
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector()
        a_i_x_hardware_0 = module_0.AIXHardware(list_0, a_i_x_hardware_collector_0)
        var_0 = a_i_x_hardware_0.populate(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '0W'
        a_i_x_hardware_0 = module_0.AIXHardware(str_0)
        var_0 = a_i_x_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xcd\xd8\n\x0c\x9f'
        set_0 = {bytes_0, bytes_0, bytes_0}
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector(set_0)
        set_1 = set()
        a_i_x_hardware_0 = module_0.AIXHardware(set_1)
        var_0 = a_i_x_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 1000.0
        bytes_0 = b'1\x96\xf0\xa1\xbe\xf7R\xcbhu\x90\x9c0B\xc6B\xd1\x93(\x96'
        a_i_x_hardware_0 = module_0.AIXHardware(float_0, bytes_0)
        var_0 = a_i_x_hardware_0.get_vgs_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        a_i_x_hardware_0 = module_0.AIXHardware(tuple_0)
        var_0 = a_i_x_hardware_0.get_mount_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        bytes_0 = b'2X\x82\x14\x1b\x0e\x97\x9b\xda{'
        a_i_x_hardware_0 = module_0.AIXHardware(dict_0, bytes_0)
        int_0 = 307
        a_i_x_hardware_1 = module_0.AIXHardware(int_0)
        var_0 = a_i_x_hardware_1.get_device_facts()
    except BaseException:
        pass