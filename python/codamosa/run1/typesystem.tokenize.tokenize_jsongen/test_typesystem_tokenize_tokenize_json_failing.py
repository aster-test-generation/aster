# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_json as module_0

def test_case_0():
    try:
        str_0 = 'field_name'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '3#W@ZdjE,`RQu^>X)mD#'
        any_0 = module_0.validate_json(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tokenizing_decoder_0 = module_0._TokenizingDecoder()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'o\x9a\x94\x8e\x11\x13|\rH\xba'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'v2gp29!xMK`gy4\x0bJ'
        any_0 = module_0.validate_json(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xf3\xd92'
        type_0 = None
        any_0 = module_0.validate_json(bytes_0, type_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'n[\xd7\x89n*\x92\xb8\xfb9\xdb1,\xe7\x94'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '['
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '{#@Zjw7`Qu^>XmmD'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'time'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '{\rTZjwDs`Qu^IkmmD'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'{"a": 1"b": 2}'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '{\n        "name":\t"John",\n        "age": 30,\n    a   "cars": {\n            "car1": "Ford",c            "car2": "BMW",\n            "car3": "Fiat"\n        }\n    }'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '{"firstname":}"Guido", "lat_n@me":"Rossum"}'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '{\n        "name": "John",\n      "age": 30,\n        "cars": {\n            "car1": "Ford",\n            "car2": "BMW",\n       \t    "car34: "Fiat"\n        \n    '
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '{\n        "name": "John",\n        "age"O 30,\n        "cars": {\n   r        "car1": "Ford",\n            "car2": "BMW",\n            "car3": "Fiat"\n     0  }\n    }'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '{\n        "name": "John",\n       "age": 30,\n        "cars": \n            "car1": "Ford",\n            "car2": "BMW"\n            "car3": "Fiat"\n        }\n    }'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '{\n        "name": "John",\n       "age": 30,\n        "cars": {\n            "car1": "Ford",\n            "car2": "BMW",\n            "car3": "Fiat"\n        }\n    '
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '1E7["sPp+v'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = '{"foR>o": 1, "bar":'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass