# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        bool_0 = False
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ',D'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_ok(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_play_start(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -2266
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        callback_module_2 = module_0.CallbackModule()
        str_0 = 'K-pQp+'
        var_0 = callback_module_0.v2_playbook_on_stats(str_0)
        var_1 = callback_module_0.v2_runner_on_no_hosts(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = 'QJ98O;3|dF3(!'
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_task_start(callback_module_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 4210
        tuple_0 = ()
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b'R7\xc05\xda\xd6\xe7\xbdf'
        task_data_0 = module_0.TaskData(int_0, tuple_0, callback_module_0, bytes_0, callback_module_0)
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(task_data_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b"\xdd'\xc2\xe3[\xaa\xc2\x95\xa0[\x18\x02#"
        int_0 = 5403
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(bytes_0, int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = 'K-pQp+'
        var_0 = callback_module_0.v2_playbook_on_stats(str_0)
        bool_0 = False
        var_1 = callback_module_0.v2_runner_on_failed(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '^FcQ^8i&3u;$KfP\x0cjM'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = ()
        bool_0 = False
        tuple_1 = ()
        bool_1 = False
        str_0 = '#Et]u~-_$3x-\n@sE %'
        str_1 = 's'
        task_data_0 = module_0.TaskData(bool_0, tuple_1, bool_1, str_0, str_1)
        var_0 = task_data_0.add_host(tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        callback_module_0 = module_0.CallbackModule()
        float_0 = 512.0
        var_0 = callback_module_0.v2_runner_on_skipped(float_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'status'
        str_1 = 'result'
        host_data_0 = module_0.HostData(str_1, str_1, str_0, str_1)
        str_2 = 'path'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(host_data_0)
        task_data_0 = module_0.TaskData(str_1, str_1, str_2, str_2, str_1)
        var_1 = task_data_0.add_host(host_data_0)
        var_2 = len(str_1)
        var_3 = task_data_0.add_host(host_data_0)
    except BaseException:
        pass