# Automatically generated by Pynguin.
import ansible.modules.lineinfile as module_0

def test_case_0():
    try:
        int_0 = 1292
        dict_0 = {int_0: int_0}
        float_0 = -2928.2
        bytes_0 = b'\x16\xdf\xb3\x828'
        var_0 = module_0.write_changes(dict_0, float_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 2072.698
        tuple_0 = None
        dict_0 = {tuple_0: tuple_0, float_0: float_0, float_0: float_0, float_0: float_0}
        int_0 = -569
        var_0 = module_0.check_file_attrs(float_0, tuple_0, dict_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = None
        str_0 = '/M:@<NDCmX]A'
        tuple_0 = ()
        int_0 = -1643
        bool_0 = True
        var_0 = module_0.present(str_0, str_0, tuple_0, int_0, bool_0, bytes_0, bool_0, int_0, tuple_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\rc-)\rt&'
        tuple_0 = ()
        dict_0 = {str_0: str_0, str_0: str_0, tuple_0: str_0, tuple_0: tuple_0}
        bytes_0 = b'4;Z\xf4'
        set_0 = set()
        float_0 = None
        float_1 = 1518.0
        int_0 = -824
        str_1 = 'a'
        var_0 = module_0.present(dict_0, bytes_0, set_0, dict_0, set_0, float_0, set_0, tuple_0, float_1, int_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 1
        set_0 = {int_0, int_0, int_0}
        str_0 = 'Y"'
        tuple_0 = ()
        bytes_0 = b'\xda\xf3\x02\xe0=\n'
        tuple_1 = (tuple_0, bytes_0)
        tuple_2 = (str_0, set_0, tuple_1, set_0)
        list_0 = [int_0, tuple_0, set_0, set_0]
        complex_0 = None
        float_0 = -477.5363
        var_0 = module_0.present(list_0, complex_0, bytes_0, tuple_2, str_0, list_0, int_0, list_0, list_0, float_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\x0cazw]q\x0b\tId`#\x0c4i$0\n8<'
        bool_0 = None
        bool_1 = None
        list_0 = []
        list_1 = [list_0, bool_1, str_0]
        int_0 = -2743
        str_1 = ''
        var_0 = module_0.absent(str_0, bool_0, bool_1, list_1, int_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xfck\xb7]\xd5o\x06\xe1`g\xbf\xbe\x83'
        set_0 = set()
        str_0 = '*M|},>HaHq3:#GtK'
        bytes_1 = None
        tuple_0 = ()
        str_1 = 'r`\rfIy'
        dict_0 = {tuple_0: bytes_0, str_1: set_0, bytes_0: bytes_1}
        var_0 = module_0.absent(bytes_0, set_0, str_0, bytes_1, tuple_0, dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = None
        str_0 = '(@<NDCmXpA'
        tuple_0 = ()
        int_0 = -1701
        bool_0 = True
        var_0 = module_0.present(str_0, str_0, tuple_0, int_0, bool_0, bytes_0, bool_0, int_0, tuple_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = None
        str_0 = '0"p~6;<D\x0c,4rP/W'
        tuple_0 = ()
        int_0 = -1665
        bool_0 = False
        var_0 = module_0.present(str_0, str_0, tuple_0, int_0, bool_0, bytes_0, bool_0, int_0, tuple_0, str_0, bytes_0)
    except BaseException:
        pass