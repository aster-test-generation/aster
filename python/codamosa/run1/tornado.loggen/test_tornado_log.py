# Automatically generated by Pynguin.
import tornado.log as module_0
import logging as module_1

def test_case_0():
    pass

def test_case_1():
    log_formatter_0 = module_0.LogFormatter()

def test_case_2():
    module_0.enable_pretty_logging()

def test_case_3():
    str_0 = '%(asctime)s %(message)s'
    log_formatter_0 = module_0.LogFormatter(str_0)
    int_0 = 1
    var_0 = None
    log_record_0 = module_1.LogRecord(str_0, str_0, str_0, int_0, str_0, var_0, var_0, str_0)
    str_1 = log_formatter_0.format(log_record_0)

def test_case_4():
    log_formatter_0 = module_0.LogFormatter()
    str_0 = 'levelname'
    str_1 = 'asctime'
    str_2 = 'module'
    str_3 = 'msg'
    str_4 = 'exc_text'
    str_5 = 'ERROR'
    str_6 = '2020-06-05 01:02:03,456'
    str_7 = 'test'
    int_0 = 1234
    str_8 = 'Test Message'
    str_9 = 'traceback'
    var_0 = {str_0: str_5, str_1: str_6, str_2: str_7, str_8: int_0, str_3: str_8, str_4: str_9}
    var_1 = module_1.makeLogRecord(var_0)
    str_10 = log_formatter_0.format(var_1)
    str_11 = '\x1b[1;31m[E 200605 01:02:03 test:1234]\x1b[0m Test Message\n    traceback'
    str_12 = 'LogFormatter.format is working as expected'
    var_2 = print(str_12)
    str_13 = 'LogFormatter.format is not working as expected'
    var_3 = print(str_13)
    str_14 = 'Expected: \n'
    var_4 = print(str_14, str_11)
    str_15 = 'Actual: \n'
    var_5 = print(str_15, str_10)