# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'YAML_SYNTAX_ERROR'
    var_0 = module_0.parse_kv(str_0)

def test_case_2():
    str_0 = "c%\n';Fq,9Wu%?]+x\t:"
    var_0 = module_0.join_args(str_0)

def test_case_3():
    set_0 = None
    var_0 = module_0.parse_kv(set_0)

def test_case_4():
    str_0 = ''
    var_0 = module_0.parse_kv(str_0)

def test_case_5():
    str_0 = '-c=a=b -d=c=d -a=a=c -b="equal=equal"'
    var_0 = module_0.parse_kv(str_0)

def test_case_6():
    str_0 = '='
    var_0 = module_0.parse_kv(str_0)

def test_case_7():
    str_0 = 'a=b c="foo bar"'
    var_0 = module_0.split_args(str_0)

def test_case_8():
    str_0 = 'a=1 b=2 c=3'
    bool_0 = True
    var_0 = module_0.parse_kv(str_0, bool_0)

def test_case_9():
    str_0 = " a=b, c=d, =c, b'equal=equal' "
    var_0 = module_0.parse_kv(str_0)
    var_1 = len(var_0)

def test_case_10():
    str_0 = 'a=b c="foo bar"'
    var_0 = print(str_0)
    str_1 = 'a="[[foo]]"'
    var_1 = module_0.split_args(str_1)
    var_2 = print(var_1)
    str_2 = 'a="foo" b="bar baz" c="b \\"foo\\""'
    var_3 = print(str_2)
    str_3 = '"foo" "bar"'
    var_4 = module_0.split_args(str_3)
    var_5 = print(var_4)
    str_4 = 'a="foo" b="bar baz" c="b \\"foo\\""'
    var_6 = module_0.split_args(str_4)
    var_7 = print(var_6)
    str_5 = 'a=b c="foo {{ bar }}"'
    var_8 = module_0.split_args(str_5)
    var_9 = print(var_8)
    str_6 = 'a=b c="foo {% bar %}"'
    var_10 = module_0.split_args(str_6)
    var_11 = print(var_10)
    str_7 = 'a=b c="foo {{ bar }}"'
    var_12 = module_0.split_args(str_7)
    var_13 = print(var_12)

def test_case_11():
    str_0 = 'cmd: /bin/echo {{ansible_env.HOME}}/path'
    var_0 = module_0.parse_kv(str_0)
    str_1 = 'a="{Y hello }}"'
    var_1 = module_0.split_args(str_1)
    var_2 = module_0.parse_kv(str_1)

def test_case_12():
    str_0 = 'foo bar'
    var_0 = module_0.split_args(str_0)
    str_1 = 'foo bar\nbaz'
    var_1 = module_0.split_args(str_1)
    str_2 = 'foo bar\\\nbaz'
    var_2 = module_0.split_args(str_2)
    str_3 = 'foo bar\\\nbaz\n'
    var_3 = module_0.split_args(str_3)
    str_4 = 'foo bar\nbaz\\\n'
    var_4 = module_0.split_args(str_4)
    str_5 = 'foo bar\nbaz\\\nquux'
    var_5 = module_0.split_args(str_5)
    str_6 = 'foo bar\nbaz\\\nquux\n'
    var_6 = module_0.split_args(str_6)
    str_7 = 'foo{{ bar\nbaz}}'
    var_7 = module_0.split_args(str_7)
    str_8 = 'foo{{ bar\nbaz}}\\\n'
    var_8 = module_0.split_args(str_8)