# Automatically generated by Pynguin.
import ansible.plugins.loader as module_0

def test_case_0():
    pass

def test_case_1():
    var_0 = module_0.get_all_plugin_loaders()

def test_case_2():
    str_0 = 'connection'
    var_0 = module_0.add_dirs_to_loader(str_0, str_0)

def test_case_3():
    str_0 = '0_nrtm'
    plugin_path_context_0 = None
    var_0 = module_0.get_shell_plugin(plugin_path_context_0, str_0)

def test_case_4():
    str_0 = ']base_class'
    plugin_loader_0 = module_0.PluginLoader(str_0, str_0, str_0, str_0)
    str_1 = 'ansible.builtin.copy'
    var_0 = plugin_loader_0.find_plugin(str_1)
    var_1 = type(var_0)

def test_case_5():
    str_0 = ']base_class'
    plugin_loader_0 = module_0.PluginLoader(str_0, str_0, str_0, str_0)
    str_1 = 'ansible.builtin.copy'
    var_0 = plugin_loader_0.find_plugin(str_1)
    list_0 = []
    var_1 = plugin_loader_0.format_paths(list_0)
    var_2 = type(var_0)

def test_case_6():
    int_0 = -2120
    var_0 = module_0.add_all_plugin_dirs(int_0)

def test_case_7():
    str_0 = 'sw'
    plugin_path_context_0 = None
    var_0 = module_0.get_shell_plugin(plugin_path_context_0, str_0)
    str_1 = 'included_path'
    float_0 = -3323.0
    plugin_path_context_1 = module_0.PluginPathContext(str_1, float_0)
    var_1 = module_0.add_all_plugin_dirs(plugin_path_context_1)
    dict_0 = None
    jinja2_loader_0 = None
    str_2 = 'B'
    dict_1 = {str_2: dict_0}
    plugin_load_context_0 = module_0.PluginLoadContext()
    var_2 = plugin_load_context_0.record_deprecation(dict_0, jinja2_loader_0, dict_1)

def test_case_8():
    str_0 = 'XY$3|,s9~=Z(k'
    bytes_0 = b'9\xb4P\xd1\xe6h\x19\rD\xdeJ\xc2\xc7^\x1ec'
    list_0 = [bytes_0, bytes_0]
    get_with_context_result_0 = module_0.get_with_context_result(*list_0)
    bool_0 = False
    plugin_loader_0 = module_0.PluginLoader(bytes_0, list_0, list_0, bool_0, bytes_0)
    var_0 = plugin_loader_0.format_paths(str_0)

def test_case_9():
    str_0 = 'connection'
    var_0 = module_0.add_dirs_to_loader(str_0, str_0)

def test_case_10():
    int_0 = 1701
    str_0 = '[(% ?1"_'
    str_1 = "F\tE'P\\Z^4"
    bytes_0 = b'&'
    list_0 = None
    dict_0 = {str_1: list_0}
    list_1 = None
    str_2 = 'unsafe_writes'
    str_3 = 'b.-A'
    str_4 = '.J\\ggZR\rIni&7o'
    str_5 = 'b'
    dict_1 = {str_3: int_0, str_3: str_1, str_4: str_1, str_5: str_4}
    plugin_load_context_0 = module_0.PluginLoadContext()
    var_0 = plugin_load_context_0.record_deprecation(dict_1, dict_1, dict_0)
    var_1 = plugin_load_context_0.redirect(str_1)
    dict_2 = {str_0: list_1, str_4: str_2}
    plugin_load_context_1 = module_0.PluginLoadContext()
    plugin_path_context_0 = module_0.PluginPathContext(plugin_load_context_1, dict_2)
    set_0 = {int_0, int_0, plugin_path_context_0}
    plugin_loader_0 = module_0.PluginLoader(list_0, dict_2, set_0, plugin_load_context_1)
    plugin_load_context_2 = module_0.PluginLoadContext()
    var_2 = plugin_loader_0.has_plugin(dict_0, list_1)
    str_6 = ''
    dict_3 = {str_1: bytes_0, str_1: list_0, str_1: str_1, str_6: str_6}
    plugin_path_context_1 = module_0.PluginPathContext(dict_3, list_0)
    plugin_load_context_3 = module_0.PluginLoadContext()
    tuple_0 = (plugin_load_context_3,)
    plugin_loader_1 = module_0.PluginLoader(tuple_0, list_1, int_0, plugin_path_context_1, list_0)
    plugin_loader_2 = module_0.PluginLoader(int_0, str_0, plugin_path_context_1, plugin_loader_1)
    bool_0 = False
    bool_1 = True
    jinja2_loader_0 = module_0.Jinja2Loader(bool_0, plugin_loader_2, dict_0, bool_1)
    var_3 = plugin_loader_0.has_plugin(plugin_path_context_1)
    var_4 = plugin_loader_1.add_directory(str_1)

def test_case_11():
    str_0 = 'powershell'
    var_0 = module_0.get_shell_plugin(str_0)

def test_case_12():
    str_0 = '0_nrtm'
    plugin_path_context_0 = None
    var_0 = module_0.get_shell_plugin(plugin_path_context_0, str_0)

def test_case_13():
    set_0 = set()
    bytes_0 = b'\xf5\x10\xf8\xe6\xdf:;r'
    var_0 = module_0.get_shell_plugin(set_0, bytes_0)

def test_case_14():
    str_0 = '__init__'
    plugin_path_context_0 = None
    var_0 = module_0.get_shell_plugin(plugin_path_context_0, str_0)