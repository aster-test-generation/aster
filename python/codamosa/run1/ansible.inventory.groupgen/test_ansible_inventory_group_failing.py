# Automatically generated by Pynguin.
import ansible.inventory.group as module_0

def test_case_0():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__getstate__()
        group_1 = module_0.Group()
        set_0 = None
        var_1 = group_0.__repr__()
        var_2 = group_1.get_vars()
        list_0 = [set_0, group_0, set_0, set_0]
        var_3 = group_0.deserialize(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "the type of 'facts' to set for host_facts should be a Mapping but is a %s"
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        group_1 = module_0.Group()
        var_1 = group_1.__setstate__(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_3():
    try:
        group_0 = module_0.Group()
        bool_0 = None
        var_0 = group_0.add_child_group(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        group_0 = module_0.Group()
        bytes_0 = b'{\xa3\x17!ttLYX\x86rG\xef%'
        var_0 = group_0.set_variable(group_0, bytes_0)
        var_1 = group_0.add_child_group(group_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = None
        str_0 = 'test_key1'
        dict_0 = {str_0: bool_0, str_0: str_0, str_0: str_0, str_0: str_0}
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(dict_0)
        group_1 = module_0.Group()
        var_1 = group_1.get_hosts()
        var_2 = group_1.add_host(group_1)
    except BaseException:
        pass

def test_case_6():
    try:
        group_0 = module_0.Group()
        int_0 = 897
        var_0 = group_0.set_priority(int_0)
        var_1 = group_0.add_child_group(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '}5e``tX\t{9,a#jZ{'
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'test1'
        group_0 = module_0.Group(str_0)
        var_0 = group_0.get_hosts()
        str_1 = "1<'@)dW780%y`@l"
        var_1 = group_0.remove_host(group_0)
        group_1 = module_0.Group(str_1)
        var_2 = group_0.add_child_group(group_1)
        var_3 = group_1.clear_hosts_cache()
        group_2 = module_0.Group(str_0)
        var_4 = group_0.add_child_group(group_2)
        var_5 = group_0.add_host(group_2)
    except BaseException:
        pass

def test_case_9():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_vars()
        str_0 = 'te*st1]'
        group_1 = module_0.Group(str_0)
        str_1 = "1<'!m/@)dW780%y`@l"
        var_1 = group_1.remove_host(group_1)
        group_2 = module_0.Group(var_1)
        var_2 = group_2.clear_hosts_cache()
        var_3 = group_0.add_child_group(group_1)
        var_4 = group_1.remove_host(group_1)
        group_3 = module_0.Group(str_0)
        var_5 = group_1.add_child_group(group_3)
        list_0 = None
        set_0 = {group_2, str_1, group_2, group_2, group_3, str_0, group_2, list_0}
        var_6 = group_1.set_variable(list_0, set_0)
        var_7 = group_1.get_hosts()
        group_4 = module_0.Group()
        var_8 = group_4.add_child_group(group_1)
        var_9 = group_3.clear_hosts_cache()
        var_10 = group_4.add_host(group_3)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '!:|r\\alB\r|'
        group_0 = module_0.Group(str_0)
        str_1 = 'tes'
        group_1 = module_0.Group(str_1)
        list_0 = [group_0, group_0, str_1, group_1]
        var_0 = group_1.set_priority(list_0)
        var_1 = group_0.add_child_group(group_1)
        var_2 = group_1.serialize()
        var_3 = group_0.get_hosts()
        var_4 = group_1.add_host(group_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '---- test class Group ---- '
        var_0 = print(str_0)
        group_0 = module_0.Group()
        str_1 = 'first'
        str_2 = 'value'
        var_1 = group_0.set_variable(str_1, str_2)
        str_3 = 'second'
        str_4 = {str_1: str_2}
        var_2 = group_0.set_variable(str_3, str_4)
        str_5 = 'nestedmore'
        str_6 = {str_3: str_4}
        var_3 = group_0.set_variable(str_3, str_6)
        str_7 = {str_5: str_2}
        str_8 = {str_2: str_7}
        var_4 = group_0.set_variable(str_5, str_8)
        str_9 = 'fifth'
        str_10 = 'another'
        str_11 = {str_10: str_6}
        var_5 = group_0.set_variable(str_9, str_11)
        var_6 = g.get_vars()[str_1]
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'te*3st'
        group_0 = module_0.Group(str_0)
        str_1 = "1<'!m/@)dW780%y`@l"
        var_0 = group_0.remove_host(group_0)
        group_1 = module_0.Group(str_1)
        var_1 = group_0.add_child_group(group_1)
        var_2 = group_0.add_child_group(group_1)
        list_0 = None
        set_0 = {group_1, var_1, var_1, list_0}
        var_3 = group_0.set_variable(list_0, set_0)
        float_0 = 4256.1
        var_4 = group_1.set_variable(float_0, set_0)
        var_5 = group_0.get_hosts()
        var_6 = group_1.add_host(group_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '!:|r\\alB\r|'
        group_0 = module_0.Group(str_0)
        str_1 = 'test2'
        bool_0 = True
        var_0 = group_0.set_variable(bool_0, bool_0)
        group_1 = module_0.Group(str_1)
        list_0 = [group_0, group_0, str_1, group_1]
        var_1 = group_1.set_priority(list_0)
        var_2 = group_0.add_child_group(group_1)
        bool_1 = False
        dict_0 = {str_0: bool_1, var_1: str_1, group_1: var_1, group_0: var_1}
        str_2 = ';`?fws"L>Bf?i\x0b27W7'
        tuple_0 = (list_0, dict_0, str_2)
        var_3 = group_0.set_priority(tuple_0)
        float_0 = 91.360704
        var_4 = group_1.set_variable(bool_1, float_0)
        var_5 = group_1.serialize()
        var_6 = group_1.add_child_group(group_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'te*st1'
        group_0 = module_0.Group()
        var_0 = group_0.clear_hosts_cache()
        group_1 = module_0.Group(str_0)
        str_1 = "1<'!m/@)dW780%y`@l"
        var_1 = group_1.remove_host(group_1)
        group_2 = module_0.Group(str_1)
        var_2 = group_2.clear_hosts_cache()
        group_3 = module_0.Group(str_0)
        var_3 = group_1.add_child_group(group_3)
        list_0 = None
        set_0 = {group_2, group_2, group_2, str_0, group_2, list_0}
        var_4 = group_1.set_variable(list_0, set_0)
        group_4 = module_0.Group()
        group_5 = module_0.Group()
        var_5 = group_5.add_child_group(group_1)
        var_6 = group_5.get_hosts()
        var_7 = group_3.add_host(str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'te*st1'
        group_0 = module_0.Group(str_0)
        var_0 = group_0.serialize()
        str_1 = "1<Y'!m/@)dW780%y`@l"
        var_1 = group_0.remove_host(group_0)
        group_1 = module_0.Group(str_1)
        dict_0 = None
        dict_1 = {str_1: var_0}
        var_2 = group_0.set_variable(dict_0, dict_1)
        var_3 = group_1.serialize()
        var_4 = group_1.clear_hosts_cache()
        group_2 = module_0.Group(str_0)
        var_5 = group_0.__str__()
        list_0 = None
        set_0 = {group_1, group_1, group_1, str_0, group_1, list_0}
        var_6 = group_0.set_variable(list_0, set_0)
        var_7 = group_2.get_hosts()
        group_3 = module_0.Group()
        group_4 = module_0.Group()
        var_8 = group_4.add_child_group(group_0)
        group_5 = module_0.Group()
        var_9 = group_3.add_host(group_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'te*st1'
        group_0 = module_0.Group(str_0)
        var_0 = group_0.remove_host(group_0)
        group_1 = module_0.Group(var_0)
        var_1 = group_1.clear_hosts_cache()
        group_2 = module_0.Group(str_0)
        var_2 = group_0.add_child_group(group_2)
        var_3 = group_2.__getstate__()
        var_4 = group_0.get_hosts()
        group_3 = module_0.Group()
        group_4 = module_0.Group()
        var_5 = group_4.add_child_group(group_0)
        var_6 = group_2.clear_hosts_cache()
        var_7 = group_1.add_child_group(group_4)
        group_5 = module_0.Group()
        int_0 = -190
        var_8 = group_1.add_host(int_0)
    except BaseException:
        pass