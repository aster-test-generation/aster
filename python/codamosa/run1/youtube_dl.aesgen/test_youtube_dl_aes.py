# Automatically generated by Pynguin.
import youtube_dl.aes as module_0
import base64 as module_1
import youtube_dl.utils as module_2

def test_case_0():
    bytes_0 = b"@\x83t\x98\x12N,\x17\x98\xb9\xdd\xedp?}\xe9\xb7'"
    var_0 = module_0.aes_encrypt(bytes_0, bytes_0)

def test_case_1():
    tuple_0 = ()
    list_0 = [tuple_0]
    var_0 = module_0.aes_decrypt(tuple_0, list_0)

def test_case_2():
    str_0 = 'JF+J+g=='
    str_1 = 'F1u4TT3y'
    int_0 = 16
    var_0 = module_0.aes_decrypt_text(str_0, str_1, int_0)

def test_case_3():
    bytes_0 = b'\xfa'
    var_0 = module_0.sub_bytes(bytes_0)

def test_case_4():
    bytes_0 = b'\xd9\xd9|vIS\x87M\xbf@\x18\x1d\xc87\xee'
    var_0 = module_0.sub_bytes_inv(bytes_0)

def test_case_5():
    bytes_0 = b'\x86\x802c\xcc\xcbKL\xb6\xb6=\xaa\x16\x9dDe\xd3\x14X'
    var_0 = module_0.mix_columns_inv(bytes_0)

def test_case_6():
    list_0 = []
    var_0 = module_0.inc(list_0)

def test_case_7():
    bytes_0 = b'\x86\x802c\xcc\xcbKL\xb6\xb6=\xaa\x16\x9dDe\xd3\x14X'
    var_0 = module_0.mix_columns_inv(bytes_0)
    var_1 = module_0.key_expansion(var_0)

def test_case_8():
    bytes_0 = b'\x86\x80\xd92c\xcc\xcbKL\xb6\xb6=\xaa\x16\x9dDe\xd3\x14X'
    var_0 = module_0.mix_columns_inv(bytes_0)
    bytes_1 = b'\xba\xd6%\xf3O\x0b\x00\xcd\xc1%~EBU\xce\xc1\xdc\x8f'
    var_1 = module_0.shift_rows_inv(bytes_1)

def test_case_9():
    str_0 = '6d6c53516b685172347a4b684b694373'
    var_0 = module_1.b64decode(str_0)
    var_1 = module_2.bytes_to_intlist(var_0)
    var_2 = module_2.bytes_to_intlist(var_0)
    str_1 = 'a6c3e3a07e4fa64af25e0d49e507dd828785f5d7f3f945d1ee8b2f7d1e6a2e1e'
    var_3 = module_1.b64decode(str_1)
    var_4 = module_2.bytes_to_intlist(var_3)
    var_5 = module_0.aes_cbc_decrypt(var_4, var_1, var_2)

def test_case_10():
    str_0 = 'Hello, Bob, this is Alice speaking. Over.'
    var_0 = module_2.bytes_to_intlist(str_0)
    str_1 = 'This is a key123'
    var_1 = module_2.bytes_to_intlist(str_1)
    str_2 = 'This is an IV456'
    var_2 = module_2.bytes_to_intlist(str_2)
    var_3 = module_2.intlist_to_bytes(var_0)
    var_4 = module_0.aes_cbc_encrypt(var_0, var_1, var_2)
    var_5 = module_2.intlist_to_bytes(var_4)

def test_case_11():
    str_0 = 'password'
    int_0 = 16
    str_1 = 'c2Jj8M4GKq8fLj4w2JThf43EszJfLj4w2Jj93IjE4mJj8M2GKq8fLj4w2xThf4mJfLD4w2Jj93IjE4mJj8M4GKq8'
    var_0 = module_0.aes_decrypt_text(str_1, str_0, int_0)

def test_case_12():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = [int_0, int_1, int_2]
    var_0 = module_0.inc(int_3)
    str_0 = 'data1'
    var_1 = print(str_0, var_0)
    int_4 = 255
    int_5 = [int_4, int_4, int_4]
    var_2 = module_0.inc(int_5)
    var_3 = print(str_0, var_2)