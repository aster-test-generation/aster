# Automatically generated by Pynguin.
import tornado.options as module_0
import typing as module_1

def test_case_0():
    try:
        str_0 = 'cZ)c2$|+2*f!B81MP{k'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.parse_config_file(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ":>%IXj'L}K"
        option_parser_0 = module_0.OptionParser()
        option_parser_0.run_parse_callbacks()
        any_0 = option_parser_0.__getattr__(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callable_0 = None
        module_0.add_parse_callback(callable_0)
        str_0 = '*!P'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.__setitem__(str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        option_parser_0 = module_0.OptionParser()
        str_0 = None
        str_1 = ',~?'
        list_0 = [str_0, str_1]
        list_1 = option_parser_0.parse_command_line(list_0)
        iterator_0 = option_parser_0.__iter__()
        set_0 = option_parser_0.groups()
        set_1 = option_parser_0.groups()
        str_2 = 'Portuguese (Brazil)'
        any_0 = option_parser_0.__getitem__(str_2)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        option_parser_0 = module_0.OptionParser()
        bool_0 = option_parser_0.__contains__(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        option_parser_0 = module_0.OptionParser()
        dict_0 = option_parser_0.as_dict()
        option_parser_1 = module_0.OptionParser()
        bool_0 = option_parser_1.__contains__(str_0)
        text_i_o_0 = module_1.TextIO()
        set_0 = option_parser_1.groups()
        option_parser_2 = module_0.OptionParser()
        option_parser_2.print_help(text_i_o_0)
        text_i_o_1 = text_i_o_0.__enter__()
        module_0.print_help()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '"Y#jMA'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.run_parse_callbacks()
        any_0 = option_parser_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        option_parser_0 = module_0.OptionParser()
        iterable_0 = option_parser_0.items()
        list_0 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ''
        option_parser_0 = module_0.OptionParser()
        dict_0 = option_parser_0.group_dict(str_0)
        option_parser_1 = module_0.OptionParser()
        bool_0 = option_parser_1.__contains__(str_0)
        text_i_o_0 = module_1.TextIO()
        set_0 = option_parser_1.groups()
        option_parser_2 = module_0.OptionParser()
        option_parser_2.print_help(text_i_o_0)
        text_i_o_1 = text_i_o_0.__enter__()
        module_0.print_help()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '/tmp/tmpctr1vu3_/aster-py-cli/test-apps/tornado/tornado/log.py'
        option_parser_0 = module_0.OptionParser()
        dict_0 = option_parser_0.group_dict(str_0)
        option_parser_1 = module_0.OptionParser()
        option_parser_2 = module_0.OptionParser()
        iterable_0 = option_parser_2.items()
        none_type_0 = None
        module_0.define(str_0, none_type_0, str_0)
        dict_1 = option_parser_1.as_dict()
        option_parser_0.run_parse_callbacks()
        str_1 = ''
        str_2 = 'wR'
        mockable_0 = option_parser_2.mockable()
        option_parser_2.print_help()
        mockable_1 = option_parser_1.mockable()
        option_parser_1.define(str_1, str_1, str_2)
        str_3 = None
        option_parser_2.__setitem__(str_3, mockable_0)
    except BaseException:
        pass

def test_case_10():
    try:
        option_parser_0 = module_0.OptionParser()
        list_0 = option_parser_0.parse_command_line()
    except BaseException:
        pass

def test_case_11():
    try:
        option_parser_0 = module_0.OptionParser()
        str_0 = 'kOz['
        list_0 = [option_parser_0, option_parser_0, str_0]
        option_parser_0.add_parse_callback(list_0)
        str_1 = '>rsw'
        list_1 = [str_0, str_1]
        list_2 = option_parser_0.parse_command_line(list_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = ']FVOgC|s>Y'
        option_parser_0 = module_0.OptionParser()
        mockable_0 = option_parser_0.mockable()
        mockable_0.__setattr__(str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = None
        option_parser_0 = module_0.OptionParser()
        mockable_0 = module_0._Mockable(option_parser_0)
        any_0 = mockable_0.__getattr__(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        option_parser_0 = module_0.OptionParser()
        set_0 = option_parser_0.groups()
        str_0 = ''
        option_parser_1 = module_0.OptionParser()
        dict_0 = option_parser_1.as_dict()
        mockable_0 = module_0._Mockable(option_parser_1)
        iterator_0 = option_parser_1.__iter__()
        mockable_0.__delattr__(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '$.dAE;pc}LW%Z/w'
        option_0 = module_0._Option(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '/tmp/tmpctr1vu3_/aster-py-cli/test-apps/tornado/tornado/options.py'
        str_1 = '/tmp/tmpctr1vu3_/aster-py-cli/test-apps/tornado/tornado/log.py'
        str_2 = 'O3xJ<bgs'
        bool_0 = True
        option_0 = module_0._Option(str_0, str_2, str_2, bool_0, str_2)
        any_0 = option_0.parse(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        option_parser_0 = module_0.OptionParser()
        str_0 = 'HxjPF$!3|tn)9\n=Es'
        option_0 = module_0._Option(str_0, str_0, str_0)
        option_0.set(option_parser_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '/tmp/tmpctr1vu3_/aster-py-cli/test-apps/tornado/tornado/log.py'
        option_parser_0 = module_0.OptionParser()
        dict_0 = option_parser_0.group_dict(str_0)
        option_parser_1 = module_0.OptionParser()
        option_parser_2 = module_0.OptionParser()
        iterable_0 = option_parser_2.items()
        none_type_0 = None
        module_0.define(str_0, none_type_0, str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        list_0 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_20():
    try:
        option_parser_0 = module_0.OptionParser()
        str_0 = '3S;Y'
        dict_0 = option_parser_0.group_dict(str_0)
        mockable_0 = module_0._Mockable(option_parser_0)
        option_parser_0.print_help()
        module_0.parse_config_file(str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'bTV7jBN?$"b.26Cn4<'
        option_parser_0 = module_0.OptionParser()
        set_0 = option_parser_0.groups()
        bool_0 = option_parser_0.__contains__(str_0)
        str_1 = 'REHVXvj5748F>'
        option_parser_1 = module_0.OptionParser()
        dict_0 = option_parser_1.group_dict(str_1)
        option_parser_0.run_parse_callbacks()
        mockable_0 = module_0._Mockable(option_parser_0)
        str_2 = 'I\tqL^\tv)TqFIx:t'
        any_0 = mockable_0.__getattr__(str_2)
    except BaseException:
        pass