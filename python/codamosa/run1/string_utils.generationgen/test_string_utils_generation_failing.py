# Automatically generated by Pynguin.
import string_utils.generation as module_0

def test_case_0():
    try:
        int_0 = -2304
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -4460
        bool_0 = True
        str_0 = module_0.uuid(bool_0)
        str_1 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -9
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 84
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = None
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -1564
        str_0 = module_0.uuid()
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = None
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = None
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 2254
        int_1 = 1871
        int_2 = 840
        generator_0 = module_0.roman_range(int_2)
        generator_1 = module_0.roman_range(int_1, int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 4457
        str_0 = module_0.random_string(int_0)
        str_1 = module_0.random_string(int_0)
        str_2 = module_0.secure_random_hex(int_0)
        bool_0 = True
        str_3 = module_0.secure_random_hex(int_0)
        str_4 = module_0.random_string(int_0)
        int_1 = 64
        str_5 = module_0.secure_random_hex(int_1)
        str_6 = module_0.uuid(bool_0)
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 396
        int_1 = 796
        int_2 = -414
        generator_0 = module_0.roman_range(int_0, int_1, int_2)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 7
        generator_0 = module_0.roman_range(int_0)
        str_0 = module_0.uuid()
        var_0 = next(generator_0)
        int_1 = 8
        int_2 = 9
        str_1 = module_0.random_string(int_0)
        int_3 = -1
        generator_1 = module_0.roman_range(int_2, int_1, int_3)
    except BaseException:
        pass