# Automatically generated by Pynguin.
import ansible.inventory.data as module_0
import ansible.inventory.host as module_1

def test_case_0():
    try:
        inventory_data_0 = module_0.InventoryData()
        set_0 = {inventory_data_0}
        list_0 = [set_0, set_0]
        inventory_data_1 = module_0.InventoryData()
        var_0 = inventory_data_1.deserialize(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\\\xd4E\x14&\xec\xb0\xf6'
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.add_group(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 2.0
        inventory_data_0 = module_0.InventoryData()
        list_0 = [float_0, inventory_data_0]
        var_0 = inventory_data_0.add_host(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        inventory_data_0 = module_0.InventoryData()
        bytes_0 = b'\xbe'
        var_0 = inventory_data_0.get_host(bytes_0)
        str_0 = '`1D'
        var_1 = inventory_data_0.add_group(str_0)
        list_0 = []
        var_2 = inventory_data_0.add_host(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = None
        bytes_0 = b'\x8a\xc8\x84\xf8\xe1\xb02m\x83\x8a\x10\x81/eB'
        dict_0 = {int_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        float_0 = -1828.09
        list_0 = [bytes_0, float_0, int_0, int_0]
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.set_variable(int_0, dict_0, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x89\xac\xef\x8a]\xbc'
        inventory_data_0 = module_0.InventoryData()
        inventory_data_1 = module_0.InventoryData()
        var_0 = inventory_data_1.add_child(bytes_0, inventory_data_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'B\rH7^\nWJ/QkpkB*:~N'
        str_1 = 'resolved_action'
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.add_host(str_0, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.reconcile_inventory()
        var_1 = inventory_data_0.serialize()
        str_0 = ':po'
        var_2 = inventory_data_0.get_host(str_0)
        int_0 = None
        var_3 = inventory_data_0.add_group(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 4303
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.reconcile_inventory()
        var_1 = inventory_data_0.remove_group(inventory_data_0)
        var_2 = inventory_data_0.remove_group(int_0)
        var_3 = inventory_data_0.reconcile_inventory()
        var_4 = inventory_data_0.get_host(inventory_data_0)
        str_0 = 'a?\\X1SQhp^"\tQb_y)!'
        var_5 = inventory_data_0.add_host(str_0)
        inventory_data_1 = module_0.InventoryData()
        str_1 = 'all'
        inventory_data_2 = module_0.InventoryData()
        var_6 = inventory_data_2.add_child(str_1, int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = '-\\#U>Z&'
        int_0 = None
        var_0 = inventory_data_0.add_host(str_0, int_0)
        var_1 = inventory_data_0.remove_group(str_0)
        var_2 = inventory_data_0.get_host(str_0)
        var_3 = inventory_data_0.get_groups_dict()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'host1'
        host_0 = module_1.Host(str_0)
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.add_host(str_0)
        str_1 = 'group1'
        var_1 = inventory_data_0.add_group(str_1)
        var_2 = inventory_data_0.add_child(str_1, str_0)
        str_2 = 'group2'
        var_3 = inventory_data_0.add_group(str_2)
        var_4 = inventory_data_0.add_child(str_2, str_0)
        var_5 = inventory_data_0.remove_host(host_0)
    except BaseException:
        pass

def test_case_11():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.serialize()
        str_0 = '`1D'
        str_1 = ']Ff,'
        var_1 = inventory_data_0.get_host(str_1)
        var_2 = inventory_data_0.add_group(str_0)
        var_3 = inventory_data_0.add_group(str_0)
        float_0 = 574.260994
        inventory_data_1 = module_0.InventoryData()
        var_4 = inventory_data_1.add_host(float_0)
    except BaseException:
        pass