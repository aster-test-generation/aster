# Automatically generated by Pynguin.
import ansible.executor.interpreter_discovery as module_0

def test_case_0():
    try:
        bytes_0 = b'\xcdM\r\x12Z\xd1\xcb\xc2\xd4\xce'
        int_0 = -1674
        str_0 = ')]]M0X~^p9o'
        interpreter_discovery_required_error_0 = module_0.InterpreterDiscoveryRequiredError(bytes_0, int_0, str_0)
        var_0 = interpreter_discovery_required_error_0.__str__()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'IamRq+$\\%O>-Al'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        bytes_0 = b'\xc5\xcb'
        int_0 = 1607
        int_1 = -690
        interpreter_discovery_required_error_0 = module_0.InterpreterDiscoveryRequiredError(bytes_0, int_0, int_1)
        interpreter_discovery_required_error_1 = module_0.InterpreterDiscoveryRequiredError(dict_0, interpreter_discovery_required_error_0, int_1)
        interpreter_discovery_required_error_2 = module_0.InterpreterDiscoveryRequiredError(str_0, str_0, interpreter_discovery_required_error_1)
        var_0 = interpreter_discovery_required_error_2.__repr__()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'python'
        var_0 = module_0.discover_interpreter(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'auto'
        var_0 = module_0.discover_interpreter(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'python'
        var_0 = {}
        var_1 = module_0.discover_interpreter(str_0, str_0, str_0, var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'inventory_hostname'
        str_1 = 'localhost'
        str_2 = {str_0: str_1}
        str_3 = 'python'
        str_4 = 'auto_legacy_silent'
        var_0 = None
        var_1 = module_0.discover_interpreter(var_0, str_3, str_4, str_2)
        var_2 = str_2._discovery_warnings
    except BaseException:
        pass