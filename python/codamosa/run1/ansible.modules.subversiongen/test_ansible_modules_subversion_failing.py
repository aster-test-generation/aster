# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        str_0 = 'Revision: 10'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Updating the cache to correct corrupt package lists failed:\n%s\n%s'
        dict_0 = {}
        bool_0 = True
        int_0 = 1808
        str_1 = 'KK>-+wD1'
        float_0 = -3680.51
        subversion_0 = module_0.Subversion(str_0, dict_0, bool_0, dict_0, int_0, str_1, float_0, float_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 1604
        bool_0 = False
        str_0 = 'Y4ely)kfZW\x0cn"nHA'
        set_0 = set()
        list_0 = [str_0, bool_0]
        float_0 = 1.0
        float_1 = -250.0668
        bytes_0 = b'\x94`\x94\x12]-\x8f\xef\xa4\x06>\x99\x8f\x99\xe47P'
        str_1 = ' recalculate inventory '
        int_1 = 473
        dict_0 = {}
        subversion_0 = module_0.Subversion(list_0, float_1, bytes_0, set_0, str_1, int_1, dict_0, str_0)
        subversion_1 = module_0.Subversion(int_0, bool_0, str_0, set_0, list_0, set_0, float_0, subversion_0)
        var_0 = subversion_1.checkout()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ' helper function to bump a statistic '
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ' helper function to bumpa statistic '
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.export(subversion_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        int_0 = -471
        float_0 = 0.0001
        float_1 = 2.0
        dict_0 = {float_0: set_0, int_0: set_0, int_0: float_0, float_1: set_0}
        bytes_0 = b'\xf5\xf4N\xff\xa0(i\x8b\x16t\xf5\x88\xcd\xe5\xe1\xd5\xfb'
        tuple_0 = (bytes_0, bytes_0, int_0)
        bool_0 = False
        bytes_1 = b'\xf5\xcfa\x84m\xd1\xdc\xa1\xeb9"w\xad\x99\x1c\x06\xbb\xdbd'
        bytes_2 = b'\x8e\x8a\xab9s\xa6\x12K0\xeb\x9f\x0fw\x9c}'
        list_0 = [dict_0, bytes_1, bytes_2, int_0]
        subversion_0 = module_0.Subversion(set_0, int_0, float_0, dict_0, tuple_0, bool_0, bytes_1, list_0)
        var_0 = subversion_0.switch()
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 79
        bool_0 = False
        bytes_0 = b'\xeb\xd4\x17\x9c\xe8N'
        dict_0 = {int_0: int_0, bool_0: bytes_0}
        str_0 = 'Ar\x0bs(d"\x0b\r*\t-|8'
        bytes_1 = b'BD9|\xd3;\xf9Y'
        bytes_2 = b'\x04\xe0\x8f\xa2\x03'
        set_0 = {bytes_2, int_0, int_0}
        tuple_0 = (bytes_2, set_0, bytes_1, bool_0)
        str_1 = 'B5HKNq``}5.5roVl^kM'
        tuple_1 = (tuple_0, str_1)
        complex_0 = None
        bool_1 = None
        str_2 = '|U\n~+e#ySeR)sz3NPJ'
        float_0 = -3334.5923
        subversion_0 = module_0.Subversion(complex_0, int_0, bool_0, tuple_0, bytes_2, bool_1, str_2, float_0)
        list_0 = [bytes_1, float_0, bytes_0]
        subversion_1 = module_0.Subversion(dict_0, bytes_1, tuple_1, set_0, subversion_0, list_0, complex_0, list_0)
        subversion_2 = module_0.Subversion(int_0, bool_0, bytes_0, bytes_0, dict_0, str_0, subversion_1, complex_0)
        str_3 = 'K \t24#?'
        subversion_3 = module_0.Subversion(subversion_2, list_0, list_0, dict_0, str_3, subversion_2, list_0, subversion_1)
        dict_1 = {subversion_3: str_1, bytes_1: list_0}
        float_1 = 3986.445106
        int_1 = -1965
        tuple_2 = (list_0,)
        subversion_4 = module_0.Subversion(float_1, bool_0, int_1, int_0, tuple_1, subversion_0, list_0, tuple_2)
        str_4 = '__main__'
        str_5 = 'm]FPk\t@g??\n*t,'
        subversion_5 = module_0.Subversion(dict_1, subversion_4, str_4, subversion_0, set_0, bytes_1, str_5, bool_0)
        var_0 = subversion_5.update()
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = ()
        str_0 = '_'
        str_1 = 'a4oJJ2CbFMa9w73'
        list_0 = [str_1, tuple_0, str_0]
        bool_0 = True
        str_2 = ')\r:E>R/'
        subversion_0 = module_0.Subversion(str_0, str_1, tuple_0, list_0, bool_0, str_2, tuple_0, tuple_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'D\niU$@F'
        float_0 = -1239.644
        str_1 = '0P$/V\x0b,'
        int_0 = 1664
        list_0 = [str_0, float_0]
        bool_0 = True
        str_2 = '$`FUe3ij|\n0k\\ew'
        tuple_0 = (str_2,)
        int_1 = 627
        bool_1 = False
        str_3 = ''
        bool_2 = True
        subversion_0 = module_0.Subversion(float_0, tuple_0, int_1, bool_1, int_0, str_3, bool_2, float_0)
        subversion_1 = module_0.Subversion(str_0, float_0, str_1, int_0, list_0, bool_0, bool_0, subversion_0)
        var_0 = subversion_1.needs_update()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '\r^vh[%KK{9MZ7NM'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = None
        float_0 = 1000.0
        int_0 = -2859
        str_0 = 'kHtLf%1%F(r+"\x0cg3Dq'
        float_1 = 777.911147
        bool_0 = False
        set_0 = {int_0, str_0, float_1, float_1}
        dict_0 = {}
        str_1 = 'hixy)(7Q$HI&u'
        tuple_0 = (bool_0,)
        bool_1 = False
        bool_2 = True
        subversion_0 = module_0.Subversion(dict_0, bool_1, str_1, list_0, dict_0, tuple_0, set_0, bool_2)
        str_2 = ''
        bool_3 = True
        int_1 = 879
        bool_4 = True
        subversion_1 = module_0.Subversion(str_2, subversion_0, bool_3, int_1, bool_4, dict_0, float_0, subversion_0)
        float_2 = -1204.2
        var_0 = subversion_0.checkout(float_2)
    except BaseException:
        pass