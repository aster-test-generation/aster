# Automatically generated by Pynguin.
import ansible.playbook.included_file as module_0

def test_case_0():
    try:
        str_0 = 'Nha'
        bool_0 = True
        included_file_0 = module_0.IncludedFile(str_0, str_0, str_0, str_0, bool_0)
        var_0 = included_file_0.__eq__(included_file_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n# {0}\n{1:{cwidth}} {2:{vwidth}}\n{3} {4}\n'
        str_1 = 'WW\r"<c7M+"a=y.Gw}=Xu'
        list_0 = [str_0, str_0]
        bool_0 = False
        str_2 = 'mask'
        bytes_0 = b'52\xdf\xe5}"WW\xf5\xfa\xbd\xe4\x1e\xba\x12\xec2\xa9'
        set_0 = {bytes_0, str_2, bytes_0, bytes_0}
        included_file_0 = module_0.IncludedFile(str_2, bytes_0, set_0, list_0)
        var_0 = included_file_0.process_include_results(str_0, str_1, list_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'wMa lV@c5^V'
        bool_0 = True
        dict_0 = {}
        bytes_0 = b'Z\xeaN\x80\xf12]x9\xcb'
        dict_1 = {bool_0: bool_0, bool_0: bytes_0}
        int_0 = 2652
        str_1 = 'f4scx$*m-S\rQGV2ZuW)&'
        included_file_0 = module_0.IncludedFile(dict_0, dict_0, dict_1, int_0, str_1)
        dict_2 = {bool_0: bool_0, str_0: str_0, str_0: str_0, bool_0: bool_0}
        bytes_1 = b'\x14\xd5\xd1I\xb4\xdf\xb5'
        bool_1 = False
        float_0 = 1025.13
        str_2 = 'NbX&[\x0b'
        int_1 = -2685
        tuple_0 = (str_0, str_2, int_1)
        included_file_1 = module_0.IncludedFile(str_2, bool_1, float_0, tuple_0)
        list_0 = [str_2, bool_0]
        included_file_2 = module_0.IncludedFile(dict_2, bytes_1, included_file_1, list_0)
        var_0 = included_file_2.__eq__(included_file_0)
        int_2 = 917
        dict_3 = {int_2: bool_0}
        bytes_2 = b'\xac\xfc"'
        dict_4 = {bytes_2: bool_0, int_2: bytes_2}
        included_file_3 = module_0.IncludedFile(bytes_2, bytes_2, bool_0, dict_4)
        var_1 = included_file_3.add_host(dict_3)
        str_3 = 'o"K!\x0cL/Bl~dvUM[-l:Y'
        complex_0 = None
        bool_2 = True
        var_2 = included_file_2.process_include_results(str_3, tuple_0, complex_0, bool_2)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'wMa lV@c5^V'
        bool_0 = True
        dict_0 = {}
        bytes_0 = b'Z\xeaN\x80\xf12]x9\xcb'
        dict_1 = {bool_0: bool_0, bool_0: bytes_0}
        int_0 = 2652
        str_1 = 'f4scx$*m-S\rQGV2ZuW)&'
        included_file_0 = module_0.IncludedFile(dict_0, dict_0, dict_1, int_0, str_1)
        bytes_1 = b'\x14\xd5\xd1I\xb4\xdf\xb5'
        bool_1 = False
        float_0 = 1025.13
        str_2 = 'NbX&[\x0b'
        int_1 = -2685
        tuple_0 = (str_0, str_2, int_1)
        included_file_1 = module_0.IncludedFile(str_2, bool_1, float_0, tuple_0)
        list_0 = [str_2, bool_0]
        included_file_2 = module_0.IncludedFile(dict_0, bytes_1, included_file_1, list_0)
        var_0 = included_file_2.__eq__(included_file_0)
        int_2 = 917
        dict_2 = {bytes_0: bool_0, int_2: bytes_0}
        included_file_3 = module_0.IncludedFile(bytes_1, bytes_1, bool_0, dict_2)
        var_1 = included_file_3.add_host(dict_1)
        complex_0 = None
        bool_2 = True
        var_2 = included_file_2.process_include_results(str_2, tuple_0, complex_0, bool_2)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'testArgs'
        str_1 = 'testTask'
        included_file_0 = module_0.IncludedFile(str_0, str_0, str_1, str_1)
        str_2 = 'remote_server'
        var_0 = included_file_0.add_host(str_2)
        var_1 = included_file_0.add_host(str_2)
    except BaseException:
        pass