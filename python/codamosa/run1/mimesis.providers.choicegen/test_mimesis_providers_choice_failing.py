# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        bytes_0 = b'&fD2\x030\x1a\xe8\xa6.\xed'
        bool_0 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        sequence_0 = None
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(sequence_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        list_0 = [tuple_0]
        int_0 = None
        bool_0 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(list_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ayatollah'
        int_0 = 2062
        bool_0 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(str_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        choice_0 = module_0.Choice()
        list_0 = []
        var_0 = choice_0.__call__(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        choice_0 = module_0.Choice()
        dict_0 = {}
        choice_1 = module_0.Choice(**dict_0)
        str_0 = 'OksXh:#X$^FW3\trO]bN`'
        int_0 = -4930
        var_0 = choice_0.__call__(str_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 201
        dict_0 = {}
        choice_0 = module_0.Choice(**dict_0)
        choice_1 = module_0.Choice()
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0]
        choice_2 = module_0.Choice()
        bytes_0 = b'8\xb8\x97,\x17\x11VW\x9f0\xe0\xce\x05\x0cs\x8eA\x8f<'
        var_0 = choice_2.__call__(bytes_0)
        var_1 = choice_1.__call__(list_0, bool_0)
        var_2 = choice_0.__call__(bytes_0, int_0, bool_0)
    except BaseException:
        pass