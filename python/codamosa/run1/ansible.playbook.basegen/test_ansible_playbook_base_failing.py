# Automatically generated by Pynguin.
import ansible.playbook.base as module_0
import ansible.playbook.attribute as module_1

def test_case_0():
    try:
        bytes_0 = b'\x0bS'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        base_0 = module_0.Base()
        var_0 = base_0.get_search_path()
        var_1 = base_0.get_path()
        var_2 = base_0.get_path()
        var_3 = base_0.get_search_path()
        var_4 = base_0.get_search_path()
        dict_0 = None
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_5 = field_attribute_base_0.load_data(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'r\xc0\x15\x9epF\xbb'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        str_0 = 'jV%74\n85i\x0b7@'
        str_1 = 'urlencode'
        dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1, str_0: field_attribute_base_0}
        float_0 = 2334.618485
        tuple_0 = (float_0,)
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.get_validated_value(bytes_0, field_attribute_base_0, dict_0, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.post_validate(field_attribute_base_0)
    except BaseException:
        pass

def test_case_4():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_ds()
        bytes_0 = b'\xbd\xb7a>\xa5\xcd'
        list_0 = [var_0, bytes_0, var_0]
        var_1 = field_attribute_base_0.deserialize(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\tGOeE%;='
        str_1 = '2WDRUBS3.xTOQ1~\n*w'
        str_2 = '% +]geK80\rGHrTa/%'
        dict_0 = {str_1: str_0}
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.deserialize(dict_0)
        dict_1 = {str_0: str_0, str_1: str_1, str_1: str_0, str_2: str_0}
        base_0 = module_0.Base()
        var_1 = base_0.get_search_path()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_1.dump_me(dict_1)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'Z\x16\x05\xd30d\x9c'
        tuple_0 = (bytes_0,)
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.validate(tuple_0)
        base_meta_0 = module_0.BaseMeta()
    except BaseException:
        pass

def test_case_7():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.validate(field_attribute_base_0)
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_2.get_loader()
        base_0 = module_0.Base()
        field_attribute_base_3 = module_0.FieldAttributeBase()
        var_2 = base_0.get_search_path()
        var_3 = field_attribute_base_3.get_ds()
        var_4 = field_attribute_base_3.squash()
        base_1 = module_0.Base()
        var_5 = field_attribute_base_3.squash()
        var_6 = field_attribute_base_3.get_ds()
        list_0 = []
        base_meta_0 = module_0.BaseMeta(*list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        list_0 = []
        var_0 = field_attribute_base_0.load_data(list_0)
        var_1 = field_attribute_base_0.copy()
        var_2 = field_attribute_base_0.validate()
        base_0 = module_0.Base()
        var_3 = field_attribute_base_0.dump_attrs()
        float_0 = 2373.5723
        var_4 = field_attribute_base_0.dump_me(float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        base_meta_0 = module_0.BaseMeta(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        base_0 = module_0.Base()
        str_0 = "5'ZyO+y"
        var_0 = field_attribute_base_0.load_data(base_0, base_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        int_0 = 137
        base_0 = None
        bytes_0 = b'\xcf\x9c\xad\x99\xbcGJ\xa1\x1fT\xba\xf4\x15'
        list_0 = [base_0, bytes_0]
        tuple_0 = (base_0, bytes_0, list_0)
        field_attribute_0 = module_1.FieldAttribute(int_0, field_attribute_base_0, tuple_0)
        str_0 = 'ys*[RD.Fc5h*}Q'
        dict_0 = {}
        var_0 = field_attribute_base_0.get_validated_value(field_attribute_base_0, field_attribute_0, str_0, dict_0)
        base_1 = module_0.Base()
        var_1 = base_1.get_search_path()
        var_2 = base_1.get_path()
        var_3 = field_attribute_base_0.post_validate(base_1)
    except BaseException:
        pass