# Automatically generated by Pynguin.
import ansible.vars.manager as module_0
import ansible.inventory.host as module_1

def test_case_0():
    pass

def test_case_1():
    variable_manager_0 = module_0.VariableManager()

def test_case_2():
    float_0 = -116.25
    vars_with_sources_0 = module_0.VarsWithSources()
    variable_manager_0 = module_0.VariableManager(float_0, vars_with_sources_0)
    var_0 = variable_manager_0.__getstate__()

def test_case_3():
    variable_manager_0 = module_0.VariableManager()
    list_0 = []
    var_0 = module_0.preprocess_vars(list_0)
    vars_with_sources_0 = module_0.VarsWithSources(*list_0)
    str_0 = ''
    bytes_0 = b'mc\xe6,'
    var_1 = variable_manager_0.set_host_variable(str_0, bytes_0, variable_manager_0)
    str_1 = '7\n$gfINC5PQf1DV)"\\'
    dict_0 = {bytes_0: str_1, bytes_0: bytes_0, str_0: bytes_0}
    var_2 = variable_manager_0.__setstate__(vars_with_sources_0)
    var_3 = variable_manager_0.set_host_facts(str_1, dict_0)

def test_case_4():
    variable_manager_0 = module_0.VariableManager()
    host_0 = module_1.Host()
    str_0 = 'valuo8e'
    var_0 = variable_manager_0.set_host_variable(host_0, str_0, str_0)

def test_case_5():
    vars_with_sources_0 = module_0.VarsWithSources()

def test_case_6():
    str_0 = 'D*HN~?<F)Y$=0-f$|r'
    float_0 = 1734.3528
    list_0 = [str_0]
    bool_0 = True
    vars_with_sources_0 = module_0.VarsWithSources()
    var_0 = vars_with_sources_0.get_source(bool_0)
    str_1 = 'use'
    dict_0 = {str_1: str_1}
    variable_manager_0 = module_0.VariableManager(str_1, dict_0)
    var_1 = variable_manager_0.set_host_variable(str_0, float_0, list_0)

def test_case_7():
    str_0 = '\n    - name: Show configured default become user\n      debug: msg="{{ lookup(\'config\', \'DEFAULT_BECOME_USER\')}}"\n\n    - name: print out role paths\n      debug:\n        msg: "These are the configured role paths: {{lookup(\'config\', \'DEFAULT_ROLES_PATH\')}}"\n\n    - name: find retry files, skip if missing that key\n      find:\n        paths: "{{lookup(\'config\', \'RETRY_FILES_SAVE_PATH\')|default(playbook_dir, True)}}"\n        patterns: "*.retry"\n\n    - name: see the colors\n      debug: msg="{{item}}"\n      loop: "{{lookup(\'config\', \'COLOR_OK\', \'COLOR_CHANGED\', \'COLOR_SKIP\', wantlist=True)}}"\n\n    - name: skip if bad value in var\n      debug: msg="{{ lookup(\'config\', config_in_var, on_missing=\'skip\')}}"\n      var:\n        config_in_var: UNKNOWN\n\n    - name: show remote user and port for ssh connection\n      debug: msg={{q("config", "remote_user", "port", plugin_type="connection", plugin_name="ssh", on_missing=\'skip\')}}\n\n    - name: show remote_tmp setting for shell (sh) plugin\n      debug: msg={{q("config", "remote_tmp", plugin_type="shell", plugin_name="sh")}}\n'
    vars_with_sources_0 = module_0.VarsWithSources()
    var_0 = vars_with_sources_0.__contains__(str_0)