# Automatically generated by Pynguin.
import ansible.modules.iptables as module_0

def test_case_0():
    pass

def test_case_1():
    var_0 = []
    str_0 = 'flags'
    str_1 = 'flags_set'
    str_2 = 'ALL'
    str_3 = [str_2]
    str_4 = [str_1, str_2, str_0, str_0]
    str_5 = {str_0: str_3, str_1: str_4}
    str_6 = '-m tcp'
    var_1 = module_0.append_tcp_flags(var_0, str_5, str_6)

def test_case_2():
    float_0 = 1447.329
    bytes_0 = b'\x8d\xab\x01#\xd0\xa3\x00='
    str_0 = 'group %s already in inventory'
    var_0 = module_0.append_match_flag(bytes_0, str_0, str_0, float_0)

def test_case_3():
    var_0 = module_0.main()

def test_case_4():
    str_0 = "CaEx\tq'7.v"
    dict_0 = None
    list_0 = []
    float_0 = 820.6
    str_1 = '@e\\8.V\tu4naq\tXLe9'
    var_0 = module_0.append_csv(float_0, list_0, str_1)
    var_1 = module_0.append_param(str_0, dict_0, list_0, dict_0)
    bytes_0 = b'\x8d\xab\x01#\xd0\xa3\x00='
    str_2 = 'group %s already in inventory'
    var_2 = module_0.append_match_flag(bytes_0, str_0, str_2, float_0)

def test_case_5():
    var_0 = []
    str_0 = 'match'
    str_1 = '--match'
    bool_0 = True
    var_1 = module_0.append_match_flag(var_0, str_0, str_1, bool_0)
    var_2 = []
    str_2 = 'negate'
    bool_1 = False
    var_3 = module_0.append_match_flag(var_2, str_2, str_1, bool_1)

def test_case_6():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    int_0 = None
    float_0 = 1915.444377
    var_0 = module_0.append_jump(bool_0, bool_0, int_0)
    str_0 = '~"M(\x0ct,'
    int_1 = -2298
    var_1 = module_0.append_match_flag(float_0, str_0, int_1, set_0)
    var_2 = module_0.main()

def test_case_7():
    var_0 = []
    str_0 = 'flags'
    str_1 = 'flags_set'
    str_2 = 'ACK'
    str_3 = 'FIN'
    str_4 = [str_1, str_3]
    var_1 = module_0.append_tcp_flags(var_0, str_0, str_0)
    var_2 = []
    var_3 = module_0.append_tcp_flags(var_2, str_3, str_4)
    str_5 = [str_2]
    var_4 = None
    var_5 = {str_0: var_4, str_1: var_4}
    str_6 = 'negate'
    int_0 = -1079
    list_0 = [str_4, var_5, var_4]
    var_6 = module_0.append_match_flag(str_5, str_6, int_0, list_0)
    var_7 = module_0.main()

def test_case_8():
    var_0 = []
    str_0 = 'match'
    str_1 = '--match'
    bool_0 = False
    var_1 = module_0.append_match_flag(var_0, str_0, str_1, bool_0)
    var_2 = []
    str_2 = 'negate'
    bool_1 = True
    var_3 = module_0.append_match_flag(var_2, str_2, str_1, bool_1)

def test_case_9():
    str_0 = 'H\x0c)\x0b+L9 /}*rC&'
    var_0 = dict(table=str_0, chain=str_0, policy=str_0)
    str_1 = '-P'
    bool_0 = False
    var_1 = module_0.push_arguments(str_0, str_1, var_0, bool_0)

def test_case_10():
    str_0 = 'iptables'
    str_1 = '-I'
    str_2 = 'table'
    str_3 = 'chain'
    str_4 = 'destination_port'
    str_5 = 'jump'
    str_6 = 'acto'
    str_7 = 'rule_num'
    str_8 = 'filter'
    str_9 = 'INPUT'
    str_10 = '$ACCEPT'
    str_11 = 'insert'
    str_12 = '5'
    str_13 = {str_2: str_8, str_3: str_9, str_12: str_8, str_4: str_3, str_5: str_10, str_6: str_11, str_7: str_12}
    bool_0 = False
    var_0 = module_0.push_arguments(str_0, str_1, str_13, bool_0)

def test_case_11():
    str_0 = 'iptables'
    str_1 = '-I'
    str_2 = 'table'
    str_3 = 'chain'
    str_4 = 'protocol'
    str_5 = 'destination_port'
    str_6 = 'jump'
    str_7 = 'action'
    str_8 = 'rule_num'
    str_9 = 'tcp'
    str_10 = 'ACCEPT'
    str_11 = 'nseyt'
    str_12 = ''
    str_13 = {str_2: str_11, str_3: str_5, str_4: str_9, str_5: str_3, str_6: str_10, str_7: str_11, str_8: str_12}
    bool_0 = False
    var_0 = module_0.push_arguments(str_0, str_1, str_13, bool_0)