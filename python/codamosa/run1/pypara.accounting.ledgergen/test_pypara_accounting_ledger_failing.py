# Automatically generated by Pynguin.
import pypara.accounting.ledger as module_0
import pypara.commons.zeitgeist as module_1
import pypara.accounting.generic as module_2
import decimal as module_3

def test_case_0():
    try:
        read_initial_balances_0 = None
        list_0 = []
        var_0 = module_0.compile_general_ledger_program(read_initial_balances_0, list_0)
        date_0 = None
        date_range_0 = module_1.DateRange(date_0, date_0)
        iterable_0 = None
        dict_0 = {}
        var_1 = module_0.build_general_ledger(date_range_0, iterable_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        date_0 = None
        date_range_0 = module_1.DateRange(date_0, date_0)
        iterable_0 = None
        dict_0 = {}
        var_0 = module_0.build_general_ledger(date_range_0, iterable_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        date_0 = None
        date_range_0 = module_1.DateRange(date_0, date_0)
        dict_0 = {}
        list_0 = [dict_0, dict_0]
        var_0 = module_0.build_general_ledger(date_range_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        date_0 = None
        date_range_0 = module_1.DateRange(date_0, date_0)
        account_0 = None
        set_0 = {date_0}
        str_0 = 'H3MO|\\AK @\x0bf\x0bpL()'
        float_0 = 313.0
        tuple_0 = (str_0, date_0, float_0)
        balance_0 = module_2.Balance(date_0, tuple_0)
        dict_0 = {account_0: balance_0, account_0: balance_0, account_0: balance_0}
        var_0 = module_0.build_general_ledger(date_range_0, set_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        date_0 = None
        account_0 = None
        decimal_0 = module_3.Decimal()
        balance_0 = module_2.Balance(date_0, decimal_0)
        ledger_0 = module_0.Ledger(account_0, balance_0)
        var_0 = ledger_0.add(account_0)
    except BaseException:
        pass