# Automatically generated by Pynguin.
import ansible.playbook.attribute as module_0

def test_case_0():
    try:
        bytes_0 = b'N\xcfd\xe9\xde2i\x86\xde\x98>'
        str_0 = 'WUHomlJ{y?d8tou'
        set_0 = {bytes_0, bytes_0}
        tuple_0 = ()
        bool_0 = True
        float_0 = 0.2
        field_attribute_0 = module_0.FieldAttribute(bool_0, bytes_0, float_0, float_0)
        int_0 = -1177
        str_1 = '%L@Y)Q4&4dDP:h9'
        field_attribute_1 = module_0.FieldAttribute(tuple_0, field_attribute_0, int_0, str_1, set_0)
        field_attribute_2 = module_0.FieldAttribute(str_0, set_0, field_attribute_1, tuple_0)
        str_2 = 'nXwmKBk8T7xL[OJ^bQ'
        int_1 = -906
        attribute_0 = module_0.Attribute(bytes_0, field_attribute_2, str_2, int_1)
        bytes_1 = b'\x1d&'
        var_0 = attribute_0.__eq__(bytes_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "The field '%s' is supposed to be a string type, however the incoming data structure is a %s"
        bool_0 = True
        float_0 = 1778.9105
        attribute_0 = module_0.Attribute(str_0, bool_0, float_0)
        tuple_0 = None
        var_0 = attribute_0.__ne__(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = None
        str_0 = '\\J'
        dict_0 = {}
        str_1 = 'Unable to read sysctl: %s'
        str_2 = 'H"lTMx6`L>BT(d'
        bool_0 = False
        attribute_0 = None
        float_0 = 60.0
        set_0 = {float_0, str_0}
        tuple_1 = (attribute_0, float_0, set_0)
        list_0 = [tuple_1, attribute_0, bool_0]
        float_1 = 3234.7
        bytes_0 = b'z\xea\xc1\xb8x\x83Q\x8aI\ttQ3\xc4I'
        int_0 = 1104
        field_attribute_0 = module_0.FieldAttribute(float_1, bytes_0, int_0, list_0)
        field_attribute_1 = module_0.FieldAttribute(bool_0, tuple_1, set_0, list_0, str_2, field_attribute_0)
        field_attribute_2 = module_0.FieldAttribute(str_2, field_attribute_1, tuple_1)
        str_3 = '=|bHw@l:F4;7"w'
        attribute_1 = module_0.Attribute(str_0, set_0, dict_0, str_1, field_attribute_2, str_3)
        var_0 = attribute_1.__lt__(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "invalid version number '%s'"
        int_0 = -2751
        attribute_0 = module_0.Attribute(int_0)
        var_0 = attribute_0.__gt__(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        set_0 = {bool_0}
        int_0 = 999999999999
        str_0 = '_}?1gDt'
        float_0 = -1773.655
        tuple_0 = (set_0, int_0, str_0, float_0)
        tuple_1 = (tuple_0, float_0, set_0)
        tuple_2 = (tuple_1,)
        attribute_0 = None
        tuple_3 = (bool_0, tuple_2, float_0, attribute_0)
        int_1 = -1238
        str_1 = '@[}gviQe^EBMA:@xEP'
        attribute_1 = module_0.Attribute(int_1, str_1)
        attribute_2 = module_0.Attribute(attribute_1)
        var_0 = attribute_2.__le__(tuple_3)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        float_0 = 0.1
        str_0 = "The field '%s' is supposed to be a string type, however the incoming data structure is a %s"
        float_1 = -903.5879
        bytes_0 = b'\xeb'
        attribute_0 = module_0.Attribute(float_0, str_0, float_1, bytes_0)
        var_0 = attribute_0.__ge__(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        str_0 = 'list'
        field_attribute_0 = module_0.FieldAttribute(str_0, bool_0, bool_0)
    except BaseException:
        pass