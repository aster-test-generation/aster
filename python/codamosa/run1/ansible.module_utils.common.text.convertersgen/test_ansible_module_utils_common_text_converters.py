# Automatically generated by Pynguin.
import ansible.module_utils.common.text.converters as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    complex_0 = None
    var_0 = module_0.to_bytes(complex_0)

def test_case_2():
    bytes_0 = b'foo'
    var_0 = module_0.to_text(bytes_0)

def test_case_3():
    bool_0 = False
    var_0 = module_0.to_text(bool_0)

def test_case_4():
    str_0 = 'ag5\x0b5\t^\\hLX'
    set_0 = {str_0}
    dict_0 = {}
    bytes_0 = b'`\xf4u'
    tuple_0 = (set_0, dict_0, bytes_0)
    var_0 = module_0.jsonify(tuple_0)

def test_case_5():
    str_0 = 'u#o:~U"\r\\bH'
    var_0 = module_0.jsonify(str_0)

def test_case_6():
    int_0 = -1743
    bool_0 = True
    var_0 = module_0.to_text(bool_0)
    var_1 = module_0.container_to_bytes(int_0)

def test_case_7():
    int_0 = 300
    list_0 = [int_0, int_0, int_0]
    tuple_0 = None
    var_0 = module_0.container_to_bytes(list_0, tuple_0)
    dict_0 = {int_0: int_0}
    var_1 = module_0.container_to_bytes(int_0, dict_0)

def test_case_8():
    str_0 = '1:LU\x0b'
    float_0 = -270.0
    set_0 = set()
    var_0 = module_0.to_text(str_0, float_0, set_0)
    bool_0 = None
    str_1 = '+%o?1M| E*x'
    var_1 = module_0.to_bytes(str_1)
    int_0 = 511
    var_2 = module_0.container_to_bytes(int_0)
    var_3 = module_0.to_bytes(bool_0)
    tuple_0 = ()
    bytes_0 = b"'\x93\x153^\xe0N)zr\x9f\x92\x93\xea\x9a"
    list_0 = [bytes_0, str_1, str_1]
    var_4 = module_0.container_to_text(list_0)
    var_5 = module_0.container_to_bytes(tuple_0, bytes_0)

def test_case_9():
    bytes_0 = b'\x15\x9e\xdd\xd5\xb8\xa8\r\xd4\x93'
    var_0 = module_0.jsonify(bytes_0)

def test_case_10():
    list_0 = []
    var_0 = module_0.jsonify(list_0)

def test_case_11():
    bytes_0 = b'E\x05\xf6\xae'
    str_0 = 'Q&u~:ExLVG|Zl'
    str_1 = '\n---\nmodule: dpkg_selections\nshort_description: Dpkg package selection selections\ndescription:\n    - Change dpkg package selection state via --get-selections and --set-selections.\nversion_added: "2.0"\nauthor:\n- Brian Brazil (@brian-brazil)  <brian.brazil@boxever.com>\noptions:\n    name:\n        description:\n            - Name of the package.\n        required: true\n        type: str\n    selection:\n        description:\n            - The selection state to set the package to.\n        choices: [ \'install\', \'hold\', \'deinstall\', \'purge\' ]\n        required: true\n        type: str\nextends_documentation_fragment:\n- action_common_attributes\nattributes:\n    check_mode:\n        support: full\n    diff_mode:\n        support: full\n    platform:\n        support: full\n        platforms: debian\nnotes:\n    - This module won\'t cause any packages to be installed/removed/purged, use the C(apt) module for that.\n'
    dict_0 = {str_0: str_0, str_1: bytes_0, str_0: bytes_0}
    var_0 = module_0.container_to_text(dict_0)
    str_2 = 'J9}NB \x0be?'
    dict_1 = {}
    bool_0 = True
    tuple_0 = (str_2, dict_1, bool_0, dict_0)
    var_1 = module_0.container_to_text(tuple_0)
    var_2 = module_0.container_to_text(bytes_0)

def test_case_12():
    list_0 = []
    bool_0 = True
    list_1 = [list_0, bool_0]
    var_0 = module_0.jsonify(list_1)

def test_case_13():
    float_0 = None
    list_0 = [float_0]
    int_0 = -3126
    float_1 = -1802.59
    tuple_0 = (list_0, int_0, float_1)
    var_0 = module_0.to_text(tuple_0)
    dict_0 = {int_0: float_1, var_0: int_0, float_0: float_0}
    var_1 = module_0.container_to_bytes(dict_0)
    var_2 = module_0.container_to_text(float_0)
    var_3 = module_0.jsonify(dict_0)
    int_1 = -659
    bytes_0 = b'}Y\x03'
    str_0 = '$%N3fV{gyv~(i}9\rM+k_'
    dict_1 = {str_0: int_1, str_0: bytes_0}
    dict_2 = {str_0: int_1, str_0: dict_1}
    var_4 = module_0.to_bytes(bytes_0, dict_2)
    list_1 = [float_1, bytes_0, var_0]
    var_5 = module_0.container_to_text(list_1)
    set_0 = {int_1, int_1, int_1, int_1}
    var_6 = module_0.container_to_bytes(set_0, set_0)
    var_7 = module_0.to_text(tuple_0, dict_1)
    list_2 = [var_6, set_0]
    var_8 = module_0.container_to_text(set_0, list_2)

def test_case_14():
    str_0 = 'I am a unicode string: αβγ'
    var_0 = module_0.to_bytes(str_0)
    str_1 = 'I am a unicode string: αβγ'
    str_2 = 'latin1'
    var_1 = module_0.to_bytes(str_1, str_2)

def test_case_15():
    list_0 = []
    int_0 = 2685
    var_0 = module_0.jsonify(int_0)
    list_1 = [list_0, list_0]
    set_0 = set()
    str_0 = 'empty'
    dict_0 = {str_0: list_1}
    var_1 = module_0.container_to_text(dict_0, list_0)
    var_2 = module_0.jsonify(set_0)
    var_3 = module_0.container_to_text(list_1)
    var_4 = module_0.to_bytes(list_1)
    tuple_0 = None
    var_5 = module_0.to_text(tuple_0, tuple_0)
    var_6 = module_0.to_text(tuple_0, list_0)
    dict_1 = module_1.dict()
    var_7 = module_0.container_to_text(tuple_0)
    str_1 = 'K-d[\t'
    dict_2 = {str_1: int_0}
    var_8 = module_0.container_to_bytes(list_0)
    var_9 = module_0.to_text(list_0)
    var_10 = module_0.container_to_bytes(dict_2)
    str_2 = '@G;Jqf\tp\x0b'
    var_11 = module_0.to_bytes(list_1, dict_2, str_2, str_0)