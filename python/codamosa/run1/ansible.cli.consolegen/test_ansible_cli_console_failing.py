# Automatically generated by Pynguin.
import ansible.cli.console as module_0

def test_case_0():
    try:
        int_0 = -431
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.run()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Vix\x0b(dx0}\\Y,@`04'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.init_parser()
        bytes_0 = b'\xca\x8cG\x90,\x8b\x99\xf6'
        var_1 = console_c_l_i_0.post_process_args(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 2583
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.set_prompt()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -325
        list_0 = [int_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        list_1 = [console_c_l_i_0, console_c_l_i_0]
        console_c_l_i_1 = module_0.ConsoleCLI(list_1)
        var_0 = console_c_l_i_1.list_modules()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 1547
        list_0 = [int_0, int_0, int_0, int_0]
        int_1 = 77
        console_c_l_i_0 = module_0.ConsoleCLI(int_1)
        var_0 = console_c_l_i_0.do_shell(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '/C_I\r}\\5oH}m|Z'
        bytes_0 = b'\xe5um\x92F>\xbd\x15\xe6e{\xcf\xf7\x93%|he\xf9'
        console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_0.do_shell(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = None
        float_0 = 60.0
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_verbosity(list_0)
        var_1 = console_c_l_i_0.do_cd(console_c_l_i_0)
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = None
        float_0 = 60.0
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_verbosity(list_0)
        bytes_0 = b'AB'
        var_1 = console_c_l_i_0.do_become_user(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '1\\`;r5hnx]HpfO"Ulr?'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        float_0 = None
        var_0 = console_c_l_i_0.do_check(float_0)
        var_1 = console_c_l_i_0.init_parser()
        int_0 = 300
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
        console_c_l_i_1 = module_0.ConsoleCLI(dict_0)
        var_2 = console_c_l_i_1.do_become_user(console_c_l_i_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = -3053.46
        int_0 = -1873
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        var_0 = console_c_l_i_1.do_diff(float_0)
        bool_0 = False
        console_c_l_i_2 = module_0.ConsoleCLI(bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = -1218.81
        tuple_0 = (float_0,)
        bytes_0 = b'\x1cr\x1al+@O\x0fC\x19'
        tuple_1 = (bytes_0,)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_1)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        var_0 = console_c_l_i_1.do_timeout(tuple_0)
        var_1 = console_c_l_i_0.helpdefault(console_c_l_i_1)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\xef\xef\xe7\xc4\xec\x12'
        str_0 = 'Pr;@YbEtn}F'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_exit(bytes_0)
        bytes_1 = b'34\x85V\x91\xbe\x10\xc4\x0b'
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_1)
        var_1 = console_c_l_i_1.run()
    except BaseException:
        pass

def test_case_12():
    try:
        complex_0 = None
        int_0 = -308
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        tuple_0 = ()
        dict_0 = {}
        int_1 = 8
        console_c_l_i_1 = module_0.ConsoleCLI(int_1)
        var_0 = console_c_l_i_1.complete_cd(complex_0, console_c_l_i_0, tuple_0, dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = False
        int_0 = -2977
        dict_0 = {}
        float_0 = 0.0001
        bool_1 = False
        tuple_0 = (dict_0, float_0, dict_0, bool_1)
        list_0 = [float_0, tuple_0, float_0]
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        console_c_l_i_2 = module_0.ConsoleCLI(console_c_l_i_1)
        console_c_l_i_3 = module_0.ConsoleCLI(console_c_l_i_2)
        var_0 = console_c_l_i_3.completedefault(int_0, tuple_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        tuple_0 = ()
        dict_0 = {tuple_0: tuple_0}
        bytes_0 = b"\xb6\xff\xebI\xeb\x06,6\xa0s_\x05\xb0:}\xd1L\x9c'"
        set_0 = {bytes_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        var_0 = console_c_l_i_0.module_args(dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = 100.0
        str_0 = '4!p#a@|iQ:'
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        var_0 = console_c_l_i_0.do_verbosity(str_0)
        console_c_l_i_1 = module_0.ConsoleCLI(float_0)
        console_c_l_i_2 = module_0.ConsoleCLI(console_c_l_i_1)
        var_1 = console_c_l_i_2.do_become(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        float_0 = 1005.0
        tuple_0 = (float_0,)
        str_0 = '3qJb)EEfkA'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.emptyline()
        console_c_l_i_1 = module_0.ConsoleCLI(tuple_0)
        var_1 = console_c_l_i_1.helpdefault(float_0)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = 1230.15376
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        int_0 = 2
        var_0 = console_c_l_i_0.do_forks(int_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'hIbkN~],Lxyc?yU_'
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        var_0 = console_c_l_i_0.do_cd(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '0n/C_I\r}\\5oH}m|Z'
        list_0 = []
        bool_0 = False
        bytes_0 = b'F\x91\xb6Vo5D:V\xca\x9c\xbcm'
        tuple_0 = (bool_0, bytes_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.do_become_method(list_0)
        bytes_1 = b'\xe5um\x92F>\xbd\x15\xe6e{\xcf\xf7\x93%|he\xf9'
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_1)
        var_1 = console_c_l_i_1.do_shell(str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        bytes_0 = b'|Y\x9eV\x92\x85Cr\xf3*'
        dict_0 = {bytes_0: bytes_0}
        console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
        int_0 = 2080
        console_c_l_i_1 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_1.do_remote_user(console_c_l_i_0)
    except BaseException:
        pass

def test_case_21():
    try:
        list_0 = []
        float_0 = 2710.29
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_become_user(list_0)
    except BaseException:
        pass