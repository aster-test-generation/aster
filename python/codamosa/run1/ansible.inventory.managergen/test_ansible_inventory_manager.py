# Automatically generated by Pynguin.
import ansible.inventory.manager as module_0

def test_case_0():
    int_0 = 0
    inventory_manager_0 = module_0.InventoryManager(int_0)
    var_0 = inventory_manager_0.list_hosts()

def test_case_1():
    str_0 = 'basic'
    bytes_0 = b'\x14e7X\xa4\xa4\x90\x93c\xd3'
    inventory_manager_0 = module_0.InventoryManager(bytes_0)
    var_0 = inventory_manager_0.parse_source(bytes_0)
    inventory_manager_1 = module_0.InventoryManager(str_0)
    var_1 = inventory_manager_1.list_hosts()
    var_2 = inventory_manager_1.subset(inventory_manager_1)

def test_case_2():
    float_0 = 776.3932
    list_0 = [float_0]
    bytes_0 = b'[\xbe1\x14\x0e\xcd<\x99\x87'
    bool_0 = False
    inventory_manager_0 = module_0.InventoryManager(bool_0)
    var_0 = inventory_manager_0.get_hosts(list_0, bytes_0, bytes_0)

def test_case_3():
    bool_0 = True
    float_0 = -804.18227
    int_0 = -97
    inventory_manager_0 = module_0.InventoryManager(int_0)
    var_0 = inventory_manager_0.get_hosts(bool_0, float_0)

def test_case_4():
    int_0 = 20
    str_0 = '"'
    int_1 = -2727
    inventory_manager_0 = module_0.InventoryManager(int_1)
    var_0 = inventory_manager_0.clear_caches()
    bytes_0 = b'\x81w5/U-\xaa'
    int_2 = -3354
    inventory_manager_1 = module_0.InventoryManager(int_2)
    var_1 = inventory_manager_1.get_groups_dict()
    inventory_manager_2 = module_0.InventoryManager(bytes_0)
    bool_0 = False
    tuple_0 = (bool_0,)
    var_2 = inventory_manager_0.subset(tuple_0)
    var_3 = inventory_manager_2.get_hosts(int_0, str_0)

def test_case_5():
    float_0 = -1262.271
    list_0 = [float_0, float_0]
    bytes_0 = b'\x96f\x1c>'
    str_0 = 'dzGbayrDUvjHhF}`9'
    inventory_manager_0 = module_0.InventoryManager(str_0)
    tuple_0 = (list_0, bytes_0, inventory_manager_0)
    inventory_manager_1 = module_0.InventoryManager(tuple_0)
    var_0 = inventory_manager_1.get_groups_dict()

def test_case_6():
    float_0 = 60.0
    dict_0 = {float_0: float_0}
    inventory_manager_0 = module_0.InventoryManager(dict_0)
    var_0 = inventory_manager_0.reconcile_inventory()

def test_case_7():
    bytes_0 = b'E\x13\xb0B\x87\xa4\xcb'
    bytes_1 = b'\x14e7X\xa4\xa4\x90\x93c\xd3'
    inventory_manager_0 = module_0.InventoryManager(bytes_1)
    var_0 = inventory_manager_0.parse_source(bytes_0)

def test_case_8():
    int_0 = 20
    str_0 = '"'
    int_1 = -2727
    inventory_manager_0 = module_0.InventoryManager(int_1)
    var_0 = inventory_manager_0.clear_caches()
    bytes_0 = b'\x81w5/U-\xaa'
    int_2 = -3354
    inventory_manager_1 = module_0.InventoryManager(int_2)
    var_1 = inventory_manager_1.get_groups_dict()
    inventory_manager_2 = module_0.InventoryManager(bytes_0)
    var_2 = inventory_manager_2.get_hosts(int_0, str_0)

def test_case_9():
    str_0 = 'basic'
    inventory_manager_0 = module_0.InventoryManager(str_0)
    var_0 = inventory_manager_0.clear_caches()
    var_1 = inventory_manager_0.list_hosts()
    var_2 = inventory_manager_0.list_hosts()

def test_case_10():
    str_0 = 'Dw4[$Z'
    bytes_0 = None
    bytes_1 = b'\x00Q\x100\x18\xe5\x9dT"c\xa1?\xfc\x08\xb3\x1197\xcd\xdf'
    inventory_manager_0 = module_0.InventoryManager(bytes_1)
    list_0 = [str_0, str_0]
    inventory_manager_1 = None
    tuple_0 = (str_0, bytes_0, list_0, inventory_manager_1)
    dict_0 = {inventory_manager_1: str_0}
    inventory_manager_2 = module_0.InventoryManager(tuple_0, dict_0)
    var_0 = inventory_manager_2.clear_pattern_cache()
    set_0 = None
    float_0 = 0.0001
    var_1 = inventory_manager_0.get_hosts(set_0, float_0)
    var_2 = inventory_manager_0.refresh_inventory()
    inventory_manager_3 = module_0.InventoryManager(inventory_manager_1)
    var_3 = inventory_manager_3.list_hosts(list_0)

def test_case_11():
    bytes_0 = b'E\x13\xb0B\x87\xa4\xcb'
    inventory_manager_0 = module_0.InventoryManager(bytes_0)
    var_0 = inventory_manager_0.parse_source(bytes_0)
    var_1 = inventory_manager_0.clear_caches()
    str_0 = 'bu@ Na<tLkvj^'
    var_2 = inventory_manager_0.list_hosts()
    var_3 = inventory_manager_0.subset(inventory_manager_0)
    var_4 = inventory_manager_0.parse_sources()
    var_5 = inventory_manager_0.get_hosts(str_0)

def test_case_12():
    str_0 = 'basic'
    inventory_manager_0 = module_0.InventoryManager(str_0)
    var_0 = inventory_manager_0.clear_caches()
    var_1 = inventory_manager_0.get_host(inventory_manager_0)
    tuple_0 = ()
    var_2 = inventory_manager_0.subset(inventory_manager_0)
    var_3 = inventory_manager_0.subset(tuple_0)
    var_4 = inventory_manager_0.list_hosts()

def test_case_13():
    str_0 = 'basic'
    bytes_0 = b'E\x13\xb0B\x87\xa4\xcb'
    inventory_manager_0 = module_0.InventoryManager(bytes_0)
    var_0 = inventory_manager_0.parse_source(bytes_0)
    inventory_manager_1 = module_0.InventoryManager(str_0)
    var_1 = inventory_manager_1.clear_caches()
    str_1 = '\n        Each host key can be a pattern, try to process it and add variables as needed\n        '
    str_2 = 'bu@ Na<tLkvj^'
    list_0 = [str_1, str_1, str_2, str_1]
    var_2 = inventory_manager_1.list_hosts()
    var_3 = inventory_manager_1.subset(inventory_manager_1)
    list_1 = [str_2]
    int_0 = -570
    inventory_manager_2 = module_0.InventoryManager(int_0, list_1)
    var_4 = inventory_manager_2.clear_caches()
    str_3 = None
    inventory_manager_3 = module_0.InventoryManager(str_3, list_0)
    float_0 = -1809.6
    var_5 = inventory_manager_1.subset(float_0)
    int_1 = -3681
    inventory_manager_4 = module_0.InventoryManager(int_1)

def test_case_14():
    str_0 = ''
    set_0 = {str_0, str_0, str_0}
    tuple_0 = ()
    inventory_manager_0 = module_0.InventoryManager(tuple_0)
    var_0 = inventory_manager_0.remove_restriction()
    str_1 = ',UJ'
    str_2 = "Fy,@]j'x5w"
    bool_0 = False
    str_3 = '~'
    list_0 = [str_1, set_0, str_2, str_3]
    inventory_manager_1 = module_0.InventoryManager(bool_0, list_0)
    dict_0 = {tuple_0: set_0, set_0: inventory_manager_0, bool_0: set_0, bool_0: set_0}
    var_1 = inventory_manager_1.add_group(dict_0)
    var_2 = inventory_manager_0.refresh_inventory()
    var_3 = inventory_manager_1.get_hosts(list_0)
    var_4 = inventory_manager_1.subset(tuple_0)
    var_5 = inventory_manager_1.get_groups_dict()
    str_4 = 'nw\\Cs"6'
    str_5 = None
    inventory_manager_2 = module_0.InventoryManager(str_4, str_5)
    var_6 = inventory_manager_2.get_groups_dict()
    int_0 = -1724
    var_7 = inventory_manager_2.add_group(int_0)