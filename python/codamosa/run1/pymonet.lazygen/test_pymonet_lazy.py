# Automatically generated by Pynguin.
import builtins as module_0
import pymonet.lazy as module_1

def test_case_0():
    pass

def test_case_1():
    object_0 = module_0.object()
    lazy_0 = module_1.Lazy(object_0)

def test_case_2():
    object_0 = module_0.object()
    lazy_0 = module_1.Lazy(object_0)
    bool_0 = lazy_0.__eq__(object_0)

def test_case_3():
    object_0 = module_0.object()
    bool_0 = False
    lazy_0 = module_1.Lazy(object_0)
    var_0 = lazy_0.bind(bool_0)
    var_1 = lazy_0.map(object_0)
    lazy_1 = module_1.Lazy(object_0)

def test_case_4():
    bytes_0 = b'\x9d\xa3L\x97Tl\x18\xa79\x7f\xe5'
    str_0 = '\n    Return increased by 1 argument.\n\n    :param value:\n    :type value: Int\n    :returns:\n    :rtype: Int\n    '
    tuple_0 = (str_0,)
    lazy_0 = module_1.Lazy(tuple_0)
    var_0 = lazy_0.ap(bytes_0)

def test_case_5():
    int_0 = -1437
    lazy_0 = module_1.Lazy(int_0)
    var_0 = lazy_0 == lazy_0
    set_0 = {var_0}
    var_1 = lazy_0.bind(set_0)

def test_case_6():
    var_0 = lambda *args: sum(args)
    lazy_0 = module_1.Lazy(var_0)
    var_1 = lazy_0.get()
    var_2 = lazy_0.get()

def test_case_7():
    int_0 = 2
    lazy_0 = module_1.Lazy(int_0)
    var_0 = lazy_0 == lazy_0