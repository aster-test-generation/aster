# Automatically generated by Pynguin.
import tornado.httpclient as module_0
import builtins as module_1
import tornado.httputil as module_2
import tornado.ioloop as module_3

def test_case_0():
    try:
        str_0 = 'rCn\\mb9ar&EG_jX>'
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        str_0 = 'VWR:\ndt!BiU!$G\n'
        list_0 = [str_0, str_0]
        async_h_t_t_p_client_0 = module_0.AsyncHTTPClient(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '    '
        str_1 = '!yKy6'
        float_0 = -3416.2
        complex_0 = None
        str_2 = 'A\x0b'
        int_0 = 1620
        float_1 = None
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_0, float_1)
        bool_0 = False
        str_3 = '__main__'
        dict_0 = {str_1: float_1, str_0: h_t_t_p_client_error_0, str_1: int_0, str_3: str_3}
        h_t_t_p_request_0 = module_0.HTTPRequest(str_1, float_0, complex_0, str_2, h_t_t_p_client_error_0, str_1, str_2, bool_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        module_0.main()
    except BaseException:
        pass

def test_case_4():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        module_0.main()
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        h_t_t_p_client_0 = module_0.HTTPClient(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        h_t_t_p_request_0 = None
        int_0 = 3496
        float_0 = -511.4
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '!yKy6'
        int_0 = 1794
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_0)
        str_1 = 'A\x0b'
        float_0 = None
        h_t_t_p_client_error_1 = module_0.HTTPClientError(int_0, float_0)
        str_2 = h_t_t_p_client_error_1.__str__()
        str_3 = '__main__'
        bool_0 = False
        base_exception_0 = module_1.BaseException()
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, str_0, float_0, str_3, str_1, str_3, base_exception_0, bool_0)
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(h_t_t_p_request_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -2189
        set_0 = set()
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_0, set_0)
        str_0 = None
        str_1 = 'S6R~w'
        list_0 = [str_0, str_1, str_0, str_0]
        str_2 = 'xsrf_cookies'
        dict_0 = {}
        str_3 = 'C(%:!3[|){E\x0c'
        dict_1 = {str_2: dict_0, str_0: str_2, str_3: int_0}
        h_t_t_p_client_0 = module_0.HTTPClient()
        dict_2 = {}
        tuple_0 = (h_t_t_p_client_0, dict_2)
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, str_0, str_0, str_0, str_0, dict_1, tuple_0)
        h_t_t_p_client_1 = module_0.HTTPClient()
        h_t_t_p_headers_0 = module_2.HTTPHeaders()
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, h_t_t_p_headers_0, str_3)
        h_t_t_p_request_1 = module_0.HTTPRequest(str_0, str_0, str_0, str_0, str_0, int_0, list_0)
        h_t_t_p_client_2 = module_0.HTTPClient()
        h_t_t_p_response_1 = h_t_t_p_client_2.fetch(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = None
        float_0 = -3319.31
        h_t_t_p_request_0 = None
        int_0 = 3782
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, float_0, str_0, float_0)
        str_1 = h_t_t_p_response_0.__repr__()
        h_t_t_p_response_0.rethrow()
    except BaseException:
        pass

def test_case_10():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        str_0 = 'http://www.google.co/'
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
        var_0 = h_t_t_p_response_0.body
        var_1 = print(h_t_t_p_response_0)
        i_o_loop_0 = module_3.IOLoop()
        i_o_loop_1 = i_o_loop_0.instance()
        i_o_loop_2 = i_o_loop_1.instance()
        list_0 = [var_0]
        str_1 = 'tornado.httpclient'
        str_2 = '4;'
        dict_0 = {str_1: h_t_t_p_client_0, str_1: var_1, str_2: list_0}
        async_h_t_t_p_client_0 = module_0.AsyncHTTPClient(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        str_0 = 'http://www.google.co/'
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
        var_0 = h_t_t_p_response_0.body
        var_1 = print(h_t_t_p_response_0)
        i_o_loop_0 = module_3.IOLoop()
        i_o_loop_1 = i_o_loop_0.instance()
        i_o_loop_2 = i_o_loop_1.instance()
        str_1 = '\tf6c$;FJ'
        str_2 = 'QiXy!d~;DQ\x0cKf\nx8JN'
        dict_0 = {str_1: h_t_t_p_client_0, str_2: i_o_loop_1, str_1: h_t_t_p_response_0, str_2: i_o_loop_2}
        list_0 = [var_0]
        dict_1 = module_1.dict()
        async_h_t_t_p_client_0 = module_0.AsyncHTTPClient(*list_0, **dict_1)
        async_h_t_t_p_client_1 = async_h_t_t_p_client_0.__new__(i_o_loop_2, **dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        str_0 = "\ts#'Y\n[&\x0c//'Fav9Nu)"
        dict_0 = {h_t_t_p_client_0: h_t_t_p_client_0}
        bool_0 = True
        tuple_0 = None
        str_1 = 's\n6N^4t34\\< #'
        base_exception_0 = None
        str_2 = '|%\rsf"W\'d(\x0b`|4'
        str_3 = 'z>P%!zAGbN'
        dict_1 = {str_2: h_t_t_p_client_0, str_0: str_2, str_3: tuple_0}
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, dict_0, str_0, str_0, bool_0, bool_0, tuple_0, bool_0, str_1, base_exception_0, bool_0, dict_1)
        str_4 = 'HG'
        tuple_1 = ()
        dict_2 = {str_4: str_1, str_2: tuple_1, str_2: tuple_1}
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(h_t_t_p_request_0, **dict_2)
    except BaseException:
        pass