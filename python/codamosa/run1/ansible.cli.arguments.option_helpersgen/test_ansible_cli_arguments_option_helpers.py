# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    int_0 = None
    list_0 = []
    tuple_0 = None
    unrecognized_argument_0 = module_0.UnrecognizedArgument(bool_0, list_0, tuple_0)
    int_1 = 176
    float_0 = -552.0
    str_0 = '2kM'
    ansible_version_0 = module_0.AnsibleVersion(unrecognized_argument_0, int_1, float_0, bool_0, str_0)
    bytes_0 = b'\r`#\xe1'
    dict_0 = {float_0: bool_0, int_1: bool_0, float_0: str_0}
    prepend_list_action_0 = module_0.PrependListAction(bytes_0, dict_0, unrecognized_argument_0)
    unrecognized_argument_1 = module_0.UnrecognizedArgument(int_0, ansible_version_0, int_1, prepend_list_action_0)

def test_case_2():
    str_0 = 'myprog'
    str_1 = ''
    var_0 = module_0.create_base_parser(str_0, str_1)
    var_1 = module_0.add_meta_options(var_0)
    var_2 = module_0.unfrack_path()

def test_case_3():
    list_0 = None
    var_0 = module_0.maybe_unfrack_path(list_0)

def test_case_4():
    bool_0 = False
    var_0 = module_0.create_base_parser(bool_0)

def test_case_5():
    str_0 = 'test'
    var_0 = module_0.create_base_parser(str_0)
    var_1 = module_0.add_fork_options(var_0)

def test_case_6():
    str_0 = 'ansible-test'
    var_0 = module_0.create_base_parser(str_0)
    var_1 = module_0.add_subset_options(var_0)

def test_case_7():
    str_0 = 'foo'
    var_0 = module_0.create_base_parser(str_0)
    var_1 = module_0.add_vault_options(var_0)

def test_case_8():
    var_0 = module_0.version()

def test_case_9():
    bytes_0 = b''
    float_0 = -1560.20638
    tuple_0 = (float_0,)
    sorting_help_formatter_0 = None
    complex_0 = None
    tuple_1 = (bytes_0, tuple_0, sorting_help_formatter_0, complex_0)
    var_0 = module_0.version(tuple_1)

def test_case_10():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_async_options(argument_parser_0)

def test_case_11():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_connect_options(argument_parser_0)
    var_1 = argument_parser_0.parse_args()
    str_0 = 'Connection group'
    var_2 = print(str_0)
    var_3 = var_1.private_key_file
    var_4 = print(var_3)
    var_5 = var_1.remote_user
    var_6 = print(var_5)
    var_7 = var_1.connection
    var_8 = print(var_7)
    var_9 = var_1.timeout
    var_10 = print(var_9)
    var_11 = var_1.ssh_common_args
    var_12 = print(var_11)
    var_13 = var_1.sftp_extra_args
    var_14 = print(var_13)
    var_15 = var_1.scp_extra_args
    var_16 = print(var_15)
    var_17 = var_1.ssh_extra_args
    var_18 = print(var_17)
    str_1 = 'Connection password group '
    var_19 = print(str_1)
    var_20 = var_1.ask_pass
    var_21 = print(var_20)
    var_22 = var_1.connection_password_file
    var_23 = print(var_22)
    var_24 = module_0.unfrack_path()

def test_case_12():
    str_0 = 'prog'
    str_1 = 'Usage. . .'
    var_0 = module_0.create_base_parser(str_0, str_1)
    var_1 = module_0.add_output_options(var_0)

def test_case_13():
    str_0 = 'test'
    str_1 = 'Testing add_inventory_options function'
    var_0 = module_0.create_base_parser(str_0, str_1)
    var_1 = module_0.add_inventory_options(var_0)

def test_case_14():
    int_0 = 485
    bytes_0 = b'>'
    list_0 = []
    float_0 = 0.0001
    tuple_0 = (float_0,)
    sorting_help_formatter_0 = None
    complex_0 = None
    tuple_1 = (bytes_0, tuple_0, sorting_help_formatter_0, complex_0)
    var_0 = module_0.version(tuple_1)
    unrecognized_argument_0 = None
    float_1 = -770.9
    ansible_version_0 = module_0.AnsibleVersion(float_1, list_0, sorting_help_formatter_0, unrecognized_argument_0, int_0, bytes_0, tuple_0)
    prepend_list_action_0 = module_0.PrependListAction(int_0, sorting_help_formatter_0, bytes_0, unrecognized_argument_0, ansible_version_0)
    sorting_help_formatter_1 = module_0.SortingHelpFormatter(list_0)
    str_0 = 'W!SkuF2hx`pe~'
    var_1 = module_0.ensure_value(ansible_version_0, str_0, str_0)
    argument_parser_0 = module_1.ArgumentParser(list_0)
    float_2 = 53.89
    var_2 = ansible_version_0.__call__(argument_parser_0, ansible_version_0, float_2)

def test_case_15():
    str_0 = 'An example of add_meta_options'
    argument_parser_0 = module_1.ArgumentParser(str_0)
    var_0 = module_0.add_meta_options(argument_parser_0)

def test_case_16():
    namespace_0 = module_1.Namespace()
    str_0 = 'a'
    var_0 = module_0.ensure_value(namespace_0, str_0, str_0)
    str_1 = 'b'
    var_1 = module_0.ensure_value(namespace_0, str_0, str_1)
    str_2 = 'c'
    var_2 = module_0.ensure_value(namespace_0, str_1, str_2)
    str_3 = 'd'
    var_3 = module_0.ensure_value(namespace_0, str_1, str_3)
    str_4 = 'e'
    str_5 = [str_4]
    var_4 = module_0.ensure_value(namespace_0, str_1, str_5)
    str_6 = 'f'
    str_7 = 'g'
    str_8 = [str_6, str_7]
    var_5 = module_0.ensure_value(namespace_0, str_1, str_8)

def test_case_17():
    int_0 = 485
    bytes_0 = b'>'
    list_0 = []
    dict_0 = {int_0: bytes_0}
    float_0 = 0.0001
    float_1 = -1543.382950458087
    tuple_0 = (float_1,)
    sorting_help_formatter_0 = None
    var_0 = module_0.version(float_0)
    unrecognized_argument_0 = None
    float_2 = -770.9
    ansible_version_0 = module_0.AnsibleVersion(float_2, list_0, sorting_help_formatter_0, unrecognized_argument_0, int_0, bytes_0, tuple_0)
    prepend_list_action_0 = module_0.PrependListAction(int_0, sorting_help_formatter_0, bytes_0, unrecognized_argument_0, ansible_version_0)
    unrecognized_argument_1 = module_0.UnrecognizedArgument(ansible_version_0, float_2, dict_0)
    sorting_help_formatter_1 = module_0.SortingHelpFormatter(list_0)
    str_0 = 'W!SkuF2hx`pe~'
    var_1 = module_0.ensure_value(ansible_version_0, str_0, str_0)
    str_1 = '?'
    prepend_list_action_1 = module_0.PrependListAction(bytes_0, dict_0, str_1, bytes_0)
    argument_parser_0 = module_1.ArgumentParser(list_0)
    float_3 = 53.89
    var_2 = ansible_version_0.__call__(argument_parser_0, ansible_version_0, float_3)