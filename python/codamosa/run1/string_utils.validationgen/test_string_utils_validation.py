# Automatically generated by Pynguin.
import string_utils.validation as module_0

def test_case_0():
    str_0 = 'HtL4Y!-Rbh? TEh]$!'
    bool_0 = module_0.is_isbn_13(str_0)

def test_case_1():
    str_0 = '978-0-!06-40615-7'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_13()

def test_case_2():
    str_0 = '\x0b9C^3_Q=`.'
    bool_0 = module_0.is_isbn_10(str_0)

def test_case_3():
    float_0 = -4034.3
    bool_0 = module_0.is_ip(float_0)

def test_case_4():
    str_0 = "w'-/D\t.sy"
    bool_0 = module_0.is_integer(str_0)

def test_case_5():
    str_0 = '42'
    bool_0 = module_0.is_decimal(str_0)

def test_case_6():
    list_0 = None
    bool_0 = module_0.is_uuid(list_0)
    str_0 = '^([a-\\d]'
    str_1 = '2F![#D-iH&]CwN'
    bool_1 = module_0.is_url(str_0, str_1)
    bool_2 = module_0.is_palindrome(str_0)
    bool_3 = module_0.is_uuid(str_1)
    bool_4 = module_0.is_ip(bool_3)
    bool_5 = module_0.is_ip(str_1)

def test_case_7():
    str_0 = 'a@a.com'
    bool_0 = module_0.is_email(str_0)
    bool_1 = module_0.is_email(str_0)
    bool_2 = module_0.is_ip(str_0)
    str_1 = '255.1.1.255'
    bool_3 = module_0.is_ip(str_1)
    bool_4 = module_0.is_ip(bool_1)
    bool_5 = None
    bool_6 = module_0.is_isbn(str_1, bool_5)
    list_0 = []
    bool_7 = module_0.is_url(str_1, list_0)

def test_case_8():
    bytes_0 = b'\xa7\xd6\x93a\x99\x082W@d\xc9\xcb\xa9\xfe'
    optional_0 = None
    bool_0 = module_0.is_url(bytes_0, optional_0)

def test_case_9():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_email(str_0)

def test_case_10():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_email(str_0)
    bool_1 = module_0.is_email(bool_0)

def test_case_11():
    str_0 = "w'-/D\t.sy"
    bool_0 = module_0.is_credit_card(str_0)
    bool_1 = module_0.is_integer(str_0)

def test_case_12():
    bool_0 = False
    bool_1 = module_0.is_credit_card(bool_0)
    str_0 = '\x0b9C^K[Q`=L'
    bool_2 = module_0.is_isbn_10(str_0)

def test_case_13():
    str_0 = "\\)7Qf7z'+U"
    bool_0 = module_0.is_isbn_10(str_0)
    str_1 = 'Ww8z*\r,,\\K'
    bool_1 = module_0.is_isbn(str_1, bool_0)
    bytes_0 = None
    bool_2 = module_0.is_camel_case(bytes_0)

def test_case_14():
    str_0 = '{"name": "Peter"}'
    bool_0 = module_0.is_json(str_0)
    str_1 = '[1, 2, 3]'
    bool_1 = module_0.is_email(str_1)
    bool_2 = module_0.is_json(str_1)
    str_2 = 'jE{7k'
    bool_3 = module_0.is_isbn(str_2, bool_0)
    str_3 = '{nope}'
    bool_4 = module_0.is_json(str_3)
    bool_5 = module_0.is_snake_case(bool_4)
    str_4 = '\x0b\x0c*?^vM<:p'
    var_0 = None
    bool_6 = module_0.is_json(var_0)
    bool_7 = module_0.is_ip_v4(str_4)

def test_case_15():
    str_0 = '4111111111111111'
    str_1 = 'VISA'
    bool_0 = module_0.is_credit_card(str_0, str_1)
    str_2 = '5454545454545454'
    str_3 = 'MASTERCARD'
    bool_1 = module_0.is_credit_card(str_2, str_3)
    bool_2 = module_0.is_ip_v4(str_3)
    bool_3 = module_0.is_snake_case(str_3, str_3)
    bool_4 = module_0.is_ip_v4(bool_2)

def test_case_16():
    str_0 = '{nope}'
    bool_0 = module_0.is_json(str_0)

def test_case_17():
    str_0 = '\x0b9C^K[Q`=L'
    bool_0 = module_0.is_uuid(str_0)
    bool_1 = module_0.is_isbn_10(str_0)

def test_case_18():
    str_0 = '4 ,\x0c-,rHto.'
    bool_0 = module_0.is_palindrome(str_0)

def test_case_19():
    str_0 = 'P".\x0cyx'
    bool_0 = module_0.contains_html(str_0)
    bool_1 = True
    list_0 = [bool_1, bool_1]
    bool_2 = module_0.is_slug(list_0)
    bool_3 = module_0.is_palindrome(bool_1)
    str_1 = '!~&6v9@p ga'
    bool_4 = module_0.is_decimal(str_1)

def test_case_20():
    list_0 = None
    bool_0 = module_0.is_uuid(list_0)
    str_0 = 'w+3~l@hz<L^s'
    str_1 = '^([a-z\\d]+'
    bool_1 = True
    bool_2 = module_0.is_decimal(str_0)
    bool_3 = module_0.is_ip_v4(list_0)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1, bool_1)
    bool_4 = i_s_b_n_checker_0.is_isbn_13()
    bool_5 = True
    bool_6 = module_0.is_palindrome(str_0, bool_5, bool_5)
    bool_7 = module_0.is_number(str_0)
    str_2 = 'D'
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_2)
    i_s_b_n_checker_2 = module_0.__ISBNChecker(str_2)
    int_0 = 2167
    bool_8 = module_0.is_ip_v6(i_s_b_n_checker_2)
    bool_9 = module_0.is_pangram(bool_6)
    bool_10 = module_0.is_json(int_0)

def test_case_21():
    int_0 = -314
    bool_0 = module_0.is_url(int_0)
    str_0 = '\x0cN+@&p'
    bool_1 = module_0.is_pangram(str_0)
    bool_2 = module_0.is_string(str_0)
    bool_3 = module_0.is_ip_v4(str_0)
    bool_4 = module_0.is_integer(str_0)
    bool_5 = module_0.is_string(str_0)
    bool_6 = module_0.is_credit_card(str_0)
    str_1 = '[Tbk\teZK"{}UusB'
    bool_7 = False
    bool_8 = module_0.is_isbn_10(str_1, bool_7)
    str_2 = 'NFeV{j}(s5,(Fe'
    bool_9 = module_0.is_isbn_10(str_2)
    bool_10 = module_0.is_isbn_13(str_0)
    str_3 = 'X'
    bool_11 = module_0.contains_html(str_3)
    bool_12 = module_0.is_email(str_0)
    bool_13 = module_0.is_email(bool_10)
    str_4 = 'Xb`^5(I`xD\\b'
    int_1 = module_0.words_count(str_4)
    bool_14 = module_0.is_ip(str_0)

def test_case_22():
    int_0 = None
    bool_0 = module_0.is_pangram(int_0)

def test_case_23():
    bytes_0 = b'\xc9\xa0\x08\xa3\xb8\xcc\x8e<\xd0\xa6\x89\xc0"l'
    bool_0 = module_0.is_isogram(bytes_0)
    tuple_0 = ()
    list_0 = [tuple_0]
    bool_1 = module_0.is_pangram(list_0)
    str_0 = 'en'
    bool_2 = module_0.is_number(str_0)

def test_case_24():
    str_0 = 'DISCOVER'
    bool_0 = module_0.is_credit_card(str_0)
    bool_1 = module_0.is_slug(str_0)
    bool_2 = module_0.contains_html(str_0)

def test_case_25():
    str_0 = '^+o|[%t\rkI>nioY'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    float_0 = -654.1041
    bytes_0 = b'\xeb \x94\xd3|\xceb2\xef\x14\x0b\xb2X\x0e&\x01\x8fF\x83\xdc'
    dict_0 = {i_s_b_n_checker_0: float_0, float_0: bytes_0, str_0: bytes_0}
    bool_0 = i_s_b_n_checker_0.is_isbn_10()
    bool_1 = module_0.is_slug(dict_0)

def test_case_26():
    str_0 = '2\x0ccnYDd('
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_10()
    str_1 = '([a-z-]+://)([a-z_\\d-]+:[a-z_\\d-]+@)?(www\\.)?((?<!\\.)[a-z\\d]+[a-z\\d.-]+\\.[a-z]{2,6}|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|localhost)(:\\d{2,})?(/[a-z\\d_%+-]*)*(\\.[a-z\\d_%+-]+)*(\\?[a-z\\d_+%-=]*)?(#\\S*)?'
    int_0 = module_0.words_count(str_1)
    bool_1 = module_0.is_slug(int_0)
    str_2 = None
    str_3 = ''
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_3)
    bool_2 = i_s_b_n_checker_1.is_isbn_10()
    bool_3 = module_0.is_palindrome(str_2)

def test_case_27():
    str_0 = '9780312498580'
    bool_0 = module_0.is_isbn(str_0)
    str_1 = '1506715214'
    bool_1 = module_0.is_isbn(str_1)

def test_case_28():
    str_0 = 'aIU&-bgc$Bg*o1MR& |'
    bool_0 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_0)
    bool_1 = module_0.is_pangram(i_s_b_n_checker_0)

def test_case_29():
    str_0 = '>dTKdTQDd6`[)@,D~LL'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_10()

def test_case_30():
    str_0 = '42+Y'
    bool_0 = module_0.is_decimal(str_0)
    str_1 = 'test@example.net'
    bool_1 = module_0.is_email(bool_0)
    bool_2 = module_0.is_email(str_1)

def test_case_31():
    str_0 = '\n    Checks if a string is formatted as "snake case".\n\n    A string is considered snake case when:\n\n    - it\'s composed only by lowercase/uppercase letters and digits\n    - it contains at least one underscore (or provided separator)\n    - it does not start with a number\n\n    *Examples:*\n\n    >>> is_snake_case(\'foo_bar_baz\') # returns true\n    >>> is_snake_case(\'foo\') # returns false\n\n    :param input_string: String to test.\n    :type input_string: str\n    :param separator: String to use as separator.\n    :type separator: str\n    :return: True for a snake case string, false otherwise.\n    '
    bool_0 = module_0.is_email(str_0)
    str_1 = 'O`vi:\tL}?=wRSPpb'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    bool_1 = i_s_b_n_checker_0.is_isbn_10()
    bool_2 = i_s_b_n_checker_0.is_isbn_10()
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_0)
    bool_3 = module_0.is_json(bool_1)
    bool_4 = module_0.is_isogram(i_s_b_n_checker_0)
    bool_5 = i_s_b_n_checker_1.is_isbn_10()

def test_case_32():
    bytes_0 = b'\x0b\xf8\x01in\x0fuQ\xf5^\x81D\xb6\xb4\xae'
    bool_0 = False
    bool_1 = True
    bool_2 = module_0.is_palindrome(bytes_0, bool_0, bool_1)
    str_0 = 'lGbgJ\tZUX/_h'
    bool_3 = module_0.is_email(str_0)
    bool_4 = module_0.is_camel_case(str_0)
    bool_5 = module_0.is_credit_card(str_0)
    float_0 = 442.51009
    dict_0 = {bool_5: str_0, str_0: float_0}
    str_1 = 'iF\n}[K@'
    bool_6 = module_0.is_slug(str_1)
    bool_7 = module_0.contains_html(str_0)
    bool_8 = module_0.is_isogram(dict_0)

def test_case_33():
    str_0 = '42.0'
    bool_0 = module_0.is_decimal(str_0)
    bool_1 = module_0.is_ip_v4(str_0)

def test_case_34():
    str_0 = '255.200.100.999'
    bool_0 = module_0.is_ip_v4(str_0)

def test_case_35():
    str_0 = '2001:db8:85a3:0000:0000:8a2e:370:7334'
    bool_0 = module_0.is_ip(str_0)
    var_0 = print(bool_0)
    var_1 = print(bool_0)

def test_case_36():
    str_0 = 'Bh`W_'
    bool_0 = module_0.is_isogram(str_0)
    bool_1 = module_0.is_camel_case(str_0)
    bool_2 = False
    bool_3 = module_0.is_credit_card(bool_2)
    bool_4 = module_0.is_integer(str_0)
    bool_5 = module_0.is_isbn_10(str_0)
    bool_6 = module_0.is_json(bool_1)
    bool_7 = module_0.is_json(bool_2)
    bool_8 = module_0.is_full_string(bool_7)
    str_1 = "H){?/XR!Ti+_s1}'mKLD"
    bool_9 = module_0.is_decimal(str_1)
    str_2 = "bv('\neB<"
    bool_10 = True
    bool_11 = module_0.is_isbn(str_2, bool_10)
    bool_12 = module_0.contains_html(str_2)
    bool_13 = module_0.is_uuid(bool_11, bool_11)
    str_3 = '>'
    bool_14 = module_0.is_isogram(bool_9)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_3)
    bool_15 = i_s_b_n_checker_0.is_isbn_10()
    str_4 = "\x0bwK'ZV5_0\n\nXY_l"
    bool_16 = module_0.is_credit_card(bool_2)
    bool_17 = module_0.is_isogram(bool_16)
    bool_18 = module_0.is_integer(str_4)
    bool_19 = module_0.is_ip_v6(bool_2)
    bool_20 = module_0.is_ip(bool_18)
    bool_21 = module_0.is_snake_case(bool_2)
    bool_22 = i_s_b_n_checker_0.is_isbn_10()

def test_case_37():
    str_0 = '+'
    bool_0 = module_0.is_palindrome(str_0)
    set_0 = {str_0, str_0, str_0, str_0}
    bool_1 = module_0.is_snake_case(set_0)
    str_1 = 'jCT'
    bool_2 = module_0.is_slug(str_1)
    bool_3 = module_0.is_slug(str_1)
    bool_4 = module_0.is_camel_case(bool_3)
    bool_5 = module_0.is_palindrome(bool_3)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    bool_6 = i_s_b_n_checker_0.is_isbn_13()
    bool_7 = i_s_b_n_checker_0.is_isbn_13()
    bool_8 = module_0.is_palindrome(bool_2)
    bool_9 = module_0.is_uuid(bool_2)
    str_2 = '(uH6KO2F'
    str_3 = 'HM>lOdTC6Gf=%,s,zH4'
    bool_10 = module_0.is_json(bool_1)
    int_0 = module_0.words_count(str_3)
    bool_11 = module_0.is_uuid(bool_0, bool_1)
    bool_12 = module_0.is_isogram(bool_7)
    bool_13 = module_0.is_integer(str_2)
    bool_14 = module_0.is_full_string(bool_2)
    bool_15 = module_0.is_url(bool_4)
    bool_16 = module_0.is_credit_card(bool_4, str_1)
    bool_17 = module_0.is_ip_v4(str_1)
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_1)
    bool_18 = module_0.is_snake_case(bool_14)
    bool_19 = i_s_b_n_checker_1.is_isbn_10()
    bool_20 = module_0.is_email(bool_11)
    bool_21 = i_s_b_n_checker_1.is_isbn_10()
    bool_22 = i_s_b_n_checker_1.is_isbn_13()
    bool_23 = module_0.is_ip(i_s_b_n_checker_0)
    bool_24 = False
    bool_25 = module_0.is_full_string(bool_24)
    str_4 = 'p~HjNM:d\x0b[w'
    bool_26 = i_s_b_n_checker_0.is_isbn_13()
    bool_27 = module_0.is_number(str_4)

def test_case_38():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_email(str_0)
    bool_1 = module_0.is_ip(str_0)
    bool_2 = module_0.is_uuid(bool_1, bool_1)
    str_1 = 'g9D}l2oLZ9rKf'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    bool_3 = i_s_b_n_checker_0.is_isbn_10()
    str_2 = '1'
    bool_4 = module_0.is_integer(str_2)
    bool_5 = module_0.is_email(bool_0)
    str_3 = 'CL[*X$A.A esBiYUES\x0b'
    bool_6 = module_0.is_integer(str_3)
    bool_7 = i_s_b_n_checker_0.is_isbn_13()
    str_4 = '3U1}~Ap@euUdoyln@vX'
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_4, bool_4)
    i_s_b_n_checker_2 = module_0.__ISBNChecker(str_2)
    bool_8 = i_s_b_n_checker_2.is_isbn_13()
    str_5 = '1wGJ\x0b%iIv &'
    str_6 = '\\c/TYLK<d'
    list_0 = [str_1, str_5, str_6]
    bool_9 = module_0.is_url(str_3, list_0)
    bool_10 = module_0.is_json(bool_3)
    str_7 = 'RO\r'
    bool_11 = module_0.contains_html(str_7)
    bool_12 = i_s_b_n_checker_0.is_isbn_10()
    bool_13 = module_0.is_credit_card(i_s_b_n_checker_0)

def test_case_39():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip(str_0)
    bool_1 = module_0.is_uuid(bool_0, bool_0)
    bool_2 = module_0.is_email(str_0)
    bool_3 = module_0.is_email(bool_2)

def test_case_40():
    str_0 = 'a@1.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'a@example.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'first.last@example.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'first.last@192.168.0.1'
    bool_3 = module_0.is_email(str_3)
    bool_4 = module_0.is_email(str_1)
    bool_5 = module_0.is_email(str_0)
    bool_6 = module_0.is_email(str_2)
    str_4 = '"first"."last"@example.com'
    bool_7 = module_0.is_email(str_4)
    str_5 = 'first."last"@example.com'
    str_6 = '"first"."last@"@example.com'
    bool_8 = module_0.is_email(str_6)
    bool_9 = module_0.is_decimal(str_5)

def test_case_41():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip(str_0)
    bool_1 = module_0.is_uuid(bool_0, bool_0)
    bool_2 = module_0.is_email(str_0)
    bool_3 = module_0.is_email(bool_0)
    str_1 = '"first"."last"@example.com'
    bool_4 = module_0.is_email(str_1)
    list_0 = None
    bool_5 = module_0.is_email(list_0)
    bool_6 = module_0.is_ip_v4(str_1)

def test_case_42():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip(str_0)
    bool_1 = module_0.is_email(str_0)
    bool_2 = module_0.is_email(bool_1)

def test_case_43():
    var_0 = None
    bool_0 = module_0.is_email(var_0)
    int_0 = 3
    bool_1 = module_0.is_email(int_0)
    str_0 = ' '
    bool_2 = module_0.is_email(str_0)
    str_1 = 'a'
    int_1 = 321
    var_1 = str_1 * int_1
    bool_3 = module_0.is_email(var_1)
    str_2 = '.gmail.com'
    bool_4 = module_0.is_email(str_2)
    str_3 = 'jane.doe.gmail.com'
    bool_5 = module_0.is_email(str_3)
    int_2 = 65
    var_2 = str_1 * int_2
    str_4 = '@gmail.com'
    var_3 = var_2 + str_4
    bool_6 = module_0.is_email(var_3)
    str_5 = 'jane..doe@gmail.com'
    bool_7 = module_0.is_email(str_5)

def test_case_44():
    var_0 = None
    bool_0 = module_0.is_email(var_0)
    str_0 = 'foo'
    bool_1 = module_0.is_email(str_0)
    str_1 = '@gmail.com'
    bool_2 = module_0.is_email(str_1)
    str_2 = 'my.email@'
    bool_3 = module_0.is_email(str_2)
    str_3 = 'my.email@-gmail.com'
    bool_4 = module_0.is_email(str_3)
    str_4 = 'my.email@com.com'
    bool_5 = module_0.is_email(str_4)
    bool_6 = module_0.is_email(str_2)
    str_5 = 'my..email@gmail.com'
    bool_7 = module_0.is_email(str_5)

def test_case_45():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = '371449635398431'
    str_2 = 'AMERICAN_EXPRESS'
    bool_1 = module_0.is_credit_card(str_1)
    bool_2 = module_0.is_url(str_2)
    dict_0 = None
    bool_3 = module_0.is_credit_card(dict_0, str_0)
    str_3 = '6011111111111117'
    bool_4 = module_0.is_credit_card(dict_0)
    str_4 = '3530111333300000'
    bool_5 = module_0.is_credit_card(str_3)
    bool_6 = module_0.is_credit_card(bool_4)
    bool_7 = False
    bool_8 = module_0.is_credit_card(bool_7)
    bool_9 = module_0.is_credit_card(bool_3, str_4)

def test_case_46():
    str_0 = 'http://www.mysite.com'
    bool_0 = module_0.is_url(str_0)
    str_1 = 'https://www.mysite2.com'
    bool_1 = module_0.is_url(str_1)
    str_2 = '.mysite.com'
    bool_2 = module_0.is_url(str_2)
    str_3 = 'mysite.com'
    bool_3 = module_0.is_url(str_3)
    str_4 = 'ftp://mysite.com'
    str_5 = 'ftp'
    str_6 = [str_5]
    bool_4 = module_0.is_url(str_4, str_6)
    str_7 = 'http'
    str_8 = [str_7]
    bool_5 = module_0.is_url(str_4, str_8)
    str_9 = 'http://mysite.com/folder1/folder2'
    str_10 = [str_7]
    bool_6 = module_0.is_url(str_9, str_10)
    str_11 = 'https'
    str_12 = [str_11]
    bool_7 = module_0.is_url(str_9, str_12)

def test_case_47():
    str_0 = 'ssagar220699@gmail'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'ssagar220699@gmail.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = '@gmail.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'my.email@the-provider.com'
    bool_3 = module_0.is_email(str_3)
    str_4 = 'my.email..@the-provider.com'
    bool_4 = module_0.is_email(str_4)
    str_5 = 'my.email.@the-provider.com'
    bool_5 = module_0.is_email(str_5)
    str_6 = 'my.email@theprovider.com'
    bool_6 = module_0.is_email(str_6)
    bool_7 = module_0.is_ip_v4(str_4)
    tuple_0 = ()
    bool_8 = module_0.is_ip_v4(tuple_0)

def test_case_48():
    str_0 = '255.255.255.255'
    str_1 = '255.1.1.255'
    bool_0 = module_0.is_ip(str_1)
    bool_1 = module_0.is_uuid(bool_0)
    bool_2 = module_0.is_email(str_0)
    str_2 = '"first"."last@example.com'
    bool_3 = module_0.is_email(bool_0)
    bool_4 = module_0.is_email(str_1)
    str_3 = 'my.email@the-provider'
    bool_5 = module_0.is_email(bool_0)
    str_4 = 'my.email@the_provider.com'
    bool_6 = module_0.is_email(str_3)
    str_5 = 'my.email@the..provider.com'
    bool_7 = module_0.is_email(str_2)
    str_6 = '^5[1-5]\\d{14}$'
    bool_8 = module_0.is_email(str_3)
    bool_9 = module_0.is_isbn(str_0)
    str_7 = 'u=?\\wqjGMa'
    bool_10 = module_0.is_isbn(str_7, bool_7)
    bool_11 = module_0.is_json(str_5)
    bool_12 = module_0.is_email(str_5)
    bool_13 = True
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_6, bool_13)
    bool_14 = i_s_b_n_checker_0.is_isbn_13()
    float_0 = None
    str_8 = 'Hpc~iYjNCs*'
    bool_15 = module_0.is_snake_case(str_2, str_8)
    list_0 = None
    str_9 = 'wV.-ec{q5Qzn)MU'
    bool_16 = module_0.is_snake_case(str_4, str_9)
    tuple_0 = (float_0, list_0)
    bool_17 = module_0.is_email(tuple_0)