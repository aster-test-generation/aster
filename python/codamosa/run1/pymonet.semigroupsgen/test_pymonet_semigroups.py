# Automatically generated by Pynguin.
import pymonet.semigroups as module_0

def test_case_0():
    bytes_0 = b''
    one_0 = module_0.One(bytes_0)

def test_case_1():
    str_0 = "\nKwrZB7`'c6wQ(("
    all_0 = module_0.All(str_0)
    all_1 = all_0.concat(all_0)
    str_1 = all_1.__str__()
    first_0 = module_0.First(all_0)

def test_case_2():
    sum_0 = None
    str_0 = ' Q'
    one_0 = module_0.One(str_0)
    one_1 = module_0.One(one_0)
    var_0 = one_1.concat(sum_0)
    str_1 = one_0.__str__()
    last_0 = None
    var_1 = one_1.concat(last_0)

def test_case_3():
    float_0 = 2546.77595
    map_0 = module_0.Map(float_0)
    map_1 = module_0.Map(map_0)
    str_0 = 'T7m&CzHHLJ/Utg(Fc?z'
    one_0 = module_0.One(str_0)
    var_0 = one_0.concat(map_1)

def test_case_4():
    str_0 = '_PfA:&J\\>H:tNkG[}'
    first_0 = module_0.First(str_0)
    sum_0 = module_0.Sum(str_0)
    tuple_0 = ()
    bytes_0 = b'\xa1?\x94j\x913D\x08\x05\xd7h/\x94\x16'
    min_0 = module_0.Min(bytes_0)
    last_0 = module_0.Last(min_0)
    one_0 = module_0.One(sum_0)
    all_0 = module_0.All(one_0)
    all_1 = module_0.All(first_0)
    all_2 = all_1.concat(all_0)
    semigroup_0 = module_0.Semigroup(tuple_0)
    min_1 = module_0.Min(first_0)
    max_0 = module_0.Max(min_1)
    str_1 = first_0.__str__()
    str_2 = max_0.__str__()
    str_3 = max_0.__str__()

def test_case_5():
    int_0 = 1
    int_1 = 2
    first_0 = module_0.First(int_0)
    last_0 = module_0.Last(int_1)
    var_0 = {int_0: first_0, int_1: last_0}
    map_0 = module_0.Map(var_0)
    last_1 = module_0.Last(int_0)
    var_1 = {int_0: first_0, int_1: last_1}
    map_1 = module_0.Map(var_1)
    int_2 = 3
    first_1 = module_0.First(int_2)
    last_2 = module_0.Last(int_2)
    var_2 = {int_0: first_1, int_1: last_2}
    map_2 = module_0.Map(var_2)
    var_3 = map_0.concat(map_1)

def test_case_6():
    float_0 = 236.3972
    semigroup_0 = module_0.Semigroup(float_0)
    last_0 = module_0.Last(semigroup_0)
    str_0 = last_0.__str__()
    str_1 = "p!e'l/H\t*,]"
    map_0 = module_0.Map(str_1)
    max_0 = module_0.Max(map_0)
    map_1 = module_0.Map(max_0)
    last_1 = module_0.Last(map_1)
    min_0 = module_0.Min(last_1)
    str_2 = min_0.__str__()

def test_case_7():
    tuple_0 = ()
    map_0 = module_0.Map(tuple_0)
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    all_0 = module_0.All(map_0)
    bytes_0 = b'zjFM\x92I\xb2\n'
    all_1 = module_0.All(bytes_0)
    all_2 = all_1.concat(all_0)
    str_0 = all_2.__str__()
    last_0 = module_0.Last(list_0)
    var_0 = last_0.concat(map_0)

def test_case_8():
    float_0 = 2546.77595
    map_0 = module_0.Map(float_0)
    map_1 = module_0.Map(map_0)
    str_0 = 'T7m&CzHHLJ/Utg(Fc?z'
    str_1 = map_0.__str__()
    one_0 = module_0.One(str_0)
    var_0 = one_0.concat(map_1)

def test_case_9():
    tuple_0 = ()
    max_0 = module_0.Max(tuple_0)
    str_0 = max_0.__str__()

def test_case_10():
    int_0 = 3
    max_0 = module_0.Max(int_0)
    max_1 = module_0.Max(int_0)
    max_2 = module_0.Max(int_0)
    var_0 = max_1.concat(max_2)
    var_1 = var_0.value

def test_case_11():
    bytes_0 = b'F_s\xcaqT\x0ep\xbb'
    min_0 = module_0.Min(bytes_0)
    str_0 = min_0.__str__()

def test_case_12():
    bool_0 = None
    all_0 = module_0.All(bool_0)
    int_0 = 318
    first_0 = module_0.First(int_0)
    str_0 = 'HfSNGZudvbpJKJ$'
    all_1 = all_0.concat(all_0)
    min_0 = module_0.Min(str_0)
    semigroup_0 = module_0.Semigroup(min_0)
    var_0 = min_0.concat(min_0)

def test_case_13():
    int_0 = 5
    max_0 = module_0.Max(int_0)
    int_1 = 3
    max_1 = module_0.Max(int_1)
    var_0 = max_0.concat(max_1)
    var_1 = var_0.value
    max_2 = module_0.Max(int_1)
    max_3 = module_0.Max(int_0)
    var_2 = max_2.concat(max_3)
    var_3 = var_2.value