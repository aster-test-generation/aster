# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    try:
        set_0 = set()
        str_0 = "l%1rz'nR@8"
        dict_0 = {}
        list_0 = [dict_0]
        file_downloader_0 = module_0.FileDownloader(dict_0, list_0)
        var_0 = file_downloader_0.calc_percent(set_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = None
        float_0 = 1425.5
        str_0 = '\t4\nj/c\r}Q#XHt _Gv*'
        file_downloader_0 = module_0.FileDownloader(float_0, str_0)
        list_0 = [str_0, bool_0, file_downloader_0]
        str_1 = '\t4h\nj/c\r1Q#XHt _Gv*'
        set_0 = {str_1, str_1, file_downloader_0}
        var_0 = file_downloader_0.calc_eta(list_0, str_1, list_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0, list_0}
        bytes_0 = None
        float_0 = None
        dict_0 = {}
        str_0 = '+K!\x0b]P".w\x0b+'
        tuple_0 = (dict_0, str_0)
        file_downloader_0 = module_0.FileDownloader(dict_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(set_0, bytes_0, float_0, list_0)
        bool_0 = None
        int_0 = 2145
        str_1 = ''
        dict_1 = {str_1: list_0}
        file_downloader_1 = module_0.FileDownloader(bool_0, dict_1)
        var_1 = file_downloader_1.try_utime(str_1, int_0)
        var_2 = file_downloader_1.temp_name(str_1)
        var_3 = file_downloader_1.calc_eta(set_0, list_0, str_1, file_downloader_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xc3\x10\xed\x91'
        int_0 = None
        file_downloader_0 = module_0.FileDownloader(bytes_0, int_0)
        file_downloader_1 = None
        bytes_1 = b'7\xb8\xd95\x1c\x85&\xa3'
        bool_0 = True
        tuple_0 = (bool_0,)
        tuple_1 = (bytes_1, tuple_0)
        tuple_2 = (file_downloader_1, tuple_1, tuple_0, file_downloader_1)
        int_1 = -2098
        dict_0 = {bytes_1: bytes_1, tuple_1: int_1, bytes_1: bool_0, file_downloader_1: int_1}
        dict_1 = {tuple_0: tuple_0, tuple_1: bytes_1, tuple_2: dict_0, tuple_1: int_1}
        file_downloader_2 = module_0.FileDownloader(tuple_2, dict_1)
        var_0 = file_downloader_2.format_speed(file_downloader_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ra<Gg'
        tuple_0 = ()
        file_downloader_0 = module_0.FileDownloader(tuple_0, str_0)
        int_0 = 3600
        var_0 = file_downloader_0.best_block_size(int_0, int_0)
        list_0 = [str_0, int_0]
        var_1 = file_downloader_0.download(list_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -3542
        list_0 = []
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(list_0, dict_0)
        var_0 = file_downloader_0.report_file_already_downloaded(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'U7aU\x0bP'
        int_0 = -58
        float_0 = 3297.401169290036
        float_1 = 1e309
        str_1 = '29417'
        dict_0 = {str_1: int_0, str_0: str_1, str_1: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, float_0)
        var_0 = file_downloader_0.best_block_size(float_1, int_0)
        bool_0 = True
        str_2 = '-l,7V4TY_o)Y]&\x0bO'
        var_1 = file_downloader_0.try_utime(str_2, bool_0)
        list_0 = [var_1, var_1, file_downloader_0, str_1]
        var_2 = file_downloader_0.to_stderr(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "Jxv\n8fEOW'l%jg"
        dict_0 = {str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.trouble()
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 1853.929662
        str_0 = '@4oDl<rLo4H'
        str_1 = '|=t9RLiH~3E(<qA^T'
        tuple_0 = ()
        file_downloader_0 = module_0.FileDownloader(tuple_0, float_0)
        var_0 = file_downloader_0.try_rename(str_0, str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '"#tn*f>'
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, dict_0, str_0]
        bool_0 = False
        dict_1 = {}
        file_downloader_0 = module_0.FileDownloader(bool_0, dict_1)
        var_0 = file_downloader_0.ytdl_filename(list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0, list_0}
        bytes_0 = None
        float_0 = None
        dict_0 = {}
        str_0 = '+K!\x0b]P".ew\x0b+'
        tuple_0 = (dict_0, str_0)
        file_downloader_0 = module_0.FileDownloader(dict_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(set_0, bytes_0, float_0, list_0)
        bool_0 = None
        int_0 = 2124
        str_1 = 'U'
        dict_1 = {str_1: list_0}
        file_downloader_1 = module_0.FileDownloader(bool_0, dict_1)
        var_1 = file_downloader_1.try_utime(str_1, int_0)
        var_2 = file_downloader_1.temp_name(str_1)
        float_1 = -511.16217772610435
        var_3 = file_downloader_0.best_block_size(int_0, int_0)
        var_4 = file_downloader_0.format_seconds(float_1)
        var_5 = file_downloader_1.format_speed(bytes_0)
        int_1 = -102
        var_6 = file_downloader_0.format_retries(int_1)
        var_7 = file_downloader_0.calc_percent(str_0, list_0)
        file_downloader_2 = module_0.FileDownloader(int_0, dict_0)
        var_8 = file_downloader_1.slow_down(float_0, set_0, dict_0)
        str_2 = 'I\x0b.{-6'
        var_9 = file_downloader_0.report_destination(str_2)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'S:=".S|dnoLYRZo;T Z@'
        set_0 = set()
        bytes_0 = b'\x9a\xca\x9b\x13\x8aM'
        tuple_0 = ()
        list_0 = [set_0, bytes_0, tuple_0]
        list_1 = [bytes_0, set_0, bytes_0]
        float_0 = -2681.6495
        file_downloader_0 = module_0.FileDownloader(list_1, float_0)
        str_1 = 'NT/>'
        float_1 = -1386.12071
        file_downloader_1 = module_0.FileDownloader(str_1, float_1)
        var_0 = file_downloader_1.add_progress_hook(file_downloader_0)
        int_0 = -1487
        dict_0 = {}
        file_downloader_2 = module_0.FileDownloader(set_0, dict_0)
        var_1 = file_downloader_2.slow_down(str_0, list_0, int_0)
        file_downloader_3 = module_0.FileDownloader(set_0, bytes_0)
        str_2 = '68z@q.&,'
        file_downloader_4 = module_0.FileDownloader(file_downloader_3, str_2)
        var_2 = file_downloader_4.report_progress(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = -4681.93
        str_0 = '8{|Vm6q.q@YUZI|=R^\n'
        str_1 = 'H\tiG\t'
        tuple_0 = (float_0, str_0, str_1)
        set_0 = {tuple_0, tuple_0, float_0}
        str_2 = '#*x4}(?_s'
        int_0 = None
        tuple_1 = (set_0, str_2, int_0)
        list_0 = [tuple_1, str_1, set_0, str_1]
        str_3 = None
        set_1 = None
        str_4 = 'tj-Wn\x0b'
        dict_0 = {str_3: set_1, str_4: str_3}
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(dict_0, bool_0)
        var_0 = file_downloader_0.report_resuming_byte(list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '+$'
        bool_0 = False
        dict_0 = {}
        str_1 = 'Gk*'
        file_downloader_0 = module_0.FileDownloader(dict_0, str_1)
        bool_1 = True
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, bool_1)
        var_0 = file_downloader_1.report_retry(str_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = True
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(bool_0, dict_0)
        str_0 = 'W,;OEvU{3$/'
        var_0 = file_downloader_0.download(str_0, bool_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = ''
        file_downloader_0 = None
        set_0 = set()
        file_downloader_1 = module_0.FileDownloader(set_0, set_0)
        var_0 = file_downloader_1.try_rename(str_0, file_downloader_0)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = -1719
        int_1 = -45
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_1, dict_0)
        bytes_0 = b'\x95\x12\xac'
        file_downloader_1 = module_0.FileDownloader(int_0, bytes_0)
        var_0 = file_downloader_1.report_unable_to_resume()
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = -58
        float_0 = 1e309
        str_0 = '29417'
        dict_0 = {str_0: int_0, str_0: float_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, float_0)
        var_0 = file_downloader_0.best_block_size(float_0, int_0)
        var_1 = file_downloader_0.format_percent(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        set_0 = None
        set_1 = {set_0, set_0, set_0, set_0}
        str_0 = '[{_I\x0c|'
        list_0 = [set_1, set_1, set_0, set_1]
        tuple_0 = (list_0,)
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, set_1)
        file_downloader_1 = module_0.FileDownloader(tuple_0, tuple_0)
        str_1 = '~:'
        file_downloader_2 = module_0.FileDownloader(str_1, dict_0)
        file_downloader_3 = module_0.FileDownloader(file_downloader_1, str_0)
        var_0 = file_downloader_3.to_console_title(file_downloader_2)
    except BaseException:
        pass

def test_case_19():
    try:
        float_0 = 2967.06
        list_0 = [float_0]
        list_1 = [float_0, float_0]
        bytes_0 = b'\xc7\xbc\xab\xa3(\x9d\x1f0\xef\xea\xe0\xe6\x1d\xfa\x87USQ'
        file_downloader_0 = module_0.FileDownloader(list_1, bytes_0)
        var_0 = file_downloader_0.report_warning(*list_0)
    except BaseException:
        pass

def test_case_20():
    try:
        float_0 = -573.87
        list_0 = None
        list_1 = [list_0]
        file_downloader_0 = module_0.FileDownloader(list_1, float_0)
        bool_0 = False
        set_0 = {bool_0}
        bytes_0 = b'H\x01\x14\xa21\x8dV\xeeXG\xce6\x0b'
        file_downloader_1 = module_0.FileDownloader(set_0, bytes_0)
        var_0 = file_downloader_1.try_rename(file_downloader_0, file_downloader_0)
        bool_1 = None
        int_0 = 1615770000
        tuple_0 = (bool_1, int_0)
        int_1 = -2620
        dict_0 = {}
        var_1 = file_downloader_0.calc_eta(tuple_0, int_1, dict_0, file_downloader_1)
    except BaseException:
        pass

def test_case_21():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0, list_0}
        bytes_0 = None
        float_0 = None
        dict_0 = {}
        str_0 = '+K!\x0b]P".w\x0b+'
        tuple_0 = (dict_0, str_0)
        file_downloader_0 = module_0.FileDownloader(dict_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(set_0, bytes_0, float_0, list_0)
        int_0 = 3159
        var_1 = file_downloader_0.format_seconds(int_0)
        bool_0 = None
        int_1 = 2145
        str_1 = 'U'
        dict_1 = {str_1: list_0}
        file_downloader_1 = module_0.FileDownloader(bool_0, dict_1)
        var_2 = file_downloader_1.try_utime(str_1, int_1)
        var_3 = file_downloader_1.temp_name(str_1)
        list_1 = [var_0, bool_0, bytes_0, bool_0, str_1]
        dict_2 = {list_0: file_downloader_1, list_0: bool_0, var_3: var_3}
        var_4 = file_downloader_1.try_utime(file_downloader_1, float_0)
        float_1 = -506.969
        var_5 = file_downloader_0.format_seconds(float_1)
        int_2 = -79
        var_6 = file_downloader_0.format_retries(int_2)
        file_downloader_2 = module_0.FileDownloader(int_1, dict_2)
        var_7 = file_downloader_2.slow_down(list_1, list_0, int_1)
        bytes_1 = b'\x80\x1e\xf8j\xbe!\xff'
        var_8 = file_downloader_1.download(str_1, bytes_1)
    except BaseException:
        pass

def test_case_22():
    try:
        float_0 = -572.692028
        list_0 = None
        bool_0 = None
        int_0 = -1261
        str_0 = '>xD3xsI@\\3'
        tuple_0 = (list_0, str_0)
        tuple_1 = ()
        set_0 = {tuple_1, tuple_0, float_0, tuple_1}
        file_downloader_0 = module_0.FileDownloader(set_0, float_0)
        int_1 = -2552
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, int_1)
        file_downloader_2 = module_0.FileDownloader(file_downloader_1, int_1)
        file_downloader_3 = module_0.FileDownloader(tuple_0, file_downloader_2)
        var_0 = file_downloader_3.format_retries(int_0)
        list_1 = [list_0, bool_0, bool_0, list_0]
        str_1 = 'D~E[LNREr`G;2'
        int_2 = -473
        bool_1 = True
        str_2 = '+kE'
        file_downloader_4 = module_0.FileDownloader(float_0, list_1)
        var_1 = file_downloader_1.format_eta(list_0)
        var_2 = file_downloader_4.undo_temp_name(str_2)
        dict_0 = {}
        file_downloader_5 = module_0.FileDownloader(bool_1, dict_0)
        var_3 = file_downloader_5.try_utime(str_1, int_2)
        str_3 = 'ng'
        str_4 = '-'
        dict_1 = {str_3: file_downloader_3, str_4: str_3, str_2: float_0}
        var_4 = file_downloader_0.ytdl_filename(dict_1)
    except BaseException:
        pass

def test_case_23():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0, list_0}
        bytes_0 = None
        float_0 = None
        dict_0 = {}
        str_0 = '+K!\x0b]P".w\x0b+'
        tuple_0 = (dict_0, str_0)
        file_downloader_0 = module_0.FileDownloader(dict_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(set_0, bytes_0, float_0, list_0)
        bool_0 = None
        int_0 = 2145
        str_1 = ''
        dict_1 = {str_1: list_0}
        file_downloader_1 = module_0.FileDownloader(bool_0, dict_1)
        var_1 = file_downloader_1.try_utime(str_1, int_0)
        var_2 = file_downloader_1.temp_name(str_1)
        list_1 = [bool_0, bool_0, str_1]
        int_1 = None
        dict_2 = {list_0: file_downloader_1, list_0: bool_0, var_2: var_2}
        file_downloader_2 = module_0.FileDownloader(int_0, dict_2)
        var_3 = file_downloader_2.slow_down(list_1, list_0, int_1)
        bytes_1 = b'\x00\x83\xb7\xe1D\xc4/\x87e\xc2\x18\x9a\x12\x9c\xf0'
        var_4 = file_downloader_1.add_progress_hook(bytes_1)
        bytes_2 = b'\x80\x1e\xf8j\xbe!\xff'
        var_5 = file_downloader_1.download(str_1, bytes_2)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = -58
        float_0 = 3297.401169290036
        bool_0 = False
        file_downloader_0 = module_0.FileDownloader(bool_0, int_0)
        var_0 = file_downloader_0.calc_speed(int_0, float_0, float_0)
        str_0 = '-l,7V4TY_o)Y]&\x0bO'
        var_1 = file_downloader_0.try_utime(str_0, bool_0)
        var_2 = file_downloader_0.parse_bytes(str_0)
        list_0 = [str_0]
        var_3 = file_downloader_0.format_retries(list_0)
    except BaseException:
        pass

def test_case_25():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0, list_0}
        bytes_0 = None
        float_0 = None
        dict_0 = {}
        str_0 = '\rK\x0b]P$".ew\x0b+'
        tuple_0 = (dict_0, str_0)
        file_downloader_0 = module_0.FileDownloader(dict_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(set_0, bytes_0, float_0, list_0)
        bool_0 = None
        int_0 = 2145
        var_1 = file_downloader_0.add_progress_hook(str_0)
        float_1 = 3872.5
        var_2 = file_downloader_0.format_seconds(float_1)
        str_1 = 'c'
        dict_1 = {str_1: list_0}
        file_downloader_1 = module_0.FileDownloader(bool_0, dict_1)
        var_3 = file_downloader_1.try_utime(str_1, int_0)
        list_1 = [var_0, var_3, bool_0, bool_0, str_1]
        dict_2 = {list_0: file_downloader_1, list_0: bool_0, int_0: float_0, var_2: str_0}
        float_2 = -508.8919807669381
        var_4 = file_downloader_0.best_block_size(int_0, int_0)
        var_5 = file_downloader_0.format_seconds(float_2)
        var_6 = file_downloader_0.format_retries(int_0)
        file_downloader_2 = module_0.FileDownloader(int_0, dict_2)
        var_7 = file_downloader_2.slow_down(list_1, list_0, int_0)
        bool_1 = False
        bytes_1 = b'\x1a\xaaa\xde\xf8\x94\xc3_\xc2\xb0'
        var_8 = file_downloader_1.calc_eta(bool_1, list_0, bytes_1, int_0)
    except BaseException:
        pass

def test_case_26():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0, list_0}
        bytes_0 = None
        float_0 = None
        dict_0 = {}
        str_0 = '+K\x0b]P$".ew\x0b+'
        tuple_0 = (dict_0, str_0)
        file_downloader_0 = module_0.FileDownloader(dict_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(set_0, bytes_0, float_0, list_0)
        int_0 = 3143
        var_1 = file_downloader_0.format_seconds(int_0)
        bool_0 = None
        int_1 = 2173
        str_1 = '4'
        dict_1 = {str_1: list_0}
        file_downloader_1 = module_0.FileDownloader(bool_0, dict_1)
        var_2 = file_downloader_1.try_utime(str_1, int_1)
    except BaseException:
        pass

def test_case_27():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0, list_0}
        bytes_0 = None
        float_0 = None
        dict_0 = {}
        str_0 = '+K\x0b]P$".ew\x0b+'
        tuple_0 = (dict_0, str_0)
        file_downloader_0 = module_0.FileDownloader(dict_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(set_0, bytes_0, float_0, list_0)
        int_0 = 3143
        var_1 = file_downloader_0.format_seconds(int_0)
        bool_0 = None
        str_1 = '/'
        dict_1 = {str_1: str_1, str_1: list_0, str_1: int_0}
        file_downloader_1 = module_0.FileDownloader(bool_0, dict_1)
        var_2 = file_downloader_1.try_utime(str_1, int_0)
        var_3 = file_downloader_1.temp_name(str_1)
        var_4 = file_downloader_0.best_block_size(int_0, int_0)
        var_5 = file_downloader_1.format_retries(bool_0)
    except BaseException:
        pass

def test_case_28():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0, list_0}
        bytes_0 = None
        float_0 = None
        dict_0 = {}
        str_0 = '+K\x0b]P$".ew\x0b+'
        tuple_0 = (dict_0, str_0)
        file_downloader_0 = module_0.FileDownloader(dict_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(set_0, bytes_0, float_0, list_0)
        int_0 = 3143
        var_1 = file_downloader_0.format_seconds(int_0)
        bool_0 = None
        int_1 = 2145
        str_1 = '-'
        dict_1 = {str_1: list_0}
        file_downloader_1 = module_0.FileDownloader(bool_0, dict_1)
        var_2 = file_downloader_1.try_utime(str_1, int_1)
        var_3 = file_downloader_1.temp_name(str_1)
        str_2 = "XVr2\t,c='xAc(/sv[ED"
        file_downloader_2 = module_0.FileDownloader(str_2, float_0)
        list_1 = [var_0, bool_0, bytes_0, bool_0, str_1]
        dict_2 = {list_0: file_downloader_1, list_0: bool_0, var_3: var_3}
        float_1 = -508.8919807669381
        var_4 = file_downloader_0.format_seconds(float_1)
        int_2 = -102
        var_5 = file_downloader_0.format_retries(int_2)
        file_downloader_3 = module_0.FileDownloader(int_1, dict_2)
        var_6 = file_downloader_3.slow_down(list_1, list_0, int_1)
        bytes_1 = b'\x80\x1e\xf8j\xbe!\xff'
        var_7 = file_downloader_1.download(str_1, bytes_1)
    except BaseException:
        pass