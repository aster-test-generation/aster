# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'l'
    int_0 = 2
    int_1 = {str_0: int_0, str_0: int_0, str_0: int_0}
    ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_1, int_1, int_1)

def test_case_2():
    var_0 = None
    ansible_j2_vars_0 = module_0.AnsibleJ2Vars(var_0, var_0, var_0)

def test_case_3():
    str_0 = 'l'
    int_0 = 8
    int_1 = {str_0: int_0, str_0: int_0}
    ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_1, int_1, int_1)
    var_0 = ansible_j2_vars_0[str_0]

def test_case_4():
    str_0 = 'uj!0W?Z\\CbOwsdf'
    bool_0 = False
    dict_0 = {str_0: bool_0}
    ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bool_0, str_0, dict_0)
    var_0 = ansible_j2_vars_0.__contains__(str_0)

def test_case_5():
    var_0 = None
    str_0 = 'foo=bar baz=99'
    str_1 = 'l_abc=def l_xyz=123'
    float_0 = 1000.0
    dict_0 = {str_1: float_0, str_0: str_0, str_0: var_0}
    tuple_0 = ()
    dict_1 = {}
    ansible_j2_vars_0 = module_0.AnsibleJ2Vars(dict_1, dict_1)
    ansible_j2_vars_1 = module_0.AnsibleJ2Vars(tuple_0, ansible_j2_vars_0)
    var_1 = ansible_j2_vars_1.add_locals(dict_0)