# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    try:
        float_0 = -2820.6113
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.union(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        immutable_dict_0 = module_0.ImmutableDict()
        immutable_dict_1 = module_0.ImmutableDict()
        var_0 = immutable_dict_1.__eq__(immutable_dict_0)
        immutable_dict_2 = module_0.ImmutableDict()
        var_1 = immutable_dict_2.union(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xe9\x97\x95\xd7h\xbd6\x14\xc9\xdd\x97'
        var_0 = module_0.count(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = None
        var_0 = module_0.is_sequence(set_0)
        str_0 = 'lxJj7FU@~#x1pdfLq\x0bd'
        list_0 = [str_0, str_0, str_0]
        list_1 = [list_0, str_0, str_0, str_0]
        str_1 = "~&u/~H dm'K8^n\x0cR_"
        dict_0 = {str_1: str_1, str_1: str_1}
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        var_1 = immutable_dict_0.union(list_1)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        var_0 = module_0.count(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = None
        var_0 = module_0.count(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        str_0 = 'izUKGG}:gCk-\rAHMSjeb'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__eq__(dict_0)
        var_1 = module_0.is_iterable(list_0)
        immutable_dict_1 = module_0.ImmutableDict()
        var_2 = immutable_dict_1.__hash__()
        int_0 = 1013
        str_1 = 'ssh_key_type'
        var_3 = module_0.is_iterable(int_0, str_1)
        var_4 = immutable_dict_1.__repr__()
        var_5 = immutable_dict_0.__repr__()
        bytes_0 = b'N\xa3z\x89O'
        var_6 = module_0.count(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = []
        bytes_0 = b'\xf8\x9e'
        str_0 = '5{HpY\\E9x3@>F/+'
        dict_0 = {str_0: bytes_0, str_0: bytes_0}
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        var_0 = immutable_dict_0.difference(immutable_dict_0)
        tuple_0 = ()
        var_1 = module_0.count(tuple_0)
        immutable_dict_1 = module_0.ImmutableDict()
        var_2 = immutable_dict_1.difference(bytes_0)
        str_1 = 'izUKGG}:gCk-\rAHMSjeb'
        dict_1 = {str_1: immutable_dict_1}
        var_3 = module_0.is_iterable(str_1, dict_1)
        set_0 = {var_2}
        var_4 = module_0.is_iterable(set_0)
        dict_2 = {str_1: str_1, str_1: str_1, str_1: str_1}
        immutable_dict_2 = module_0.ImmutableDict()
        var_5 = immutable_dict_2.__eq__(dict_2)
        var_6 = module_0.is_iterable(list_0)
        var_7 = module_0.count(list_0)
        var_8 = immutable_dict_1.__iter__()
        immutable_dict_3 = module_0.ImmutableDict()
        var_9 = immutable_dict_3.__hash__()
        list_1 = [var_3, str_1]
        var_10 = module_0.is_sequence(list_1)
        int_0 = 1013
        str_2 = 'ssh_key_type'
        var_11 = module_0.is_iterable(int_0, str_2)
        immutable_dict_4 = module_0.ImmutableDict(**dict_1)
        var_12 = immutable_dict_1.__repr__()
        var_13 = immutable_dict_2.__repr__()
    except BaseException:
        pass