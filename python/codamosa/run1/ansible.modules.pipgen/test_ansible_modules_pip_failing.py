# Automatically generated by Pynguin.
import ansible.modules.pip as module_0

def test_case_0():
    try:
        float_0 = -2501.1919
        list_0 = None
        str_0 = "^1/'~2_"
        dict_0 = {}
        bool_0 = False
        package_0 = module_0.Package(dict_0, bool_0)
        var_0 = module_0.setup_virtualenv(float_0, list_0, str_0, list_0, package_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '_h\\_xG%r_Z`G>6'
        set_0 = {str_0}
        str_1 = 'he}w3hz29(J7On'
        package_0 = module_0.Package(set_0, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'soe'
        package_0 = module_0.Package(str_0)
        bool_0 = False
        var_0 = package_0.is_satisfied_by(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2287
        str_0 = 'finalized'
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: str_0}
        package_0 = module_0.Package(dict_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = None
        list_1 = [list_0]
        str_0 = 'ak#tx#dGfP'
        package_0 = module_0.Package(str_0)
        var_0 = package_0.is_satisfied_by(list_1)
        bytes_0 = None
        set_0 = {bytes_0}
        package_1 = module_0.Package(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = None
        set_0 = {bytes_0}
        package_0 = module_0.Package(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'q'
        package_0 = module_0.Package(str_0)
        var_0 = package_0.__str__()
        package_1 = module_0.Package(package_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '[ip'
        package_0 = module_0.Package(str_0)
        var_0 = package_0.package_name
        package_1 = module_0.Package(str_0)
        var_1 = package_1.has_version_specifier
        package_2 = module_0.Package(str_0)
        str_1 = 'i1.3'
        var_2 = package_2.is_satisfied_by(str_1)
        str_2 = '1.5'
        package_3 = module_0.Package(str_0, str_2)
        var_3 = package_2.is_satisfied_by(package_0)
        package_4 = module_0.Package(str_2, str_0)
        list_0 = []
        var_4 = package_2.is_satisfied_by(list_0)
        package_5 = module_0.Package(package_0, package_3)
    except BaseException:
        pass