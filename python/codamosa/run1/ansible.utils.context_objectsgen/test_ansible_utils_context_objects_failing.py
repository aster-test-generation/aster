# Automatically generated by Pynguin.
import ansible.utils.context_objects as module_0
import ansible.module_utils.common.collections as module_1

def test_case_0():
    try:
        c_l_i_args_0 = None
        c_l_i_args_1 = module_0.CLIArgs(c_l_i_args_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        dict_0 = {}
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(dict_0)
        set_0 = set()
        bytes_0 = None
        a_b_c_singleton_0 = module_0._ABCSingleton(bool_0, global_c_l_i_args_0, set_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'list'
        str_1 = 'set'
        str_2 = 'test'
        str_3 = [str_2, str_0]
        str_4 = 'subkey2'
        str_5 = 'subvalue1'
        str_6 = {str_5: str_5, str_4: str_0}
        var_0 = set(str_5)
        var_1 = {str_0: str_3, str_4: str_6, str_1: var_0}
        c_l_i_args_0 = module_0.CLIArgs(var_1)
        var_2 = frozenset(str_0)
        var_3 = c_l_i_args_0[str_0]
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 2684.2
        str_0 = 'nR$Z"]$1+Q'
        str_1 = '\rwUkU&8'
        dict_0 = {float_0: float_0, str_0: str_1}
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(dict_0)
        str_2 = '^`|G3G&)Ea\rth8nw/%'
        dict_1 = {str_1: dict_0}
        c_l_i_args_0 = module_0.CLIArgs(dict_1)
        bytes_0 = b'G\x13\xa9~/\x14U\x00:\x967'
        tuple_0 = (str_2, c_l_i_args_0, bytes_0)
        a_b_c_singleton_0 = module_0._ABCSingleton(dict_0, global_c_l_i_args_0, dict_0, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'FETCH "%s" TO "%s"'
        list_0 = [str_0]
        bool_0 = True
        int_0 = 1002
        dict_0 = {str_0: list_0}
        c_l_i_args_0 = module_0.CLIArgs(dict_0)
        float_0 = -1017.4379700082693
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(float_0)
        c_l_i_args_1 = module_0.CLIArgs(global_c_l_i_args_0)
        tuple_0 = (bool_0, int_0, bool_0)
        dict_1 = {tuple_0: bool_0}
        c_l_i_args_2 = module_0.CLIArgs(dict_1)
        global_c_l_i_args_1 = module_0.GlobalCLIArgs(str_0)
        int_1 = -369
        bytes_0 = b'\x8c\x96yg\xa1\xea\xe8t\x1a\xf2\xcf\x0b\x11\x1b\xc6\x97\x8e\x02'
        int_2 = 82
        dict_2 = {bytes_0: float_0, int_2: list_0, int_1: tuple_0, bool_0: int_2}
        c_l_i_args_3 = module_0.CLIArgs(dict_2)
        c_l_i_args_4 = module_0.CLIArgs(c_l_i_args_1)
        str_1 = 'UnmRP01\nheC7p,6jWPr'
        c_l_i_args_5 = module_0.CLIArgs(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = None
        set_0 = {dict_0}
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(set_0)
        str_0 = '_+O1u,vm\x0bQ<@'
        immutable_dict_0 = module_1.ImmutableDict()
        str_1 = 'ansible_become_pass'
        dict_1 = {}
        str_2 = 'R+Y7_Y:XW=\t.xV@'
        str_3 = '~d|CPf'
        dict_2 = {str_0: immutable_dict_0, str_1: dict_1, str_1: str_2, str_3: set_0}
        c_l_i_args_0 = module_0.CLIArgs(dict_2)
        str_4 = 'Salasana'
        c_l_i_args_1 = module_0.CLIArgs(str_4)
    except BaseException:
        pass