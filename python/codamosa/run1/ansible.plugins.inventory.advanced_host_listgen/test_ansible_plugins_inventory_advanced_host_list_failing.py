# Automatically generated by Pynguin.
import ansible.plugins.inventory.advanced_host_list as module_0

def test_case_0():
    try:
        float_0 = None
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.parse(inventory_module_0, float_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        inventory_module_0 = module_0.InventoryModule()
        str_0 = 'loalhost,localhost[1:10],'
        bool_0 = False
        var_0 = inventory_module_0.parse(bool_0, bool_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        inventory_module_0 = module_0.InventoryModule()
        str_0 = 'oalh+st,lJcalhost[1:10]9'
        dict_0 = None
        var_0 = inventory_module_0.verify_file(dict_0)
        bool_0 = False
        var_1 = inventory_module_0.parse(bool_0, bool_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        str_0 = 'g'
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(str_0)
        inventory_module_1 = module_0.InventoryModule()
        var_1 = inventory_module_1.verify_file(tuple_0)
        inventory_module_2 = module_0.InventoryModule()
        inventory_module_3 = module_0.InventoryModule()
        str_1 = 'bain?} 5,\\0L`wy(Q|Ys'
        var_2 = inventory_module_0.verify_file(str_1)
        inventory_module_4 = module_0.InventoryModule()
        inventory_module_5 = module_0.InventoryModule()
        dict_0 = {inventory_module_5: str_0, inventory_module_5: var_1}
        bytes_0 = b'\x01(\xde'
        var_3 = inventory_module_1.parse(dict_0, bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        inventory_module_0 = module_0.InventoryModule()
        str_0 = ',x\nXX"$XX@d=\x0cD.'
        bool_0 = False
        var_0 = inventory_module_0.parse(bool_0, bool_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        inventory_module_0 = module_0.InventoryModule()
        str_0 = "\nmsg:\n    description: changed\n    returned: always\n    type: bool\n    sample: True\nstart:\n    description: The command execution start time.\n    returned: always\n    type: str\n    sample: '2016-02-25 09:18:26.429568'\nend:\n    description: The command execution end time.\n    returned: always\n    type: str\n    sample: '2016-02-25 09:18:26.755339'\ndelta:\n    description: The command execution delta time.\n    returned: always\n    type: str\n    sample: '0:00:00.325771'\nstdout:\n    description: The command standard output.\n    returned: always\n    type: str\n    sample: 'Clustering node rabbit@slave1 with rabbit@master …'\nstderr:\n    description: The command standard error.\n    returned: always\n    type: str\n    sample: 'ls: cannot access foo: No such file or directory'\ncmd:\n    description: The command executed by the task.\n    returned: always\n    type: str\n    sample: 'rabbitmqctl join_cluster rabbit@master'\nrc:\n    description: The command return code (0 means success).\n    returned: always\n    type: int\n    sample: 0\nstdout_lines:\n    description: The command standard output split in lines.\n    returned: always\n    type: list\n    sample: [u'Clustering node rabbit@slave1 with rabbit@master …']\nstderr_lines:\n    description: The command standard error split in lines.\n    returned: always\n    type: list\n    sample: [u'ls cannot access foo: No such file or directory', u'ls …']\n"
        var_0 = None
        var_1 = inventory_module_0.parse(str_0, var_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = None
        var_1 = None
        str_0 = 'host[\n:10],'
        inventory_module_0 = module_0.InventoryModule()
        var_2 = inventory_module_0.parse(var_0, var_1, str_0)
    except BaseException:
        pass