# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1

def test_case_0():
    try:
        a_s_t_0 = module_0.AST()
        base_import_rewrite_0 = module_1.BaseImportRewrite(a_s_t_0)
        base_transformer_0 = module_1.BaseTransformer()
    except BaseException:
        pass

def test_case_1():
    try:
        import_0 = module_0.Import()
        a_s_t_0 = module_0.AST()
        base_import_rewrite_0 = module_1.BaseImportRewrite(a_s_t_0)
        var_0 = base_import_rewrite_0.visit_Import(import_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = None
        list_0 = [var_0, var_0]
        str_0 = 'KB=BP%9%'
        str_1 = 'Sn;v#S\n]\n<Fp_Bv'
        str_2 = '3.5'
        str_3 = '\n  Additional dependencies:\n{bright}    {dependencies}{reset}'
        dict_0 = {str_0: str_0, str_1: list_0, str_2: list_0, str_3: list_0}
        import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
        str_4 = 'sx9>l/NV0^'
        str_5 = ''
        str_6 = '$Nc|F@# DkjNB~'
        set_0 = set()
        dict_1 = {str_4: str_4, str_5: str_4, str_6: str_5, str_4: set_0}
        a_s_t_0 = module_0.AST(**dict_1)
        base_import_rewrite_0 = module_1.BaseImportRewrite(a_s_t_0)
        var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
    except BaseException:
        pass