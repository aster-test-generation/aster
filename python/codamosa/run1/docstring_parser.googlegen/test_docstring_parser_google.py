# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    pass

def test_case_1():
    google_parser_0 = module_0.GoogleParser()

def test_case_2():
    section_type_0 = module_0.SectionType.MULTIPLE
    str_0 = '\n    Description of the function\n\n    Args:\n        filepath (str, optional): The path to the file to be read.\n    Returns:\n        str: The content of the file as a string.\n    Examples:\n        >>> read_file("test.txt")\n        "test"\n        >>> read_file("test2.txt")\n        "test2"\n    '
    str_1 = 'va(o/bl)?n7}'
    google_parser_0 = module_0.GoogleParser(str_1)
    str_2 = '\nThis is a short description\n\nThis is a longer description\n\nReturns:\n    Return value description\nRaises:\n    LimitExceeded: If the amount of ids exceeds the limit\n    ValueError: If the format of the response is incorrect\n    '
    list_0 = [str_2, section_type_0, str_1]
    section_0 = module_0.Section(*list_0)
    var_0 = google_parser_0.add_section(section_0)
    str_3 = None
    google_parser_1 = module_0.GoogleParser()
    docstring_0 = google_parser_1.parse(str_3)
    docstring_1 = google_parser_1.parse(str_2)
    docstring_2 = google_parser_1.parse(str_0)
    google_parser_2 = module_0.GoogleParser()

def test_case_3():
    str_0 = 'Parse the Google-style docstring into its components.\n\n        :returns: parsed docstring\n        '
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = None
    google_parser_0 = module_0.GoogleParser()
    docstring_0 = google_parser_0.parse(str_0)

def test_case_5():
    str_0 = 'Parse the Gpoglestyl vos\nring into its c\x0bmpBnensn\n\n        :returns: arsed docstring\n        '
    tuple_0 = None
    google_parser_0 = module_0.GoogleParser(str_0, tuple_0)
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = 'B")YP=)DX+*'
    docstring_0 = module_0.parse(str_0)

def test_case_7():
    str_0 = '\n'
    docstring_0 = module_0.parse(str_0)

def test_case_8():
    str_0 = '[Optional text at beginning]This is an example of the docstring of the function\n\n    Arguments:\n        parameter1 (int, optional) : \n            This is the first parameter. Defaults to 1.\n        parameter2 (str) : This is the second parameter.\n\n    Params:\n        param1 (int): This is the first param.\n        param2 (str): This is the second param.\n\n    Example:\n        ```\n        This is an example\n        ```\n\n    Examples:\n        ```\n        This is another example\n        ```\n\n    Returns:\n        int, str: This is a description of what is returned.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_9():
    str_0 = '\n    Description of the function\n\n    Args:\n        filepath (str, optional): The path to the file to be read.\n    Returns:\n        str: The content of the file as a string.\n    Examples:\n        >>> read_file("test.txt")\n        "test"\n        >>> read_file("test2.txt")\n        "test2"\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_10():
    str_0 = '\n    Description of the function\n\n    Args:\n        filepath (str, optional): The path to the file to be read.\n    eturns:\n        str: The content of the file as a string.\n    Examples:\n        >>> read_file("test.txt")\n        "test"\n        >>> read_file("test2.txt")\n        "test2"\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_11():
    list_0 = []
    google_parser_0 = module_0.GoogleParser(list_0)
    str_0 = 'g\\\r|K0gb2wY!'
    docstring_0 = module_0.parse(str_0)
    str_1 = '\n    Description of the function\n\n    Args:\n        filepath (str, optional): The path to the file to be read.\n    Returns:\n        str:&The content of the file as a string.\n    Examples:\n        >>> read_file("test.txt")\n        "test"\n        >>> read_file("test2.txt")\n    \'   "test2"\n    '
    docstring_1 = module_0.parse(str_1)

def test_case_12():
    str_0 = '\nThis is a short description\n\nThis is a longer description\n\nReturns:\n    Return value description\nRaises:\n    LimitExceeded: If the amount of ids exceeds the limit\n    ValueError: If the format of the response is incorrect\n  I '
    docstring_0 = module_0.parse(str_0)

def test_case_13():
    section_type_0 = module_0.SectionType.MULTIPLE
    str_0 = '\n    Description of the function4\n    Args:\n        filepath (str, optional): The path to the file to be read.\n    Returns:\n        str: The content of th{ file as a string.\n    Examples:\n        >>> read_file("test.txt")\n        "test"\n        >>> read_file("test2.txt")\n        "test2"\n    '
    str_1 = 'va(o/bl)?n7}'
    google_parser_0 = module_0.GoogleParser(str_1)
    str_2 = '\nThis is a short description\n\nThis is a longer description\n\nReturns:\n    Return value description\nRaises:\n    LimitExceeded: If the amount of ids exceeds the limit\n    ValueError: If the format of the response is incorrect\n    '
    list_0 = [str_2, section_type_0, str_1]
    section_0 = module_0.Section(*list_0)
    var_0 = google_parser_0.add_section(section_0)
    str_3 = None
    google_parser_1 = module_0.GoogleParser()
    docstring_0 = google_parser_1.parse(str_3)
    docstring_1 = google_parser_1.parse(str_2)
    docstring_2 = google_parser_1.parse(str_0)
    google_parser_2 = module_0.GoogleParser()