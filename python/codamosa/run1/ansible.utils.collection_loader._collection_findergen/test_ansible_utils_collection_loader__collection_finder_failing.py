# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    try:
        str_0 = 'ansible_collections'
        int_0 = 2110
        set_0 = set()
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(int_0, set_0)
        var_0 = ansible_path_hook_finder_0.__repr__()
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_1 = ansible_collection_pkg_loader_base_0.get_data(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'v~+dJ@$WwZrdS'
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'False'
        var_0 = ansible_collection_finder_0.find_module(str_0)
        var_1 = ansible_collection_finder_0.set_playbook_paths(str_0)
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ansible_collections'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'nNJ>dG3kvE^W|(*'
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -123
        str_0 = '+(s'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = '\\&##$#<7^.]u\tp~^'
        bytes_0 = None
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '^ |'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        bytes_0 = None
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder(ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_9():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'False'
        var_0 = ansible_collection_finder_0.find_module(str_0)
        float_0 = None
        tuple_0 = (float_0,)
        str_1 = '){cv\\4CN\x0c|'
        list_0 = [str_1, str_1, str_1, tuple_0]
        var_1 = ansible_collection_finder_0.set_playbook_paths(list_0)
        dict_0 = {str_0: tuple_0, tuple_0: ansible_collection_finder_0, float_0: var_0}
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(tuple_0, dict_0, str_1, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'ansible.plugins.action.template'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        bool_0 = False
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(list_0, bool_0)
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'my_namespace.my_collection'
        str_1 = 'my_resource'
        str_2 = 'my_plugin_type'
        var_0 = None
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, var_0, str_1, str_2)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'ansible_collections.ansible.collections'
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'ansible_collections'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        str_1 = ' A special view of vars_cache that adds values from the inventory when needed. '
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '/foo/bar'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0)
        str_1 = 'ansible'
        var_0 = None
        var_1 = ansible_collection_finder_0.find_module(str_1, var_0)
    except BaseException:
        pass

def test_case_16():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'ansible_collections.someone.somecoll'
        var_0 = ansible_collection_finder_0.find_module(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '/foo/bar'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0)
        str_1 = 'ansible'
        var_0 = ansible_collection_finder_0.find_module(str_1, str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'fHbar'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0)
        str_1 = 'ansible_collections.somens.somecoll'
        str_2 = 'ansible_collections.somens.somecoll.somemod'
        var_0 = ansible_collection_finder_0.find_module(str_2, str_1)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'ansible_collections'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.__repr__()
        var_1 = ansible_collection_pkg_loader_base_0.get_data(str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'ansible_collections'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        tuple_0 = ()
        var_0 = ansible_collection_pkg_loader_base_0.get_source(tuple_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'ansible_collections'
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'ansible_collections'
        int_0 = -606
        set_0 = set()
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(int_0, set_0)
        var_0 = ansible_path_hook_finder_0.__repr__()
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_1 = ansible_collection_pkg_loader_base_0.__repr__()
        dict_0 = {}
        var_2 = ansible_collection_pkg_loader_base_0.get_data(dict_0)
    except BaseException:
        pass