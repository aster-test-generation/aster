# Automatically generated by Pynguin.
import ansible.module_utils.common.validation as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '~'
    str_1 = 'QW"\n]w'
    var_0 = module_0.check_mutually_exclusive(str_0, str_1)

def test_case_2():
    str_0 = 'T/XD?'
    var_0 = module_0.safe_eval(str_0)

def test_case_3():
    str_0 = 'arVBY8sR9+I85xCuN#d'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.check_required_together(str_0, list_0, str_0)

def test_case_4():
    dict_0 = {}
    int_0 = 22
    str_0 = 'replace_chars and replacement_chars must both be strings'
    var_0 = module_0.check_required_by(dict_0, int_0, str_0)

def test_case_5():
    str_0 = ''
    set_0 = None
    bytes_0 = b'3\xdc'
    var_0 = module_0.check_required_if(str_0, set_0, bytes_0)

def test_case_6():
    str_0 = None
    var_0 = module_0.check_missing_parameters(str_0)

def test_case_7():
    bytes_0 = b'pVRb\x8b\xfdWx\x1eV\xe6\xa6\xad$w\xa4\xa2\xb7'
    var_0 = module_0.check_type_str(bytes_0)

def test_case_8():
    str_0 = 'R=pRu1]RLY9xm'
    var_0 = module_0.check_type_list(str_0)

def test_case_9():
    float_0 = 100.0
    var_0 = module_0.check_type_list(float_0)

def test_case_10():
    str_0 = '=sM"8U;ENz}M'
    var_0 = module_0.check_type_dict(str_0)

def test_case_11():
    int_0 = 790
    dict_0 = {int_0: int_0}
    var_0 = module_0.check_type_dict(dict_0)
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0, bool_1, dict_0]
    str_0 = 'Q]_]wX0D'
    var_1 = module_0.safe_eval(list_0, str_0)

def test_case_12():
    bool_0 = True
    var_0 = module_0.check_type_float(bool_0)

def test_case_13():
    bytes_0 = b'\xc9\xca\x0c\x08y\x7fId+i\x7f\xa5\x0f\xcc\x0cq-'
    var_0 = module_0.check_type_raw(bytes_0)

def test_case_14():
    list_0 = []
    bytes_0 = b'\x94#\xff\x02%)\x83\xb9\xbd\xc7\xd0\x96\xfb\xfc-N'
    bool_0 = True
    bytes_1 = b'N>\x8b\xc6\xf9d{X`J\xb9dTSRKfD'
    tuple_0 = (bytes_0, bool_0, bytes_1, bytes_1)
    var_0 = module_0.count_terms(list_0, tuple_0)

def test_case_15():
    set_0 = None
    bytes_0 = b'@\x99}1%\xba{\x8f\x18]\x8e"_]|x\xd5Iw\xc5'
    var_0 = module_0.check_type_jsonarg(bytes_0)
    var_1 = module_0.check_mutually_exclusive(set_0, set_0)
    str_0 = None
    list_0 = [str_0, str_0, str_0, var_0, str_0]
    int_0 = 1400
    var_2 = module_0.check_required_arguments(str_0, list_0, int_0)

def test_case_16():
    str_0 = '-eDF\\/0s9%+75/`rG'
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.safe_eval(str_0, list_0, str_0)
    dict_0 = {}
    str_1 = '/usr/bin/xbps-install'
    var_1 = module_0.check_required_one_of(dict_0, str_1)
    bytes_0 = b''
    var_2 = module_0.check_type_raw(bytes_0)

def test_case_17():
    int_0 = 840
    dict_0 = {int_0: int_0}
    var_0 = module_0.check_type_dict(dict_0)
    bytes_0 = b'0\xa0\x82m6\xd5\x00k\xd3\x84\x9f\xd2'
    var_1 = module_0.check_required_one_of(bytes_0, bytes_0)
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0, bool_1, dict_0]
    str_0 = 'Q]_1\t-0h'
    var_2 = module_0.safe_eval(list_0, str_0)
    str_1 = '=s9ZRY@F4Y2'
    bytes_1 = b'\xad/\xdc\x0cMAEep\x9f\xcc\x15'
    var_3 = module_0.safe_eval(list_0, str_1, bytes_1)

def test_case_18():
    dict_0 = {}
    str_0 = ']}'
    var_0 = module_0.safe_eval(str_0)
    bool_0 = True
    list_0 = [str_0, bool_0, var_0]
    var_1 = module_0.check_required_arguments(dict_0, list_0)

def test_case_19():
    str_0 = 'a=b b=c'
    var_0 = module_0.check_type_dict(str_0)

def test_case_20():
    str_0 = 'path'
    str_1 = (str_0,)
    bool_0 = True
    var_0 = [str_1, str_1, str_1, bool_0]
    str_2 = 'someint'
    int_0 = 99
    str_3 = 'bool_param'
    str_4 = 'string_param'
    str_5 = (str_3, str_4)
    var_1 = [str_2, int_0, str_5]
    var_2 = [var_0, var_1]
    str_6 = 'mystring'
    var_3 = {str_2: str_1, str_2: int_0, str_3: bool_0, str_4: str_6}
    var_4 = module_0.check_required_if(var_2, var_3)

def test_case_21():
    str_0 = 'a=b, c=d '
    var_0 = module_0.check_type_dict(str_0)
    str_1 = "a='b', c=d "
    var_1 = module_0.check_type_dict(str_1)
    str_2 = '{"a": "b", "c": "d"}'
    var_2 = module_0.check_type_dict(str_2)
    str_3 = '{"a": "b", "c": {"d": "e"}}'
    var_3 = module_0.check_type_dict(str_3)
    str_4 = '1=2, k=v '
    var_4 = module_0.check_type_dict(str_4)
    str_5 = '1=2, k=3 '
    var_5 = module_0.check_type_dict(str_5)

def test_case_22():
    str_0 = 'x = 1'
    var_0 = module_0.safe_eval(str_0)
    bool_0 = False
    var_1 = module_0.safe_eval(str_0, bool_0)
    var_2 = module_0.safe_eval(str_0, bool_0)
    str_1 = 'import mymodule'
    bool_1 = True
    var_3 = module_0.safe_eval(str_1, bool_1)
    bool_2 = True
    var_4 = module_0.safe_eval(str_1, bool_2)
    str_2 = '1'
    var_5 = module_0.safe_eval(str_2)

def test_case_23():
    str_0 = "literal_eval('a')"
    var_0 = module_0.safe_eval(str_0)
    str_1 = "json.dumps({'a': 1})"
    var_1 = module_0.safe_eval(str_1)
    bool_0 = True
    var_2 = module_0.safe_eval(str_0, bool_0)
    str_2 = 'malformed string'
    var_3 = ValueError(str_2)
    var_4 = module_0.safe_eval(str_1, bool_0)
    str_3 = "name 'json' is not defined"
    var_5 = NameError(str_3)

def test_case_24():
    str_0 = 'george'
    str_1 = 'hello'
    var_0 = dict(george=str_1)
    var_1 = module_0.safe_eval(str_0, var_0)
    str_2 = 'george.upper()'
    var_2 = dict(george=str_1)
    var_3 = module_0.safe_eval(str_2, var_2)
    str_3 = 'george.foo()'
    str_4 = 'bar'
    var_4 = dict(foo=str_4)
    var_5 = dict(george=var_4)
    bool_0 = True
    var_6 = module_0.safe_eval(str_3, var_5, bool_0)
    str_5 = 'george.foo'
    var_7 = dict(foo=str_4)
    var_8 = dict(george=var_7)
    var_9 = module_0.safe_eval(str_5, var_8)
    str_6 = '1 + 1'
    var_10 = dict(foo=str_4)
    var_11 = dict(george=var_10)
    var_12 = module_0.safe_eval(str_6, var_11)
    str_7 = 'import sys'
    var_13 = dict(foo=str_4)
    var_14 = dict(george=var_13)
    var_15 = module_0.safe_eval(str_7, var_14)