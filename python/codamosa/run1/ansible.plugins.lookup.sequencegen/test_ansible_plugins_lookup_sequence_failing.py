# Automatically generated by Pynguin.
import ansible.plugins.lookup.sequence as module_0

def test_case_0():
    try:
        str_0 = 's!V3BP'
        dict_0 = {str_0: str_0}
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(str_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1.5
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.parse_kv_args(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'C'
        var_0 = lookup_module_0.parse_simple_args(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'%w\x14\xc6\xfaB\x0b\x8a\\y\xa4\x8c<\x12`'
        lookup_module_0 = module_0.LookupModule(bytes_0)
        var_0 = lookup_module_0.reset()
        var_1 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, dict_0, dict_0]
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(dict_0, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '5+a'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(str_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.parse_kv_args(dict_0)
        lookup_module_1 = module_0.LookupModule()
        bytes_0 = b's\x8a\x96\xaaj\xcf\x95p\x13\xfe\x8a\xf3\xa2\x9a\xf0\xcdLG\x07\xb6'
        var_1 = lookup_module_1.parse_kv_args(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = None
        str_0 = '0\x0ckt\tR</wLer6'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0, str_0: str_0}
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(str_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start'
        str_1 = 'end'
        str_2 = 'stride'
        str_3 = 'format'
        str_4 = '1'
        str_5 = '10'
        str_6 = '3'
        str_7 = 'f00%02x'
        str_8 = {str_0: str_4, str_1: str_5, str_2: str_6, str_3: str_7}
        var_0 = lookup_module_0.parse_kv_args(str_8)
        lookup_module_1 = module_0.LookupModule()
        str_9 = 'foo'
        str_10 = 'bar'
        str_11 = {str_0: str_4, str_1: str_5, str_2: str_6, str_3: str_7, str_9: str_10}
        var_1 = lookup_module_1.parse_kv_args(str_11)
    except BaseException:
        pass

def test_case_9():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start'
        str_1 = 'end'
        str_2 = 'stride'
        str_3 = 'format'
        str_4 = 'oracle'
        str_5 = '10'
        str_6 = '3'
        str_7 = 'f00%02x'
        str_8 = {str_0: str_4, str_1: str_5, str_2: str_6, str_3: str_7}
        var_0 = lookup_module_0.parse_kv_args(str_8)
    except BaseException:
        pass

def test_case_10():
    try:
        var_0 = None
        str_0 = '5b-8'
        lookup_module_0 = module_0.LookupModule()
        lookup_module_1 = module_0.LookupModule()
        var_1 = lookup_module_0.reset()
        str_1 = [str_0]
        var_2 = lookup_module_1.run(str_1, var_0)
    except BaseException:
        pass