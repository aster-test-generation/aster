# Automatically generated by Pynguin.
import tornado.util as module_0
import builtins as module_1

def test_case_0():
    try:
        object_dict_0 = module_0.ObjectDict()
        var_0 = object_dict_0.repr
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'tornado.missink_module'
        object_dict_0 = module_0.ObjectDict()
        object_dict_0.__setattr__(str_0, str_0)
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'tornado'
        any_0 = module_0.import_object(str_0)
        bytes_0 = b''
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_1 = gzip_decompressor_0.decompress(bytes_0)
        str_1 = 'tornado.escape'
        any_1 = module_0.import_object(str_1)
        object_dict_0 = module_0.ObjectDict()
        str_2 = '_HandlerDelegate'
        arg_replacer_0 = module_0.ArgReplacer(object_dict_0, str_2)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Calls the given callback on the next IOLoop iteration.\n\n        As of Tornado 6.0, this method is equivalent to `add_callback`.\n\n        .. versionadded:: 4.0\n        '
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Gw5x\tAOj!'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        timeout_error_0 = module_0.TimeoutError()
        dict_0 = {}
        module_0.exec_in(timeout_error_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        str_0 = 'ey,d'
        dict_0 = {str_0: str_0, str_0: gzip_decompressor_0, str_0: gzip_decompressor_0, str_0: gzip_decompressor_0}
        tuple_0 = (gzip_decompressor_0, gzip_decompressor_0, dict_0)
        var_0 = module_0.raise_exc_info(tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '9}\\+t-`&n\t32e'
        str_1 = module_0.re_unescape(str_0)
        str_2 = None
        object_dict_0 = module_0.ObjectDict()
        set_0 = {str_1, str_2, str_0}
        gzip_decompressor_0 = module_0.GzipDecompressor()
        var_0 = module_0.raise_exc_info(set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        list_0 = [gzip_decompressor_0]
        timeout_error_0 = module_0.TimeoutError(*list_0)
        str_0 = '-0\t\\-\nN'
        str_1 = module_0.re_unescape(str_0)
        configurable_0 = module_0.Configurable()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'K4\ndR=~hH2'
        arg_replacer_0 = module_0.ArgReplacer(str_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'tornado.missing_module'
        var_0 = module_0.doctests()
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '1'
        dict_0 = {}
        float_0 = 1604.198357
        str_1 = '|.vqV@yIR'
        list_0 = [dict_0, str_1]
        var_0 = module_0.doctests()
        timeout_error_0 = module_0.TimeoutError(*list_0)
        module_0.exec_in(str_0, dict_0, float_0)
    except BaseException:
        pass

def test_case_12():
    try:
        object_dict_0 = module_0.ObjectDict()
        var_0 = module_0.timedelta_to_seconds(object_dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = None
        str_1 = None
        str_2 = 'A'
        float_0 = -0.61
        base_exception_0 = module_1.BaseException()
        sequence_0 = None
        dict_0 = {str_2: float_0, str_1: str_0}
        tuple_0 = (str_2, sequence_0, dict_0)
        var_0 = module_0.raise_exc_info(tuple_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'tornado.missing_module'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        base_exception_0 = module_1.BaseException()
        str_0 = '#"ZhI\\x\n;cM$h\'`R$g'
        str_1 = module_0.re_unescape(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = module_0.doctests()
        str_0 = ')J\nQ0&:Ehkv'
        object_dict_0 = module_0.ObjectDict()
        str_1 = 'func_code'
        object_dict_0.__setattr__(str_1, str_0)
        gzip_decompressor_0 = module_0.GzipDecompressor()
        arg_replacer_0 = module_0.ArgReplacer(object_dict_0, str_0)
    except BaseException:
        pass