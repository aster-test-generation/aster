# Automatically generated by Pynguin.
import httpie.models as module_0
import httpie.output.streams as module_1
import httpie.output.processing as module_2
import httpie.context as module_3

def test_case_0():
    try:
        bytes_0 = b'b&1\x16f\xbfgm\xa54\x9d\xb4\x0c]'
        complex_0 = None
        dict_0 = {bytes_0: complex_0, complex_0: complex_0, complex_0: bytes_0}
        h_t_t_p_message_0 = module_0.HTTPMessage(dict_0)
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0)
        bytes_1 = base_stream_0.get_headers()
    except BaseException:
        pass

def test_case_1():
    try:
        raw_stream_0 = module_1.RawStream()
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        conversion_0 = module_2.Conversion(**dict_0)
        list_0 = []
        formatting_0 = module_2.Formatting(list_0)
        buffered_pretty_stream_0 = module_1.BufferedPrettyStream(conversion_0, formatting_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xd6\x80\x0b\x92\x10\xd3\x9f'
        h_t_t_p_message_0 = module_0.HTTPMessage(bytes_0)
        str_0 = "lj<'x\x0b(^wh"
        dict_0 = {str_0: str_0, str_0: h_t_t_p_message_0, str_0: h_t_t_p_message_0}
        h_t_t_p_message_1 = module_0.HTTPMessage(dict_0)
        list_0 = [h_t_t_p_message_1, str_0]
        data_suppressed_error_0 = module_1.DataSuppressedError(*list_0)
        bool_0 = True
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, data_suppressed_error_0, bool_0)
        iterable_0 = base_stream_0.iter_body()
    except BaseException:
        pass

def test_case_4():
    try:
        environment_0 = module_3.Environment()
        h_t_t_p_message_0 = module_0.HTTPMessage(environment_0)
        dict_0 = {}
        tuple_0 = ()
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, dict_0, tuple_0)
    except BaseException:
        pass