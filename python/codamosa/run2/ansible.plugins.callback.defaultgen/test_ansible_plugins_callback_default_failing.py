# Automatically generated by Pynguin.
import ansible.plugins.callback.default as module_0

def test_case_0():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        bool_0 = False
        bytes_0 = b'\xa4\xf4\xdb\xe0\xdbV\x9a3'
        var_0 = callback_module_0.set_options(bool_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '<saO?mI/\r\\~[YQ2J-_r'
        bool_0 = True
        dict_0 = {bool_0: str_0, str_0: bool_0, str_0: bool_0, bool_0: str_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(bool_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -1505
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_ok(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '9?3y,Bh{Gf=ug'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_unreachable(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        list_0 = None
        var_1 = callback_module_0.v2_playbook_on_cleanup_task_start(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_0.v2_runner_item_on_failed(callback_module_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = module_0.CallbackModule()
        int_0 = 1247
        var_0 = callback_module_0.v2_playbook_on_notify(int_0, callback_module_0)
        str_0 = 'subset'
        var_1 = callback_module_0.v2_playbook_on_task_start(str_0, callback_module_0)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(callback_module_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = '_\rfa66X&Ib\\gh,EGGNf6'
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = 2656.10122
        list_0 = [float_0, float_0, float_0]
        list_1 = [list_0]
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_start(list_1, list_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'm3KbLEv=+#/e6'
        bool_0 = True
        int_0 = 5986
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_notify(bool_0, int_0)
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_playbook_on_play_start(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = -568.0
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_ok(float_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'Y\x044\xa2\xaa\xa9\r\x04\xe2'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_failed(bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        callback_module_1 = module_0.CallbackModule()
        bool_0 = False
        var_1 = callback_module_0.v2_runner_item_on_skipped(bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = 1118.29
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(float_0)
    except BaseException:
        pass

def test_case_15():
    try:
        list_0 = []
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(callback_module_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = "Remove-Item '%s' -Force;"
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_retry(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        dict_0 = {}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_ok(dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0}
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_async_failed(set_0)
    except BaseException:
        pass

def test_case_20():
    try:
        callback_module_0 = module_0.CallbackModule()
        int_0 = 29
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_async_poll(int_0)
    except BaseException:
        pass

def test_case_21():
    try:
        float_0 = 2194.98458
        str_0 = None
        set_0 = {str_0, float_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_skipped(set_0)
    except BaseException:
        pass

def test_case_22():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_on_file_diff(callback_module_0)
    except BaseException:
        pass