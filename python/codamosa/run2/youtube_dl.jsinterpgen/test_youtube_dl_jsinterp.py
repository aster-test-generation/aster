# Automatically generated by Pynguin.
import youtube_dl.jsinterp as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 1038
    j_s_interpreter_0 = module_0.JSInterpreter(int_0)

def test_case_2():
    str_0 = '\n    var youtube = {};\n    var swf = {};\n    var escape = "";\n    var unescape = "";\n    var s = {};\n    var h = {};\n    youtube.swf = function(url) {return swf;}\n    youtube.escape = function(url) {return escape;}\n    youtube.unescape = function(url) {return unescape;}\n    youtube.initials = function(url) {return s;}\n    youtube.hash = function(url) {return h;}\n    youtube.initials(\'youtube\');'
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    str_1 = 'youtube'
    var_0 = j_s_interpreter_0.extract_object(str_1)

def test_case_3():
    str_0 = 'function formula(a,b){ return a+b }'
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    str_1 = 'formula'
    var_0 = j_s_interpreter_0.extract_function(str_1)

def test_case_4():
    bool_0 = True
    j_s_interpreter_0 = module_0.JSInterpreter(bool_0, bool_0)

def test_case_5():
    str_0 = ''
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    var_0 = j_s_interpreter_0.interpret_statement(str_0, j_s_interpreter_0)

def test_case_6():
    str_0 = "function divideBy1(input) {\n                    return input / 1;\n                }\n                console.log('' +%divideBy1(5));"
    int_0 = 2
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    str_1 = 'divideBy1(6)'
    var_0 = j_s_interpreter_0.interpret_expression(str_1, j_s_interpreter_0, int_0)

def test_case_7():
    str_0 = "'&}Cp"
    int_0 = 4
    j_s_interpreter_0 = module_0.JSInterpreter(str_0, int_0)
    str_1 = '1+1'
    var_0 = j_s_interpreter_0.interpret_expression(str_1, int_0, int_0)

def test_case_8():
    int_0 = 19
    str_0 = '()'
    j_s_interpreter_0 = module_0.JSInterpreter(str_0, int_0)
    var_0 = j_s_interpreter_0.interpret_expression(str_0, int_0, int_0)

def test_case_9():
    str_0 = '0'
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    str_1 = 'y'
    int_0 = 2
    int_1 = {str_1: int_0, j_s_interpreter_0: str_1, int_0: str_0}
    str_2 = 'x = 2 + y'
    var_0 = j_s_interpreter_0.interpret_expression(str_2, int_1, int_0)

def test_case_10():
    str_0 = "function divideBy1(input) {\n                    return input / 1;\n                }\n                console.log('' + divideBy1(5));"
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    str_1 = 'a'
    str_2 = 'alphabet'
    str_3 = 'digit'
    str_4 = 'world'
    str_5 = [str_1, str_4]
    int_0 = 1
    var_0 = {str_1: int_0, str_2: str_5, str_3: int_0}
    str_6 = 'alphabet[digit]'
    int_1 = 100
    var_1 = j_s_interpreter_0.interpret_expression(str_6, var_0, int_1)
    j_s_interpreter_1 = module_0.JSInterpreter(str_0)
    str_7 = 'divideBy1(6)'
    var_2 = {}
    var_3 = j_s_interpreter_1.interpret_expression(str_7, var_2, int_1)

def test_case_11():
    str_0 = "function divideBy1(input) {\n          }         return input / 1;\n        \x0c       }\n                console.log('' +%divideBy1(5));"
    int_0 = 2
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    str_1 = 'divideBy1(6)'
    var_0 = j_s_interpreter_0.interpret_expression(str_1, j_s_interpreter_0, int_0)