# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    try:
        str_0 = 'become_success'
        ansible_collection_root_pkg_loader_0 = None
        set_0 = {str_0}
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(set_0)
        var_0 = ansible_collection_finder_0.find_module(ansible_collection_root_pkg_loader_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'q\xeba\xa6\xadJ\xfar\x8c\x15L\x98Z|~'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'k4uf'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ansible_collections'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ansible_collections.hoge'
        str_1 = '/tmp/collections'
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        bytes_0 = b'}'
        var_0 = ansible_collection_finder_0.set_playbook_paths(bytes_0)
        str_0 = 'k"B2M6_F\x0c@DZG\r|{Nl,1'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'ansible_collections.nsible.netcommon'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'ansible.module_utils._text'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'ns.com3l7'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        float_0 = -848.9
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(bool_0, ansible_collection_finder_0, float_0, float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.__repr__()
        var_1 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        bytes_0 = b'B\xfd\x13k\x03\x86\xa9\x875Aj?\x81\xb6\x15'
        dict_0 = {}
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(ansible_collection_pkg_loader_base_0, dict_0)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0, bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'ansiblemodule_utils._text'
        str_1 = [str_0, str_0, str_0, str_0, str_0]
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        ansible_collection_finder_0 = None
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(ansible_collection_finder_0, str_0)
        int_0 = None
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(ansible_path_hook_finder_0, int_0, ansible_collection_pkg_loader_base_0, ansible_collection_pkg_loader_base_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        str_1 = 'C:\\Users\\User1\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packagSs'
        int_0 = 818
        set_0 = {str_1, int_0}
        list_0 = [str_1, set_0]
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(int_0, list_0)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_path_hook_finder_0.iter_modules(ansible_collection_finder_0)
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_1 = ansible_collection_pkg_loader_base_0.get_data(str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'ansible_collections'
        str_1 = 'test_data'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_1)
        str_2 = 'invalid_fullname'
        var_0 = ansible_collection_pkg_loader_base_0.get_source(str_2)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.get_data(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        bool_0 = False
        var_0 = ansible_collection_pkg_loader_base_0.get_data(bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        list_0 = [var_0]
        var_1 = ansible_collection_pkg_loader_base_0.get_filename(list_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        str_1 = 'C:\\Users\\User1\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packagSs'
        int_0 = 818
        set_0 = {str_1, int_0}
        list_0 = [str_1, set_0]
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(int_0, list_0)
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        ansible_collection_ref_0 = None
        dict_0 = {ansible_collection_ref_0: ansible_path_hook_finder_0, ansible_path_hook_finder_0: ansible_collection_pkg_loader_base_0}
        var_0 = ansible_collection_pkg_loader_base_0.is_package(dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'ansible_collections.ansible.netcommon'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        var_0 = []
        bool_0 = False
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(var_0, bool_0)
        str_0 = 'ansible_collections.acme.dev'
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(ansible_collection_finder_0, str_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'ansible_collections.nsible.netcommon'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        list_0 = [ansible_collection_finder_0, ansible_collection_finder_0, ansible_collection_finder_0, str_0]
        var_0 = ansible_collection_finder_0.set_playbook_paths(list_0)
        var_1 = ansible_collection_finder_0.find_module(str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'ansible_collections'
        str_1 = 'ansible_collections.canonical.community.docker'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_1)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = 'ansible_collections.nsible.netcommon'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        var_1 = ansible_collection_pkg_loader_base_0.__repr__()
        str_1 = '8]1Qw`\r~q>75'
        list_0 = [var_1, ansible_collection_pkg_loader_base_0]
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(str_1, list_0)
        var_2 = ansible_path_hook_finder_0.find_module(str_0)
    except BaseException:
        pass