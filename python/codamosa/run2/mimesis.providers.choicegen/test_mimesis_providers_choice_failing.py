# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        bytes_0 = b'-\xc0}'
        bool_0 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = None
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 2487
        choice_0 = module_0.Choice()
        str_0 = '\nSSfz<6?x|!s~I~3ltp'
        bool_0 = True
        list_0 = [bool_0, bool_0]
        var_0 = choice_0.__call__(list_0)
        choice_1 = module_0.Choice()
        var_1 = choice_1.__call__(str_0, bool_0)
        dict_0 = {}
        choice_2 = module_0.Choice(**dict_0)
        sequence_0 = None
        var_2 = choice_1.__call__(sequence_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        tuple_0 = ()
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(tuple_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        choice_0 = module_0.Choice()
        bytes_0 = b'\xbd\xe0vZ_\xdf\x88pOu\xa0\xe0\xf1'
        int_0 = 457
        bool_0 = False
        var_0 = choice_0.__call__(bytes_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        choice_0 = module_0.Choice()
        int_0 = -4032
        list_0 = [bool_0]
        var_0 = choice_0.__call__(list_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Sony Xperia XZ'
        int_0 = 2693
        bool_0 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(str_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b''
        bool_0 = None
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 1033.5600130069558
        str_0 = '%vIlA?nuR'
        choice_0 = module_0.Choice()
        str_1 = "Az\\Ys\n'w8."
        list_0 = [choice_0, float_0, str_0, float_0]
        bool_0 = True
        tuple_0 = (list_0, bool_0)
        tuple_1 = (str_1, str_1, tuple_0, tuple_0)
        int_0 = 8
        var_0 = choice_0.__call__(str_0, int_0)
        var_1 = choice_0.__call__(tuple_1)
        var_2 = choice_0.__call__(str_0)
        dict_0 = {}
        choice_1 = module_0.Choice(**dict_0)
        choice_2 = module_0.Choice()
        bytes_0 = b"\xc8\x0e\x96l\x1e\xab\x1a'1\xe6\xa2\xe4C\xf9\x95\xb1\xe2"
        bool_1 = True
        var_3 = choice_2.__call__(bytes_0, int_0, bool_1)
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = None
        bool_0 = True
        tuple_0 = None
        tuple_1 = (bool_0, tuple_0)
        tuple_2 = (list_0, tuple_1)
        bool_1 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(tuple_2, bool_1)
        list_1 = None
        str_0 = ''
        dict_0 = {str_0: str_0}
        choice_1 = module_0.Choice(*list_1, **dict_0)
    except BaseException:
        pass