# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    try:
        int_0 = -3351
        var_0 = module_0.camel_dict_to_snake_dict(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2562
        float_0 = -717.0
        dict_0 = {int_0: float_0}
        var_0 = module_0.snake_dict_to_camel_dict(dict_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        var_0 = module_0.dict_merge(bool_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        list_0 = [tuple_0]
        var_0 = module_0.recursive_diff(tuple_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
        int_0 = -1257
        dict_0 = {tuple_0: set_0, int_0: int_0}
        var_0 = module_0.dict_merge(set_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        bool_0 = False
        float_0 = 4910.46638
        var_0 = module_0.dict_merge(bool_0, dict_0)
        tuple_0 = (bool_0, float_0, bool_0)
        str_0 = 'z\tXT/.'
        var_1 = module_0.recursive_diff(tuple_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'QEu8 A4_<oW'
        str_1 = 'key2'
        str_2 = ''
        dict_0 = {str_2: str_1, str_0: str_2, str_1: str_2, str_2: str_2}
        dict_1 = {str_1: dict_0, str_1: str_0, str_2: str_0}
        var_0 = module_0.camel_dict_to_snake_dict(dict_1)
        str_3 = 'BKW+?O\rl,e3G+9_x/k'
        var_1 = module_0.snake_dict_to_camel_dict(dict_0, str_3)
        bool_0 = False
        var_2 = module_0.snake_dict_to_camel_dict(bool_0)
        bool_1 = False
        var_3 = module_0.camel_dict_to_snake_dict(dict_0)
        list_0 = [dict_1, str_0, dict_0, str_3]
        var_4 = module_0.dict_merge(bool_1, list_0)
        str_4 = 'key1-2'
        var_5 = module_0.dict_merge(str_4, list_0)
        var_6 = module_0.snake_dict_to_camel_dict(dict_0)
        int_0 = -2501
        var_7 = module_0.dict_merge(int_0, dict_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'QEu8 A4_<oW'
        str_1 = '\tea2'
        str_2 = 'ky1-1'
        dict_0 = {str_2: str_1, str_0: str_2, str_1: str_2, str_2: str_2}
        dict_1 = {str_1: dict_0, str_2: str_0}
        str_3 = '}:qo_A.8%3yR'
        var_0 = module_0.snake_dict_to_camel_dict(dict_0, str_3)
        str_4 = 'key1-2'
        str_5 = 'value1-1'
        str_6 = '\\<5"'
        float_0 = 2927.4324
        tuple_0 = (float_0,)
        var_1 = module_0.dict_merge(str_6, tuple_0)
        str_7 = 'value>1-2'
        str_8 = {str_2: str_5, str_4: str_7}
        str_9 = {str_0: str_1}
        var_2 = module_0.recursive_diff(dict_1, dict_0)
        str_10 = 'keg-'
        str_11 = {str_10: str_8}
        str_12 = {str_0: str_9, str_1: str_11}
        var_3 = module_0.camel_dict_to_snake_dict(dict_0, float_0)
        var_4 = module_0.recursive_diff(str_12, str_12)
        var_5 = module_0.snake_dict_to_camel_dict(dict_0)
        set_0 = set()
        var_6 = module_0.dict_merge(set_0, dict_0)
    except BaseException:
        pass