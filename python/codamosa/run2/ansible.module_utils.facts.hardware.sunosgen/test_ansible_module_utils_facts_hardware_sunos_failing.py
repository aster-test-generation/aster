# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        str_0 = ':h;)8vIEtCk'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'F\xc1A\x01\xc3'
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        sun_o_s_hardware_0 = module_0.SunOSHardware(bool_0)
        var_0 = sun_o_s_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector()
        sun_o_s_hardware_collector_1 = module_0.SunOSHardwareCollector()
        str_0 = 'B.11.31'
        dict_0 = None
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0, dict_0)
        sun_o_s_hardware_1 = module_0.SunOSHardware(sun_o_s_hardware_0)
        float_0 = 1099.0
        sun_o_s_hardware_2 = module_0.SunOSHardware(float_0)
        var_0 = sun_o_s_hardware_2.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        sun_o_s_hardware_0 = module_0.SunOSHardware(bool_0)
        var_0 = sun_o_s_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        tuple_0 = ()
        sun_o_s_hardware_0 = module_0.SunOSHardware(bool_0, tuple_0)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'^\xd4V\xf7\xbd\xedE\x95\xc8\x9c\xe1\xc5\xb9\x02\xbd'
        bytes_1 = b''
        str_0 = '1Q(v,M\n'
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector()
        sun_o_s_hardware_collector_1 = module_0.SunOSHardwareCollector(sun_o_s_hardware_collector_0)
        sun_o_s_hardware_collector_2 = module_0.SunOSHardwareCollector(sun_o_s_hardware_collector_1)
        float_0 = None
        tuple_0 = (float_0,)
        tuple_1 = (bytes_1, str_0, sun_o_s_hardware_collector_2, tuple_0)
        sun_o_s_hardware_0 = module_0.SunOSHardware(tuple_1)
        set_0 = None
        list_0 = [bytes_0, set_0, bytes_0, set_0]
        sun_o_s_hardware_1 = module_0.SunOSHardware(list_0)
        var_0 = sun_o_s_hardware_1.get_cpu_facts(sun_o_s_hardware_0)
    except BaseException:
        pass