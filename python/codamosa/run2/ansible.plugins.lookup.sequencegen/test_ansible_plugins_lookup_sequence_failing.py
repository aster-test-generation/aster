# Automatically generated by Pynguin.
import ansible.plugins.lookup.sequence as module_0

def test_case_0():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '4:host%02d'
        var_0 = lookup_module_0.run(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = None
        int_0 = 896
        lookup_module_0 = module_0.LookupModule(int_0)
        var_0 = lookup_module_0.parse_kv_args(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = None
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.parse_simple_args(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b''
        str_0 = "jOY:WR+lon3'"
        lookup_module_0 = module_0.LookupModule(bytes_0, str_0)
        dict_0 = {str_0: str_0}
        lookup_module_1 = module_0.LookupModule(**dict_0)
        var_0 = lookup_module_1.reset()
        var_1 = lookup_module_1.sanity_check()
    except BaseException:
        pass

def test_case_5():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '4:host%02d'
        str_1 = [str_0, lookup_module_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0]
        var_0 = lookup_module_0.run(str_1, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'a%n~WNL'
        var_0 = lookup_module_0.run(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '2-10/2'
        str_1 = '4:host%02d'
        str_2 = 'count=5'
        str_3 = 'start=0R0f00 count=4 format=%04x'
        str_4 = 'start=0 count=5 stride=2'
        str_5 = [str_0, str_0, str_0, str_1, str_1, str_2, str_3, str_4, str_3]
        var_0 = {}
        var_1 = lookup_module_0.run(str_5, var_0)
    except BaseException:
        pass

def test_case_8():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '4:hos%02'
        str_1 = [str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0]
        var_0 = lookup_module_0.run(str_1, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '0'
        str_1 = [str_0]
        var_0 = {}
        var_1 = lookup_module_0.run(str_1, var_0)
    except BaseException:
        pass

def test_case_10():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '5'
        str_1 = '5-8'
        var_0 = lookup_module_0.reset()
        str_2 = '2-10/2'
        str_3 = '6:M \x0coKs u[Hw0'
        str_4 = 'count=5'
        var_1 = lookup_module_0.reset()
        str_5 = 'start=0x0f00 count=4 format=%04x'
        str_6 = 'start=0 count=5 stride=2'
        str_7 = 'start=1 count=t stLide=2'
        str_8 = [str_0, str_1, str_2, str_0, str_3, str_4, str_5, str_6, str_7]
        var_2 = {}
        var_3 = lookup_module_0.run(str_8, var_2)
    except BaseException:
        pass

def test_case_11():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'f-8'
        str_1 = [str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0]
        var_0 = lookup_module_0.run(str_1, str_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '2-10/D2'
        str_1 = [str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0]
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(str_1, str_0)
    except BaseException:
        pass