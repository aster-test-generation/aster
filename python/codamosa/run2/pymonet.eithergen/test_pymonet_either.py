# Automatically generated by Pynguin.
import pymonet.either as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'R5&rCL+:zY\\LQAMf'
    either_0 = module_0.Either(str_0)
    var_0 = either_0.to_lazy()

def test_case_2():
    var_0 = None
    right_0 = module_0.Right(var_0)
    object_0 = module_1.object()
    either_0 = module_0.Either(var_0)
    bool_0 = either_0.__eq__(object_0)

def test_case_3():
    list_0 = []
    str_0 = '9v)_\tTo=}U-"045No'
    dict_0 = {str_0: list_0}
    float_0 = -3230.8
    left_0 = module_0.Left(float_0)
    var_0 = left_0.ap(dict_0)
    callable_0 = None
    var_1 = left_0.map(callable_0)
    left_1 = module_0.Left(list_0)
    list_1 = [left_1]
    right_0 = module_0.Right(list_1)

def test_case_4():
    str_0 = 'A'
    left_0 = module_0.Left(str_0)
    right_0 = module_0.Right(str_0)
    var_0 = left_0 == right_0
    left_1 = module_0.Left(str_0)
    left_2 = module_0.Left(str_0)
    var_1 = left_1 == left_2
    right_1 = module_0.Right(str_0)
    right_2 = module_0.Right(str_0)
    var_2 = right_1 == right_2

def test_case_5():
    str_0 = 'A'
    left_0 = module_0.Left(str_0)
    var_0 = left_0.to_maybe()
    right_0 = module_0.Right(str_0)
    var_1 = left_0 == right_0
    left_1 = module_0.Left(str_0)
    left_2 = module_0.Left(str_0)
    var_2 = left_1 == left_2
    right_1 = module_0.Right(str_0)
    right_2 = module_0.Right(str_0)
    var_3 = right_1 == right_2

def test_case_6():
    object_0 = None
    float_0 = 1145.1
    either_0 = module_0.Either(float_0)
    bool_0 = either_0.__eq__(object_0)
    object_1 = module_1.object()
    str_0 = '\n        Take function (A) -> B and applied this function on current Validation value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new Validation with mapped value and previous errors\n        :rtype: Validation[B, List[E]]\n        '
    left_0 = module_0.Left(str_0)
    dict_0 = {object_0: object_1, bool_0: object_0}
    left_1 = module_0.Left(dict_0)
    var_0 = left_0.to_validation()

def test_case_7():
    str_0 = 'N_ )nbGD_ o$qa!'
    right_0 = module_0.Right(str_0)
    bool_0 = right_0.is_left()

def test_case_8():
    int_0 = 5
    left_0 = module_0.Left(int_0)
    left_1 = module_0.Left(int_0)
    left_2 = module_0.Left(int_0)
    int_1 = 3
    left_3 = module_0.Left(int_1)
    var_0 = left_2 == left_3
    right_0 = module_0.Right(int_0)
    right_1 = module_0.Right(int_0)
    right_2 = module_0.Right(int_0)
    right_3 = module_0.Right(int_1)
    var_1 = right_2 == right_3
    left_4 = module_0.Left(int_0)
    var_2 = left_4 == int_0
    right_4 = module_0.Right(int_0)
    var_3 = right_4 == int_0
    left_5 = module_0.Left(int_0)
    right_5 = module_0.Right(int_0)
    var_4 = left_5 == right_5
    right_6 = module_0.Right(int_0)
    left_6 = module_0.Left(int_0)
    var_5 = right_6 == left_6
    left_7 = module_0.Left(int_0)
    var_6 = lambda : int_0
    right_7 = module_0.Right(int_0)
    var_7 = lambda : int_0