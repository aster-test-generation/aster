# Automatically generated by Pynguin.
import youtube_dl.swfinterp as module_0

def test_case_0():
    try:
        bytes_0 = b'\x17\x14"\xdc\x0c\xf7\xd26'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        str_1 = "'#{5N`DzMmOweZ!nl"
        float_0 = -624.166
        a_v_m_class__object_0 = module_0._AVMClass_Object(float_0)
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
        scope_dict_0 = module_0._ScopeDict(dict_0)
        a_v_m_class__object_1 = module_0._AVMClass_Object(scope_dict_0)
        var_0 = a_v_m_class__object_1.__repr__()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -3556.147
        scope_dict_0 = module_0._ScopeDict(float_0)
        var_0 = scope_dict_0.__repr__()
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        list_0 = [dict_0]
        a_v_m_class__object_0 = module_0._AVMClass_Object(list_0)
        a_v_m_class_0 = module_0._AVMClass(dict_0, a_v_m_class__object_0, dict_0)
        var_0 = a_v_m_class_0.make_object()
        str_0 = 'likes'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'U}'
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__bool__()
        a_v_m_class_0 = module_0._AVMClass(str_0, undefined_0)
        var_1 = a_v_m_class_0.__repr__()
        set_0 = {a_v_m_class_0, undefined_0}
        scope_dict_0 = module_0._ScopeDict(set_0)
        s_w_f_interpreter_0 = module_0.SWFInterpreter(scope_dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = set()
        str_0 = ")'xg6K#U\\c+"
        bytes_0 = b'\xadw\xd7\tz\x87\x01\x83\x90r\xb3'
        a_v_m_class_0 = module_0._AVMClass(str_0, bytes_0)
        var_0 = a_v_m_class_0.register_methods(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        multiname_0 = module_0._Multiname(bool_0)
        var_0 = multiname_0.__repr__()
        multiname_1 = module_0._Multiname(multiname_0)
        str_0 = None
        tuple_0 = (multiname_0,)
        a_v_m_class_0 = module_0._AVMClass(tuple_0, str_0)
        bytes_0 = b'\x17\x14:\xdc\x0c\xf76'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__str__()
        a_v_m_class__object_0 = module_0._AVMClass_Object(undefined_0)
        var_1 = undefined_0.__bool__()
        var_2 = undefined_0.__bool__()
        var_3 = undefined_0.__hash__()
        int_0 = 887
        scope_dict_0 = module_0._ScopeDict(int_0)
        var_4 = a_v_m_class__object_0.__repr__()
    except BaseException:
        pass

def test_case_8():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__str__()
        str_0 = 'likes'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        multiname_0 = module_0._Multiname(bool_0)
        var_0 = multiname_0.__repr__()
        str_0 = None
        dict_0 = {}
        tuple_0 = (multiname_0,)
        a_v_m_class_0 = module_0._AVMClass(tuple_0, str_0)
        var_1 = a_v_m_class_0.register_methods(dict_0)
        bytes_0 = b'\x17\x14:\xdc\x0c\xf76'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        a_v_m_class__object_0 = module_0._AVMClass_Object(list_0)
        multiname_0 = module_0._Multiname(a_v_m_class__object_0)
        multiname_1 = module_0._Multiname(bool_0)
        var_0 = multiname_1.__repr__()
        multiname_2 = module_0._Multiname(multiname_1)
        str_0 = None
        dict_0 = {str_0: multiname_2}
        tuple_0 = (multiname_1,)
        a_v_m_class_0 = module_0._AVMClass(tuple_0, str_0)
        var_1 = a_v_m_class_0.register_methods(dict_0)
        bytes_0 = b'\x17\x14:\xdc\x0c\xf76'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '`n H>'
        multiname_0 = module_0._Multiname(str_0)
        list_0 = [multiname_0]
        bytes_0 = b'M\xd5\x8a\n\x9bz9\xdf)"\xe6\x81\xc4\xb7\xba'
        multiname_1 = module_0._Multiname(bytes_0)
        str_1 = '_JJ%4+"a;8lO'
        dict_0 = {str_1: str_1}
        set_0 = set()
        tuple_0 = ()
        str_2 = 'wg;i/Ww5tpeM!3m'
        a_v_m_class__object_0 = module_0._AVMClass_Object(str_2)
        a_v_m_class_0 = module_0._AVMClass(set_0, tuple_0, a_v_m_class__object_0)
        scope_dict_0 = module_0._ScopeDict(a_v_m_class_0)
        var_0 = scope_dict_0.__repr__()
        undefined_0 = module_0._Undefined(*list_0, **dict_0)
    except BaseException:
        pass