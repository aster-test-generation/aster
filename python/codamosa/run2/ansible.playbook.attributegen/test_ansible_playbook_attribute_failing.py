# Automatically generated by Pynguin.
import ansible.playbook.attribute as module_0

def test_case_0():
    try:
        str_0 = 'list'
        set_0 = {str_0, str_0}
        attribute_0 = module_0.Attribute(str_0, set_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        attribute_0 = None
        float_0 = 1805.90817
        bytes_0 = b'\xd9\xc7\x1e3\x08\xfd0\xe6'
        attribute_1 = module_0.Attribute(float_0, bytes_0, float_0)
        var_0 = attribute_1.__eq__(attribute_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xdb\xdb\xff>\x15\x7f\x9c\x9b\xae\xb6\xa3#\xd8\xaa#\xb9z:'
        float_0 = -1199.57
        list_0 = [float_0, bytes_0, float_0, float_0]
        attribute_0 = module_0.Attribute(bytes_0, float_0, list_0)
        bool_0 = True
        var_0 = attribute_0.__ne__(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        str_0 = 'terminal'
        float_0 = -2551.4
        dict_0 = {float_0: float_0, float_0: float_0, float_0: str_0, float_0: str_0}
        attribute_0 = module_0.Attribute(str_0, float_0, dict_0)
        var_0 = attribute_0.__lt__(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x02\xa1\xa8\xda'
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        str_0 = '-&EObeE.Lt6(\tqNd\x0c'
        bytes_1 = b'\xf8\xad\xd0\xaf\x15'
        dict_0 = {str_0: bytes_1}
        tuple_0 = (dict_0, str_0)
        attribute_0 = module_0.Attribute(str_0, bytes_1, tuple_0)
        bool_0 = True
        field_attribute_0 = module_0.FieldAttribute(bool_0)
        var_0 = attribute_0.__gt__(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = None
        bool_0 = True
        tuple_1 = (tuple_0, bool_0)
        str_0 = '9xs*Zh#'
        str_1 = '(bn{!}*kBtWt=kB_J1_'
        list_0 = [str_1, str_0, str_1]
        tuple_2 = ()
        int_0 = 758
        complex_0 = None
        tuple_3 = (tuple_2, int_0, complex_0)
        attribute_0 = module_0.Attribute(str_0, str_1, list_0, tuple_3)
        var_0 = attribute_0.__le__(tuple_1)
    except BaseException:
        pass

def test_case_6():
    try:
        complex_0 = None
        int_0 = 875
        bytes_0 = b'\xa5'
        bool_0 = True
        attribute_0 = module_0.Attribute(int_0, bytes_0, bool_0)
        var_0 = attribute_0.__ge__(complex_0)
    except BaseException:
        pass