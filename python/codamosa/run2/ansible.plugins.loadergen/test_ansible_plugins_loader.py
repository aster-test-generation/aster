# Automatically generated by Pynguin.
import ansible.plugins.loader as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    var_0 = module_0.add_all_plugin_dirs(bool_0)

def test_case_2():
    plugin_load_context_0 = module_0.PluginLoadContext()
    str_0 = '5'
    dict_0 = {plugin_load_context_0: str_0, plugin_load_context_0: str_0, str_0: plugin_load_context_0}
    plugin_load_context_1 = module_0.PluginLoadContext()
    str_1 = ''
    tuple_0 = (str_1,)
    float_0 = 0.0
    int_0 = 1741
    list_0 = []
    plugin_loader_0 = module_0.PluginLoader(plugin_load_context_1, tuple_0, float_0, int_0, list_0)
    var_0 = plugin_loader_0.has_plugin(dict_0)

def test_case_3():
    plugin_load_context_0 = module_0.PluginLoadContext()
    str_0 = ';'
    set_0 = None
    var_0 = module_0.get_shell_plugin(set_0, str_0)

def test_case_4():
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = None
    plugin_load_context_1 = module_0.PluginLoadContext()
    int_0 = 384
    str_0 = '_cuj e(RJ%|2\\n'
    str_1 = 'Bj">Fp}\rJ$dU'
    str_2 = None
    str_3 = ';eh4:l,{Z8'
    dict_0 = {}
    dict_1 = {str_2: bool_0, str_1: plugin_load_context_1, str_2: int_0, str_1: str_0, str_2: str_0, str_3: dict_0}
    tuple_0 = (dict_1,)
    bytes_0 = b'\xf4\xfdy\x1d'
    plugin_path_context_0 = module_0.PluginPathContext(bytes_0, bytes_0)
    plugin_loader_0 = module_0.PluginLoader(plugin_load_context_1, int_0, str_0, tuple_0, plugin_path_context_0)
    set_0 = None
    set_1 = None
    var_0 = plugin_loader_0.has_plugin(set_0, set_1)
    str_4 = ''
    var_1 = plugin_load_context_0.nope(str_4)
    set_2 = set()
    var_2 = module_0.get_shell_plugin(set_2, plugin_load_context_0)

def test_case_5():
    plugin_load_context_0 = module_0.PluginLoadContext()
    plugin_load_context_1 = module_0.PluginLoadContext()
    str_0 = ''
    var_0 = plugin_load_context_0.nope(str_0)
    set_0 = set()
    var_1 = module_0.get_shell_plugin(set_0, plugin_load_context_0)

def test_case_6():
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = None
    int_0 = 351
    str_0 = '_cuj e(RJ%|2\\n'
    str_1 = ';eh4:l,{Z8'
    dict_0 = {}
    dict_1 = {str_1: bool_0, str_1: plugin_load_context_0, str_1: int_0, str_1: str_0, str_1: dict_0}
    tuple_0 = (dict_1,)
    bytes_0 = b'\xf4\xfdy\x1d'
    plugin_path_context_0 = module_0.PluginPathContext(bytes_0, bytes_0)
    plugin_loader_0 = module_0.PluginLoader(plugin_load_context_0, int_0, str_0, tuple_0, plugin_path_context_0, str_0)
    float_0 = 79.0653485538337
    bytes_1 = b'\xb7Jv\xbbr[\n\x96\xe6\xac\xf3+'
    str_2 = '/hoe/myeongsoo/astIr-py-cli/test-apps/ansible/lib/ansible/plugins/shell/windows'
    dict_2 = {str_1: str_1, str_1: str_1, str_2: str_1}
    get_with_context_result_0 = None
    jinja2_loader_0 = module_0.Jinja2Loader(bytes_1, dict_2, plugin_load_context_0, get_with_context_result_0)
    list_0 = [float_0, plugin_path_context_0]
    plugin_loader_1 = module_0.PluginLoader(jinja2_loader_0, get_with_context_result_0, bytes_0, list_0, plugin_loader_0)
    var_0 = plugin_loader_1.has_plugin(str_2, dict_0)

def test_case_7():
    plugin_load_context_0 = module_0.PluginLoadContext()
    str_0 = 'K'
    set_0 = None
    var_0 = module_0.get_shell_plugin(set_0, str_0)
    bytes_0 = b'\xb7Jc\xbb\xbb\n\x96\xe6\xac\xf3+\\_'
    str_1 = '3\n'
    dict_0 = {str_1: str_1}
    get_with_context_result_0 = None
    var_1 = module_0.add_all_plugin_dirs(plugin_load_context_0)
    list_0 = [var_1]
    jinja2_loader_0 = module_0.Jinja2Loader(bytes_0, dict_0, plugin_load_context_0, get_with_context_result_0)
    var_2 = plugin_load_context_0.record_deprecation(jinja2_loader_0, set_0, get_with_context_result_0)
    str_2 = 'ke9%#r\t@~@DT?1\\"X\\h6'
    str_3 = 'EMbtTc{>7K0\n4Ywx"OZZ'
    bool_0 = False
    plugin_loader_0 = module_0.PluginLoader(bool_0, jinja2_loader_0, get_with_context_result_0, list_0, dict_0)
    var_3 = plugin_loader_0.has_plugin(str_2, str_3)

def test_case_8():
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = None
    plugin_load_context_1 = module_0.PluginLoadContext()
    int_0 = 363
    str_0 = '_cuj e(RJ%|2\\n'
    str_1 = 'Bj">Fp}\rJ$dU'
    str_2 = None
    str_3 = ';eh4:l,{Z8'
    dict_0 = {}
    dict_1 = {str_2: bool_0, str_1: plugin_load_context_1, str_2: int_0, str_1: str_0, str_2: str_0, str_3: dict_0}
    tuple_0 = (dict_1,)
    bytes_0 = b'\xf4\xfdy\x1d'
    plugin_path_context_0 = module_0.PluginPathContext(bytes_0, bytes_0)
    plugin_loader_0 = module_0.PluginLoader(plugin_load_context_1, int_0, str_0, tuple_0, plugin_path_context_0, str_2)
    set_0 = None
    set_1 = None
    var_0 = plugin_loader_0.has_plugin(set_0, set_1)
    var_1 = plugin_load_context_0.nope(str_1)
    set_2 = set()
    var_2 = module_0.get_shell_plugin(set_2, plugin_load_context_0)
    bytes_1 = b'\xb7Jv\xbb\xbbp\n\x96\xe6\xac\xf3+\\_'
    str_4 = '.ta~&e*3Mf}Q'
    str_5 = '/home/myeongsoo/aster-py-cli/test-apps/ansible/lib/ansible/plugins/shell/windows'
    dict_2 = {str_1: str_1, str_4: str_4, str_5: str_1}
    get_with_context_result_0 = None
    jinja2_loader_0 = module_0.Jinja2Loader(bytes_1, dict_2, plugin_load_context_0, get_with_context_result_0)
    bytes_2 = b'\xa0a\x06\xdfk\x97C$'
    list_0 = [str_1]
    plugin_loader_1 = module_0.PluginLoader(jinja2_loader_0, get_with_context_result_0, bytes_2, list_0, plugin_loader_0)
    var_3 = plugin_loader_1.has_plugin(str_0, dict_0)

def test_case_9():
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = None
    int_0 = 363
    str_0 = '_cuj e(RJ%|2\\n'
    str_1 = 'Bj">Fp}\rJ$dU'
    str_2 = None
    str_3 = ';eh4:l,{Z8'
    dict_0 = {}
    dict_1 = {str_2: bool_0, str_1: plugin_load_context_0, str_2: int_0, str_1: str_0, str_2: str_0, str_3: dict_0}
    tuple_0 = (dict_1,)
    bytes_0 = b'\xf4\xfdy\x1d'
    plugin_path_context_0 = module_0.PluginPathContext(bytes_0, bytes_0)
    plugin_loader_0 = module_0.PluginLoader(plugin_load_context_0, int_0, str_0, tuple_0, plugin_path_context_0, str_2)
    set_0 = None
    str_4 = 'H?fC^U\x0c\\_\nkT'
    var_0 = plugin_load_context_0.resolve(plugin_path_context_0, dict_1, plugin_loader_0, str_4)
    set_1 = None
    var_1 = plugin_loader_0.has_plugin(set_0, set_1)
    var_2 = plugin_load_context_0.nope(str_1)
    set_2 = set()
    var_3 = module_0.get_shell_plugin(set_2, plugin_load_context_0)
    bytes_1 = b'\xb7Jv\xbb\xbbp\n\x96\xe6\xac\xf3+\\_'
    str_5 = '.ta~&e*3Mf}Q'
    str_6 = '/hoe/myeongsoo/astIr-py-cli/test-apps/ansible/lib/ansible/plugins/shell/windows'
    dict_2 = {str_1: str_1, str_5: str_5, str_6: str_1}
    get_with_context_result_0 = None
    list_0 = []
    plugin_path_context_1 = module_0.PluginPathContext(list_0, bytes_0)
    jinja2_loader_0 = module_0.Jinja2Loader(bytes_1, dict_2, plugin_load_context_0, get_with_context_result_0)
    list_1 = [str_1]
    plugin_loader_1 = module_0.PluginLoader(jinja2_loader_0, get_with_context_result_0, bytes_0, list_1, plugin_loader_0)
    str_7 = '/home/myeongsoo/aster-py-cli/test-apps/ansible/lib/ansible/plugins/shell/windows'
    dict_3 = {plugin_load_context_0: tuple_0, plugin_path_context_0: var_2, set_0: str_5, var_2: str_7}
    var_4 = plugin_loader_0.__setstate__(dict_3)
    str_8 = '%(fI$&m2X\\xk\x0cUv}FW='
    var_5 = plugin_loader_1.has_plugin(str_8, dict_0)

def test_case_10():
    plugin_load_context_0 = module_0.PluginLoadContext()
    plugin_load_context_1 = module_0.PluginLoadContext()
    str_0 = None
    dict_0 = {}
    bytes_0 = b'\xf4\xfdy\x1d'
    plugin_path_context_0 = module_0.PluginPathContext(bytes_0, bytes_0)
    list_0 = [str_0, str_0]
    get_with_context_result_0 = module_0.get_with_context_result(*list_0)
    list_1 = []
    jinja2_loader_0 = module_0.Jinja2Loader(get_with_context_result_0, dict_0, list_1, plugin_path_context_0)
    var_0 = jinja2_loader_0.all(*list_0)

def test_case_11():
    bool_0 = True
    tuple_0 = (bool_0,)
    str_0 = 'T@$"s\'J'
    set_0 = set()
    dict_0 = {str_0: tuple_0}
    str_1 = 'HKhc8$PAm!'
    plugin_load_context_0 = module_0.PluginLoadContext()
    var_0 = plugin_load_context_0.record_deprecation(set_0, dict_0, str_1)
    var_1 = module_0.add_all_plugin_dirs(bool_0)

def test_case_12():
    str_0 = 'ansible.filters'
    str_1 = '$Hl'
    str_2 = ''
    plugin_loader_0 = module_0.PluginLoader(str_1, str_0, str_0, str_1, str_2, str_1)
    str_3 = 'community.general.azcollection_azure_rm_virtualmachine_facts'
    var_0 = plugin_loader_0.get_with_context(str_3)