# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        bool_0 = True
        var_0 = module_0.to_ipv6_network(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        var_0 = module_0.is_netmask(bool_0)
        str_0 = 'oH]p(\x0c(:iwxOc\\\rH;EXc'
        var_1 = module_0.to_subnet(str_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 384
        var_0 = module_0.to_netmask(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '172.16.1.1'
        var_0 = module_0.to_subnet(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '172.16.1.1'
        str_1 = '255.255.255.0'
        var_0 = module_0.to_subnet(str_0, str_1)
        int_0 = 4096
        var_1 = module_0.to_ipv6_subnet(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -139.3
        var_0 = module_0.to_ipv6_subnet(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ']Xg"fJ<VjTR#'
        var_0 = module_0.to_bits(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = None
        var_0 = module_0.is_mac(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 569
        str_0 = 'module_args'
        set_0 = {str_0, int_0, int_0, int_0}
        dict_0 = {int_0: set_0, str_0: str_0}
        var_0 = module_0.to_subnet(set_0, dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = -405.5625
        var_0 = module_0.to_subnet(float_0, float_0)
    except BaseException:
        pass