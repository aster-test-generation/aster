# Automatically generated by Pynguin.
import pymonet.monad_try as module_0

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'2u?\xf8t\x7f\xb1\xcc7'
    bool_0 = False
    try_0 = module_0.Try(bytes_0, bool_0)

def test_case_2():
    dict_0 = {}
    bool_0 = False
    try_0 = module_0.Try(dict_0, bool_0)
    set_0 = {bool_0}
    var_0 = try_0.map(set_0)
    bool_1 = True
    var_1 = try_0.filter(bool_1)
    str_0 = 'fPi'
    bool_2 = try_0.__eq__(str_0)

def test_case_3():
    float_0 = 9.0
    bool_0 = False
    try_0 = module_0.Try(float_0, bool_0)
    bytes_0 = b'\xd4,!'
    var_0 = try_0.filter(bytes_0)
    str_0 = try_0.__str__()

def test_case_4():
    float_0 = 2596.6
    list_0 = [float_0, float_0]
    float_1 = 3148.8
    bool_0 = False
    try_0 = module_0.Try(float_1, bool_0)
    var_0 = try_0.map(list_0)

def test_case_5():
    bool_0 = None
    dict_0 = {}
    bool_1 = False
    try_0 = module_0.Try(dict_0, bool_1)
    set_0 = {bool_1}
    var_0 = try_0.map(set_0)
    bool_2 = True
    var_1 = try_0.filter(bool_2)
    var_2 = try_0.bind(bool_0)

def test_case_6():
    dict_0 = {}
    bool_0 = False
    try_0 = module_0.Try(dict_0, bool_0)
    float_0 = -660.00228
    set_0 = {float_0, float_0}
    bool_1 = False
    try_1 = module_0.Try(set_0, bool_1)
    var_0 = try_1.on_success(try_0)

def test_case_7():
    str_0 = "`:RF\x0cMDi:Vls-<-(8'\n\t"
    bytes_0 = b'2u?\xf8t\x7f\xb1\xcc7'
    bool_0 = False
    try_0 = module_0.Try(bytes_0, bool_0)
    var_0 = try_0.filter(str_0)

def test_case_8():
    bool_0 = False
    try_0 = module_0.Try(bool_0, bool_0)
    var_0 = try_0.get()

def test_case_9():
    float_0 = -767.45034
    list_0 = [float_0, float_0, float_0, float_0]
    bool_0 = True
    try_0 = module_0.Try(list_0, bool_0)
    tuple_0 = (try_0,)
    int_0 = True
    bool_1 = False
    try_1 = module_0.Try(int_0, bool_1)
    var_0 = try_1.get_or_else(tuple_0)

def test_case_10():
    str_0 = 'some'
    bool_0 = True
    try_0 = module_0.Try(str_0, bool_0)
    str_1 = 'none'
    bool_1 = False
    try_1 = module_0.Try(str_1, bool_1)
    var_0 = lambda x: bool(x)
    var_1 = try_0.filter(var_0)
    var_2 = lambda x: bool(x)
    var_3 = try_1.filter(var_2)

def test_case_11():
    bytes_0 = b''
    float_0 = -1552.13
    bool_0 = False
    try_0 = module_0.Try(float_0, bool_0)
    try_1 = module_0.Try(try_0, bool_0)
    str_0 = try_1.__str__()
    int_0 = 103
    try_2 = module_0.Try(int_0, bool_0)
    bool_1 = try_2.__eq__(try_0)
    set_0 = set()
    bool_2 = False
    try_3 = module_0.Try(set_0, bool_2)
    var_0 = try_2.map(bytes_0)
    var_1 = try_3.get_or_else(bytes_0)
    str_1 = try_3.__str__()
    bool_3 = False
    var_2 = try_1.map(bool_3)
    var_3 = try_1.get_or_else(int_0)
    bytes_1 = b'Z"\xc4$X\xbcV\xcc\x8e\xb9c\x95\x9d\x11'
    dict_0 = None
    var_4 = try_3.filter(dict_0)
    bool_4 = try_0.__eq__(bytes_1)