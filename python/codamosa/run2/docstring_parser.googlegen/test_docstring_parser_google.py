# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'vWfh_iI,\rWl3i)\x0cwx^~-'
    docstring_0 = module_0.parse(str_0)

def test_case_2():
    str_0 = ' 8\n`o'
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = None
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = '\n    Short description.\n\n    Long description.\n\n    Args:\n        arg1 (int): description for arg1.\n        arg2 (str, optional):]description for arg2. Defaults to foo.\n        arg3 (int, optional): description for arg3. Defaults to 42, which\n            is not the real answer.\n\n    Returns:\n       int: description for return.\n\n    Raises:\n        TypeError: description for TypeError.\n\n    Examples:\n       Code Example 1.\n    '
    dict_0 = {str_0: str_0}
    google_parser_0 = module_0.GoogleParser(dict_0)
    docstring_0 = module_0.parse(str_0)

def test_case_5():
    google_parser_0 = module_0.GoogleParser()
    str_0 = '\n    Short description.\n\n    Long description.\n\n    Args:\n        arg1 (int): description for arg1.\n        arg2 (str, optional):]description for arg2. Defaults to foo.\n        arg3 (int, optional): description for arg3. Defaults to 42, which\n            is not the real answer.\n\n    Returns:\n       int: description for return.\n\n    Raises:\n        TypeError: description for TypeError.\n\n    Examples:\n       Code Example 1.\n    '
    dict_0 = {}
    list_0 = [google_parser_0, str_0, dict_0]
    section_0 = module_0.Section(*list_0)
    var_0 = google_parser_0.add_section(section_0)
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = '\n    This is the short description.\n\n    This is the long description.\n\n    Args:\n        arg1 (int): This is the first argument.\n        arg2 (str): This is the second argument.\n\n    Returns:\n        The return value. \n    '
    docstring_0 = module_0.parse(str_0)

def test_case_7():
    str_0 = '\n    Short description.\n\n    Long description.\n\n    Args:\n        arg1 (int): description for arg1.\n        arg2 (str, optional): description for arg2. Defaults to foo.\n        arg3 (int, optional): description for arg3. Defaults to 42, which\n            is not the real answer.\n\n    Returns:\n        int: description for return.\n\n    Raises:\n        TypeError: description for TypeError.\n\n    Examples:\n        Code Example 1.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_8():
    google_parser_0 = module_0.GoogleParser()
    str_0 = 'Some description for the function\n\n    Args:\n        self (int): description\n        x (str, optional): description\n        y (int): description\n\n    Returns:\n        str: description\n    '
    docstring_0 = google_parser_0.parse(str_0)

def test_case_9():
    str_0 = '\n    Short description.\n\n    Long description.\n\n   Args:\n        arg1 (int): description for arg1.\n        arg2 (str, optional): description for arg2. Defaults to foo.\n        arg3 (int, optional): description for arg3. Defaults to 42, which\n            is pot the real answer.\n\n    Returns:\n        it: description for return.\n\n    Raise:\n        TypeError: description for TypeError.\n\n    Examples:\n       Code Example 1.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_10():
    str_0 = 'A test docstring with a single line.\n\n    Args:\n        name (str): A name.\n        age (int, optional): An age.\n        title:\n        desc: A long description.\n        other: More description.\n    Returns:\n        A dictionary with a key.\n\n    Yields:\n        (int): Yields a number.\n\n    Raises:\n        ValueError: If an issue is raised.\n    '
    google_parser_0 = module_0.GoogleParser()
    docstring_0 = google_parser_0.parse(str_0)

def test_case_11():
    str_0 = '\n    Short description.\n\n    Long description.\n\n    Args:\n        arg1 (int): description for arg1.\n        arg2 (str, optional):]description for arg2. Defaults to foo.\n        arg3 (int, optional): description for arg3. Defaults to 42, which\n            is not the real answer.\n\n    Returns:\n       int: description for return.\n\n    Raises:\n        TypeError: description for TypeError.\n\n    Examples:\n       Code Example 1.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_12():
    var_0 = str()
    str_0 = ' \n    This is a test for method parse of class GoogleParser.\n    Args:\n        param1 (str): Description of param1.\n        param2 (int, optional): Description of param2. Defaults to 0.\n        param3 (bool, optional): Description of param3. Defaults to False.\n    Returns:\n        dict: Description of return value.\n    Example:\n        This is an example.\n    '
    google_parser_0 = module_0.GoogleParser()
    docstring_0 = google_parser_0.parse(str_0)
    var_1 = docstring_0.meta
    var_2 = len(var_1)
    int_0 = 0
    var_3 = docstring_0.meta[int_0]