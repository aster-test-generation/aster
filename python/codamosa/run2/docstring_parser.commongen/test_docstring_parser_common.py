# Automatically generated by Pynguin.
import docstring_parser.common as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = None
    list_0 = [str_0]
    bool_0 = False
    docstring_returns_0 = module_0.DocstringReturns(list_0, str_0, str_0, bool_0)

def test_case_2():
    str_0 = '3;B6CBvgZl]tG\n(D_'
    str_1 = "u\r'&"
    str_2 = ''
    list_0 = [str_0, str_1, str_1, str_2]
    str_3 = None
    float_0 = 642.9
    docstring_param_0 = module_0.DocstringParam(list_0, str_2, str_3, str_0, float_0, str_3)

def test_case_3():
    str_0 = '(\x0c'
    str_1 = 'k|a\x0bpU]n9{j'
    list_0 = [str_0, str_0, str_1]
    docstring_deprecated_0 = module_0.DocstringDeprecated(list_0, str_1, str_0)
    str_2 = 'Attribute'
    str_3 = None
    list_1 = [str_2, str_3, str_3]
    docstring_meta_0 = module_0.DocstringMeta(list_1, str_3)

def test_case_4():
    parse_error_0 = module_0.ParseError()
    docstring_0 = module_0.Docstring()
    str_0 = 'Parse the ReST-style docstring into its components.\n\n    :returns: parsed docstring\n    '
    list_0 = [str_0]
    none_type_0 = None
    str_1 = '^(?P<name>.*?)(?:\\s*:\\s*(?P<type>.*?))?$'
    bool_0 = True
    docstring_returns_0 = module_0.DocstringReturns(list_0, none_type_0, str_1, bool_0, str_0)
    bool_1 = None
    docstring_param_0 = module_0.DocstringParam(list_0, str_0, str_0, str_0, bool_1, str_0)
    docstring_1 = module_0.Docstring()