# Automatically generated by Pynguin.
import isort.exceptions as module_0
import builtins as module_1

def test_case_0():
    try:
        str_0 = None
        invalid_settings_path_0 = module_0.InvalidSettingsPath(str_0)
        str_1 = '5J'
        existing_syntax_errors_0 = module_0.ExistingSyntaxErrors(str_1)
        introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_0)
        type_0 = module_1.type()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '.wDm6!I4ATkJdo'
        existing_syntax_errors_0 = module_0.ExistingSyntaxErrors(str_0)
        str_1 = "Pf\nwjP8y~p 'KH.9-\tb"
        missing_section_0 = module_0.MissingSection(str_0, str_1)
        str_2 = '$e 639*nK\x0bFDI&'
        file_skip_setting_0 = module_0.FileSkipSetting(str_2)
        list_0 = [str_1]
        dict_0 = None
        existing_syntax_errors_1 = module_0.ExistingSyntaxErrors(str_1)
        i_sort_error_0 = module_0.ISortError(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '8\x0cEm@CGy'
        str_1 = 'ISORT'
        str_2 = '.\'"M'
        dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0, str_0: str_1}
        dict_1 = {str_0: dict_0, str_0: dict_0}
        unsupported_settings_0 = module_0.UnsupportedSettings(dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'A"G!-jY?5_Pay\np~}'
        dict_0 = {}
        exception_0 = module_1.Exception(**dict_0)
        unsupported_encoding_0 = module_0.UnsupportedEncoding(str_0)
        literal_parsing_failure_0 = module_0.LiteralParsingFailure(str_0, exception_0)
        str_1 = 'vjOIbqO.1o\n0'
        unsupported_encoding_1 = module_0.UnsupportedEncoding(str_1)
        str_2 = 'dhAKM*QAV@{t-DD-'
        missing_section_0 = module_0.MissingSection(str_1, str_2)
        missing_section_1 = module_0.MissingSection(str_0, str_2)
        str_3 = 'LOCAL_FOLDER'
        str_4 = ''
        str_5 = 'mKq '
        file_skipped_0 = module_0.FileSkipped(str_4, str_5)
        str_6 = '--srss'
        str_7 = '{6\rp++z\x0bz'
        str_8 = 'mR)=Xf~'
        dict_1 = {str_3: str_4, str_6: str_6, str_3: str_1, str_7: str_8}
        dict_2 = {str_3: dict_1}
        unsupported_encoding_2 = module_0.UnsupportedEncoding(str_6)
        str_9 = 'Qfj\n|pc'
        assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_9)
        unsupported_encoding_3 = module_0.UnsupportedEncoding(str_1)
        list_0 = [str_2]
        type_0 = module_1.type(*list_0, **dict_0)
        literal_sort_type_mismatch_0 = module_0.LiteralSortTypeMismatch(type_0, type_0)
        unsupported_settings_0 = module_0.UnsupportedSettings(dict_2)
    except BaseException:
        pass