# Automatically generated by Pynguin.
import pathlib as module_0
import isort.exceptions as module_1
import builtins as module_2

def test_case_0():
    path_0 = module_0.Path()
    unsupported_encoding_0 = module_1.UnsupportedEncoding(path_0)

def test_case_1():
    str_0 = 'v\\'
    invalid_settings_path_0 = module_1.InvalidSettingsPath(str_0)

def test_case_2():
    str_0 = 'U'
    invalid_settings_path_0 = module_1.InvalidSettingsPath(str_0)
    str_1 = 'Vb#k[\x0c'
    profile_does_not_exist_0 = module_1.ProfileDoesNotExist(str_0)
    existing_syntax_errors_0 = module_1.ExistingSyntaxErrors(str_1)

def test_case_3():
    str_0 = 'T^|#Wn;I\x0bM]Y"AnvX0'
    file_skipped_0 = module_1.FileSkipped(str_0, str_0)

def test_case_4():
    str_0 = 'known_'
    missing_section_0 = module_1.MissingSection(str_0, str_0)
    dict_0 = {}
    invalid_settings_path_0 = module_1.InvalidSettingsPath(str_0)
    unsupported_settings_0 = module_1.UnsupportedSettings(dict_0)
    i_sort_error_0 = module_1.ISortError()
    str_1 = None
    str_2 = '|p0M'
    introduced_syntax_errors_0 = module_1.IntroducedSyntaxErrors(str_2)
    file_skip_comment_0 = module_1.FileSkipComment(str_1)

def test_case_5():
    str_0 = 'kq<LmVp[H'
    formatting_plugin_does_not_exist_0 = module_1.FormattingPluginDoesNotExist(str_0)

def test_case_6():
    str_0 = 'tkinter'
    formatting_plugin_does_not_exist_0 = module_1.FormattingPluginDoesNotExist(str_0)
    list_0 = []
    str_1 = ''
    str_2 = 'Ack3-\rl#uG'
    str_3 = '\x0bv5'
    file_skipped_0 = module_1.FileSkipped(str_2, str_3)
    existing_syntax_errors_0 = module_1.ExistingSyntaxErrors(str_1)
    exception_0 = module_2.Exception(*list_0)
    missing_section_0 = module_1.MissingSection(str_0, str_0)
    literal_parsing_failure_0 = module_1.LiteralParsingFailure(str_0, exception_0)

def test_case_7():
    str_0 = ': Fv'
    invalid_settings_path_0 = module_1.InvalidSettingsPath(str_0)
    str_1 = '# isort: unique-list'
    assignments_format_mismatch_0 = module_1.AssignmentsFormatMismatch(str_1)
    str_2 = None
    unsupported_encoding_0 = module_1.UnsupportedEncoding(str_2)

def test_case_8():
    str_0 = 'known.first'
    str_1 = 'value'
    str_2 = 'source'
    str_3 = 'this one'
    str_4 = 'test string'
    str_5 = {str_1: str_3, str_2: str_4}
    str_6 = {str_0: str_5}
    unsupported_settings_0 = module_1.UnsupportedSettings(str_6)

def test_case_9():
    str_0 = '-fass'
    invalid_settings_path_0 = module_1.InvalidSettingsPath(str_0)
    str_1 = '4\\9'
    existing_syntax_errors_0 = module_1.ExistingSyntaxErrors(str_1)
    introduced_syntax_errors_0 = module_1.IntroducedSyntaxErrors(str_1)
    assignments_format_mismatch_0 = module_1.AssignmentsFormatMismatch(str_1)
    str_2 = '-vpar!PF/(\\T*'
    str_3 = 'Error: arguments passed in without any paths or content.'
    file_skipped_0 = module_1.FileSkipped(str_2, str_3)
    missing_section_0 = module_1.MissingSection(str_1, str_1)