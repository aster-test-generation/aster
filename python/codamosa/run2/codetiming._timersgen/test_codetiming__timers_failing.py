# Automatically generated by Pynguin.
import codetiming._timers as module_0

def test_case_0():
    try:
        timers_0 = module_0.Timers()
        str_0 = 'test'
        int_0 = 1
        timers_0.add(str_0, int_0)
        float_0 = timers_0.min(str_0)
        timers_0.clear()
        float_1 = timers_0.min(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "'c8m`)h7v%"
        dict_0 = {str_0: str_0}
        timers_0 = module_0.Timers(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\t,"K@CWy;Wf`'
        timers_0 = module_0.Timers()
        float_0 = timers_0.max(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        timers_0 = module_0.Timers()
        timers_0.clear()
        str_0 = 'd()l?#8[8_PSik<^'
        float_0 = timers_0.total(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Timer is not running. Use .start() to start it'
        timers_0 = module_0.Timers()
        float_0 = timers_0.stdev(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "Mc'Z|^eB1CQP?;|7_-kK"
        timers_0 = module_0.Timers()
        float_0 = 308.876
        timers_0.add(str_0, float_0)
        float_1 = timers_0.stdev(str_0)
        float_2 = timers_0.total(str_0)
        float_3 = timers_0.min(str_0)
        float_4 = timers_0.max(str_0)
        str_1 = "[\\Ta|'B"
        float_5 = 4057.1
        timers_0.__setitem__(str_1, float_5)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "Mc'Z|^eB1CQP?;|7_-kK"
        timers_0 = module_0.Timers()
        float_0 = 308.876
        timers_0.add(str_0, float_0)
        float_1 = timers_0.median(str_0)
        float_2 = timers_0.max(str_0)
        str_1 = 'Timer is running. Use .stop() to stop it'
        float_3 = timers_0.count(str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "Mc'Z|^eB1CQP?;|7_-kK"
        timers_0 = module_0.Timers()
        float_0 = -2525.031304
        timers_0.add(str_0, float_0)
        timers_0.add(str_0, float_0)
        float_1 = timers_0.stdev(str_0)
        float_2 = timers_0.median(str_0)
        timers_1 = module_0.Timers()
        float_3 = timers_1.mean(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        timers_0 = module_0.Timers()
        str_0 = 'A'
        var_0 = timers_0._timings[str_0]
        str_1 = 'B'
        float_0 = timers_0.median(str_0)
        float_1 = timers_0.median(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        timers_0 = module_0.Timers()
        str_0 = 'A'
        var_0 = timers_0._timings[str_0]
        float_0 = timers_0.min(str_0)
        str_1 = 'B'
        float_1 = timers_0.median(str_0)
        float_2 = timers_0.median(str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        timers_0 = module_0.Timers()
        str_0 = 'A'
        var_0 = timers_0._timings[str_0]
        str_1 = 'B'
        float_0 = timers_0.max(str_0)
        float_1 = timers_0.median(str_0)
        float_2 = timers_0.median(str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        timers_0 = module_0.Timers()
        str_0 = 'A'
        var_0 = timers_0._timings[str_0]
        float_0 = timers_0.mean(str_0)
        str_1 = 'B'
        float_1 = timers_0.median(str_0)
        float_2 = timers_0.median(str_1)
    except BaseException:
        pass