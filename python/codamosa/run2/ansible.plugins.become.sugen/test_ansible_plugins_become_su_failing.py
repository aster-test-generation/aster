# Automatically generated by Pynguin.
import ansible.plugins.become.su as module_0

def test_case_0():
    try:
        str_0 = 'x\rNmNXn_5\n-6OmC!Y\x0c2t'
        become_module_0 = module_0.BecomeModule()
        var_0 = become_module_0.check_password_prompt(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        become_module_0 = module_0.BecomeModule()
        dict_0 = {become_module_0: become_module_0, become_module_0: become_module_0, become_module_0: become_module_0, become_module_0: become_module_0}
        set_0 = set()
        var_0 = become_module_0.build_become_command(dict_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        become_module_0 = module_0.BecomeModule()
        dict_0 = {become_module_0: become_module_0, become_module_0: become_module_0, become_module_0: become_module_0, become_module_0: become_module_0}
        int_0 = None
        float_0 = 2444.97541
        var_0 = become_module_0.build_become_command(int_0, float_0)
        set_0 = set()
        var_1 = become_module_0.build_become_command(dict_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'prompt_l10n'
        str_1 = 'this test should return false'
        var_0 = []
        var_1 = become_module_0.set_option(str_0, var_0)
        str_2 = 'Mot de passe'
        str_3 = [str_2]
        var_2 = become_module_0.set_option(str_0, str_3)
        var_3 = become_module_0.check_password_prompt(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'become_exe'
        var_0 = become_module_0.set_option(str_0, str_0)
        str_1 = 'become_flags'
        var_1 = become_module_0.set_option(str_1, str_0)
        var_2 = become_module_0.build_become_command(str_1, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'prompt_l10n'
        var_0 = None
        var_1 = become_module_0.set_option(str_0, var_0)
        str_1 = 'this test should return false'
        var_2 = []
        var_3 = become_module_0.set_option(str_0, var_2)
        var_4 = become_module_0.check_password_prompt(str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'become_exe'
        tuple_0 = ()
        var_0 = become_module_0.set_option(str_0, tuple_0)
        bytes_0 = b'{\x92\xb2\xa5\x93[MM\xc6\xe2\xac\xf7\x83\xadP'
        dict_0 = None
        var_1 = become_module_0.build_become_command(bytes_0, dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'become_exe'
        var_0 = become_module_0.set_option(str_0, str_0)
        str_1 = 'become_flags'
        str_2 = '--flag2'
        var_1 = become_module_0.set_option(str_1, str_2)
        str_3 = 'become_user'
        str_4 = ''
        var_2 = become_module_0.set_option(str_3, str_4)
        dict_0 = {var_0: str_3}
        list_0 = [var_1]
        var_3 = become_module_0.build_become_command(dict_0, list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'become_exe'
        var_0 = become_module_0.set_option(str_0, str_0)
        str_1 = 'become_flags'
        str_2 = '--flag2'
        var_1 = become_module_0.set_option(str_1, str_2)
        str_3 = ''
        var_2 = become_module_0.set_option(str_1, str_3)
        set_0 = {become_module_0}
        tuple_0 = (set_0, become_module_0)
        var_3 = become_module_0.build_become_command(tuple_0, become_module_0)
    except BaseException:
        pass