# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.dict_unpacking as module_1

def test_case_0():
    pass

def test_case_1():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    dict_1 = module_0.Dict(*list_0, **dict_0)
    a_s_t_0 = module_0.AST()
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)
    dict_unpacking_transformer_1 = module_1.DictUnpackingTransformer(a_s_t_0)
    var_1 = dict_unpacking_transformer_1.visit_Dict(dict_1)
    a_s_t_1 = module_0.AST()
    dict_unpacking_transformer_2 = module_1.DictUnpackingTransformer(a_s_t_1)
    dict_unpacking_transformer_3 = module_1.DictUnpackingTransformer(a_s_t_1)
    dict_unpacking_transformer_4 = module_1.DictUnpackingTransformer(a_s_t_0)
    module_x_var_0 = module_0.Module()

def test_case_2():
    list_0 = None
    tuple_0 = (list_0,)
    list_1 = [tuple_0, tuple_0]
    dict_0 = module_0.Dict(*list_1)
    a_s_t_0 = module_0.AST()
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_0)

def test_case_3():
    list_0 = None
    tuple_0 = (list_0,)
    list_1 = [tuple_0, tuple_0]
    str_0 = "-\tqeP \n<eg'"
    str_1 = 'Compiles:\n        f"hello {x}"\n    To\n        \'\'.join([\'hello \', \'{}\'.format(x)])\n    \n    '
    str_2 = '9#:4KK1b&lMt2'
    dict_0 = {str_0: list_0, str_1: str_1, str_1: str_0, str_2: list_1}
    a_s_t_0 = module_0.AST(**dict_0)
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
    dict_1 = module_0.Dict(*list_1)
    dict_unpacking_transformer_1 = module_1.DictUnpackingTransformer(a_s_t_0)
    dict_2 = module_0.Dict(*list_1)
    a_s_t_1 = module_0.AST(**dict_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)
    var_1 = dict_unpacking_transformer_1.visit(dict_2)
    list_2 = [list_1, dict_unpacking_transformer_1]
    module_x_var_0 = module_0.Module(*list_2)
    module_x_var_1 = dict_unpacking_transformer_1.visit_Module(module_x_var_0)
    module_x_var_2 = dict_unpacking_transformer_1.visit_Module(module_x_var_1)
    module_x_var_3 = dict_unpacking_transformer_1.visit_Module(module_x_var_2)

def test_case_4():
    str_0 = '^\x0c>ApVXmlF1x'
    str_1 = None
    dict_0 = {str_0: str_0, str_1: str_0}
    list_0 = [dict_0, str_0]
    dict_1 = module_0.Dict(*list_0)
    a_s_t_0 = module_0.AST()
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)