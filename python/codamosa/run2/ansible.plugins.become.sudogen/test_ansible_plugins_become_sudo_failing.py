# Automatically generated by Pynguin.
import ansible.plugins.become.sudo as module_0

def test_case_0():
    try:
        become_module_0 = module_0.BecomeModule()
        int_0 = 520
        var_0 = become_module_0.build_become_command(int_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'command'
        str_1 = 'shell'
        str_2 = 'become_exe'
        var_0 = become_module_0.set_option(str_2, str_2)
        var_1 = become_module_0.build_become_command(str_0, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 's Flh'
        str_1 = ' -H -S -n'
        become_module_0 = module_0.BecomeModule()
        str_2 = 'become_exe'
        var_0 = become_module_0.set_option(str_2, str_0)
        str_3 = 'become_flags'
        var_1 = become_module_0.set_option(str_3, str_1)
        str_4 = 'become_user'
        str_5 = 'pass'
        var_2 = become_module_0.set_option(str_4, str_5)
        var_3 = become_module_0.build_become_command(str_0, str_5)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 's Flh'
        str_1 = ' -H -S -n'
        str_2 = '-u root'
        become_module_0 = module_0.BecomeModule()
        str_3 = 'become_exe'
        var_0 = become_module_0.set_option(str_3, str_0)
        str_4 = 'become_flags'
        var_1 = become_module_0.set_option(str_4, str_1)
        str_5 = 'become_user'
        var_2 = become_module_0.set_option(str_5, str_2)
        str_6 = 'become_pass'
        str_7 = 'pass'
        var_3 = become_module_0.set_option(str_6, str_7)
        var_4 = become_module_0.build_become_command(str_0, str_7)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 's Flh'
        str_1 = '/bin/sh'
        str_2 = 'sudo'
        str_3 = ' -H -S -n'
        str_4 = ''
        become_module_0 = module_0.BecomeModule()
        str_5 = 'become_exe'
        var_0 = become_module_0.set_option(str_5, str_2)
        str_6 = 'become_flags'
        var_1 = become_module_0.set_option(str_6, str_3)
        str_7 = 'become_user'
        var_2 = become_module_0.set_option(str_7, str_4)
        str_8 = 'become_pass'
        str_9 = 'pass'
        var_3 = become_module_0.set_option(str_8, str_9)
        var_4 = become_module_0.build_become_command(str_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 's Flh'
        str_1 = ' -H -S -n'
        str_2 = '-u root'
        become_module_0 = module_0.BecomeModule()
        str_3 = 'become_exe'
        var_0 = become_module_0.set_option(str_3, str_0)
        str_4 = 'become_flags'
        var_1 = become_module_0.set_option(str_4, str_1)
        str_5 = 'become_user'
        var_2 = become_module_0.set_option(str_5, str_2)
        str_6 = 'become_pass'
        str_7 = 'pass'
        str_8 = None
        var_3 = become_module_0.set_option(str_6, str_8)
        var_4 = become_module_0.build_become_command(str_0, str_7)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'ls -lh'
        str_1 = '/bin/sh'
        str_2 = 'sudo'
        list_0 = None
        bytes_0 = b'\x11i\x1f\x98t\x9f\xa6\x10qD'
        set_0 = {list_0, bytes_0}
        str_3 = "'-"
        float_0 = -430.0
        bool_0 = True
        tuple_0 = (set_0, str_3, float_0, bool_0)
        become_module_0 = module_0.BecomeModule()
        var_0 = become_module_0.build_become_command(list_0, tuple_0)
        str_4 = '-u root'
        str_5 = ''
        become_module_1 = module_0.BecomeModule()
        str_6 = 'become_exe'
        var_1 = become_module_1.set_option(str_6, str_2)
        str_7 = 'become_flags'
        var_2 = become_module_1.set_option(str_7, str_5)
        str_8 = 'become_user'
        var_3 = become_module_1.set_option(str_8, str_4)
        str_9 = 'become_pass'
        str_10 = 'pass'
        var_4 = become_module_1.set_option(str_9, str_10)
        var_5 = become_module_1.build_become_command(str_0, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'ls -lh'
        str_1 = '/bin/sh'
        str_2 = ' -H -S -n'
        str_3 = '-u root'
        str_4 = ''
        become_module_0 = module_0.BecomeModule()
        str_5 = 'become_exe'
        var_0 = become_module_0.set_option(str_5, str_4)
        str_6 = 'become_flags'
        var_1 = become_module_0.set_option(str_6, str_2)
        str_7 = 'become_user'
        become_module_1 = module_0.BecomeModule()
        become_module_2 = module_0.BecomeModule()
        var_2 = become_module_0.set_option(str_7, str_3)
        str_8 = 'become_pass'
        str_9 = 'pass'
        var_3 = become_module_0.set_option(str_8, str_9)
        var_4 = become_module_0.build_become_command(str_0, str_1)
    except BaseException:
        pass