# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.generic_bsd as module_0

def test_case_0():
    pass

def test_case_1():
    list_0 = []
    bytes_0 = b'\xac\xe3\x8a0?AK\xdci\x94^\x1c'
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bytes_0)
    var_0 = generic_bsd_ifconfig_network_0.detect_type_media(list_0)

def test_case_2():
    str_0 = 'scopeid'
    str_1 = 'xd@(pnif'
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
    dict_0 = {str_0: str_0, str_0: str_0}
    generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(dict_0)
    var_0 = generic_bsd_ifconfig_network_1.detect_type_media(dict_0)

def test_case_3():
    str_0 = '$$M~/Bz0'
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
    var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_0)

def test_case_4():
    bytes_0 = None
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, dict_0]
    float_0 = None
    bool_0 = True
    set_0 = {bytes_0, bool_0}
    tuple_0 = (float_0, float_0, set_0, list_0)
    int_0 = 1933
    bool_1 = True
    dict_1 = {int_0: int_0, int_0: int_0, int_0: bool_1}
    bytes_1 = b'\xb3\x1b\x0c+";('
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(dict_1, bytes_1)
    var_0 = generic_bsd_ifconfig_network_0.parse_unknown_line(dict_0, list_0, tuple_0)

def test_case_5():
    str_0 = '7E$WJ F \x0bx\x0blMIN'
    int_0 = 3005
    dict_0 = {int_0: int_0}
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, dict_0)
    bool_0 = False
    generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(generic_bsd_ifconfig_network_0, bool_0)
    list_0 = [int_0]
    var_0 = generic_bsd_ifconfig_network_1.merge_default_interface(list_0, list_0, str_0)
    var_1 = generic_bsd_ifconfig_network_1.parse_interface_line(str_0)

def test_case_6():
    var_0 = None
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(var_0)
    str_0 = 'options=80000<LINKSTATE>'
    var_1 = generic_bsd_ifconfig_network_0.get_options(str_0)

def test_case_7():
    str_0 = 'DsRi!.yX3Psw'
    bool_0 = False
    str_1 = 'C\\b'
    set_0 = {bool_0, str_0, str_1}
    dict_0 = {str_1: str_1, str_1: str_0}
    bytes_0 = b'\xa6]\x12\xa8\xc9\x80n\x93m\xaf;\xb1\x92c;'
    float_0 = -4881.22
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
    var_0 = generic_bsd_ifconfig_network_0.detect_type_media(dict_0)
    tuple_0 = (dict_0, bytes_0, str_0, dict_0)
    var_1 = generic_bsd_ifconfig_network_0.parse_media_line(str_1, dict_0, set_0)
    generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(float_0)
    var_2 = generic_bsd_ifconfig_network_1.merge_default_interface(str_0, bool_0, str_1)
    str_2 = '\x0b~TaG![82K;sh3=<c'
    var_3 = generic_bsd_ifconfig_network_1.get_options(str_2)
    var_4 = generic_bsd_ifconfig_network_1.merge_default_interface(dict_0, tuple_0, generic_bsd_ifconfig_network_0)

def test_case_8():
    str_0 = 'a<*B6"A6h\x0c(~YHmH\r'
    str_1 = '+'
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
    var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_0)

def test_case_9():
    str_0 = 'vlan2: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> metric 0 mtu 1500'
    str_1 = '\tether 00:11:22:33:44:55'
    var_0 = str_0 + str_1
    str_2 = '\tinet 10.0.0.1 netmask 0xffffff00 broadcast 10.0.0.255'
    var_1 = var_0 + str_2
    str_3 = '\tinet 10.0.0.2 netmask 0xffffff00 broadcast 10.0.0.255'
    str_4 = '"jvQJe\tL)V'
    dict_0 = {}
    int_0 = 843
    tuple_0 = (int_0,)
    list_0 = [str_1, str_2]
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0)
    var_2 = generic_bsd_ifconfig_network_0.parse_ether_line(str_4, dict_0, tuple_0)
    var_3 = var_1 + str_3
    str_5 = '\tmedia: Ethernet autoselect (100baseTX <full-duplex>)'
    var_4 = var_3 + str_5
    str_6 = '\tstatus: active'
    var_5 = var_4 + str_6