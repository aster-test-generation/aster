# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.openbsd as module_0

def test_case_0():
    try:
        dict_0 = {}
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(dict_0)
        var_0 = open_b_s_d_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'D'
        list_0 = [str_0, str_0]
        bytes_0 = b'Z`'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bytes_0)
        str_1 = '6BO0iMnEV-\x0cvF$eoPW!'
        tuple_0 = (open_b_s_d_hardware_0, str_1)
        open_b_s_d_hardware_1 = module_0.OpenBSDHardware(list_0, tuple_0)
        var_0 = open_b_s_d_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xe9\xd8\x1a\xf7.\x87`0\xedg\x16\xec\x08\xde\xb0\x91'
        float_0 = -84.8726
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bytes_0, float_0)
        var_0 = open_b_s_d_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'L9+{`=Bz\rJ2-3V\x0c'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(str_0)
        var_0 = open_b_s_d_hardware_0.get_processor_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'v2_on_file_diff'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(str_0)
        var_0 = open_b_s_d_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ' 4'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(str_0)
        var_0 = open_b_s_d_hardware_0.get_dmi_facts()
    except BaseException:
        pass