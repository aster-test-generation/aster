# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = -3010
    position_0 = module_0.Position(int_0, int_0, int_0)
    bool_0 = position_0.__eq__(position_0)

def test_case_2():
    str_0 = 'Must not match.'
    int_0 = -85
    int_1 = -1032
    int_2 = -1000
    position_0 = module_0.Position(int_0, int_1, int_2)
    bool_0 = position_0.__eq__(str_0)
    position_1 = None
    message_0 = module_0.Message(text=str_0, key=str_0, start_position=position_1, end_position=position_1)
    str_1 = position_0.__repr__()

def test_case_3():
    str_0 = '.'
    base_error_0 = module_0.BaseError(text=str_0, code=str_0, key=str_0)
    bool_0 = base_error_0.__eq__(base_error_0)

def test_case_4():
    int_0 = 1
    int_1 = 2275
    position_0 = module_0.Position(int_0, int_0, int_1)
    base_error_0 = module_0.BaseError(text=int_0, position=position_0)
    int_2 = base_error_0.__hash__()

def test_case_5():
    str_0 = 'JfqHB/!mWZq$D'
    message_0 = module_0.Message(text=str_0)

def test_case_6():
    validation_result_0 = module_0.ValidationResult()
    list_0 = None
    dict_0 = {list_0: validation_result_0, validation_result_0: validation_result_0, validation_result_0: list_0, list_0: validation_result_0, list_0: list_0, list_0: list_0}
    base_error_0 = module_0.BaseError(text=dict_0)
    list_1 = []
    bytes_0 = b'8\xf4\x18'
    validation_error_0 = module_0.ValidationError(text=list_1, code=bytes_0)
    bool_0 = base_error_0.__eq__(validation_error_0)

def test_case_7():
    validation_result_0 = module_0.ValidationResult()

def test_case_8():
    validation_result_0 = module_0.ValidationResult()
    str_0 = validation_result_0.__repr__()

def test_case_9():
    validation_result_0 = None
    int_0 = 4
    int_1 = 4
    int_2 = -2440
    position_0 = module_0.Position(int_0, int_1, int_2)
    bool_0 = position_0.__eq__(validation_result_0)

def test_case_10():
    str_0 = 'The field '
    message_0 = module_0.Message(text=str_0, key=str_0)
    str_1 = '\rtX#[jbAWs'
    message_1 = module_0.Message(text=str_1)
    validation_result_0 = module_0.ValidationResult()
    iterator_0 = validation_result_0.__iter__()
    int_0 = message_1.__hash__()
    list_0 = [message_1, message_1]
    str_2 = '?=3%YfM}4dH|u8vem'
    list_1 = []
    message_2 = module_0.Message(text=str_2, code=str_2, index=list_1)
    bool_0 = message_2.__eq__(list_0)

def test_case_11():
    str_0 = 'asd'
    validation_result_0 = module_0.ValidationResult(value=str_0)
    var_0 = iter(validation_result_0)
    var_1 = [n for n in var_0]
    validation_result_1 = module_0.ValidationResult(error=str_0)
    var_2 = [n for n in var_0]

def test_case_12():
    int_0 = 5
    position_0 = module_0.Position(int_0, int_0, int_0)
    str_0 = ';'
    message_0 = module_0.Message(text=str_0, start_position=position_0)
    int_1 = message_0.__hash__()
    bool_0 = position_0.__eq__(position_0)
    str_1 = message_0.__repr__()
    bool_1 = message_0.__eq__(message_0)
    base_error_0 = module_0.BaseError(text=str_1, code=str_0, key=str_1, position=position_0)
    str_2 = base_error_0.__str__()
    parse_error_0 = module_0.ParseError(text=str_1, code=str_1, key=int_0)
    iterator_0 = None
    message_1 = module_0.Message(text=str_0, index=iterator_0, position=position_0)
    str_3 = base_error_0.__str__()
    validation_result_0 = module_0.ValidationResult(error=message_0)
    validation_result_1 = module_0.ValidationResult()
    bool_2 = message_1.__eq__(position_0)
    list_0 = base_error_0.messages(add_prefix=str_2)
    str_4 = base_error_0.__repr__()
    str_5 = base_error_0.__repr__()
    base_error_1 = module_0.BaseError(messages=list_0)

def test_case_13():
    int_0 = 5
    position_0 = module_0.Position(int_0, int_0, int_0)
    str_0 = 'f'
    bool_0 = position_0.__eq__(position_0)
    str_1 = position_0.__repr__()
    base_error_0 = module_0.BaseError(text=str_0)
    str_2 = base_error_0.__repr__()
    iterator_0 = None
    message_0 = module_0.Message(text=str_0, index=iterator_0, position=position_0)
    bool_1 = message_0.__eq__(position_0)
    validation_result_0 = module_0.ValidationResult(error=message_0)
    validation_result_1 = module_0.ValidationResult()
    bool_2 = message_0.__eq__(position_0)

def test_case_14():
    int_0 = 5
    position_0 = module_0.Position(int_0, int_0, int_0)
    str_0 = ';'
    message_0 = module_0.Message(text=str_0, start_position=position_0)
    bool_0 = position_0.__eq__(position_0)
    str_1 = message_0.__repr__()
    bool_1 = message_0.__eq__(message_0)
    base_error_0 = module_0.BaseError(text=str_1, code=str_0, key=str_1, position=position_0)
    int_1 = base_error_0.__len__()
    parse_error_0 = module_0.ParseError(text=str_1, code=str_1, key=int_0)
    iterator_0 = None
    message_1 = module_0.Message(text=str_0, index=iterator_0, position=position_0)
    list_0 = [message_1, message_0, message_0, message_0]
    str_2 = base_error_0.__str__()
    validation_result_0 = module_0.ValidationResult(error=message_0)
    validation_result_1 = module_0.ValidationResult()
    bool_2 = base_error_0.__eq__(iterator_0)
    str_3 = base_error_0.__str__()
    bytes_0 = b'\x07\n\x01'
    validation_result_2 = module_0.ValidationResult(value=bytes_0)
    validation_result_3 = module_0.ValidationResult()
    bool_3 = message_0.__eq__(str_2)
    list_1 = base_error_0.messages()
    list_2 = base_error_0.messages()
    base_error_1 = module_0.BaseError(messages=list_0)
    str_4 = base_error_1.__repr__()
    base_error_2 = module_0.BaseError(messages=list_1)