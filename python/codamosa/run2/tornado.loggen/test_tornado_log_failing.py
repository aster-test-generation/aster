# Automatically generated by Pynguin.
import tornado.log as module_0
import logging as module_1

def test_case_0():
    try:
        log_formatter_0 = module_0.LogFormatter()
        str_0 = log_formatter_0.format(log_formatter_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_0.define_logging_options()
    except BaseException:
        pass

def test_case_2():
    try:
        module_0.define_logging_options()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'pathname'
        int_0 = 100
        module_0.enable_pretty_logging()
        var_0 = None
        log_record_0 = module_1.LogRecord(str_0, int_0, str_0, int_0, str_0, var_0, var_0)
        log_formatter_0 = module_0.LogFormatter()
        str_1 = log_formatter_0.format(log_record_0)
        str_2 = 's\r 0g3cF'
        str_3 = 'none'
        bool_0 = False
        dict_0 = {}
        log_formatter_1 = module_0.LogFormatter(str_2, str_3, bool_0, dict_0)
        str_4 = '=i{N5alBA_'
        log_formatter_2 = module_0.LogFormatter(str_4)
        str_5 = log_formatter_2.format(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = None
        str_0 = 'J,RV\\R"'
        log_formatter_0 = module_0.LogFormatter(str_0)
        set_0 = {list_0, list_0, log_formatter_0, log_formatter_0}
        module_0.enable_pretty_logging(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        module_0.enable_pretty_logging()
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        list_1 = [list_0, dict_0]
        module_0.define_logging_options(list_1)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 1484
        int_1 = 1795
        dict_0 = {int_0: int_0, int_0: int_1}
        log_formatter_0 = module_0.LogFormatter(dict_0)
        optional_0 = None
        bool_0 = True
        logger_0 = module_1.Logger(bool_0)
        module_0.enable_pretty_logging(optional_0, logger_0)
        str_0 = 'T\nJ1Bt'
        str_1 = 'ms}0\\*O0m3g"_f14p>'
        bool_1 = True
        log_formatter_1 = module_0.LogFormatter(str_0, str_1, bool_1)
        str_2 = '>VhLf]S7q2;Ok8'
        log_formatter_2 = module_0.LogFormatter(str_2)
        str_3 = log_formatter_0.format(int_1)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = module_1.getLogger()
        var_1 = None
        module_0.enable_pretty_logging(var_1, var_0)
        var_2 = var_0.handlers
        var_3 = len(var_2)
        int_0 = 0
        var_4 = var_0.handlers[int_0]
        var_5 = var_4.formatter._fmt
        var_6 = var_4.formatter._colors
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'pathname'
        int_0 = 100
        log_record_0 = module_1.LogRecord(str_0, int_0, str_0, int_0, str_0, str_0, str_0)
        log_formatter_0 = module_0.LogFormatter()
        str_1 = log_formatter_0.format(log_record_0)
    except BaseException:
        pass