# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    pass

def test_case_1():
    tuple_0 = None
    distribution_files_0 = module_0.DistributionFiles(tuple_0)
    var_0 = distribution_files_0.process_dist_files()

def test_case_2():
    str_0 = None
    bool_0 = None
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    list_0 = []
    distribution_0 = None
    float_0 = 0.2
    distribution_files_0 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_0.parse_distribution_file_Amazon(bool_0, list_0, list_0, distribution_0)
    distribution_1 = module_0.Distribution(str_0)
    var_1 = distribution_1.get_distribution_FreeBSD()
    distribution_2 = module_0.Distribution(distribution_1)

def test_case_3():
    distribution_files_0 = None
    list_0 = [distribution_files_0]
    float_0 = 320.717
    distribution_fact_collector_0 = module_0.DistributionFactCollector(list_0, float_0)
    str_0 = '}\n$~wPJUc\x0bP\x0cnuWKE'
    list_1 = [str_0, str_0, str_0]
    distribution_files_1 = module_0.DistributionFiles(list_1)
    var_0 = distribution_files_1.parse_distribution_file_OpenWrt(distribution_files_0, list_0, distribution_fact_collector_0, list_0)

def test_case_4():
    float_0 = 1702.2310581156532
    str_0 = 'coreos'
    list_0 = [str_0]
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_SUSE(str_0, str_0, float_0, list_0)

def test_case_5():
    str_0 = 'coreos'
    list_0 = [str_0]
    distribution_files_0 = module_0.DistributionFiles(list_0)
    var_0 = distribution_files_0.parse_distribution_file_Debian(distribution_files_0, list_0, str_0, list_0)

def test_case_6():
    float_0 = 1830.65
    str_0 = ":xxdjo.}f'U=Dw6\r,t("
    list_0 = [float_0, str_0, str_0]
    int_0 = 641
    distribution_files_0 = module_0.DistributionFiles(int_0)
    var_0 = distribution_files_0.parse_distribution_file_Mandriva(float_0, str_0, float_0, list_0)

def test_case_7():
    bytes_0 = b'\x89\x1b@\xa3'
    distribution_files_0 = module_0.DistributionFiles(bytes_0)
    str_0 = '\n0Syu|?'
    str_1 = '\\c``:W]l ~zV:&'
    var_0 = distribution_files_0.parse_distribution_file_Coreos(str_0, distribution_files_0, bytes_0, str_1)

def test_case_8():
    str_0 = 'm<Y~,D6\x0bpRf)$\x0b/\rLD'
    bool_0 = False
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_Flatcar(str_0, str_0, bool_0, str_0)

def test_case_9():
    str_0 = '?4\\%);e'
    distribution_0 = module_0.Distribution(str_0)

def test_case_10():
    int_0 = 90
    distribution_0 = module_0.Distribution(int_0)
    var_0 = distribution_0.get_distribution_facts()

def test_case_11():
    bytes_0 = b'.&\xed\xbdO\xd3Ot\x8a\x9f\xc1\x8d\t6'
    distribution_0 = module_0.Distribution(bytes_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_12():
    float_0 = -55.03917
    dict_0 = {float_0: float_0}
    str_0 = '_p"fiRx\')\tloEA2dXkY'
    distribution_0 = module_0.Distribution(dict_0)
    var_0 = distribution_0.get_distribution_SMGL()
    int_0 = 3175
    bool_0 = False
    var_1 = distribution_0.get_distribution_facts()
    distribution_files_0 = module_0.DistributionFiles(bool_0)
    int_1 = 488
    distribution_files_1 = module_0.DistributionFiles(int_1)
    var_2 = distribution_files_1.parse_distribution_file_Debian(dict_0, str_0, int_0, distribution_files_0)

def test_case_13():
    str_0 = 'm<Y~,D6\x0bpRf)$\x0b/\rLD'
    bool_0 = False
    str_1 = "F&\x0bboK!_[DKC'[})"
    distribution_files_0 = module_0.DistributionFiles(str_1)
    var_0 = distribution_files_0.parse_distribution_file_Flatcar(str_0, str_0, bool_0, str_0)
    list_0 = [var_0, str_0, str_1, str_0]
    distribution_fact_collector_0 = module_0.DistributionFactCollector(distribution_files_0)
    var_1 = distribution_fact_collector_0.collect(list_0)

def test_case_14():
    float_0 = 488.0
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    distribution_fact_collector_1 = module_0.DistributionFactCollector(distribution_fact_collector_0)
    distribution_files_0 = module_0.DistributionFiles(distribution_fact_collector_1)
    str_0 = 's8v,QeA:ye51kTA?'
    bytes_0 = b'\x80s\xe2t\xf6|\x96:9\xd4/3J}'
    distribution_fact_collector_2 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_2.collect()
    distribution_files_1 = module_0.DistributionFiles(distribution_fact_collector_2)
    var_1 = distribution_files_1.parse_distribution_file_Amazon(distribution_files_0, str_0, str_0, bytes_0)
    distribution_files_2 = module_0.DistributionFiles(float_0)

def test_case_15():
    float_0 = 1830.65
    str_0 = ":xxdjo.}f'U=Dw6\r,t("
    list_0 = [float_0, str_0, str_0]
    int_0 = 641
    int_1 = 501
    bytes_0 = b'W\xec\xfbC\xee\xf0^\xfc\xca\xde\x10\x8e\xba\x8a\x1d\xe2\xcdGi'
    distribution_0 = module_0.Distribution(bytes_0)
    distribution_1 = module_0.Distribution(distribution_0)
    bytes_1 = b'\xc9\x0fv\xe0\x81\x1d\\U'
    set_0 = {str_0, int_0, bytes_0, int_1}
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_Alpine(bytes_1, bytes_1, set_0, list_0)
    distribution_files_1 = module_0.DistributionFiles(distribution_1)
    str_1 = '$K.'
    var_1 = distribution_files_1.parse_distribution_file_Debian(list_0, str_0, str_1, distribution_files_1)

def test_case_16():
    str_0 = 'll'
    int_0 = 5207
    dict_0 = {}
    distribution_files_0 = module_0.DistributionFiles(dict_0)
    var_0 = distribution_files_0.parse_distribution_file_Slackware(str_0, str_0, dict_0, int_0)

def test_case_17():
    int_0 = 1125
    str_0 = 'ctx'
    bool_0 = False
    bool_1 = False
    float_0 = 708.588299
    list_0 = [float_0]
    distribution_files_0 = module_0.DistributionFiles(list_0)
    var_0 = distribution_files_0.parse_distribution_file_NA(int_0, str_0, bool_0, bool_1)

def test_case_18():
    str_0 = 'r[;\x0b:6(DW'
    int_0 = 3015
    tuple_0 = (int_0,)
    str_1 = '<9P.d~}\tB/hZOh('
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    distribution_files_0 = module_0.DistributionFiles(distribution_fact_collector_0)
    dict_0 = {distribution_files_0: str_1, tuple_0: distribution_files_0, int_0: str_0, str_1: str_0}
    tuple_1 = (tuple_0, str_1, dict_0)
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)
    bytes_0 = b'\x12n`J80\x0b\x00^O'
    distribution_fact_collector_1 = module_0.DistributionFactCollector(bytes_0)
    distribution_1 = module_0.Distribution(distribution_0)
    distribution_files_1 = module_0.DistributionFiles(distribution_1)
    var_0 = distribution_files_1.parse_distribution_file_ClearLinux(str_0, tuple_1, tuple_1, distribution_0)