# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0
import builtins as module_1

def test_case_0():
    try:
        int_0 = 1245
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = 'sfU=jC#o=\t=qIpaX\x0bJ.'
        var_0 = file_downloader_0.add_progress_hook(str_0)
        str_1 = ';JU/'
        var_1 = file_downloader_0.format_eta(str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        tuple_0 = ()
        int_0 = -5451
        str_0 = '.Su~Hhi0f62N^l'
        str_1 = '^\x0b3Dh%P4M_\r9ZQOQ'
        dict_0 = {str_0: int_0, str_1: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        var_0 = file_downloader_0.calc_percent(set_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "KPTTG#'N`"
        bool_0 = True
        bool_1 = False
        file_downloader_0 = module_0.FileDownloader(bool_0, bool_1)
        var_0 = file_downloader_0.format_percent(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 1254
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = 'ZMqSQr"8\t\n.q2-J\n2'
        list_0 = [dict_0, int_0, dict_0]
        float_0 = 1159.1381488822801
        file_downloader_0 = module_0.FileDownloader(list_0, float_0)
        var_0 = file_downloader_0.format_retries(int_0)
        str_1 = 'Lv{\rov'
        dict_1 = {str_1: file_downloader_0, str_0: int_0, str_0: float_0}
        complex_0 = None
        int_1 = -2504
        list_1 = [int_0, int_1]
        var_1 = file_downloader_0.calc_eta(str_1, dict_1, complex_0, list_1)
        var_2 = file_downloader_0.undo_temp_name(str_0)
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        bool_0 = False
        str_2 = ''
        var_3 = file_downloader_1.format_retries(bool_0)
        var_4 = file_downloader_1.slow_down(float_0, bool_0, str_2)
        bool_1 = True
        var_5 = file_downloader_1.calc_eta(float_0, complex_0, bool_1, file_downloader_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'http://techcrunch.com/video/facebook-creates-on-this-day-crunch-report/518726732/'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        bool_0 = True
        set_0 = set()
        file_downloader_0 = module_0.FileDownloader(bool_0, set_0)
        var_0 = file_downloader_0.format_speed(dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xd0\xc4p\xad\xccz\xfco\xb6\xd9gg\xbf\x17\x15\x91'
        str_0 = 'TJU3ytC!,'
        str_1 = 'Wv'
        dict_0 = {str_1: str_1}
        str_2 = None
        str_3 = 't`v}I=\\.YE(Uko=8U'
        dict_1 = {str_2: str_2, str_1: str_2, str_3: str_1, str_3: str_1}
        dict_2 = {str_1: str_1, str_1: dict_1}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_2)
        bool_0 = None
        var_0 = file_downloader_0.format_speed(bool_0)
        var_1 = file_downloader_0.download(bytes_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 1245
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, file_downloader_0)
        str_0 = '}6^gWjguIBZRO)x'
        var_0 = file_downloader_1.parse_bytes(str_0)
        str_1 = 'tgR@jL5]ap/alj'
        var_1 = file_downloader_0.download(str_1, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 2973.153
        str_0 = 'd)8-/\x0bDS}'
        file_downloader_0 = module_0.FileDownloader(float_0, str_0)
        var_0 = file_downloader_0.report_file_already_downloaded(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -1863.0
        int_0 = 104
        bytes_0 = b'\xbf\xe0\xa3\xfa\x06\x89\xd3\xfc\xb4H\x8c\x95'
        bytes_1 = None
        float_1 = 579.29
        str_0 = 'OF\x0cgz66`_D G(GyXeV%'
        file_downloader_0 = module_0.FileDownloader(int_0, str_0)
        bool_0 = True
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, bool_0)
        var_0 = file_downloader_1.format_eta(float_1)
        tuple_0 = (bytes_0, bytes_1, int_0)
        float_2 = -437.65315
        list_0 = [float_0, tuple_0]
        file_downloader_2 = module_0.FileDownloader(list_0, list_0)
        var_1 = file_downloader_2.to_stderr(float_2)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '|,)x/\tRQ<'
        str_1 = 'eventDuration'
        tuple_0 = ()
        dict_0 = {str_1: tuple_0}
        dict_1 = {tuple_0: tuple_0, str_1: dict_0, tuple_0: str_1}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_1)
        var_0 = file_downloader_0.to_console_title(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 1245
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        bytes_0 = b'\xef\xb0\xbb\x7f'
        float_0 = -2491.4
        bool_0 = False
        list_0 = [bool_0, dict_0, int_0]
        set_0 = {bool_0, float_0, float_0, bytes_0}
        str_0 = 'MPG8FoN(}QDMFbq'
        file_downloader_0 = module_0.FileDownloader(set_0, str_0)
        var_0 = file_downloader_0.try_rename(bool_0, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'Nug*'
        str_1 = 'F}B'
        dict_0 = {str_1: str_0}
        list_0 = [dict_0, str_0, dict_0, str_1]
        file_downloader_0 = module_0.FileDownloader(str_0, list_0)
        str_2 = "K'6Y7Z{\n`ep"
        dict_1 = {str_2: str_2, str_2: str_2}
        bytes_0 = b'\xd6'
        file_downloader_1 = module_0.FileDownloader(dict_1, bytes_0)
        var_0 = file_downloader_1.report_destination(file_downloader_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = None
        bool_0 = True
        int_1 = -741
        list_0 = []
        set_0 = set()
        bool_1 = True
        file_downloader_0 = module_0.FileDownloader(set_0, bool_1)
        file_downloader_1 = module_0.FileDownloader(list_0, file_downloader_0)
        var_0 = file_downloader_1.best_block_size(bool_0, int_1)
        set_1 = {bool_0}
        file_downloader_2 = module_0.FileDownloader(bool_0, set_1)
        var_1 = file_downloader_2.report_progress(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        tuple_0 = ()
        list_0 = [tuple_0, tuple_0, tuple_0]
        float_0 = 304.3335
        file_downloader_0 = module_0.FileDownloader(float_0, list_0)
        str_0 = 'Downloading %s MPD information'
        file_downloader_1 = module_0.FileDownloader(tuple_0, str_0)
        var_0 = file_downloader_1.report_resuming_byte(file_downloader_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 1245
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        bytes_0 = b'\xef\xb0\xbb\x7f'
        str_0 = 'vBX8{;'
        var_0 = file_downloader_0.add_progress_hook(str_0)
        list_0 = [dict_0]
        var_1 = file_downloader_0.report_retry(bytes_0, list_0, int_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 1565965194
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = 'vBX8{;'
        var_0 = file_downloader_0.download(str_0, file_downloader_0)
    except BaseException:
        pass

def test_case_16():
    try:
        list_0 = []
        dict_0 = {}
        list_1 = [dict_0, dict_0, dict_0, dict_0]
        file_downloader_0 = module_0.FileDownloader(dict_0, list_1)
        var_0 = file_downloader_0.ytdl_filename(list_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = 1245
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = 'vBX8{;'
        var_0 = file_downloader_0.add_progress_hook(str_0)
        var_1 = file_downloader_0.report_error()
    except BaseException:
        pass

def test_case_18():
    try:
        set_0 = set()
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(set_0, dict_0)
        var_0 = file_downloader_0.report_unable_to_resume()
    except BaseException:
        pass

def test_case_19():
    try:
        set_0 = set()
        int_0 = -1411
        file_downloader_0 = module_0.FileDownloader(set_0, int_0)
        var_0 = file_downloader_0.report_warning()
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = 1254
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = 'ZMqSQr"8\t\n.q2-J\n2'
        list_0 = [dict_0, dict_0]
        float_0 = 1159.1381488822801
        file_downloader_0 = module_0.FileDownloader(list_0, float_0)
        str_1 = "%\x0cg!y6\tc?i'Q&_@\tf"
        bytes_0 = b'\xdcdl\x11\xb5&\xc7w\xe6\x8e'
        var_0 = file_downloader_0.try_utime(str_1, bytes_0)
        var_1 = file_downloader_0.format_retries(int_0)
        str_2 = 'Lv{\rov'
        dict_1 = {str_2: file_downloader_0, str_0: int_0, str_0: float_0}
        complex_0 = None
        int_1 = -2504
        list_1 = [int_0, int_1]
        var_2 = file_downloader_0.calc_eta(str_2, dict_1, complex_0, list_1)
        var_3 = file_downloader_0.format_seconds(float_0)
        var_4 = file_downloader_0.undo_temp_name(str_0)
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        bool_0 = False
        str_3 = '\x0b'
        var_5 = file_downloader_1.format_retries(bool_0)
        var_6 = file_downloader_1.slow_down(float_0, bool_0, str_3)
        file_downloader_2 = module_0.FileDownloader(file_downloader_1, str_3)
        var_7 = file_downloader_2.add_progress_hook(list_1)
        str_4 = 'X8{;'
        var_8 = file_downloader_1.add_progress_hook(str_4)
        bool_1 = True
        float_1 = -0.32198831570509867
        var_9 = file_downloader_2.best_block_size(bool_1, float_1)
        var_10 = file_downloader_0.trouble(*list_0, **dict_1)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = 1263
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = 'e'
        bool_0 = None
        tuple_0 = (bool_0,)
        file_downloader_0 = module_0.FileDownloader(tuple_0, dict_0)
        var_0 = file_downloader_0.temp_name(str_0)
        var_1 = file_downloader_0.format_eta(bool_0)
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = 1565965194
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = '\x0b'
        var_0 = file_downloader_0.download(str_0, file_downloader_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 1245
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        bool_0 = None
        var_0 = file_downloader_0.calc_percent(dict_0, bool_0)
        str_0 = '\x0b'
        var_1 = file_downloader_0.add_progress_hook(str_0)
        set_0 = None
        var_2 = file_downloader_0.try_utime(set_0, set_0)
        var_3 = file_downloader_0.download(str_0, file_downloader_0)
    except BaseException:
        pass

def test_case_24():
    try:
        bytes_0 = b'\xb6\xba\x86\x91Qh\xbb\xf3\x88\x80'
        list_0 = [bytes_0]
        str_0 = 'gr)'
        str_1 = '9t<G\nMeN.&s'
        str_2 = '(]=b'
        bool_0 = True
        tuple_0 = (bool_0, bool_0)
        tuple_1 = (tuple_0, list_0, bool_0)
        file_downloader_0 = module_0.FileDownloader(str_2, tuple_1)
        bytes_1 = b'\x1e\xdf\xfc\x84R^\xef\xa1\x84\xe5\xb7\xb5\x01\xbb\xbe\xfb'
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, bytes_1)
        var_0 = file_downloader_1.try_rename(str_0, str_1)
    except BaseException:
        pass

def test_case_25():
    try:
        int_0 = 1245
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = 'ZMqSQr"8\t\n.q2-J\n2'
        list_0 = [dict_0]
        float_0 = 1158.3078
        file_downloader_0 = module_0.FileDownloader(list_0, float_0)
        float_1 = -1086.323
        var_0 = file_downloader_0.format_seconds(float_1)
        var_1 = file_downloader_0.undo_temp_name(str_0)
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        float_2 = -2491.4
        bool_0 = True
        str_1 = '!@[Mah\nn4jI'
        var_2 = file_downloader_1.slow_down(float_2, bool_0, str_1)
        str_2 = 'vBX8{;'
        var_3 = file_downloader_1.add_progress_hook(str_2)
        var_4 = file_downloader_1.download(str_1, file_downloader_1)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = 1263
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = '?LZ'
        bool_0 = None
        tuple_0 = (bool_0,)
        file_downloader_0 = module_0.FileDownloader(tuple_0, dict_0)
        var_0 = file_downloader_0.temp_name(str_0)
        bool_1 = False
        var_1 = file_downloader_0.format_eta(bool_1)
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        float_0 = -1085.54
        var_2 = file_downloader_1.best_block_size(float_0, int_0)
        dict_1 = None
        bool_2 = None
        int_1 = -1315
        file_downloader_2 = module_0.FileDownloader(int_1, file_downloader_1)
        var_3 = file_downloader_2.try_rename(dict_1, bool_2)
        str_1 = '4\t.z=]. 6\x0b[n'
        bool_3 = True
        var_4 = file_downloader_0.calc_eta(dict_1, str_1, bool_3, int_0)
    except BaseException:
        pass

def test_case_27():
    try:
        int_0 = 1245
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = 'ZMqSQr"8\t\n.q2-J\n2'
        list_0 = [dict_0]
        float_0 = 1159.1381488822801
        file_downloader_0 = module_0.FileDownloader(list_0, float_0)
        float_1 = 1720946725.9184241
        str_1 = 'Lv{\rov'
        dict_1 = {str_1: file_downloader_0, str_0: int_0, str_0: float_0}
        complex_0 = None
        list_1 = [int_0, int_0]
        var_0 = file_downloader_0.calc_eta(str_1, dict_1, complex_0, list_1)
        var_1 = file_downloader_0.format_seconds(float_1)
        var_2 = file_downloader_0.undo_temp_name(str_0)
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        float_2 = -2491.4
        bool_0 = True
        str_2 = '\x0b'
        var_3 = file_downloader_1.slow_down(float_2, bool_0, str_2)
        str_3 = 'vBX8{;'
        var_4 = file_downloader_1.add_progress_hook(str_3)
        set_0 = None
        var_5 = file_downloader_1.try_utime(set_0, set_0)
        var_6 = file_downloader_1.download(str_2, file_downloader_1)
    except BaseException:
        pass

def test_case_28():
    try:
        bytes_0 = b'\xd0\x98*&<\xea\xedmL\x92\xa9\xfa\xc9/\x0e'
        bool_0 = True
        int_0 = 1
        dict_0 = {bytes_0: bool_0}
        str_0 = None
        str_1 = '[idd>2l5I\tL'
        dict_1 = {str_0: bool_0, str_1: str_0}
        list_0 = []
        list_1 = []
        file_downloader_0 = module_0.FileDownloader(list_0, list_1)
        file_downloader_1 = module_0.FileDownloader(dict_1, file_downloader_0)
        list_2 = [dict_0, file_downloader_1]
        set_0 = {bool_0, file_downloader_0}
        file_downloader_2 = module_0.FileDownloader(list_2, set_0)
        var_0 = file_downloader_2.best_block_size(int_0, int_0)
        list_3 = module_1.list(*list_1)
        float_0 = 1663.912
        file_downloader_3 = module_0.FileDownloader(float_0, file_downloader_0)
        var_1 = file_downloader_3.report_unable_to_resume()
    except BaseException:
        pass

def test_case_29():
    try:
        dict_0 = None
        float_0 = 1965.084033
        tuple_0 = (dict_0, float_0)
        set_0 = None
        list_0 = []
        list_1 = [list_0, dict_0, tuple_0]
        file_downloader_0 = module_0.FileDownloader(list_0, list_1)
        var_0 = file_downloader_0.calc_eta(float_0, set_0, tuple_0, float_0)
    except BaseException:
        pass

def test_case_30():
    try:
        int_0 = 1254
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = '`'
        list_0 = [dict_0, dict_0]
        float_0 = 1159.1381488822801
        file_downloader_0 = module_0.FileDownloader(list_0, float_0)
        str_1 = "%\x0cg!y6\tc?i'Q&_@\tf"
        bytes_0 = b'\xdcdl\x11\xb5&\xc7w\xe6\x8e'
        var_0 = file_downloader_0.try_utime(str_1, bytes_0)
        var_1 = file_downloader_0.format_seconds(float_0)
        var_2 = file_downloader_0.undo_temp_name(str_0)
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        bool_0 = False
        str_2 = '=-69zHA2'
        var_3 = file_downloader_1.format_retries(bool_0)
        bool_1 = True
        file_downloader_2 = module_0.FileDownloader(bool_1, float_0)
        var_4 = file_downloader_1.slow_down(float_0, bool_0, str_2)
        bool_2 = False
        var_5 = file_downloader_0.calc_speed(float_0, int_0, bool_2)
        str_3 = 'X8{;'
        var_6 = file_downloader_1.add_progress_hook(str_3)
        bool_3 = True
        float_1 = -0.32198831570509867
        var_7 = file_downloader_2.best_block_size(bool_3, float_1)
        set_0 = None
        var_8 = file_downloader_1.try_utime(set_0, set_0)
        var_9 = file_downloader_1.download(str_2, file_downloader_1)
    except BaseException:
        pass

def test_case_31():
    try:
        int_0 = -1714
        bytes_0 = b'\xb7W'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        file_downloader_0 = module_0.FileDownloader(bytes_0, dict_0)
        var_0 = file_downloader_0.format_retries(int_0)
        int_1 = 1263
        bool_0 = None
        tuple_0 = (bool_0,)
        file_downloader_1 = module_0.FileDownloader(tuple_0, dict_0)
        var_1 = file_downloader_1.format_eta(bool_0)
        float_0 = -1080.9910846742223
        var_2 = file_downloader_1.best_block_size(float_0, int_1)
        dict_1 = None
        bool_1 = None
        file_downloader_2 = module_0.FileDownloader(int_1, file_downloader_0)
        var_3 = file_downloader_2.try_rename(dict_1, bool_1)
        bool_2 = False
        str_0 = 'GfK'
        var_4 = file_downloader_1.best_block_size(int_1, int_1)
        var_5 = file_downloader_1.slow_down(float_0, bool_2, str_0)
        str_1 = '}6^gWjguIBZRO)x$y'
        var_6 = file_downloader_2.format_eta(float_0)
        set_0 = {var_4, var_4, bool_0, dict_1}
        var_7 = file_downloader_1.slow_down(file_downloader_2, set_0, file_downloader_0)
        var_8 = file_downloader_0.format_eta(dict_1)
        str_2 = '313878'
        var_9 = file_downloader_2.parse_bytes(str_2)
        var_10 = file_downloader_2.add_progress_hook(int_0)
        var_11 = file_downloader_0.try_utime(str_1, file_downloader_0)
        str_3 = 'a/b.ext#c=d'
        var_12 = file_downloader_0.download(str_3, tuple_0)
    except BaseException:
        pass

def test_case_32():
    try:
        int_0 = -1741
        bytes_0 = b'\xb7W'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        file_downloader_0 = module_0.FileDownloader(bytes_0, dict_0)
        int_1 = 1224
        str_0 = '.'
        bool_0 = None
        var_0 = file_downloader_0.temp_name(str_0)
        var_1 = file_downloader_0.format_eta(bool_0)
        float_0 = -1080.9910846742223
        var_2 = file_downloader_0.best_block_size(float_0, int_1)
        dict_1 = None
        file_downloader_1 = module_0.FileDownloader(int_1, file_downloader_0)
        var_3 = file_downloader_1.try_rename(dict_1, bool_0)
        str_1 = None
        str_2 = '\x0b'
        var_4 = file_downloader_0.best_block_size(int_1, int_1)
        str_3 = '}6^gWjguIBZRO)x$y'
        var_5 = file_downloader_1.format_eta(float_0)
        var_6 = file_downloader_1.parse_bytes(str_3)
        str_4 = '8!`kn"5E>ESaGf{`'
        var_7 = file_downloader_0.add_progress_hook(str_4)
        var_8 = file_downloader_1.try_utime(str_2, str_2)
        str_5 = 'E'
        str_6 = 'K'
        var_9 = file_downloader_0.undo_temp_name(str_6)
        bytes_1 = b'\r8\xb3\xc8H\x9fW\xa1\x8a\xa19\xa1m\n2\xeb\xf6e\xc7\xfc'
        list_0 = [str_3, bytes_0, bytes_1]
        var_10 = file_downloader_1.calc_speed(int_0, int_0, list_0)
        var_11 = file_downloader_0.download(str_5, str_1)
    except BaseException:
        pass

def test_case_33():
    try:
        int_0 = -1727
        bytes_0 = b'Y\xa8\xc0\xd6\xcf\x0b,\xbf\xca\x03&q\x9b\xac\xee\xb3'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        file_downloader_0 = module_0.FileDownloader(bytes_0, dict_0)
        var_0 = file_downloader_0.format_retries(int_0)
        str_0 = '?'
        bool_0 = None
        var_1 = file_downloader_0.temp_name(str_0)
        var_2 = file_downloader_0.format_eta(bool_0)
        float_0 = 1246.0355946621528
        var_3 = file_downloader_0.best_block_size(float_0, int_0)
        dict_1 = None
        bool_1 = None
        file_downloader_1 = module_0.FileDownloader(int_0, file_downloader_0)
        var_4 = file_downloader_1.try_rename(dict_1, bool_1)
        bool_2 = False
        str_1 = '^&hs=i#|F)<'
        str_2 = '\x0b'
        var_5 = file_downloader_0.best_block_size(int_0, int_0)
        var_6 = file_downloader_0.slow_down(float_0, bool_2, str_2)
        var_7 = file_downloader_1.format_eta(float_0)
        var_8 = file_downloader_1.add_progress_hook(str_0)
        var_9 = file_downloader_1.try_utime(str_2, str_1)
        str_3 = 'K'
        var_10 = file_downloader_0.undo_temp_name(str_3)
        int_1 = -972
        float_1 = 3871.0
        list_0 = [bytes_0, bytes_0, int_1]
        var_11 = file_downloader_0.calc_speed(int_1, float_1, list_0)
    except BaseException:
        pass