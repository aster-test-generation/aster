# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = True
    set_0 = set()
    file_downloader_0 = module_0.FileDownloader(bool_0, set_0)

def test_case_2():
    float_0 = 2548.611308
    int_0 = 1303
    str_0 = '^JfDX\rlTln{i!?6w'
    list_0 = [int_0, int_0, str_0]
    list_1 = [list_0, str_0, str_0]
    str_1 = 'l\r<ziyDZ^YYj*F'
    str_2 = '9t<G\nMeN.&s'
    str_3 = 'Skv_zTkZ Ccu~'
    dict_0 = {str_1: str_0, str_0: str_1, str_2: list_0, str_3: int_0}
    file_downloader_0 = module_0.FileDownloader(list_1, dict_0)
    var_0 = file_downloader_0.format_seconds(float_0)

def test_case_3():
    float_0 = None
    bool_0 = True
    dict_0 = None
    bool_1 = True
    dict_1 = {bool_0: dict_0, dict_0: bool_1}
    int_0 = 2715
    file_downloader_0 = module_0.FileDownloader(dict_1, int_0)
    var_0 = file_downloader_0.format_percent(float_0)

def test_case_4():
    int_0 = 2650
    float_0 = 12.93
    dict_0 = {}
    dict_1 = None
    list_0 = [dict_1, dict_1]
    list_1 = [dict_1, dict_1, dict_1, list_0]
    float_1 = -510.0
    str_0 = 'T?Q@~V\rcu#E^b:m>8jaA'
    file_downloader_0 = module_0.FileDownloader(float_1, str_0)
    file_downloader_1 = module_0.FileDownloader(list_1, file_downloader_0)
    var_0 = file_downloader_1.calc_eta(int_0, float_0, dict_0, int_0)

def test_case_5():
    float_0 = 2492.4
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = []
    float_1 = -746.5636
    str_0 = ''
    file_downloader_0 = module_0.FileDownloader(float_1, str_0)
    int_0 = 1274949505
    file_downloader_1 = module_0.FileDownloader(file_downloader_0, int_0)
    file_downloader_2 = module_0.FileDownloader(list_0, file_downloader_1)
    var_0 = file_downloader_2.calc_speed(float_0, bool_0, dict_0)

def test_case_6():
    bool_0 = True
    bytes_0 = b'\x13\xc8\xce\xcb%\xa9'
    bytes_1 = b'S\t\xe9;\xc5'
    file_downloader_0 = module_0.FileDownloader(bytes_0, bytes_1)
    var_0 = file_downloader_0.format_retries(bool_0)

def test_case_7():
    str_0 = 'f`R&*8llk@?'
    str_1 = '_,Sj'
    str_2 = 'a1M^:_D{/))fFC'
    float_0 = 215.1666
    set_0 = {float_0, float_0, float_0, float_0}
    dict_0 = {float_0: float_0}
    file_downloader_0 = module_0.FileDownloader(set_0, dict_0)
    var_0 = file_downloader_0.slow_down(str_0, str_1, str_2)

def test_case_8():
    var_0 = {}
    file_downloader_0 = module_0.FileDownloader(var_0, var_0)
    str_0 = 'a/b?c=d.ext'
    var_1 = file_downloader_0.temp_name(str_0)

def test_case_9():
    int_0 = 1245
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
    set_0 = None
    var_0 = file_downloader_0.try_utime(set_0, set_0)

def test_case_10():
    int_0 = 1245
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
    str_0 = 'sfU=jC#o=\t=qI=paX\x0bJ.'
    var_0 = file_downloader_0.add_progress_hook(str_0)
    str_1 = "u]~Px $nBB%'\x0b6-M>]T"
    str_2 = 'j'
    var_1 = file_downloader_0.try_utime(str_1, str_2)

def test_case_11():
    int_0 = 1245
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
    str_0 = 'sfU=jC#o=\t=qI=paX\x0bJ.'
    var_0 = file_downloader_0.add_progress_hook(str_0)
    set_0 = None
    str_1 = "u]~Px $nBB%'\x0b6-M>]T"
    str_2 = 'j'
    var_1 = file_downloader_0.try_utime(str_1, str_2)
    float_0 = 691.138
    str_3 = '\x0c!MSgT-r9zK/E-Ca'
    var_2 = file_downloader_0.calc_eta(float_0, int_0, set_0, str_3)

def test_case_12():
    str_0 = 'fOXj'
    str_1 = "',&UB<F:#<n&T"
    str_2 = '2<|GZq;|wX8akl\\uU'
    str_3 = None
    dict_0 = {str_1: str_1, str_2: str_2, str_3: str_1}
    bool_0 = True
    file_downloader_0 = module_0.FileDownloader(dict_0, bool_0)
    var_0 = file_downloader_0.undo_temp_name(str_0)

def test_case_13():
    int_0 = 1245
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
    str_0 = '\x0b'
    var_0 = file_downloader_0.parse_bytes(str_0)
    str_1 = 'vBX8{;'
    var_1 = file_downloader_0.add_progress_hook(str_1)
    var_2 = file_downloader_0.try_utime(str_0, str_0)