# Automatically generated by Pynguin.
import ansible.playbook.role.definition as module_0
import ansible.playbook.attribute as module_1
import ansible.parsing.yaml.objects as module_2

def test_case_0():
    try:
        int_0 = -3084
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0}
        str_0 = '\rGy>G\r,('
        role_definition_0 = module_0.RoleDefinition(set_0, str_0)
        var_0 = role_definition_0.load(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.preprocess_data(role_definition_0)
    except BaseException:
        pass

def test_case_2():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = {}
        var_1 = role_definition_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_3():
    try:
        role_definition_0 = module_0.RoleDefinition()
        str_0 = 'role'
        var_0 = role_definition_0.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        role_definition_0 = module_0.RoleDefinition()
        bool_0 = False
        var_0 = role_definition_0.preprocess_data(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = None
        var_1 = None
        str_0 = ''
        role_definition_0 = module_0.RoleDefinition(var_0, str_0, str_0, var_1, str_0)
        str_1 = 'role'
        str_2 = {str_1: str_1}
        var_2 = role_definition_0.preprocess_data(str_2)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = None
        str_0 = 'role_basedir'
        var_1 = None
        str_1 = ''
        role_definition_0 = module_0.RoleDefinition(var_0, str_0, str_0, var_1, str_1)
        str_2 = 'role'
        str_3 = {str_2: str_2}
        var_2 = role_definition_0.preprocess_data(str_3)
    except BaseException:
        pass

def test_case_7():
    try:
        role_definition_0 = module_0.RoleDefinition()
        str_0 = 'role'
        str_1 = {str_0: str_0}
        var_0 = role_definition_0.get_name()
        var_1 = role_definition_0.preprocess_data(str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        role_definition_0 = module_0.RoleDefinition()
        str_0 = 'ansible.legacy.unarchive'
        var_0 = role_definition_0.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        var_0 = None
        str_0 = 'role_basedir'
        var_1 = None
        var_2 = None
        role_definition_0 = module_0.RoleDefinition(var_0, str_0, var_1, var_2, str_0)
        str_1 = 'role'
        str_2 = {str_1: str_1}
        var_3 = role_definition_0.preprocess_data(str_2)
    except BaseException:
        pass

def test_case_10():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = None
        var_1 = role_definition_0.get_name(role_definition_0)
        str_0 = 'role'
        var_2 = role_definition_0.get_role_params()
        var_3 = role_definition_0.get_role_params()
        str_1 = {str_0: str_0}
        var_4 = role_definition_0.get_name()
        str_2 = 'F?=Q&g>*51VxwR^\n2y'
        str_3 = '{P2IBwmk'
        field_attribute_0 = module_1.FieldAttribute(str_3, role_definition_0)
        role_definition_1 = module_0.RoleDefinition(str_2, field_attribute_0)
        complex_0 = None
        tuple_0 = (role_definition_1, complex_0)
        int_0 = -2295
        role_definition_2 = module_0.RoleDefinition(tuple_0, int_0)
        dict_0 = {var_0: var_0, str_0: str_1, var_4: str_0, var_4: role_definition_2}
        var_5 = role_definition_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.get_name()
        var_1 = role_definition_0.get_name(role_definition_0)
        ansible_mapping_0 = module_2.AnsibleMapping()
        var_2 = role_definition_0.preprocess_data(ansible_mapping_0)
    except BaseException:
        pass