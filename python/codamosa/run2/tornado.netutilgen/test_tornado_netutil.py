# Automatically generated by Pynguin.
import tornado.netutil as module_0
import ssl as module_1
import tornado.ioloop as module_2

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Rw|'
    socket_0 = module_0.bind_unix_socket(str_0)
    dict_0 = {}
    s_s_l_socket_0 = module_0.ssl_wrap_socket(socket_0, dict_0)

def test_case_2():
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)

def test_case_3():
    str_0 = '#p1l}xT'
    socket_0 = module_0.bind_unix_socket(str_0)
    s_s_l_context_0 = module_1.SSLContext()
    s_s_l_socket_0 = module_0.ssl_wrap_socket(socket_0, s_s_l_context_0, str_0)

def test_case_4():
    str_0 = 'Rw|'
    socket_0 = module_0.bind_unix_socket(str_0)
    dict_0 = {}
    s_s_l_socket_0 = module_0.ssl_wrap_socket(socket_0, dict_0)

def test_case_5():
    str_0 = 'd'
    bool_0 = module_0.is_valid_ip(str_0)

def test_case_6():
    int_0 = 1396
    list_0 = module_0.bind_sockets(int_0)

def test_case_7():
    int_0 = 0
    list_0 = module_0.bind_sockets(int_0)

def test_case_8():
    i_o_loop_0 = module_2.IOLoop()
    optional_0 = i_o_loop_0.current()
    bool_0 = True
    executor_resolver_0 = module_0.ExecutorResolver()
    executor_resolver_0.initialize(optional_0, bool_0)

def test_case_9():
    i_o_loop_0 = module_2.IOLoop()
    optional_0 = i_o_loop_0.current()
    bool_0 = True
    executor_resolver_0 = module_0.ExecutorResolver()
    executor_resolver_0.close()
    executor_resolver_0.initialize(optional_0, bool_0)