# Automatically generated by Pynguin.
import tornado.locale as module_0
import gettext as module_1
import datetime as module_2

def test_case_0():
    try:
        str_0 = "'4Z3%u?9"
        module_0.load_translations(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        module_0.load_gettext_translations(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        locale_0 = module_0.get()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '-'
        locale_0 = module_0.Locale(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        locale_0 = module_0.get()
        str_0 = ''
        str_1 = locale_0.pgettext(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'P\tL"DeL M:^'
        str_1 = '?Ln/|\x0b7'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        float_0 = -2953.0947
        var_0 = null_translations_0.gettext(float_0)
        str_2 = gettext_locale_0.pgettext(str_0, str_0)
        str_3 = gettext_locale_0.translate(str_1, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '"1\x0c\x0b#tqq'
        str_1 = 'GET'
        str_2 = 'aktKN3MqzK><'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = gettext_locale_0.pgettext(str_0, str_1, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        locale_0 = module_0.get()
        int_0 = 104857600
        str_0 = locale_0.friendly_number(int_0)
        bool_0 = True
        str_1 = locale_0.format_date(int_0, bool_0)
        null_translations_0 = module_1.NullTranslations()
        str_2 = 'zh_CN'
        str_3 = 'o#q\x0c'
        module_0.load_gettext_translations(str_3, str_2)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 666.329829
        bool_0 = False
        locale_0 = module_0.get()
        str_0 = locale_0.format_date(float_0, bool_0, bool_0)
        str_1 = 'tKR[(T#\x0b\nbn'
        locale_1 = module_0.Locale(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'eDH^-lq'
        float_0 = 1325.0
        null_translations_0 = module_1.NullTranslations(float_0)
        gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
        str_1 = '<o(_]h=Ev89TNgzigR"T'
        bool_0 = False
        str_2 = 'zh_CN'
        null_translations_1 = module_1.NullTranslations()
        gettext_locale_1 = module_0.GettextLocale(str_2, null_translations_1)
        str_3 = gettext_locale_1.translate(str_1, str_1, bool_0)
        locale_0 = module_0.get()
    except BaseException:
        pass

def test_case_10():
    try:
        iterable_0 = module_0.get_supported_locales()
        str_0 = "Multithreaded non-blocking `Resolver` implementation.\n\n    Requires the `concurrent.futures` package to be installed\n    (available in the standard library since Python 3.2,\n    installable with ``pip install futures`` in older versions).\n\n    The thread pool size can be configured with::\n\n        Resolver.configure('tornado.netutil.ThreadedResolver',\n                           num_threads=10)\n\n    .. versionchanged:: 3.1\n       All ``ThreadedResolvers`` share a single thread pool, whose\n       size is set by the first one to be created.\n\n    .. deprecated:: 5.0\n       The default `Resolver` now uses `.IOLoop.run_in_executor`; use that instead\n       of this class.\n    "
        str_1 = 'c%iJLBy?3lZn~\x0b'
        null_translations_0 = module_1.NullTranslations()
        null_translations_1 = module_1.NullTranslations(null_translations_0)
        int_0 = 100
        locale_0 = module_0.get()
        str_2 = locale_0.list(str_0)
        locale_1 = module_0.get()
        str_3 = locale_1.friendly_number(int_0)
        str_4 = 'I=+'
        str_5 = 'NB1~nWNHGRH3\x0c['
        gettext_locale_0 = module_0.GettextLocale(str_5, null_translations_0)
        str_6 = gettext_locale_0.pgettext(str_3, str_4, str_0, int_0)
        str_7 = gettext_locale_0.pgettext(str_1, str_0)
        bool_0 = False
        iterable_1 = module_0.get_supported_locales()
        float_0 = None
        str_8 = locale_0.list(str_6)
        str_9 = locale_0.format_date(float_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '&#39;'
        str_1 = "o<?'>\rK,v2il,^bI5o"
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_2 = gettext_locale_0.translate(str_0)
        list_0 = []
        locale_0 = module_0.get()
        str_3 = locale_0.list(list_0)
        null_translations_1 = module_1.NullTranslations()
        gettext_locale_1 = module_0.GettextLocale(str_3, null_translations_1)
        dict_0 = {str_3: str_3}
        list_1 = [list_0, dict_0, dict_0]
        datetime_0 = module_2.datetime(*list_1)
    except BaseException:
        pass

def test_case_12():
    try:
        iterable_0 = module_0.get_supported_locales()
        int_0 = -3592
        locale_0 = module_0.get()
        str_0 = locale_0.friendly_number(int_0)
        str_1 = 'c%iJLBy?3lZn~\x0b'
        null_translations_0 = module_1.NullTranslations()
        null_translations_1 = module_1.NullTranslations(null_translations_0)
        str_2 = 'j[H7l4$R\\ES9&|*jGd~'
        dict_0 = {}
        str_3 = '9.NLI4'
        int_1 = 100
        locale_1 = module_0.get()
        str_4 = locale_1.list(str_1)
        locale_2 = module_0.get()
        str_5 = locale_2.friendly_number(int_1)
        dict_1 = {str_2: dict_0, str_3: dict_0}
        c_s_v_locale_0 = module_0.CSVLocale(str_3, dict_1)
        str_6 = 'I=+'
        str_7 = 'NB1~nWNHGRH3\x0c['
        gettext_locale_0 = module_0.GettextLocale(str_7, null_translations_1)
        str_8 = gettext_locale_0.pgettext(str_1, str_3)
        bool_0 = False
        bool_1 = True
        str_9 = locale_2.format_date(int_1, bool_0, bool_1)
        iterable_1 = module_0.get_supported_locales()
        str_10 = locale_1.translate(str_4, str_7, int_1)
        gettext_locale_1 = module_0.GettextLocale(str_6, null_translations_0)
        str_11 = 'byPxq\r}H.1E'
        str_12 = locale_0.pgettext(str_0, str_11)
        str_13 = locale_1.list(gettext_locale_0)
    except BaseException:
        pass

def test_case_13():
    try:
        datetime_0 = None
        locale_0 = module_0.get()
        bool_0 = locale_0.format_day(datetime_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = None
        module_0.load_translations(str_0)
    except BaseException:
        pass