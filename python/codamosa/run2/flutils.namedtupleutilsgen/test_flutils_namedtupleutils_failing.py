# Automatically generated by Pynguin.
import collections.abc as module_0
import flutils.namedtupleutils as module_1
import types as module_2

def test_case_0():
    try:
        mapping_0 = module_0.Mapping()
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        var_0 = module_1.to_namedtuple(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        var_0 = module_1.to_namedtuple(tuple_0)
        var_1 = module_1.to_namedtuple(tuple_0)
        simple_namespace_0 = None
        var_2 = module_1.to_namedtuple(simple_namespace_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'EverR${:fjc:'
        var_0 = module_1.to_namedtuple(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        simple_namespace_0 = module_2.SimpleNamespace()
        var_0 = module_1.to_namedtuple(simple_namespace_0)
        list_0 = [var_0, var_0, simple_namespace_0, var_0]
        var_1 = module_1.to_namedtuple(list_0)
        list_1 = None
        var_2 = module_1.to_namedtuple(list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 4207.91081482185
        str_0 = 'd'
        str_1 = 'Ni\x0c'
        str_2 = '^< )M2KA:b*}lM)Pd'
        dict_0 = {str_0: float_0, str_1: float_0, str_2: float_0}
        simple_namespace_0 = module_2.SimpleNamespace(**dict_0)
        tuple_0 = (float_0, simple_namespace_0)
        var_0 = module_1.to_namedtuple(simple_namespace_0)
        var_1 = module_1.to_namedtuple(tuple_0)
        bytes_0 = b'4\xa1\x93u_\xa9'
        var_2 = module_1.to_namedtuple(tuple_0)
        list_0 = [str_2, str_1]
        list_1 = [bytes_0, float_0]
        list_2 = [list_0, var_2, list_1, str_0]
        var_3 = module_1.to_namedtuple(list_2)
        var_4 = module_1.to_namedtuple(list_2)
        mapping_0 = module_0.Mapping(*list_1)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x1d\x05M\xd3\x1a\x9f'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
        list_0 = [bytes_0, dict_0, dict_0]
        float_0 = -1072.624
        tuple_0 = (dict_0, list_0, float_0)
        var_0 = module_1.to_namedtuple(tuple_0)
    except BaseException:
        pass