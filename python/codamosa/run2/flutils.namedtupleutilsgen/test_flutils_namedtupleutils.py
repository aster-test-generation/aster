# Automatically generated by Pynguin.
import flutils.namedtupleutils as module_0
import types as module_1
import collections as module_2

def test_case_0():
    var_0 = None
    list_0 = [var_0, var_0, var_0, var_0]
    list_1 = [var_0]
    tuple_0 = (list_1,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(list_0)

def test_case_1():
    str_0 = 'E"V'
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)

def test_case_2():
    simple_namespace_0 = module_1.SimpleNamespace()
    var_0 = module_0.to_namedtuple(simple_namespace_0)

def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    float_0 = -1379.91692
    dict_0 = {bool_0: float_0}
    bytes_0 = b'\x03\x15\xea'
    tuple_0 = (list_0, float_0, dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)

def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)

def test_case_5():
    simple_namespace_0 = module_1.SimpleNamespace()
    list_0 = [simple_namespace_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(simple_namespace_0)

def test_case_6():
    str_0 = 'US@{J&Q.\x0b;#S{'
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [str_0]
    var_1 = module_0.to_namedtuple(list_1)

def test_case_7():
    str_0 = 'oJ`v'
    str_1 = 'Vmt'
    set_0 = set()
    tuple_0 = (set_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_2 = 'description'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: var_0, str_2: str_1}
    list_0 = [dict_0]
    list_1 = [list_0, str_1]
    var_1 = module_0.to_namedtuple(list_1)

def test_case_8():
    float_0 = -362.8
    str_0 = 'd'
    dict_0 = {str_0: float_0, str_0: float_0, str_0: float_0}
    simple_namespace_0 = module_1.SimpleNamespace(**dict_0)
    tuple_0 = (float_0, simple_namespace_0)
    bytes_0 = b'4\xa1\x93u_\xa9'
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = [str_0, str_0]
    list_1 = [bytes_0, float_0]
    list_2 = [list_0, var_0, list_1, str_0]
    var_1 = module_0.to_namedtuple(list_2)

def test_case_9():
    str_0 = '__cherry_pick_map__'
    simple_namespace_0 = module_1.SimpleNamespace()
    var_0 = module_0.to_namedtuple(simple_namespace_0)
    var_1 = module_0.to_namedtuple(simple_namespace_0)
    var_2 = module_0.to_namedtuple(simple_namespace_0)
    var_3 = module_0.to_namedtuple(simple_namespace_0)
    list_0 = [str_0, str_0, str_0, str_0]
    var_4 = module_0.to_namedtuple(simple_namespace_0)
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(list_0)
    var_7 = module_0.to_namedtuple(list_0)
    var_8 = module_0.to_namedtuple(list_0)
    var_9 = module_0.to_namedtuple(simple_namespace_0)
    var_10 = module_0.to_namedtuple(simple_namespace_0)
    var_11 = module_0.to_namedtuple(list_0)
    var_12 = module_0.to_namedtuple(list_0)
    var_13 = module_0.to_namedtuple(simple_namespace_0)
    var_14 = module_0.to_namedtuple(list_0)
    var_15 = module_0.to_namedtuple(list_0)
    var_16 = module_0.to_namedtuple(list_0)
    var_17 = module_0.to_namedtuple(list_0)
    var_18 = module_0.to_namedtuple(simple_namespace_0)
    var_19 = module_0.to_namedtuple(list_0)
    var_20 = module_0.to_namedtuple(simple_namespace_0)
    var_21 = module_0.to_namedtuple(list_0)
    var_22 = module_0.to_namedtuple(simple_namespace_0)
    var_23 = module_0.to_namedtuple(list_0)
    var_24 = module_0.to_namedtuple(simple_namespace_0)
    dict_0 = {str_0: var_6}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_25 = module_0.to_namedtuple(list_0)
    var_26 = module_0.to_namedtuple(list_0)
    var_27 = module_0.to_namedtuple(simple_namespace_0)
    var_28 = module_0.to_namedtuple(simple_namespace_0)
    var_29 = module_0.to_namedtuple(list_0)
    tuple_0 = (str_0, ordered_dict_0)
    var_30 = module_0.to_namedtuple(list_0)
    var_31 = module_0.to_namedtuple(simple_namespace_0)
    var_32 = module_0.to_namedtuple(tuple_0)