# Automatically generated by Pynguin.
import youtube_dl.downloader.f4m as module_0

def test_case_0():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_unsigned_long_long()
    except BaseException:
        pass

def test_case_1():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_bootstrap_info()
    except BaseException:
        pass

def test_case_2():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_3():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_string()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x01\xdds\xbf\xf1\xe2J!\x1cx8'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x01\xdds\xbf\xf1\xe2J!\x1cx8'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x01\xdds\xf1\xe2J!\x1cx8'
        var_0 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '{:D5.'
        dict_0 = {str_0: str_0}
        int_0 = -453
        f4m_f_d_0 = module_0.F4mFD(dict_0, int_0)
        str_1 = 'p\x0c$3'
        list_0 = [f4m_f_d_0, str_1, str_0]
        flv_reader_0 = module_0.FlvReader()
        dict_1 = {int_0: list_0, str_1: str_1}
        list_1 = [flv_reader_0, flv_reader_0]
        list_2 = [str_1, list_1]
        tuple_0 = (flv_reader_0, dict_1, list_1, list_2)
        var_0 = module_0.build_fragments_list(tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'e5'
        bytes_0 = b'\xc7W\x86\xabs\xcc\xfb\xc0\x91r\x1dNv\xd1\r\x10\xf3\xb9\xdb'
        var_0 = module_0.write_unsigned_int(str_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        data_truncated_error_0 = module_0.DataTruncatedError()
        float_0 = 1478.98
        bytes_0 = b'&\x9b,\x07\xb6=\xacN\xce\xb3\xab[|\x99"\x00'
        list_0 = [data_truncated_error_0, data_truncated_error_0, data_truncated_error_0, float_0]
        var_0 = module_0.write_unsigned_int_24(bytes_0, list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '>bW*%\x0cDF\rb!S'
        dict_0 = {str_0: str_0}
        var_0 = module_0.write_flv_header(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 565
        bytes_0 = b'\xda\x98\xd3\x9b[\n\r'
        var_0 = module_0.write_metadata_tag(int_0, bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'7|\x95\xa50t\xeaA\xaa\xce\xd0'
        str_0 = 'kuwo:singer'
        dict_0 = None
        str_1 = "*mZ( ry#'v\nQ-]2\\s"
        tuple_0 = (str_1, bytes_0)
        str_2 = 'te$Ec\x0cNP'
        f4m_f_d_0 = module_0.F4mFD(tuple_0, str_2)
        var_0 = f4m_f_d_0.real_download(str_0, dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'\x01\xdds\xbf\xf1\xe2J!\x1cx8'
        list_0 = [bytes_0]
        dict_0 = {}
        flv_reader_0 = module_0.FlvReader(*list_0, **dict_0)
        var_0 = module_0.remove_encrypted_media(dict_0)
        var_1 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'tP/nN"to'
        list_0 = []
        var_0 = module_0.write_metadata_tag(str_0, list_0)
        bytes_0 = b'y\xd0\xb8zA\x1cfW\x06'
        var_1 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        data_truncated_error_0 = module_0.DataTruncatedError()
        data_truncated_error_1 = module_0.DataTruncatedError()
        flv_reader_0 = module_0.FlvReader()
        str_0 = 'c?s7\tf#":\''
        var_0 = module_0.write_metadata_tag(flv_reader_0, str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bytes_0 = b'\x01\xdds\xbf\xf1\xe2J!\x1cx8'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_17():
    try:
        bytes_0 = b'$\xc0\x83\xa2Y\xf7V\x1fB\xe6z`\xed\x98'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'segments'
        str_1 = 'fragments'
        str_2 = 'segment_run'
        int_0 = 200
        int_1 = (int_0, int_0)
        int_2 = 400
        int_3 = (int_1, int_2)
        int_4 = [int_1, int_3]
        int_5 = {str_2: int_4}
        int_6 = [int_5]
        str_3 = 'first'
        int_7 = 0
        int_8 = 1000
        int_9 = {str_3: int_2, str_2: int_7, str_3: int_8}
        int_10 = {str_3: int_1, str_2: int_8, str_0: int_8}
        int_11 = [int_9, int_10]
        int_12 = {str_1: int_11}
        int_13 = [int_12]
        bool_0 = False
        var_0 = {str_0: int_6, str_1: int_13, str_2: bool_0}
        var_1 = module_0.build_fragments_list(var_0)
    except BaseException:
        pass