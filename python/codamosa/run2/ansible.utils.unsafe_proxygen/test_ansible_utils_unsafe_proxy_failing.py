# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0

def test_case_0():
    try:
        dict_0 = {}
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText(**dict_0)
        var_0 = ansible_unsafe_text_0.encode()
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_1 = ansible_unsafe_bytes_0.decode()
        var_2 = ansible_unsafe_bytes_0.decode()
        list_0 = [var_1]
        ansible_unsafe_bytes_1 = module_0.AnsibleUnsafeBytes(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ' Find a plugin named name '
        list_0 = [str_0, str_0]
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_0 = ansible_unsafe_text_0.encode(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_0 = module_0.wrap_var(ansible_unsafe_text_0)
        str_0 = 'Gn|}6\th'
        dict_0 = {str_0: var_0, str_0: ansible_unsafe_text_0}
        ansible_unsafe_text_1 = module_0.AnsibleUnsafeText()
        ansible_unsafe_text_2 = module_0.AnsibleUnsafeText(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'RkY'
        str_1 = 'pipelining support required for extended interpreter discovery'
        str_2 = '_G'
        str_3 = ''
        dict_0 = {str_0: str_1, str_2: str_1, str_3: str_2}
        bytes_0 = b'\xfb\x80\xd4"0)\xa88'
        var_0 = module_0.wrap_var(bytes_0)
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes(**dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        str_0 = None
        list_0 = []
        ansible_unsafe_0 = module_0.AnsibleUnsafe(*list_0)
        list_1 = [str_0, str_0, dict_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_1, **dict_0)
        var_0 = module_0.to_unsafe_bytes()
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_6():
    try:
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        list_0 = [native_jinja_unsafe_text_0, native_jinja_unsafe_text_0, native_jinja_unsafe_text_0, native_jinja_unsafe_text_0]
        var_0 = module_0.wrap_var(list_0)
        list_1 = [var_0]
        var_1 = module_0.wrap_var(list_1)
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_2 = ansible_unsafe_text_0.encode()
        ansible_unsafe_text_1 = module_0.AnsibleUnsafeText()
        str_0 = None
        str_1 = 'Ugg%yV~'
        str_2 = "%&NE#<Ky9!)O'8iZl/5L"
        dict_0 = {str_1: native_jinja_unsafe_text_0, str_2: list_0, str_1: str_0, str_0: list_0}
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        native_jinja_unsafe_text_1 = module_0.NativeJinjaUnsafeText(**dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 575
        dict_0 = {int_0: int_0}
        var_0 = module_0.wrap_var(dict_0)
        unsafe_proxy_0 = module_0.UnsafeProxy()
    except BaseException:
        pass