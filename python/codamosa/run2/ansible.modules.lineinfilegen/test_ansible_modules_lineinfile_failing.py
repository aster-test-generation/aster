# Automatically generated by Pynguin.
import ansible.modules.lineinfile as module_0

def test_case_0():
    try:
        bool_0 = False
        str_0 = 'GbXV\x0cmVAnW<}EU:k[g!'
        var_0 = module_0.write_changes(bool_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x06\x9c\x86\xe6P\xcd\xc4\xd0\x89\x85\xd9W\xe7n'
        int_0 = 794
        bool_0 = False
        dict_0 = {}
        var_0 = module_0.check_file_attrs(bytes_0, int_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 668.0
        dict_0 = None
        str_0 = 'failures'
        bool_0 = True
        int_0 = -237
        tuple_0 = (bool_0, bool_0, int_0)
        complex_0 = None
        var_0 = module_0.present(str_0, float_0, str_0, dict_0, str_0, dict_0, tuple_0, tuple_0, str_0, int_0, complex_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'L~Q\x0ck%nE\r>S32+Aar$'
        str_1 = '__main__'
        complex_0 = None
        tuple_0 = None
        float_0 = 4526.89605
        list_0 = [str_1, tuple_0, float_0]
        dict_0 = {str_1: complex_0, float_0: str_1}
        bool_0 = None
        var_0 = module_0.present(str_0, str_1, complex_0, tuple_0, list_0, dict_0, complex_0, tuple_0, bool_0, bool_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 1142.994
        str_0 = '-q\tkN$%'
        complex_0 = None
        bytes_0 = b'\xf3F\xd5\xd3\xac\x9f'
        set_0 = None
        int_0 = -1189
        var_0 = module_0.absent(str_0, complex_0, bytes_0, float_0, set_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x06'
        str_0 = 'nI'
        int_0 = 3759
        float_0 = None
        var_0 = module_0.absent(bytes_0, str_0, int_0, bytes_0, int_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Gh|MTd9!P4'
        float_0 = -2826.0
        str_1 = '^\rR<zXQL+**\\TC'
        tuple_0 = ()
        bytes_0 = b'\xc4\x16\x0f&\xc2P\xbd\xd6\x993"=\x87<\xaf'
        set_0 = None
        dict_0 = {str_0: str_0, set_0: tuple_0, set_0: str_1, str_0: float_0}
        float_1 = 956.53
        var_0 = module_0.absent(str_1, tuple_0, bytes_0, dict_0, float_1, tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '__main__'
        complex_0 = None
        tuple_0 = None
        float_0 = 4526.89605
        list_0 = [str_0, tuple_0, float_0]
        dict_0 = {str_0: complex_0, float_0: str_0}
        int_0 = 384
        str_1 = 'ansible.modules.lineinfile'
        var_0 = module_0.present(str_0, complex_0, list_0, dict_0, list_0, int_0, int_0, dict_0, str_1, list_0, float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'L~Q\x0ck%nE\r>S32+Aar$'
        complex_0 = None
        tuple_0 = None
        float_0 = 1407.0
        tuple_1 = (tuple_0, float_0, float_0)
        list_0 = [str_0, tuple_0, float_0]
        dict_0 = {float_0: str_0}
        dict_1 = {str_0: complex_0, str_0: complex_0}
        str_1 = "/ypd% -57Vfa3LBn'm)"
        int_0 = -774
        bytes_0 = b'\x0b\x8f\x86\x9c\xb9\x072'
        list_1 = [dict_1]
        var_0 = module_0.present(dict_1, str_1, list_0, int_0, tuple_1, bytes_0, dict_0, tuple_1, complex_0, str_0, list_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'L~Q\x0ck%nE\r>S32+Aar$'
        complex_0 = None
        tuple_0 = None
        float_0 = 1407.0
        tuple_1 = (tuple_0, float_0, float_0)
        list_0 = [str_0, tuple_0, float_0]
        dict_0 = {float_0: str_0}
        dict_1 = {str_0: complex_0, str_0: complex_0}
        str_1 = 'Si/u<b,883\x0b]|o'
        int_0 = -781
        bytes_0 = b'\x88K\xc1'
        list_1 = [dict_1]
        var_0 = module_0.present(dict_1, str_1, list_0, int_0, tuple_1, bytes_0, dict_0, tuple_1, complex_0, str_1, list_1)
    except BaseException:
        pass